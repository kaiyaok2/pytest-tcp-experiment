============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-7.2.2, pluggy-1.3.0
Using --randomly-seed=1706653092
PyQt5 5.15.10 -- Qt runtime 5.15.2 -- Qt compiled 5.15.2
rootdir: /home/kaiyaok2/PythonProjects/falcon, configfile: pyproject.toml, testpaths: tests
plugins: hypothesis-6.81.1, cov-4.1.0, randomly-3.1.0, typeguard-4.1.5, timeout-1.4.2, qt-4.3.1, nbval-0.10.0, mock-3.12.0, tcp-0.1.1, textual-snapshot-0.4.0, asyncio-0.21.1, xdist-3.2.1, cookies-0.7.0, instafail-0.5.0, syrupy-4.6.0, anyio-3.7.1
asyncio: mode=strict
collected 3663 items
Using TCP weights 1-0
Collect TCP features took 0.14163637161254883s.
Compute TCP order took 0.04732227325439453s.

tests/test_alias.py .
current test PASSED/SKIPPED -- test_cookies in /home/kaiyaok2/PythonProjects/falcon/tests/test_alias.py: 0.00895071029663086s cumulative, 0.00895071029663086s individual

.
current test PASSED/SKIPPED -- test_alias_equals_to_app in /home/kaiyaok2/PythonProjects/falcon/tests/test_alias.py: 0.012843132019042969s cumulative, 0.0038924217224121094s individual


tests/asgi/test_asgi_servers.py INFO:     127.0.0.1:42542 - "GET / HTTP/1.1" 200 OK
INFO:     127.0.0.1:42546 - "PUT / HTTP/1.1" 200 OK

[Starting server process...]
.
[Sending SIGTERM to server process...]

current test PASSED/SKIPPED -- test_put in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 2.038073778152466s cumulative, 2.025230646133423s individual

INFO:     127.0.0.1:42582 - "GET / HTTP/1.1" 200 OK
INFO:     127.0.0.1:42594 - "GET /events HTTP/1.1" 200 OK

[Starting server process...]
.
[Sending SIGTERM to server process...]

current test PASSED/SKIPPED -- test_sse_client_disconnects_early in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 4.194262266159058s cumulative, 2.156188488006592s individual

INFO:     127.0.0.1:52344 - "GET / HTTP/1.1" 200 OK
INFO:     127.0.0.1:52352 - "POST / HTTP/1.1" 200 OK
INFO:     127.0.0.1:52360 - "POST / HTTP/1.1" 200 OK

[Starting server process...]
.
[Sending SIGTERM to server process...]

current test PASSED/SKIPPED -- test_post_multiple in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 5.908027648925781s cumulative, 1.7137653827667236s individual

INFO:     127.0.0.1:51484 - "GET / HTTP/1.1" 200 OK

[Starting server process...]
.on_websocket:send_text
on_websocket:send_text
on_websocket:send_text
on_websocket:send_text
on_websocket:send_text

[Sending SIGTERM to server process...]

current test PASSED/SKIPPED -- test_invalid_close_code in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 7.688056707382202s cumulative, 1.780029058456421s individual

INFO:     127.0.0.1:35002 - "GET / HTTP/1.1" 200 OK

[Starting server process...]
.on_websocket:send_text
on_websocket:send_text
on_websocket:send_text
on_websocket:send_text
on_websocket:send_text

[Sending SIGTERM to server process...]

current test PASSED/SKIPPED -- test_hello in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 9.400670051574707s cumulative, 1.7126133441925049s individual

INFO:     127.0.0.1:46276 - "GET / HTTP/1.1" 200 OK

[Starting server process...]
.on_websocket:send_text
on_websocket:send_text
on_websocket:send_text
on_websocket:send_text
on_websocket:send_text

[Sending SIGTERM to server process...]

current test PASSED/SKIPPED -- test_hello in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 11.115501165390015s cumulative, 1.7148311138153076s individual

INFO:     127.0.0.1:39562 - "GET / HTTP/1.1" 200 OK

[Starting server process...]
.on_websocket:send_text
on_websocket:send_text
on_websocket:send_text
on_websocket:send_text
on_websocket:send_text

[Sending SIGTERM to server process...]

current test PASSED/SKIPPED -- test_hello in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 12.878299474716187s cumulative, 1.7627983093261719s individual

INFO:     127.0.0.1:60954 - "GET / HTTP/1.1" 200 OK

[Starting server process...]
.on_websocket:send_text
on_websocket:send_text
on_websocket:send_text
on_websocket:send_text
on_websocket:send_text

[Sending SIGTERM to server process...]

current test PASSED/SKIPPED -- test_hello in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 14.595317602157593s cumulative, 1.7170181274414062s individual

INFO:     127.0.0.1:51560 - "GET / HTTP/1.1" 200 OK

[Starting server process...]
closed
.on_websocket:send_text
on_websocket:send_text
on_websocket:WebSocketDisconnected

[Sending SIGTERM to server process...]

current test PASSED/SKIPPED -- test_disconnecting_client_early in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 16.556557416915894s cumulative, 1.9612398147583008s individual


tests/test_wsgi_interface.py .
current test PASSED/SKIPPED -- test_pep3333 in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_interface.py: 16.56337857246399s cumulative, 0.006821155548095703s individual

.
current test PASSED/SKIPPED -- test_srmock in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_interface.py: 16.566173791885376s cumulative, 0.0027952194213867188s individual


tests/asgi/test_ws.py .
current test PASSED/SKIPPED -- test_echo in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 26.782231092453003s cumulative, 10.216057300567627s individual


tests/test_httpstatus.py .
current test PASSED/SKIPPED -- test_raise_status_in_process_resource in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 26.78936195373535s cumulative, 0.007130861282348633s individual

.
current test PASSED/SKIPPED -- test_raise_status_runs_process_response in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 26.79642629623413s cumulative, 0.007064342498779297s individual

.
current test PASSED/SKIPPED -- test_raise_status_in_process_request in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 26.800577402114868s cumulative, 0.004151105880737305s individual

.
current test PASSED/SKIPPED -- test_raise_status_in_process_request in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 26.805602550506592s cumulative, 0.005025148391723633s individual

.
current test PASSED/SKIPPED -- test_raise_status_in_process_resource in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 26.809751749038696s cumulative, 0.004149198532104492s individual

.
current test PASSED/SKIPPED -- test_raise_status_runs_process_response in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 26.813756465911865s cumulative, 0.004004716873168945s individual

.
current test PASSED/SKIPPED -- test_raise_status_in_responder in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 26.81868314743042s cumulative, 0.0049266815185546875s individual

.
current test PASSED/SKIPPED -- test_raise_status_empty_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 26.823962450027466s cumulative, 0.0052793025970458984s individual

.
current test PASSED/SKIPPED -- test_raise_status_in_responder in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 26.828019380569458s cumulative, 0.0040569305419921875s individual

.
current test PASSED/SKIPPED -- test_raise_status_survives_after_hooks in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 26.832305192947388s cumulative, 0.0042858123779296875s individual

.
current test PASSED/SKIPPED -- test_raise_status_empty_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 26.83642315864563s cumulative, 0.0041179656982421875s individual

.
current test PASSED/SKIPPED -- test_raise_status_survives_after_hooks in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 26.84196639060974s cumulative, 0.005543231964111328s individual

.
current test PASSED/SKIPPED -- test_raise_status_runs_after_hooks in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 26.847729682922363s cumulative, 0.00576329231262207s individual

.
current test PASSED/SKIPPED -- test_raise_status_in_before_hook in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 26.852206468582153s cumulative, 0.004476785659790039s individual

.
current test PASSED/SKIPPED -- test_raise_status_in_before_hook in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 26.857216358184814s cumulative, 0.005009889602661133s individual

.
current test PASSED/SKIPPED -- test_raise_status_runs_after_hooks in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 26.862006425857544s cumulative, 0.004790067672729492s individual

.
current test PASSED/SKIPPED -- test_non_string_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 26.86762547492981s cumulative, 0.005619049072265625s individual

.
current test PASSED/SKIPPED -- test_non_string_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 26.873313426971436s cumulative, 0.0056879520416259766s individual

.
current test PASSED/SKIPPED -- test_non_string_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 26.878188371658325s cumulative, 0.0048749446868896484s individual

.
current test PASSED/SKIPPED -- test_non_string_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 26.885313272476196s cumulative, 0.007124900817871094s individual

.
current test PASSED/SKIPPED -- test_non_string_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 26.89177131652832s cumulative, 0.0064580440521240234s individual

.
current test PASSED/SKIPPED -- test_body_is_set in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 26.89720106124878s cumulative, 0.005429744720458984s individual

.
current test PASSED/SKIPPED -- test_non_string_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 26.90335178375244s cumulative, 0.006150722503662109s individual

.
current test PASSED/SKIPPED -- test_non_string_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 26.90999126434326s cumulative, 0.0066394805908203125s individual

.
current test PASSED/SKIPPED -- test_non_string_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 26.91539216041565s cumulative, 0.005400896072387695s individual

.
current test PASSED/SKIPPED -- test_non_string_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 26.920296907424927s cumulative, 0.004904747009277344s individual

.
current test PASSED/SKIPPED -- test_non_string_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 26.92777967453003s cumulative, 0.007482767105102539s individual

.
current test PASSED/SKIPPED -- test_non_string_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 26.93484926223755s cumulative, 0.007069587707519531s individual

.
current test PASSED/SKIPPED -- test_non_string_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 26.940486192703247s cumulative, 0.005636930465698242s individual

.
current test PASSED/SKIPPED -- test_non_string_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 26.946959972381592s cumulative, 0.0064737796783447266s individual

.
current test PASSED/SKIPPED -- test_deprecated_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 26.94986653327942s cumulative, 0.0029065608978271484s individual

.
current test PASSED/SKIPPED -- test_non_string_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 26.95489764213562s cumulative, 0.005031108856201172s individual

.
current test PASSED/SKIPPED -- test_non_string_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 26.961766242980957s cumulative, 0.006868600845336914s individual

.
current test PASSED/SKIPPED -- test_non_string_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 26.968746423721313s cumulative, 0.006980180740356445s individual

.
current test PASSED/SKIPPED -- test_media_is_set in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 26.974241733551025s cumulative, 0.005495309829711914s individual

.
current test PASSED/SKIPPED -- test_non_string_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 26.980780124664307s cumulative, 0.00653839111328125s individual

.
current test PASSED/SKIPPED -- test_non_string_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 26.98623514175415s cumulative, 0.00545501708984375s individual

.
current test PASSED/SKIPPED -- test_non_string_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 26.992468118667603s cumulative, 0.0062329769134521484s individual

.
current test PASSED/SKIPPED -- test_non_string_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 26.999187707901s cumulative, 0.0067195892333984375s individual

.
current test PASSED/SKIPPED -- test_body_is_set in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 27.00408172607422s cumulative, 0.0048940181732177734s individual

.
current test PASSED/SKIPPED -- test_data_is_set in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 27.010036945343018s cumulative, 0.005955219268798828s individual

.
current test PASSED/SKIPPED -- test_data_is_set in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 27.015539169311523s cumulative, 0.005502223968505859s individual

.
current test PASSED/SKIPPED -- test_non_string_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 27.022512435913086s cumulative, 0.0069732666015625s individual

.
current test PASSED/SKIPPED -- test_non_string_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 27.026944160461426s cumulative, 0.004431724548339844s individual

.
current test PASSED/SKIPPED -- test_non_string_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 27.031920433044434s cumulative, 0.0049762725830078125s individual

.
current test PASSED/SKIPPED -- test_non_string_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 27.037904739379883s cumulative, 0.005984306335449219s individual

.
current test PASSED/SKIPPED -- test_non_string_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 27.042536973953247s cumulative, 0.004632234573364258s individual

.
current test PASSED/SKIPPED -- test_non_string_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 27.047871589660645s cumulative, 0.005334615707397461s individual

.
current test PASSED/SKIPPED -- test_non_string_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 27.0523042678833s cumulative, 0.00443267822265625s individual

.
current test PASSED/SKIPPED -- test_non_string_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 27.056705713272095s cumulative, 0.004401445388793945s individual

.
current test PASSED/SKIPPED -- test_media_is_set in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 27.06208872795105s cumulative, 0.005383014678955078s individual


tests/asgi/test_asgi_servers.py s
current test PASSED/SKIPPED -- test_rejected in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 27.06792402267456s cumulative, 0.005835294723510742s individual

s
current test PASSED/SKIPPED -- test_rejected in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 27.07146954536438s cumulative, 0.003545522689819336s individual

s
current test PASSED/SKIPPED -- test_hello in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 27.075089693069458s cumulative, 0.003620147705078125s individual

s
current test PASSED/SKIPPED -- test_rejected in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 27.07964825630188s cumulative, 0.004558563232421875s individual

s
current test PASSED/SKIPPED -- test_close_code_on_unhandled_error in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 27.085069179534912s cumulative, 0.0054209232330322266s individual

INFO:     127.0.0.1:38170 - "GET / HTTP/1.1" 200 OK

[Starting server process...]
.on_websocket:send_text
on_websocket:WebSocketDisconnected

[Sending SIGTERM to server process...]

current test PASSED/SKIPPED -- test_select_subprotocol_known in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 28.446573734283447s cumulative, 1.3615045547485352s individual

s
current test PASSED/SKIPPED -- test_hello in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 28.45202350616455s cumulative, 0.005449771881103516s individual

INFO:     127.0.0.1:32838 - "GET / HTTP/1.1" 200 OK

[Starting server process...]
.
[Sending SIGTERM to server process...]

current test PASSED/SKIPPED -- test_send_before_accept in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 29.466533422470093s cumulative, 1.014509916305542s individual

INFO:     127.0.0.1:53372 - "GET / HTTP/1.1" 200 OK

[Starting server process...]
.
[Sending SIGTERM to server process...]

current test PASSED/SKIPPED -- test_type_mismatch in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 30.44098997116089s cumulative, 0.9744565486907959s individual

INFO:     127.0.0.1:39714 - "GET / HTTP/1.1" 200 OK

[Starting server process...]
.
[Sending SIGTERM to server process...]

current test PASSED/SKIPPED -- test_rejected in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 31.752094268798828s cumulative, 1.3111042976379395s individual

s
current test PASSED/SKIPPED -- test_hello in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 31.76214838027954s cumulative, 0.01005411148071289s individual

INFO:     127.0.0.1:60700 - "GET / HTTP/1.1" 200 OK

[Starting server process...]
.
[Sending SIGTERM to server process...]

current test PASSED/SKIPPED -- test_type_mismatch in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 32.75342774391174s cumulative, 0.9912793636322021s individual

s
current test PASSED/SKIPPED -- test_type_mismatch in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 32.758129596710205s cumulative, 0.004701852798461914s individual

s
current test PASSED/SKIPPED -- test_recv_before_accept in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 32.76143431663513s cumulative, 0.003304719924926758s individual

s
current test PASSED/SKIPPED -- test_close_code_on_unhandled_http_error in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 32.76594519615173s cumulative, 0.0045108795166015625s individual

s
current test PASSED/SKIPPED -- test_select_subprotocol_unknown in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 32.7692596912384s cumulative, 0.003314495086669922s individual

s
current test PASSED/SKIPPED -- test_type_mismatch in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 32.77274513244629s cumulative, 0.003485441207885742s individual

s
current test PASSED/SKIPPED -- test_select_subprotocol_unknown in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 32.77596950531006s cumulative, 0.0032243728637695312s individual

INFO:     127.0.0.1:45436 - "GET / HTTP/1.1" 200 OK

[Starting server process...]
.
[Sending SIGTERM to server process...]

current test PASSED/SKIPPED -- test_rejected in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 33.53277635574341s cumulative, 0.7568068504333496s individual

INFO:     127.0.0.1:33986 - "GET / HTTP/1.1" 200 OK

[Starting server process...]
.
[Sending SIGTERM to server process...]

current test PASSED/SKIPPED -- test_type_mismatch in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 34.242180585861206s cumulative, 0.7094042301177979s individual

INFO:     127.0.0.1:47620 - "GET / HTTP/1.1" 200 OK

[Starting server process...]
.
[Sending SIGTERM to server process...]

current test PASSED/SKIPPED -- test_passing_path_params in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 35.003209829330444s cumulative, 0.7610292434692383s individual

s
current test PASSED/SKIPPED -- test_recv_before_accept in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 35.007970571517944s cumulative, 0.0047607421875s individual

INFO:     127.0.0.1:59430 - "GET / HTTP/1.1" 200 OK

[Starting server process...]
.on_websocket:send_text
on_websocket:WebSocketDisconnected

[Sending SIGTERM to server process...]

current test PASSED/SKIPPED -- test_select_subprotocol_unknown in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 35.866183280944824s cumulative, 0.8582127094268799s individual

s
current test PASSED/SKIPPED -- test_type_mismatch in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 35.87328052520752s cumulative, 0.0070972442626953125s individual

s
current test PASSED/SKIPPED -- test_invalid_close_code in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 35.87657284736633s cumulative, 0.0032923221588134766s individual

s
current test PASSED/SKIPPED -- test_send_before_accept in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 35.8802056312561s cumulative, 0.003632783889770508s individual

s
current test PASSED/SKIPPED -- test_select_subprotocol_known in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 35.884169578552246s cumulative, 0.003963947296142578s individual

s
current test PASSED/SKIPPED -- test_type_mismatch in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 35.88764786720276s cumulative, 0.0034782886505126953s individual

s
current test PASSED/SKIPPED -- test_select_subprotocol_known in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 35.891481161117554s cumulative, 0.003833293914794922s individual

s
current test PASSED/SKIPPED -- test_rejected in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 35.89493727684021s cumulative, 0.00345611572265625s individual

INFO:     127.0.0.1:55926 - "GET / HTTP/1.1" 200 OK

[Starting server process...]
.on_websocket:send_text
on_websocket:WebSocketDisconnected

[Sending SIGTERM to server process...]

current test PASSED/SKIPPED -- test_select_subprotocol_known in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 36.70366358757019s cumulative, 0.8087263107299805s individual

s
current test PASSED/SKIPPED -- test_select_subprotocol_known in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 36.709805727005005s cumulative, 0.006142139434814453s individual

s
current test PASSED/SKIPPED -- test_close_code_on_unhandled_error in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 36.713059425354004s cumulative, 0.0032536983489990234s individual

INFO:     127.0.0.1:38410 - "GET / HTTP/1.1" 200 OK

[Starting server process...]
.
[Sending SIGTERM to server process...]

current test PASSED/SKIPPED -- test_rejected in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 37.469043016433716s cumulative, 0.7559835910797119s individual

s
current test PASSED/SKIPPED -- test_type_mismatch in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 37.47534728050232s cumulative, 0.006304264068603516s individual

s
current test PASSED/SKIPPED -- test_disconnecting_client_early in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 37.478604793548584s cumulative, 0.0032575130462646484s individual

s
current test PASSED/SKIPPED -- test_close_code_on_unhandled_http_error in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 37.48189902305603s cumulative, 0.003294229507446289s individual

s
current test PASSED/SKIPPED -- test_hello in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 37.48533797264099s cumulative, 0.0034389495849609375s individual

s
current test PASSED/SKIPPED -- test_invalid_close_code in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 37.48856472969055s cumulative, 0.003226757049560547s individual

INFO:     127.0.0.1:58426 - "GET / HTTP/1.1" 200 OK

[Starting server process...]
.
[Sending SIGTERM to server process...]

current test PASSED/SKIPPED -- test_missing_responder in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 38.24548363685608s cumulative, 0.7569189071655273s individual

s
current test PASSED/SKIPPED -- test_missing_responder in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 38.25034046173096s cumulative, 0.00485682487487793s individual

s
current test PASSED/SKIPPED -- test_hello in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 38.25405263900757s cumulative, 0.003712177276611328s individual

s
current test PASSED/SKIPPED -- test_send_before_accept in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 38.258421421051025s cumulative, 0.004368782043457031s individual

s
current test PASSED/SKIPPED -- test_missing_responder in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 38.261661529541016s cumulative, 0.0032401084899902344s individual

s
current test PASSED/SKIPPED -- test_rejected in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 38.265164852142334s cumulative, 0.0035033226013183594s individual

s
current test PASSED/SKIPPED -- test_hello in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 38.26864242553711s cumulative, 0.0034775733947753906s individual

s
current test PASSED/SKIPPED -- test_type_mismatch in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 38.272096157073975s cumulative, 0.0034537315368652344s individual

INFO:     127.0.0.1:53842 - "GET / HTTP/1.1" 200 OK

[Starting server process...]
.
[Sending SIGTERM to server process...]

current test PASSED/SKIPPED -- test_rejected in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 39.03013324737549s cumulative, 0.7580370903015137s individual

s
current test PASSED/SKIPPED -- test_rejected in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 39.03475069999695s cumulative, 0.004617452621459961s individual

s
current test PASSED/SKIPPED -- test_passing_path_params in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 39.03803014755249s cumulative, 0.003279447555541992s individual

s
current test PASSED/SKIPPED -- test_rejected in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 39.04164385795593s cumulative, 0.003613710403442383s individual

s
current test PASSED/SKIPPED -- test_type_mismatch in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 39.04658079147339s cumulative, 0.004936933517456055s individual

s
current test PASSED/SKIPPED -- test_hello in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 39.05004692077637s cumulative, 0.0034661293029785156s individual

s
current test PASSED/SKIPPED -- test_type_mismatch in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 39.05347990989685s cumulative, 0.0034329891204833984s individual

INFO:     127.0.0.1:57030 - "GET / HTTP/1.1" 200 OK

[Starting server process...]
.
[Sending SIGTERM to server process...]

current test PASSED/SKIPPED -- test_type_mismatch in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 39.81291437149048s cumulative, 0.7594344615936279s individual

INFO:     127.0.0.1:44270 - "GET / HTTP/1.1" 200 OK

[Starting server process...]
.
[Sending SIGTERM to server process...]

current test PASSED/SKIPPED -- test_recv_before_accept in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 40.57306623458862s cumulative, 0.7601518630981445s individual

s
current test PASSED/SKIPPED -- test_disconnecting_client_early in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 40.57777643203735s cumulative, 0.004710197448730469s individual

s
current test PASSED/SKIPPED -- test_passing_path_params in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 40.58376502990723s cumulative, 0.005988597869873047s individual

s
current test PASSED/SKIPPED -- test_rejected in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 40.58731126785278s cumulative, 0.0035462379455566406s individual

s
current test PASSED/SKIPPED -- test_hello in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 40.59085416793823s cumulative, 0.0035429000854492188s individual

s
current test PASSED/SKIPPED -- test_select_subprotocol_known in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 40.5943078994751s cumulative, 0.0034537315368652344s individual

s
current test PASSED/SKIPPED -- test_post_multipart_form in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 40.59748291969299s cumulative, 0.003175020217895508s individual

s
current test PASSED/SKIPPED -- test_post_invalid_content_length in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 40.60093951225281s cumulative, 0.003456592559814453s individual

INFO:     127.0.0.1:38958 - "GET / HTTP/1.1" 200 OK
INFO:     127.0.0.1:38962 - "GET / HTTP/1.1" 200 OK

[Starting server process...]
.
[Sending SIGTERM to server process...]

current test PASSED/SKIPPED -- test_get in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 41.3656063079834s cumulative, 0.7646667957305908s individual

s
current test PASSED/SKIPPED -- test_post_read_bounded_stream_large in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 41.37026524543762s cumulative, 0.004658937454223633s individual

s
current test PASSED/SKIPPED -- test_stream_chunked_request in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 41.373528480529785s cumulative, 0.003263235092163086s individual

INFO:     127.0.0.1:54452 - "GET / HTTP/1.1" 200 OK
INFO:     127.0.0.1:54454 - "HEAD / HTTP/1.1" 405 Method Not Allowed

[Starting server process...]
.
[Sending SIGTERM to server process...]

current test PASSED/SKIPPED -- test_head_405 in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 42.12887382507324s cumulative, 0.755345344543457s individual

s
current test PASSED/SKIPPED -- test_put in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 42.134156703948975s cumulative, 0.005282878875732422s individual

s
current test PASSED/SKIPPED -- test_sse in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 42.13734841346741s cumulative, 0.003191709518432617s individual

s
current test PASSED/SKIPPED -- test_sse in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 42.14053177833557s cumulative, 0.0031833648681640625s individual

s
current test PASSED/SKIPPED -- test_post_invalid_content_length in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 42.14363646507263s cumulative, 0.003104686737060547s individual

INFO:     127.0.0.1:52164 - "GET / HTTP/1.1" 200 OK

[Starting server process...]
.
[Sending SIGTERM to server process...]

current test PASSED/SKIPPED -- test_post_invalid_content_length in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 42.898425579071045s cumulative, 0.7547891139984131s individual

s
current test PASSED/SKIPPED -- test_stream_chunked_request in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 42.902761697769165s cumulative, 0.004336118698120117s individual

s
current test PASSED/SKIPPED -- test_post_multiple in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 42.905956745147705s cumulative, 0.003195047378540039s individual

s
current test PASSED/SKIPPED -- test_sse_client_disconnects_early in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 42.90907597541809s cumulative, 0.003119230270385742s individual

s
current test PASSED/SKIPPED -- test_put in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 42.91244459152222s cumulative, 0.0033686161041259766s individual

s
current test PASSED/SKIPPED -- test_post_read_bounded_stream_no_body in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 42.9165825843811s cumulative, 0.004137992858886719s individual

INFO:     127.0.0.1:49902 - "GET / HTTP/1.1" 200 OK
INFO:     127.0.0.1:49916 - "POST /bucket HTTP/1.1" 200 OK

[Starting server process...]
.
[Sending SIGTERM to server process...]

current test PASSED/SKIPPED -- test_post_read_bounded_stream in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 43.67177724838257s cumulative, 0.7551946640014648s individual

s
current test PASSED/SKIPPED -- test_get in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 43.676202058792114s cumulative, 0.0044248104095458984s individual

s
current test PASSED/SKIPPED -- test_post_read_bounded_stream_large in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 43.67934441566467s cumulative, 0.0031423568725585938s individual

s
current test PASSED/SKIPPED -- test_get in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 43.68252468109131s cumulative, 0.003180265426635742s individual

s
current test PASSED/SKIPPED -- test_sse_client_disconnects_early in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 43.6869957447052s cumulative, 0.0044710636138916016s individual

s
current test PASSED/SKIPPED -- test_post_read_bounded_stream in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 43.69004487991333s cumulative, 0.003049135208129883s individual

INFO:     127.0.0.1:48618 - "GET / HTTP/1.1" 200 OK
INFO:     127.0.0.1:48630 - "POST /bucket HTTP/1.1" 200 OK

[Starting server process...]
.
[Sending SIGTERM to server process...]

current test PASSED/SKIPPED -- test_post_read_bounded_stream_no_body in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 44.39349055290222s cumulative, 0.7034456729888916s individual

s
current test PASSED/SKIPPED -- test_post_multiple in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 44.3981192111969s cumulative, 0.004628658294677734s individual

s
current test PASSED/SKIPPED -- test_head_405 in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 44.40252685546875s cumulative, 0.004407644271850586s individual

s
current test PASSED/SKIPPED -- test_post_read_bounded_stream_no_body in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 44.40567064285278s cumulative, 0.003143787384033203s individual

s
current test PASSED/SKIPPED -- test_post_multipart_form in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 44.40874242782593s cumulative, 0.0030717849731445312s individual

s
current test PASSED/SKIPPED -- test_post_read_bounded_stream in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 44.411864042282104s cumulative, 0.003121614456176758s individual

s
current test PASSED/SKIPPED -- test_head_405 in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 44.41491079330444s cumulative, 0.003046751022338867s individual


tests/test_buffered_reader.py .
current test PASSED/SKIPPED -- test_irregular_large_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 47.276543855667114s cumulative, 2.861633062362671s individual


tests/asgi/test_hello_asgi.py .
current test PASSED/SKIPPED -- test_closing_stream in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_hello_asgi.py: 47.28517270088196s cumulative, 0.00862884521484375s individual

.
current test PASSED/SKIPPED -- test_body in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_hello_asgi.py: 47.289976835250854s cumulative, 0.004804134368896484s individual

.
current test PASSED/SKIPPED -- test_closing_stream in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_hello_asgi.py: 47.294856786727905s cumulative, 0.004879951477050781s individual

.
current test PASSED/SKIPPED -- test_stream_known_len in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_hello_asgi.py: 47.30198645591736s cumulative, 0.007129669189453125s individual

.
current test PASSED/SKIPPED -- test_noncoroutine_required in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_hello_asgi.py: 47.30540060997009s cumulative, 0.003414154052734375s individual

.
current test PASSED/SKIPPED -- test_env_headers_list_of_tuples in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_hello_asgi.py: 47.3080370426178s cumulative, 0.002636432647705078s individual

.
current test PASSED/SKIPPED -- test_root_route in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_hello_asgi.py: 47.3121600151062s cumulative, 0.00412297248840332s individual

.
current test PASSED/SKIPPED -- test_closing_stream in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_hello_asgi.py: 47.31682348251343s cumulative, 0.0046634674072265625s individual

.
current test PASSED/SKIPPED -- test_filelike_closing_aiofiles in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_hello_asgi.py: 47.34622097015381s cumulative, 0.02939748764038086s individual

.
current test PASSED/SKIPPED -- test_genfunc_error in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_hello_asgi.py: 47.35031199455261s cumulative, 0.004091024398803711s individual

.
current test PASSED/SKIPPED -- test_body in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_hello_asgi.py: 47.354736328125s cumulative, 0.004424333572387695s individual

.
current test PASSED/SKIPPED -- test_no_body_on_head in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_hello_asgi.py: 47.35881781578064s cumulative, 0.0040814876556396484s individual

.
current test PASSED/SKIPPED -- test_nongenfunc_error in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_hello_asgi.py: 47.36381483078003s cumulative, 0.0049970149993896484s individual

.
current test PASSED/SKIPPED -- test_no_route in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_hello_asgi.py: 47.367783308029175s cumulative, 0.003968477249145508s individual

.
current test PASSED/SKIPPED -- test_coroutine_required in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_hello_asgi.py: 47.371020793914795s cumulative, 0.003237485885620117s individual

.
current test PASSED/SKIPPED -- test_body in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_hello_asgi.py: 47.37574291229248s cumulative, 0.004722118377685547s individual

.
current test PASSED/SKIPPED -- test_filelike_closing in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_hello_asgi.py: 47.380982637405396s cumulative, 0.005239725112915039s individual

.
current test PASSED/SKIPPED -- test_filelike_closing in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_hello_asgi.py: 47.38523578643799s cumulative, 0.0042531490325927734s individual

.
current test PASSED/SKIPPED -- test_filelike_using_helper in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_hello_asgi.py: 47.38921022415161s cumulative, 0.003974437713623047s individual

.
current test PASSED/SKIPPED -- test_status_not_set in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_hello_asgi.py: 47.39327430725098s cumulative, 0.004064083099365234s individual

.
current test PASSED/SKIPPED -- test_stream_chunked in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_hello_asgi.py: 47.39783787727356s cumulative, 0.004563570022583008s individual

.
current test PASSED/SKIPPED -- test_filelike in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_hello_asgi.py: 47.40225267410278s cumulative, 0.004414796829223633s individual

.
current test PASSED/SKIPPED -- test_closing_stream in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_hello_asgi.py: 47.40675115585327s cumulative, 0.004498481750488281s individual


tests/asgi/test_boundedstream_asgi.py .
current test PASSED/SKIPPED -- test_read_all in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 59.38391041755676s cumulative, 11.977159261703491s individual


tests/test_cors_middleware.py .
current test PASSED/SKIPPED -- test_enabled_cors_should_accept_all_origins_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_cors_middleware.py: 59.39179277420044s cumulative, 0.007882356643676758s individual

.
current test PASSED/SKIPPED -- test_enabled_cors_no_origin in /home/kaiyaok2/PythonProjects/falcon/tests/test_cors_middleware.py: 59.39625859260559s cumulative, 0.004465818405151367s individual

.
current test PASSED/SKIPPED -- test_enabled_cors_no_origin in /home/kaiyaok2/PythonProjects/falcon/tests/test_cors_middleware.py: 59.40461564064026s cumulative, 0.008357048034667969s individual

.
current test PASSED/SKIPPED -- test_disabled_cors_should_not_add_any_extra_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_cors_middleware.py: 59.40880012512207s cumulative, 0.0041844844818115234s individual

.
current test PASSED/SKIPPED -- test_disabled_cors_should_not_add_any_extra_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_cors_middleware.py: 59.41354250907898s cumulative, 0.00474238395690918s individual

.
current test PASSED/SKIPPED -- test_enabled_cors_handles_preflighting_no_headers_in_req in /home/kaiyaok2/PythonProjects/falcon/tests/test_cors_middleware.py: 59.4178466796875s cumulative, 0.004304170608520508s individual

.
current test PASSED/SKIPPED -- test_enabled_cors_should_accept_all_origins_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_cors_middleware.py: 59.4241738319397s cumulative, 0.006327152252197266s individual

.
current test PASSED/SKIPPED -- test_enabled_cors_should_add_extra_headers_on_response in /home/kaiyaok2/PythonProjects/falcon/tests/test_cors_middleware.py: 59.42844295501709s cumulative, 0.004269123077392578s individual

.
current test PASSED/SKIPPED -- test_enabled_cors_handles_preflighting in /home/kaiyaok2/PythonProjects/falcon/tests/test_cors_middleware.py: 59.432772159576416s cumulative, 0.004329204559326172s individual

.
current test PASSED/SKIPPED -- test_enabled_cors_handles_preflighting_no_headers_in_req in /home/kaiyaok2/PythonProjects/falcon/tests/test_cors_middleware.py: 59.43704652786255s cumulative, 0.0042743682861328125s individual

.
current test PASSED/SKIPPED -- test_enabled_cors_handles_preflighting in /home/kaiyaok2/PythonProjects/falcon/tests/test_cors_middleware.py: 59.44140958786011s cumulative, 0.004363059997558594s individual

.
current test PASSED/SKIPPED -- test_enabled_cors_should_add_extra_headers_on_response in /home/kaiyaok2/PythonProjects/falcon/tests/test_cors_middleware.py: 59.44664478302002s cumulative, 0.005235195159912109s individual

.
current test PASSED/SKIPPED -- test_allow_origin in /home/kaiyaok2/PythonProjects/falcon/tests/test_cors_middleware.py: 59.4520058631897s cumulative, 0.005361080169677734s individual

.
current test PASSED/SKIPPED -- test_allow_credential_existing_origin in /home/kaiyaok2/PythonProjects/falcon/tests/test_cors_middleware.py: 59.456068992614746s cumulative, 0.004063129425048828s individual

.
current test PASSED/SKIPPED -- test_allow_origin in /home/kaiyaok2/PythonProjects/falcon/tests/test_cors_middleware.py: 59.461442708969116s cumulative, 0.005373716354370117s individual

.
current test PASSED/SKIPPED -- test_allow_credential_list_or_str in /home/kaiyaok2/PythonProjects/falcon/tests/test_cors_middleware.py: 59.47133183479309s cumulative, 0.00988912582397461s individual

.
current test PASSED/SKIPPED -- test_allow_origin in /home/kaiyaok2/PythonProjects/falcon/tests/test_cors_middleware.py: 59.48144841194153s cumulative, 0.0101165771484375s individual

.
current test PASSED/SKIPPED -- test_expose_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_cors_middleware.py: 59.48582172393799s cumulative, 0.004373311996459961s individual

.
current test PASSED/SKIPPED -- test_expose_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_cors_middleware.py: 59.490885972976685s cumulative, 0.005064249038696289s individual

.
current test PASSED/SKIPPED -- test_allow_credential_list_or_str in /home/kaiyaok2/PythonProjects/falcon/tests/test_cors_middleware.py: 59.49746561050415s cumulative, 0.00657963752746582s individual

.
current test PASSED/SKIPPED -- test_allow_credential_existing_origin in /home/kaiyaok2/PythonProjects/falcon/tests/test_cors_middleware.py: 59.5021493434906s cumulative, 0.004683732986450195s individual

.
current test PASSED/SKIPPED -- test_allow_credential_list_or_str in /home/kaiyaok2/PythonProjects/falcon/tests/test_cors_middleware.py: 59.512579917907715s cumulative, 0.010430574417114258s individual

.
current test PASSED/SKIPPED -- test_raises in /home/kaiyaok2/PythonProjects/falcon/tests/test_cors_middleware.py: 59.51570749282837s cumulative, 0.003127574920654297s individual

.
current test PASSED/SKIPPED -- test_allow_origin in /home/kaiyaok2/PythonProjects/falcon/tests/test_cors_middleware.py: 59.52209520339966s cumulative, 0.0063877105712890625s individual

.
current test PASSED/SKIPPED -- test_allow_origin in /home/kaiyaok2/PythonProjects/falcon/tests/test_cors_middleware.py: 59.52992844581604s cumulative, 0.007833242416381836s individual

.
current test PASSED/SKIPPED -- test_allow_origin_allow_credential in /home/kaiyaok2/PythonProjects/falcon/tests/test_cors_middleware.py: 59.5346941947937s cumulative, 0.004765748977661133s individual

.
current test PASSED/SKIPPED -- test_allow_origin in /home/kaiyaok2/PythonProjects/falcon/tests/test_cors_middleware.py: 59.5425066947937s cumulative, 0.0078125s individual

.
current test PASSED/SKIPPED -- test_expose_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_cors_middleware.py: 59.546865701675415s cumulative, 0.004359006881713867s individual

.
current test PASSED/SKIPPED -- test_expose_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_cors_middleware.py: 59.551591873168945s cumulative, 0.0047261714935302734s individual

.
current test PASSED/SKIPPED -- test_allow_credential_wildcard in /home/kaiyaok2/PythonProjects/falcon/tests/test_cors_middleware.py: 59.556066036224365s cumulative, 0.004474163055419922s individual

.
current test PASSED/SKIPPED -- test_expose_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_cors_middleware.py: 59.560853719711304s cumulative, 0.0047876834869384766s individual

.
current test PASSED/SKIPPED -- test_expose_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_cors_middleware.py: 59.56575083732605s cumulative, 0.004897117614746094s individual

.
current test PASSED/SKIPPED -- test_allow_origin_allow_credential in /home/kaiyaok2/PythonProjects/falcon/tests/test_cors_middleware.py: 59.57387065887451s cumulative, 0.008119821548461914s individual

.
current test PASSED/SKIPPED -- test_allow_credential_list_or_str in /home/kaiyaok2/PythonProjects/falcon/tests/test_cors_middleware.py: 59.583332538604736s cumulative, 0.00946187973022461s individual

.
current test PASSED/SKIPPED -- test_allow_credential_wildcard in /home/kaiyaok2/PythonProjects/falcon/tests/test_cors_middleware.py: 59.588433504104614s cumulative, 0.00510096549987793s individual


tests/asgi/test_sse.py .
current test PASSED/SKIPPED -- test_multiple_events_early_disconnect in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_sse.py: 59.655139207839966s cumulative, 0.06670570373535156s individual


tests/test_request_forwarded.py .
current test PASSED/SKIPPED -- test_forwarded_multiple_params in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_forwarded.py: 59.65801119804382s cumulative, 0.002871990203857422s individual

.
current test PASSED/SKIPPED -- test_escape_malformed_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_forwarded.py: 59.66097354888916s cumulative, 0.002962350845336914s individual

.
current test PASSED/SKIPPED -- test_forwarded_quote_escaping in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_forwarded.py: 59.66368508338928s cumulative, 0.0027115345001220703s individual

.
current test PASSED/SKIPPED -- test_x_forwarded_proto in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_forwarded.py: 59.6663932800293s cumulative, 0.0027081966400146484s individual

.
current test PASSED/SKIPPED -- test_forwarded_host in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_forwarded.py: 59.66915559768677s cumulative, 0.002762317657470703s individual

.
current test PASSED/SKIPPED -- test_escape_malformed_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_forwarded.py: 59.67211389541626s cumulative, 0.0029582977294921875s individual

.
current test PASSED/SKIPPED -- test_escape_malformed_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_forwarded.py: 59.67506003379822s cumulative, 0.002946138381958008s individual

.
current test PASSED/SKIPPED -- test_forwarded_invalid in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_forwarded.py: 59.6777548789978s cumulative, 0.002694845199584961s individual

.
current test PASSED/SKIPPED -- test_forwarded_quote_escaping in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_forwarded.py: 59.680447816848755s cumulative, 0.0026929378509521484s individual

.
current test PASSED/SKIPPED -- test_forwarded_host in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_forwarded.py: 59.68362832069397s cumulative, 0.0031805038452148438s individual

.
current test PASSED/SKIPPED -- test_x_forwarded_host in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_forwarded.py: 59.68636679649353s cumulative, 0.002738475799560547s individual

.
current test PASSED/SKIPPED -- test_escape_malformed_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_forwarded.py: 59.689345598220825s cumulative, 0.002978801727294922s individual

.
current test PASSED/SKIPPED -- test_no_forwarded_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_forwarded.py: 59.6920530796051s cumulative, 0.0027074813842773438s individual

.
current test PASSED/SKIPPED -- test_escape_malformed_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_forwarded.py: 59.69502520561218s cumulative, 0.002972126007080078s individual

.
current test PASSED/SKIPPED -- test_x_forwarded_host in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_forwarded.py: 59.697720527648926s cumulative, 0.002695322036743164s individual

.
current test PASSED/SKIPPED -- test_x_forwarded_proto in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_forwarded.py: 59.70039629936218s cumulative, 0.002675771713256836s individual

.
current test PASSED/SKIPPED -- test_escape_malformed_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_forwarded.py: 59.703370809555054s cumulative, 0.0029745101928710938s individual

.
current test PASSED/SKIPPED -- test_forwarded_missing_first_hop_host in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_forwarded.py: 59.706098794937134s cumulative, 0.002727985382080078s individual

.
current test PASSED/SKIPPED -- test_escape_malformed_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_forwarded.py: 59.70904541015625s cumulative, 0.002946615219116211s individual

.
current test PASSED/SKIPPED -- test_no_forwarded_headers_with_port in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_forwarded.py: 59.7117223739624s cumulative, 0.0026769638061523438s individual

.
current test PASSED/SKIPPED -- test_escape_malformed_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_forwarded.py: 59.71468138694763s cumulative, 0.002959012985229492s individual

.
current test PASSED/SKIPPED -- test_no_forwarded_headers_with_port in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_forwarded.py: 59.717368602752686s cumulative, 0.002687215805053711s individual

.
current test PASSED/SKIPPED -- test_escape_malformed_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_forwarded.py: 59.720505237579346s cumulative, 0.0031366348266601562s individual

.
current test PASSED/SKIPPED -- test_x_forwarded_host_with_port in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_forwarded.py: 59.7232186794281s cumulative, 0.002713441848754883s individual

.
current test PASSED/SKIPPED -- test_forwarded_invalid in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_forwarded.py: 59.72592282295227s cumulative, 0.002704143524169922s individual

.
current test PASSED/SKIPPED -- test_no_forwarded_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_forwarded.py: 59.72859740257263s cumulative, 0.002674579620361328s individual

.
current test PASSED/SKIPPED -- test_forwarded_multiple_params in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_forwarded.py: 59.73132276535034s cumulative, 0.002725362777709961s individual

.
current test PASSED/SKIPPED -- test_forwarded_missing_first_hop_host in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_forwarded.py: 59.73403239250183s cumulative, 0.002709627151489258s individual

.
current test PASSED/SKIPPED -- test_escape_malformed_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_forwarded.py: 59.73698139190674s cumulative, 0.0029489994049072266s individual

.
current test PASSED/SKIPPED -- test_x_forwarded_host_with_port in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_forwarded.py: 59.739670753479004s cumulative, 0.002689361572265625s individual


tests/asgi/test_request_context_asgi.py .
current test PASSED/SKIPPED -- test_custom_request_context in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_request_context_asgi.py: 59.742305278778076s cumulative, 0.0026345252990722656s individual

.
current test PASSED/SKIPPED -- test_custom_request_context_failure in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_request_context_asgi.py: 59.74492526054382s cumulative, 0.0026199817657470703s individual

.
current test PASSED/SKIPPED -- test_default_request_context in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_request_context_asgi.py: 59.747498512268066s cumulative, 0.002573251724243164s individual

.
current test PASSED/SKIPPED -- test_custom_request_context_request_access in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_request_context_asgi.py: 59.750091791152954s cumulative, 0.0025932788848876953s individual


tests/test_deprecations.py .
current test PASSED/SKIPPED -- test_bounded_stream in /home/kaiyaok2/PythonProjects/falcon/tests/test_deprecations.py: 59.75253987312317s cumulative, 0.0024480819702148438s individual


tests/test_wsgi_servers.py Starting uWSGI...
uwsgi --http 127.0.0.1:34183 --wsgi-file _wsgi_test_app.py
s
current test PASSED/SKIPPED -- test_static_file in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 59.75980734825134s cumulative, 0.007267475128173828s individual

127.0.0.1 - - [30/Jan/2024:22:19:38 +0000] "GET /hello HTTP/1.1" 200 14 "-" "python-requests/2.31.0"
127.0.0.1 - - [30/Jan/2024:22:19:38 +0000] "GET /deprecated HTTP/1.1" 500 38 "-" "python-requests/2.31.0"
Starting Gunicorn...
/usr/bin/python3 -m gunicorn --access-logfile - --bind 127.0.0.1:57529 --graceful-timeout 10 --timeout 10 _wsgi_test_app:app
.
[Sending SIGTERM to server process...]

current test PASSED/SKIPPED -- test_get_deprecated in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 60.75478148460388s cumulative, 0.9949741363525391s individual

s
current test PASSED/SKIPPED -- test_static_file_byte_range in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 60.76063084602356s cumulative, 0.005849361419677734s individual

s
current test PASSED/SKIPPED -- test_get_deprecated in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 60.764931440353394s cumulative, 0.004300594329833984s individual

s
current test PASSED/SKIPPED -- test_static_file_byte_range in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 60.76879405975342s cumulative, 0.003862619400024414s individual

s
current test PASSED/SKIPPED -- test_get in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 60.77338528633118s cumulative, 0.004591226577758789s individual

s
current test PASSED/SKIPPED -- test_post_multipart_form in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 60.77683091163635s cumulative, 0.0034456253051757812s individual

127.0.0.1 - - [30/Jan/2024:22:19:39 +0000] "GET /hello HTTP/1.1" 200 14 "-" "python-requests/2.31.0"
127.0.0.1 - - [30/Jan/2024:22:19:39 +0000] "GET /tests/test_wsgi_servers.py HTTP/1.1" 206 5 "-" "python-requests/2.31.0"
Starting Gunicorn...
/usr/bin/python3 -m gunicorn --access-logfile - --bind 127.0.0.1:51521 --graceful-timeout 10 --timeout 10 _wsgi_test_app:app
.
[Sending SIGTERM to server process...]

current test PASSED/SKIPPED -- test_static_file_byte_range in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 61.78487181663513s cumulative, 1.0080409049987793s individual

127.0.0.1 - - [30/Jan/2024:22:19:40 +0000] "GET /hello HTTP/1.1" 200 14 "-" "python-requests/2.31.0"
127.0.0.1 - - [30/Jan/2024:22:19:40 +0000] "GET /tests/test_wsgi_servers.py HTTP/1.1" 206 47 "-" "python-requests/2.31.0"
Starting Gunicorn...
/usr/bin/python3 -m gunicorn --access-logfile - --bind 127.0.0.1:48971 --graceful-timeout 10 --timeout 10 _wsgi_test_app:app
.
[Sending SIGTERM to server process...]

current test PASSED/SKIPPED -- test_static_file_byte_range in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 62.78022480010986s cumulative, 0.9953529834747314s individual

INFO:     127.0.0.1:60780 - "GET /hello HTTP/1.1" 200 OK
INFO:     127.0.0.1:60792 - "GET /tests/test_wsgi_servers.py HTTP/1.1" 206 Partial Content
Starting Uvicorn (WSGI interface)...
/usr/bin/python3 -m uvicorn --host 127.0.0.1 --port 44955 --interface wsgi _wsgi_test_app:app
.
[Sending SIGTERM to server process...]

current test PASSED/SKIPPED -- test_static_file_byte_range in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 63.53115797042847s cumulative, 0.7509331703186035s individual

Starting uWSGI...
uwsgi --http 127.0.0.1:60835 --wsgi-file _wsgi_test_app.py
s
current test PASSED/SKIPPED -- test_get in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 63.53731441497803s cumulative, 0.006156444549560547s individual

127.0.0.1 - - [30/Jan/2024:22:19:42 +0000] "GET /hello HTTP/1.1" 200 14 "-" "python-requests/2.31.0"
127.0.0.1 - - [30/Jan/2024:22:19:42 +0000] "GET /tests/test_wsgi_servers.py HTTP/1.1" 206 8544 "-" "python-requests/2.31.0"
Starting Gunicorn...
/usr/bin/python3 -m gunicorn --access-logfile - --bind 127.0.0.1:48913 --graceful-timeout 10 --timeout 10 _wsgi_test_app:app
.
[Sending SIGTERM to server process...]

current test PASSED/SKIPPED -- test_static_file_byte_range in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 64.54314160346985s cumulative, 1.0058271884918213s individual

INFO:     127.0.0.1:56986 - "GET /hello HTTP/1.1" 200 OK
INFO:     127.0.0.1:57002 - "GET /hello HTTP/1.1" 200 OK
Starting Uvicorn (WSGI interface)...
/usr/bin/python3 -m uvicorn --host 127.0.0.1 --port 58845 --interface wsgi _wsgi_test_app:app
.
[Sending SIGTERM to server process...]

current test PASSED/SKIPPED -- test_get in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 65.24034976959229s cumulative, 0.6972081661224365s individual

INFO:     127.0.0.1:56592 - "GET /hello HTTP/1.1" 200 OK
2024-01-30 22:19:43 [FALCON] [ERROR] GET /deprecated => Traceback (most recent call last):
  File "falcon/app.py", line 373, in falcon.app.App.__call__
  File "/home/kaiyaok2/PythonProjects/falcon/tests/_wsgi_test_app.py", line 45, in on_get_deprecated
    resp.body = 'Hello, World!\n'
  File "falcon/response.py", line 220, in falcon.response.Response.body
falcon.util.deprecation.AttributeRemovedError: The body attribute is no longer supported. Please use the text attribute instead.

INFO:     127.0.0.1:56604 - "GET /deprecated HTTP/1.1" 500 Internal Server Error
Starting Uvicorn (WSGI interface)...
/usr/bin/python3 -m uvicorn --host 127.0.0.1 --port 34299 --interface wsgi _wsgi_test_app:app
.
[Sending SIGTERM to server process...]

current test PASSED/SKIPPED -- test_get_deprecated in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 65.94226288795471s cumulative, 0.7019131183624268s individual

Starting uWSGI...
uwsgi --http 127.0.0.1:33337 --wsgi-file _wsgi_test_app.py
s
current test PASSED/SKIPPED -- test_get_deprecated in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 65.94850611686707s cumulative, 0.006243228912353516s individual

INFO:     127.0.0.1:54558 - "GET /hello HTTP/1.1" 200 OK
INFO:     127.0.0.1:54568 - "GET /tests/test_wsgi_servers.py HTTP/1.1" 206 Partial Content
Starting Uvicorn (WSGI interface)...
/usr/bin/python3 -m uvicorn --host 127.0.0.1 --port 48973 --interface wsgi _wsgi_test_app:app
.
[Sending SIGTERM to server process...]

current test PASSED/SKIPPED -- test_static_file_byte_range in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 66.64639568328857s cumulative, 0.6978895664215088s individual

s
current test PASSED/SKIPPED -- test_static_file_byte_range in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 66.65409684181213s cumulative, 0.00770115852355957s individual

INFO:     127.0.0.1:42128 - "GET /hello HTTP/1.1" 200 OK
INFO:     127.0.0.1:42136 - "GET /tests/test_wsgi_servers.py HTTP/1.1" 200 OK
Starting Uvicorn (WSGI interface)...
/usr/bin/python3 -m uvicorn --host 127.0.0.1 --port 46735 --interface wsgi _wsgi_test_app:app
.
[Sending SIGTERM to server process...]

current test PASSED/SKIPPED -- test_static_file in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 67.3528265953064s cumulative, 0.6987297534942627s individual

INFO:     127.0.0.1:44002 - "GET /hello HTTP/1.1" 200 OK
INFO:     127.0.0.1:44014 - "GET /tests/test_wsgi_servers.py HTTP/1.1" 206 Partial Content
Starting Uvicorn (WSGI interface)...
/usr/bin/python3 -m uvicorn --host 127.0.0.1 --port 56057 --interface wsgi _wsgi_test_app:app
.
[Sending SIGTERM to server process...]

current test PASSED/SKIPPED -- test_static_file_byte_range in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 68.10113263130188s cumulative, 0.7483060359954834s individual

s
current test PASSED/SKIPPED -- test_static_file_byte_range in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 68.10685801506042s cumulative, 0.005725383758544922s individual

127.0.0.1 - - [30/Jan/2024:22:19:46 +0000] "GET /hello HTTP/1.1" 200 14 "-" "python-requests/2.31.0"
127.0.0.1 - - [30/Jan/2024:22:19:46 +0000] "GET /tests/test_wsgi_servers.py HTTP/1.1" 200 0 "-" "python-requests/2.31.0"
Starting Gunicorn...
/usr/bin/python3 -m gunicorn --access-logfile - --bind 127.0.0.1:60277 --graceful-timeout 10 --timeout 10 _wsgi_test_app:app
.
[Sending SIGTERM to server process...]

current test PASSED/SKIPPED -- test_static_file in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 69.09516310691833s cumulative, 0.9883050918579102s individual

Starting uWSGI...
uwsgi --http 127.0.0.1:48527 --wsgi-file _wsgi_test_app.py
s
current test PASSED/SKIPPED -- test_static_file_byte_range in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 69.10146355628967s cumulative, 0.006300449371337891s individual

s
current test PASSED/SKIPPED -- test_get_deprecated in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 69.10557413101196s cumulative, 0.004110574722290039s individual

Starting uWSGI...
uwsgi --http 127.0.0.1:38341 --wsgi-file _wsgi_test_app.py
s
current test PASSED/SKIPPED -- test_static_file_byte_range in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 69.11085104942322s cumulative, 0.005276918411254883s individual

s
current test PASSED/SKIPPED -- test_static_file in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 69.11548972129822s cumulative, 0.004638671875s individual

Starting uWSGI...
uwsgi --http 127.0.0.1:45777 --wsgi-file _wsgi_test_app.py
s
current test PASSED/SKIPPED -- test_static_file_byte_range in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 69.11900806427002s cumulative, 0.003518342971801758s individual

Starting uWSGI...
uwsgi --http 127.0.0.1:53595 --wsgi-file _wsgi_test_app.py
s
current test PASSED/SKIPPED -- test_static_file_byte_range in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 69.12282228469849s cumulative, 0.003814220428466797s individual

INFO:     127.0.0.1:40772 - "GET /hello HTTP/1.1" 200 OK
INFO:     127.0.0.1:40788 - "GET /tests/test_wsgi_servers.py HTTP/1.1" 206 Partial Content
Starting Uvicorn (WSGI interface)...
/usr/bin/python3 -m uvicorn --host 127.0.0.1 --port 49197 --interface wsgi _wsgi_test_app:app
.
[Sending SIGTERM to server process...]

current test PASSED/SKIPPED -- test_static_file_byte_range in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 69.82231092453003s cumulative, 0.699488639831543s individual

s
current test PASSED/SKIPPED -- test_post_multipart_form in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 69.82782864570618s cumulative, 0.005517721176147461s individual

s
current test PASSED/SKIPPED -- test_static_file_byte_range in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 69.83177733421326s cumulative, 0.003948688507080078s individual

s
current test PASSED/SKIPPED -- test_static_file in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 69.83544778823853s cumulative, 0.0036704540252685547s individual

Starting uWSGI...
uwsgi --http 127.0.0.1:39799 --wsgi-file _wsgi_test_app.py
s
current test PASSED/SKIPPED -- test_post_multipart_form in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 69.83927249908447s cumulative, 0.0038247108459472656s individual

s
current test PASSED/SKIPPED -- test_get in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 69.84274864196777s cumulative, 0.0034761428833007812s individual

s
current test PASSED/SKIPPED -- test_static_file_byte_range in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 69.84698128700256s cumulative, 0.004232645034790039s individual

s
current test PASSED/SKIPPED -- test_static_file_byte_range in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 69.85070371627808s cumulative, 0.0037224292755126953s individual

s
current test PASSED/SKIPPED -- test_static_file_byte_range in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 69.85440039634705s cumulative, 0.0036966800689697266s individual

127.0.0.1 - - [30/Jan/2024:22:19:48 +0000] "GET /hello HTTP/1.1" 200 14 "-" "python-requests/2.31.0"
127.0.0.1 - - [30/Jan/2024:22:19:48 +0000] "GET /hello HTTP/1.1" 200 14 "-" "python-requests/2.31.0"
Starting Gunicorn...
/usr/bin/python3 -m gunicorn --access-logfile - --bind 127.0.0.1:45379 --graceful-timeout 10 --timeout 10 _wsgi_test_app:app
.
[Sending SIGTERM to server process...]

current test PASSED/SKIPPED -- test_get in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 70.83998584747314s cumulative, 0.9855854511260986s individual

127.0.0.1 - - [30/Jan/2024:22:19:49 +0000] "GET /hello HTTP/1.1" 200 14 "-" "python-requests/2.31.0"
127.0.0.1 - - [30/Jan/2024:22:19:49 +0000] "GET /tests/test_wsgi_servers.py HTTP/1.1" 206 7 "-" "python-requests/2.31.0"
Starting Gunicorn...
/usr/bin/python3 -m gunicorn --access-logfile - --bind 127.0.0.1:44061 --graceful-timeout 10 --timeout 10 _wsgi_test_app:app
.
[Sending SIGTERM to server process...]

current test PASSED/SKIPPED -- test_static_file_byte_range in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 71.83597421646118s cumulative, 0.9959883689880371s individual


tests/asgi/test_misc.py .
current test PASSED/SKIPPED -- test_python_error_not_impl in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_misc.py: 71.84281206130981s cumulative, 0.0068378448486328125s individual

.
current test PASSED/SKIPPED -- test_http_status_not_impl in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_misc.py: 71.84644746780396s cumulative, 0.003635406494140625s individual

.
current test PASSED/SKIPPED -- test_http_error_not_impl in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_misc.py: 71.85141587257385s cumulative, 0.004968404769897461s individual


tests/test_uri_converters.py .
current test PASSED/SKIPPED -- test_float_converter_malformed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 71.85405421257019s cumulative, 0.0026383399963378906s individual

.
current test PASSED/SKIPPED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 71.85707092285156s cumulative, 0.0030167102813720703s individual

.
current test PASSED/SKIPPED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 71.86007165908813s cumulative, 0.0030007362365722656s individual

.
current test PASSED/SKIPPED -- test_int_converter_malformed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 71.86271905899048s cumulative, 0.00264739990234375s individual

.
current test PASSED/SKIPPED -- test_float_converter_malformed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 71.86532425880432s cumulative, 0.0026051998138427734s individual

.
current test PASSED/SKIPPED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 71.86831378936768s cumulative, 0.002989530563354492s individual

.
current test PASSED/SKIPPED -- test_int_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 71.87143063545227s cumulative, 0.0031168460845947266s individual

.
current test PASSED/SKIPPED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 71.8744146823883s cumulative, 0.0029840469360351562s individual

.
current test PASSED/SKIPPED -- test_int_converter_invalid_config in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 71.87706160545349s cumulative, 0.002646923065185547s individual

.
current test PASSED/SKIPPED -- test_datetime_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 71.88127541542053s cumulative, 0.004213809967041016s individual

.
current test PASSED/SKIPPED -- test_float_converter_malformed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 71.88387131690979s cumulative, 0.0025959014892578125s individual

.
current test PASSED/SKIPPED -- test_uuid_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 71.88661551475525s cumulative, 0.0027441978454589844s individual

.
current test PASSED/SKIPPED -- test_int_converter_malformed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 71.88920259475708s cumulative, 0.0025870800018310547s individual

.
current test PASSED/SKIPPED -- test_float_converter_malformed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 71.89178514480591s cumulative, 0.002582550048828125s individual

.
current test PASSED/SKIPPED -- test_int_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 71.89487671852112s cumulative, 0.003091573715209961s individual

.
current test PASSED/SKIPPED -- test_uuid_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 71.89759922027588s cumulative, 0.002722501754760742s individual

.
current test PASSED/SKIPPED -- test_int_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 71.90068864822388s cumulative, 0.003089427947998047s individual

.
current test PASSED/SKIPPED -- test_uuid_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 71.9034035205841s cumulative, 0.002714872360229492s individual

.
current test PASSED/SKIPPED -- test_float_converter_non_finite_allowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 71.90600824356079s cumulative, 0.0026047229766845703s individual

.
current test PASSED/SKIPPED -- test_uuid_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 71.90873122215271s cumulative, 0.0027229785919189453s individual

.
current test PASSED/SKIPPED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 71.91212558746338s cumulative, 0.0033943653106689453s individual

.
current test PASSED/SKIPPED -- test_int_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 71.91522765159607s cumulative, 0.0031020641326904297s individual

.
current test PASSED/SKIPPED -- test_datetime_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 71.91884994506836s cumulative, 0.003622293472290039s individual

.
current test PASSED/SKIPPED -- test_uuid_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 71.92159390449524s cumulative, 0.002743959426879883s individual

.
current test PASSED/SKIPPED -- test_float_converter_malformed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 71.92419195175171s cumulative, 0.0025980472564697266s individual

.
current test PASSED/SKIPPED -- test_int_converter_malformed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 71.92681837081909s cumulative, 0.0026264190673828125s individual

.
current test PASSED/SKIPPED -- test_int_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 71.9299213886261s cumulative, 0.003103017807006836s individual

.
current test PASSED/SKIPPED -- test_float_converter_non_finite_allowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 71.9325225353241s cumulative, 0.002601146697998047s individual

.
current test PASSED/SKIPPED -- test_int_converter_invalid_config in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 71.93515419960022s cumulative, 0.002631664276123047s individual

.
current test PASSED/SKIPPED -- test_int_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 71.93826603889465s cumulative, 0.0031118392944335938s individual

.
current test PASSED/SKIPPED -- test_int_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 71.94137263298035s cumulative, 0.0031065940856933594s individual

.
current test PASSED/SKIPPED -- test_datetime_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 71.94491934776306s cumulative, 0.0035467147827148438s individual

.
current test PASSED/SKIPPED -- test_int_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 71.94803094863892s cumulative, 0.003111600875854492s individual

.
current test PASSED/SKIPPED -- test_int_converter_malformed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 71.95060682296753s cumulative, 0.0025758743286132812s individual

.
current test PASSED/SKIPPED -- test_int_converter_invalid_config in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 71.95322585105896s cumulative, 0.002619028091430664s individual

.
current test PASSED/SKIPPED -- test_float_converter_malformed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 71.95580768585205s cumulative, 0.0025818347930908203s individual

.
current test PASSED/SKIPPED -- test_int_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 71.95889329910278s cumulative, 0.003085613250732422s individual

.
current test PASSED/SKIPPED -- test_uuid_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 71.9615957736969s cumulative, 0.002702474594116211s individual

.
current test PASSED/SKIPPED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 71.96455907821655s cumulative, 0.0029633045196533203s individual

.
current test PASSED/SKIPPED -- test_float_converter_non_finite_allowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 71.9671413898468s cumulative, 0.0025823116302490234s individual

.
current test PASSED/SKIPPED -- test_float_converter_non_finite_disallowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 71.96972680091858s cumulative, 0.0025854110717773438s individual

.
current test PASSED/SKIPPED -- test_float_converter_non_finite_allowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 71.97230958938599s cumulative, 0.0025827884674072266s individual

.
current test PASSED/SKIPPED -- test_int_converter_malformed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 71.97490954399109s cumulative, 0.002599954605102539s individual

.
current test PASSED/SKIPPED -- test_uuid_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 71.97764039039612s cumulative, 0.002730846405029297s individual

.
current test PASSED/SKIPPED -- test_int_converter_malformed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 71.98023891448975s cumulative, 0.0025985240936279297s individual

.
current test PASSED/SKIPPED -- test_datetime_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 71.98310995101929s cumulative, 0.0028710365295410156s individual

.
current test PASSED/SKIPPED -- test_int_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 71.98619198799133s cumulative, 0.0030820369720458984s individual

.
current test PASSED/SKIPPED -- test_float_converter_malformed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 71.98877286911011s cumulative, 0.002580881118774414s individual

.
current test PASSED/SKIPPED -- test_int_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 71.99202108383179s cumulative, 0.0032482147216796875s individual

.
current test PASSED/SKIPPED -- test_datetime_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 71.99523401260376s cumulative, 0.0032129287719726562s individual

.
current test PASSED/SKIPPED -- test_float_converter_malformed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 71.99782371520996s cumulative, 0.002589702606201172s individual

.
current test PASSED/SKIPPED -- test_datetime_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 72.0006890296936s cumulative, 0.002865314483642578s individual

.
current test PASSED/SKIPPED -- test_float_converter_malformed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 72.00327515602112s cumulative, 0.0025861263275146484s individual

.
current test PASSED/SKIPPED -- test_int_converter_malformed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 72.00584435462952s cumulative, 0.0025691986083984375s individual

.
current test PASSED/SKIPPED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 72.0087833404541s cumulative, 0.002938985824584961s individual

.
current test PASSED/SKIPPED -- test_float_converter_malformed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 72.01132869720459s cumulative, 0.0025453567504882812s individual

.
current test PASSED/SKIPPED -- test_int_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 72.01439094543457s cumulative, 0.0030622482299804688s individual

.
current test PASSED/SKIPPED -- test_float_converter_non_finite_disallowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 72.01692533493042s cumulative, 0.0025343894958496094s individual

.
current test PASSED/SKIPPED -- test_float_converter_non_finite_allowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 72.01945161819458s cumulative, 0.0025262832641601562s individual

.
current test PASSED/SKIPPED -- test_int_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 72.02247977256775s cumulative, 0.0030281543731689453s individual

.
current test PASSED/SKIPPED -- test_uuid_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 72.02516770362854s cumulative, 0.0026879310607910156s individual

.
current test PASSED/SKIPPED -- test_int_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 72.02821826934814s cumulative, 0.003050565719604492s individual

.
current test PASSED/SKIPPED -- test_float_converter_non_finite_allowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 72.03076791763306s cumulative, 0.0025496482849121094s individual

.
current test PASSED/SKIPPED -- test_int_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 72.03379964828491s cumulative, 0.0030317306518554688s individual

.
current test PASSED/SKIPPED -- test_int_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 72.03685164451599s cumulative, 0.0030519962310791016s individual

.
current test PASSED/SKIPPED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 72.03974986076355s cumulative, 0.0028982162475585938s individual

.
current test PASSED/SKIPPED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 72.04267406463623s cumulative, 0.002924203872680664s individual

.
current test PASSED/SKIPPED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 72.04557847976685s cumulative, 0.0029044151306152344s individual

.
current test PASSED/SKIPPED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 72.04851078987122s cumulative, 0.002932310104370117s individual

.
current test PASSED/SKIPPED -- test_int_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 72.05155277252197s cumulative, 0.003041982650756836s individual

.
current test PASSED/SKIPPED -- test_int_converter_malformed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 72.05408120155334s cumulative, 0.0025284290313720703s individual

.
current test PASSED/SKIPPED -- test_float_converter_malformed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 72.05663061141968s cumulative, 0.002549409866333008s individual

.
current test PASSED/SKIPPED -- test_uuid_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 72.05928492546082s cumulative, 0.0026543140411376953s individual

.
current test PASSED/SKIPPED -- test_datetime_converter_default_format in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 72.0617446899414s cumulative, 0.0024597644805908203s individual

.
current test PASSED/SKIPPED -- test_float_converter_malformed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 72.0643036365509s cumulative, 0.0025589466094970703s individual

.
current test PASSED/SKIPPED -- test_datetime_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 72.06815075874329s cumulative, 0.0038471221923828125s individual

.
current test PASSED/SKIPPED -- test_float_converter_malformed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 72.07069563865662s cumulative, 0.002544879913330078s individual

.
current test PASSED/SKIPPED -- test_int_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 72.07374596595764s cumulative, 0.0030503273010253906s individual

.
current test PASSED/SKIPPED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 72.07665181159973s cumulative, 0.0029058456420898438s individual

.
current test PASSED/SKIPPED -- test_float_converter_malformed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 72.07921695709229s cumulative, 0.002565145492553711s individual

.
current test PASSED/SKIPPED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 72.08214855194092s cumulative, 0.0029315948486328125s individual

.
current test PASSED/SKIPPED -- test_float_converter_non_finite_allowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 72.08470582962036s cumulative, 0.0025572776794433594s individual

.
current test PASSED/SKIPPED -- test_int_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 72.08774876594543s cumulative, 0.003042936325073242s individual

.
current test PASSED/SKIPPED -- test_float_converter_non_finite_allowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 72.0904746055603s cumulative, 0.002725839614868164s individual

.
current test PASSED/SKIPPED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 72.09336757659912s cumulative, 0.0028929710388183594s individual

.
current test PASSED/SKIPPED -- test_uuid_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 72.09603691101074s cumulative, 0.0026693344116210938s individual

.
current test PASSED/SKIPPED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 72.09894466400146s cumulative, 0.0029077529907226562s individual

.
current test PASSED/SKIPPED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 72.10186791419983s cumulative, 0.002923250198364258s individual

.
current test PASSED/SKIPPED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 72.10476517677307s cumulative, 0.0028972625732421875s individual

.
current test PASSED/SKIPPED -- test_datetime_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 72.10763931274414s cumulative, 0.002874135971069336s individual

.
current test PASSED/SKIPPED -- test_int_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 72.1106550693512s cumulative, 0.003015756607055664s individual

.
current test PASSED/SKIPPED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 72.11356377601624s cumulative, 0.0029087066650390625s individual

.
current test PASSED/SKIPPED -- test_int_converter_malformed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 72.11610317230225s cumulative, 0.002539396286010742s individual

.
current test PASSED/SKIPPED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 72.11902022361755s cumulative, 0.002917051315307617s individual

.
current test PASSED/SKIPPED -- test_int_converter_malformed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 72.12157678604126s cumulative, 0.0025565624237060547s individual

.
current test PASSED/SKIPPED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 72.1245813369751s cumulative, 0.0030045509338378906s individual

.
current test PASSED/SKIPPED -- test_datetime_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 72.1274254322052s cumulative, 0.002844095230102539s individual

.
current test PASSED/SKIPPED -- test_int_converter_malformed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 72.1299695968628s cumulative, 0.0025441646575927734s individual

.
current test PASSED/SKIPPED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 72.1329927444458s cumulative, 0.0030231475830078125s individual

.
current test PASSED/SKIPPED -- test_int_converter_malformed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 72.13555264472961s cumulative, 0.0025599002838134766s individual

.
current test PASSED/SKIPPED -- test_int_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 72.1385908126831s cumulative, 0.003038167953491211s individual

.
current test PASSED/SKIPPED -- test_int_converter_malformed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 72.14110779762268s cumulative, 0.0025169849395751953s individual

.
current test PASSED/SKIPPED -- test_uuid_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 72.14391946792603s cumulative, 0.0028116703033447266s individual

.
current test PASSED/SKIPPED -- test_int_converter_malformed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 72.14645171165466s cumulative, 0.0025322437286376953s individual

.
current test PASSED/SKIPPED -- test_int_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 72.1494688987732s cumulative, 0.0030171871185302734s individual

.
current test PASSED/SKIPPED -- test_uuid_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 72.15211915969849s cumulative, 0.0026502609252929688s individual

.
current test PASSED/SKIPPED -- test_int_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 72.15517449378967s cumulative, 0.0030553340911865234s individual

.
current test PASSED/SKIPPED -- test_int_converter_malformed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 72.15773916244507s cumulative, 0.002564668655395508s individual

.
current test PASSED/SKIPPED -- test_float_converter_malformed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 72.16027688980103s cumulative, 0.0025377273559570312s individual

.
current test PASSED/SKIPPED -- test_int_converter_malformed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 72.16282033920288s cumulative, 0.0025434494018554688s individual

.
current test PASSED/SKIPPED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 72.16575646400452s cumulative, 0.002936124801635742s individual

.
current test PASSED/SKIPPED -- test_float_converter_malformed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 72.16827702522278s cumulative, 0.0025205612182617188s individual


tests/test_compiled_router.py .
current test PASSED/SKIPPED -- test_no_compile_kw in /home/kaiyaok2/PythonProjects/falcon/tests/test_compiled_router.py: 72.17211508750916s cumulative, 0.003838062286376953s individual

.
current test PASSED/SKIPPED -- test_no_compile_kw in /home/kaiyaok2/PythonProjects/falcon/tests/test_compiled_router.py: 72.17560482025146s cumulative, 0.0034897327423095703s individual

.
current test PASSED/SKIPPED -- test_compile in /home/kaiyaok2/PythonProjects/falcon/tests/test_compiled_router.py: 72.18151807785034s cumulative, 0.005913257598876953s individual

.
current test PASSED/SKIPPED -- test_find_src in /home/kaiyaok2/PythonProjects/falcon/tests/test_compiled_router.py: 72.18454098701477s cumulative, 0.003022909164428711s individual

.
current test PASSED/SKIPPED -- test_converter_not_subclass in /home/kaiyaok2/PythonProjects/falcon/tests/test_compiled_router.py: 72.18764114379883s cumulative, 0.003100156784057617s individual

.
current test PASSED/SKIPPED -- test_cannot_replace_compiled in /home/kaiyaok2/PythonProjects/falcon/tests/test_compiled_router.py: 72.19049715995789s cumulative, 0.002856016159057617s individual

.
current test PASSED/SKIPPED -- test_no_compile_kw in /home/kaiyaok2/PythonProjects/falcon/tests/test_compiled_router.py: 72.19396710395813s cumulative, 0.0034699440002441406s individual

.
current test PASSED/SKIPPED -- test_no_compile_kw in /home/kaiyaok2/PythonProjects/falcon/tests/test_compiled_router.py: 72.19791007041931s cumulative, 0.003942966461181641s individual

.
current test PASSED/SKIPPED -- test_add_route_after_first_request in /home/kaiyaok2/PythonProjects/falcon/tests/test_compiled_router.py: 72.2013943195343s cumulative, 0.0034842491149902344s individual


tests/test_http_method_routing.py .
current test PASSED/SKIPPED -- test_method_not_allowed_with_param in /home/kaiyaok2/PythonProjects/falcon/tests/test_http_method_routing.py: 72.21895122528076s cumulative, 0.01755690574645996s individual

.
current test PASSED/SKIPPED -- test_put in /home/kaiyaok2/PythonProjects/falcon/tests/test_http_method_routing.py: 72.22681999206543s cumulative, 0.007868766784667969s individual

.
current test PASSED/SKIPPED -- test_method_not_allowed_with_param in /home/kaiyaok2/PythonProjects/falcon/tests/test_http_method_routing.py: 72.24073076248169s cumulative, 0.013910770416259766s individual

.
current test PASSED/SKIPPED -- test_methods_not_allowed_complex in /home/kaiyaok2/PythonProjects/falcon/tests/test_http_method_routing.py: 72.25574707984924s cumulative, 0.015016317367553711s individual

.
current test PASSED/SKIPPED -- test_meta_and_others_disallowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_http_method_routing.py: 72.26069378852844s cumulative, 0.004946708679199219s individual

.
current test PASSED/SKIPPED -- test_get in /home/kaiyaok2/PythonProjects/falcon/tests/test_http_method_routing.py: 72.26783418655396s cumulative, 0.007140398025512695s individual

.
current test PASSED/SKIPPED -- test_on_options in /home/kaiyaok2/PythonProjects/falcon/tests/test_http_method_routing.py: 72.27423453330994s cumulative, 0.006400346755981445s individual

.
current test PASSED/SKIPPED -- test_put in /home/kaiyaok2/PythonProjects/falcon/tests/test_http_method_routing.py: 72.27996730804443s cumulative, 0.00573277473449707s individual

.
current test PASSED/SKIPPED -- test_methods_not_allowed_simple in /home/kaiyaok2/PythonProjects/falcon/tests/test_http_method_routing.py: 72.28663492202759s cumulative, 0.006667613983154297s individual

.
current test PASSED/SKIPPED -- test_post_not_allowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_http_method_routing.py: 72.2925956249237s cumulative, 0.005960702896118164s individual

.
current test PASSED/SKIPPED -- test_post_not_allowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_http_method_routing.py: 72.29857039451599s cumulative, 0.005974769592285156s individual

.
current test PASSED/SKIPPED -- test_meta_and_others_disallowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_http_method_routing.py: 72.30383229255676s cumulative, 0.005261898040771484s individual

.
current test PASSED/SKIPPED -- test_methods_not_allowed_complex in /home/kaiyaok2/PythonProjects/falcon/tests/test_http_method_routing.py: 72.31647300720215s cumulative, 0.012640714645385742s individual

.
current test PASSED/SKIPPED -- test_default_on_options in /home/kaiyaok2/PythonProjects/falcon/tests/test_http_method_routing.py: 72.32218909263611s cumulative, 0.005716085433959961s individual

.
current test PASSED/SKIPPED -- test_meta_and_others_disallowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_http_method_routing.py: 72.3273811340332s cumulative, 0.0051920413970947266s individual

.
current test PASSED/SKIPPED -- test_misc in /home/kaiyaok2/PythonProjects/falcon/tests/test_http_method_routing.py: 72.33393049240112s cumulative, 0.006549358367919922s individual

.
current test PASSED/SKIPPED -- test_methods_not_allowed_simple in /home/kaiyaok2/PythonProjects/falcon/tests/test_http_method_routing.py: 72.34126734733582s cumulative, 0.007336854934692383s individual

.
current test PASSED/SKIPPED -- test_get in /home/kaiyaok2/PythonProjects/falcon/tests/test_http_method_routing.py: 72.34813475608826s cumulative, 0.006867408752441406s individual

.
current test PASSED/SKIPPED -- test_meta_and_others_disallowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_http_method_routing.py: 72.35342454910278s cumulative, 0.005289793014526367s individual

.
current test PASSED/SKIPPED -- test_on_options in /home/kaiyaok2/PythonProjects/falcon/tests/test_http_method_routing.py: 72.35879278182983s cumulative, 0.005368232727050781s individual

.
current test PASSED/SKIPPED -- test_misc in /home/kaiyaok2/PythonProjects/falcon/tests/test_http_method_routing.py: 72.36817407608032s cumulative, 0.009381294250488281s individual

.
current test PASSED/SKIPPED -- test_report in /home/kaiyaok2/PythonProjects/falcon/tests/test_http_method_routing.py: 72.37385392189026s cumulative, 0.0056798458099365234s individual

.
current test PASSED/SKIPPED -- test_default_on_options in /home/kaiyaok2/PythonProjects/falcon/tests/test_http_method_routing.py: 72.37987446784973s cumulative, 0.006020545959472656s individual

.
current test PASSED/SKIPPED -- test_report in /home/kaiyaok2/PythonProjects/falcon/tests/test_http_method_routing.py: 72.38656902313232s cumulative, 0.0066945552825927734s individual


tests/asgi/test_ws.py .
current test PASSED/SKIPPED -- test_media in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.39390707015991s cumulative, 0.007338047027587891s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.39927220344543s cumulative, 0.005365133285522461s individual

.
current test PASSED/SKIPPED -- test_bad_spec_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.4031548500061s cumulative, 0.0038826465606689453s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_middleware in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.40942454338074s cumulative, 0.006269693374633789s individual

.
current test PASSED/SKIPPED -- test_missing_http_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.41290998458862s cumulative, 0.003485441207885742s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_middleware in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.4174234867096s cumulative, 0.00451350212097168s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_response in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.42276287078857s cumulative, 0.005339384078979492s individual

.
current test PASSED/SKIPPED -- test_client_disconnect_uncaught_error in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.42750716209412s cumulative, 0.004744291305541992s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.43214440345764s cumulative, 0.004637241363525391s individual

.
current test PASSED/SKIPPED -- test_subprotocol_bad_type in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.44144058227539s cumulative, 0.009296178817749023s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.44676613807678s cumulative, 0.0053255558013916016s individual

.
current test PASSED/SKIPPED -- test_ws_not_accepted in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.45124316215515s cumulative, 0.004477024078369141s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.45661807060242s cumulative, 0.005374908447265625s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_middleware in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.46147012710571s cumulative, 0.0048520565032958984s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.46641683578491s cumulative, 0.004946708679199219s individual

.
current test PASSED/SKIPPED -- test_accept_with_headers in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.47147679328918s cumulative, 0.005059957504272461s individual

.
current test PASSED/SKIPPED -- test_subprotocol in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.47590613365173s cumulative, 0.004429340362548828s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.4808235168457s cumulative, 0.0049173831939697266s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_middleware in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.48577284812927s cumulative, 0.004949331283569336s individual

.
current test PASSED/SKIPPED -- test_client_disconnect_early in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.49094128608704s cumulative, 0.005168437957763672s individual

.
current test PASSED/SKIPPED -- test_client_disconnect_early in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.4965558052063s cumulative, 0.005614519119262695s individual

.
current test PASSED/SKIPPED -- test_client_disconnect_uncaught_error in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.50146651268005s cumulative, 0.004910707473754883s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.50689959526062s cumulative, 0.005433082580566406s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.5115556716919s cumulative, 0.004656076431274414s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_middleware in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.5165023803711s cumulative, 0.004946708679199219s individual

.
current test PASSED/SKIPPED -- test_send_receive_data in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.52190947532654s cumulative, 0.005407094955444336s individual

.
current test PASSED/SKIPPED -- test_client_disconnect_uncaught_error in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.52661275863647s cumulative, 0.0047032833099365234s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.53129649162292s cumulative, 0.004683732986450195s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.53682708740234s cumulative, 0.005530595779418945s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.54158043861389s cumulative, 0.0047533512115478516s individual

.
current test PASSED/SKIPPED -- test_client_disconnect_uncaught_error in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.54628562927246s cumulative, 0.004705190658569336s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.55170583724976s cumulative, 0.005420207977294922s individual

.
current test PASSED/SKIPPED -- test_bad_http_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.55545735359192s cumulative, 0.003751516342163086s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_response in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.5602023601532s cumulative, 0.004745006561279297s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.56567239761353s cumulative, 0.0054700374603271484s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_response in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.57057762145996s cumulative, 0.004905223846435547s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_middleware in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.57542729377747s cumulative, 0.004849672317504883s individual

.
current test PASSED/SKIPPED -- test_bad_http_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.57920837402344s cumulative, 0.0037810802459716797s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_middleware in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.58494067192078s cumulative, 0.005732297897338867s individual

.
current test PASSED/SKIPPED -- test_accept_with_bad_headers in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.58930492401123s cumulative, 0.0043642520904541016s individual

.
current test PASSED/SKIPPED -- test_ws_simulator_client_require_accepted in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.59359931945801s cumulative, 0.004294395446777344s individual

.
current test PASSED/SKIPPED -- test_subprotocol in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.59868431091309s cumulative, 0.005084991455078125s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.6037425994873s cumulative, 0.00505828857421875s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_response in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.60867381095886s cumulative, 0.004931211471557617s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.61431288719177s cumulative, 0.005639076232910156s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.61925673484802s cumulative, 0.00494384765625s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.6242253780365s cumulative, 0.0049686431884765625s individual

.
current test PASSED/SKIPPED -- test_client_disconnect_uncaught_error in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.63148784637451s cumulative, 0.007262468338012695s individual

.
current test PASSED/SKIPPED -- test_mw_methods_must_be_coroutines in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.63459825515747s cumulative, 0.0031104087829589844s individual

.
current test PASSED/SKIPPED -- test_ws_not_accepted in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.64068102836609s cumulative, 0.006082773208618164s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.64575386047363s cumulative, 0.005072832107543945s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.65085124969482s cumulative, 0.005097389221191406s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_response in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.65559482574463s cumulative, 0.0047435760498046875s individual

.
current test PASSED/SKIPPED -- test_accept_with_headers in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.66005730628967s cumulative, 0.004462480545043945s individual

.
current test PASSED/SKIPPED -- test_responder_raises_unhandled_error in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.66577339172363s cumulative, 0.005716085433959961s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.67092752456665s cumulative, 0.005154132843017578s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.67592811584473s cumulative, 0.005000591278076172s individual

.
current test PASSED/SKIPPED -- test_media in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.68199872970581s cumulative, 0.006070613861083984s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_middleware in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.6868577003479s cumulative, 0.004858970642089844s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.69178223609924s cumulative, 0.0049245357513427734s individual

.
current test PASSED/SKIPPED -- test_client_disconnect_uncaught_error in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.69696116447449s cumulative, 0.005178928375244141s individual

.
current test PASSED/SKIPPED -- test_subprotocol_bad_type in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.70130467414856s cumulative, 0.004343509674072266s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_response in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.70623469352722s cumulative, 0.004930019378662109s individual

.
current test PASSED/SKIPPED -- test_subprotocol_bad_type in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.71091675758362s cumulative, 0.004682064056396484s individual

.
current test PASSED/SKIPPED -- test_bad_first_event in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.71435904502869s cumulative, 0.0034422874450683594s individual

.
current test PASSED/SKIPPED -- test_subprotocol_bad_type in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.71904373168945s cumulative, 0.0046846866607666016s individual

.
current test PASSED/SKIPPED -- test_client_disconnect_early in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.72435307502747s cumulative, 0.005309343338012695s individual

.
current test PASSED/SKIPPED -- test_client_disconnect_early in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.72975444793701s cumulative, 0.0054013729095458984s individual

.
current test PASSED/SKIPPED -- test_accept_with_headers in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.73415994644165s cumulative, 0.004405498504638672s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.73919105529785s cumulative, 0.005031108856201172s individual

.
current test PASSED/SKIPPED -- test_missing_ws_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.74361228942871s cumulative, 0.004421234130859375s individual

.
current test PASSED/SKIPPED -- test_client_disconnect_early in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.74966859817505s cumulative, 0.006056308746337891s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.7547197341919s cumulative, 0.005051136016845703s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.75939774513245s cumulative, 0.004678010940551758s individual

.
current test PASSED/SKIPPED -- test_send_receive_data in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.76452422142029s cumulative, 0.005126476287841797s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.76942038536072s cumulative, 0.0048961639404296875s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.77441120147705s cumulative, 0.004990816116333008s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.78013372421265s cumulative, 0.005722522735595703s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.78503918647766s cumulative, 0.0049054622650146484s individual

.
current test PASSED/SKIPPED -- test_client_disconnect_uncaught_error in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.78982400894165s cumulative, 0.004784822463989258s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.79531478881836s cumulative, 0.005490779876708984s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_middleware in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.79984426498413s cumulative, 0.004529476165771484s individual

.
current test PASSED/SKIPPED -- test_client_disconnect_uncaught_error in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.80465364456177s cumulative, 0.004809379577636719s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.8101897239685s cumulative, 0.005536079406738281s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.8152506351471s cumulative, 0.005060911178588867s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.82040452957153s cumulative, 0.0051538944244384766s individual

.
current test PASSED/SKIPPED -- test_unexpected_param in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.82706046104431s cumulative, 0.00665593147277832s individual

.
current test PASSED/SKIPPED -- test_subprotocol in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.83164763450623s cumulative, 0.0045871734619140625s individual

.
current test PASSED/SKIPPED -- test_ws_base_not_implemented in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.83414459228516s cumulative, 0.002496957778930664s individual

.
current test PASSED/SKIPPED -- test_client_disconnect_uncaught_error in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.83881855010986s cumulative, 0.004673957824707031s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.84374332427979s cumulative, 0.004924774169921875s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.84900760650635s cumulative, 0.0052642822265625s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.8540711402893s cumulative, 0.005063533782958984s individual

.
current test PASSED/SKIPPED -- test_missing_spec_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.85750412940979s cumulative, 0.0034329891204833984s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.86292171478271s cumulative, 0.005417585372924805s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.86800837516785s cumulative, 0.005086660385131836s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.87296223640442s cumulative, 0.004953861236572266s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.8781349658966s cumulative, 0.0051727294921875s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_middleware in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.88265132904053s cumulative, 0.0045163631439208984s individual

.
current test PASSED/SKIPPED -- test_ws_simulator_collect_edge_cases in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.88922691345215s cumulative, 0.006575584411621094s individual

.
current test PASSED/SKIPPED -- test_subprotocol_bad_type in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.8945381641388s cumulative, 0.005311250686645508s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.89947509765625s cumulative, 0.004936933517456055s individual

.
current test PASSED/SKIPPED -- test_bad_spec_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.9031879901886s cumulative, 0.003712892532348633s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_middleware in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.90853834152222s cumulative, 0.005350351333618164s individual

.
current test PASSED/SKIPPED -- test_media in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.91425681114197s cumulative, 0.0057184696197509766s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_middleware in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.91912603378296s cumulative, 0.004869222640991211s individual

.
current test PASSED/SKIPPED -- test_responder_raises_unhandled_error in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.92420315742493s cumulative, 0.0050771236419677734s individual

.
current test PASSED/SKIPPED -- test_client_disconnect_uncaught_error in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.92936372756958s cumulative, 0.00516057014465332s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.93403005599976s cumulative, 0.004666328430175781s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_response in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.93960309028625s cumulative, 0.0055730342864990234s individual

.
current test PASSED/SKIPPED -- test_client_disconnect_early in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.94463038444519s cumulative, 0.005027294158935547s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_response in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.94954085350037s cumulative, 0.004910469055175781s individual

.
current test PASSED/SKIPPED -- test_send_receive_data in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.95442700386047s cumulative, 0.004886150360107422s individual

.
current test PASSED/SKIPPED -- test_accept_with_headers in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.95945239067078s cumulative, 0.005025386810302734s individual

.
current test PASSED/SKIPPED -- test_subprotocol_bad_type in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.96417140960693s cumulative, 0.0047190189361572266s individual

.
current test PASSED/SKIPPED -- test_accept_with_bad_headers in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.96850538253784s cumulative, 0.004333972930908203s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.97394275665283s cumulative, 0.005437374114990234s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.97858333587646s cumulative, 0.0046405792236328125s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_response in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.98347163200378s cumulative, 0.004888296127319336s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.9888699054718s cumulative, 0.005398273468017578s individual

.
current test PASSED/SKIPPED -- test_send_receive_wrong_type in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.99345517158508s cumulative, 0.00458526611328125s individual

.
current test PASSED/SKIPPED -- test_media in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 72.99917387962341s cumulative, 0.005718708038330078s individual

.
current test PASSED/SKIPPED -- test_accept_with_bad_headers in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 73.00353288650513s cumulative, 0.004359006881713867s individual

.
current test PASSED/SKIPPED -- test_client_disconnect_uncaught_error in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 73.00853276252747s cumulative, 0.004999876022338867s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_response in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 73.01329302787781s cumulative, 0.004760265350341797s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 73.01793336868286s cumulative, 0.004640340805053711s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_middleware in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 73.0251235961914s cumulative, 0.007190227508544922s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 73.03008818626404s cumulative, 0.004964590072631836s individual

.
current test PASSED/SKIPPED -- test_accept_with_headers in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 73.03456401824951s cumulative, 0.004475831985473633s individual

.
current test PASSED/SKIPPED -- test_accept_with_headers in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 73.03908896446228s cumulative, 0.004524946212768555s individual

.
current test PASSED/SKIPPED -- test_accept_with_headers in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 74.38186240196228s cumulative, 1.3427734375s individual

.
current test PASSED/SKIPPED -- test_bad_spec_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 74.38653087615967s cumulative, 0.004668474197387695s individual

.
current test PASSED/SKIPPED -- test_client_disconnect_early in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 74.393639087677s cumulative, 0.007108211517333984s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_response in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 74.39897537231445s cumulative, 0.005336284637451172s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 74.4039580821991s cumulative, 0.004982709884643555s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 74.40948605537415s cumulative, 0.005527973175048828s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_middleware in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 74.41433501243591s cumulative, 0.004848957061767578s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_middleware in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 74.41897487640381s cumulative, 0.004639863967895508s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 74.4248161315918s cumulative, 0.005841255187988281s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 74.43000960350037s cumulative, 0.005193471908569336s individual

.
current test PASSED/SKIPPED -- test_bad_spec_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 74.43375134468079s cumulative, 0.003741741180419922s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 74.43963432312012s cumulative, 0.005882978439331055s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_response in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 74.44444966316223s cumulative, 0.004815340042114258s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 74.44955825805664s cumulative, 0.00510859489440918s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_response in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 74.45483779907227s cumulative, 0.005279541015625s individual

.
current test PASSED/SKIPPED -- test_accept_with_headers_not_supported in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 74.45912528038025s cumulative, 0.0042874813079833984s individual

.
current test PASSED/SKIPPED -- test_send_receive_data in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 74.46403622627258s cumulative, 0.004910945892333984s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_response in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 74.46933317184448s cumulative, 0.005296945571899414s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 74.47400140762329s cumulative, 0.004668235778808594s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 74.47916865348816s cumulative, 0.005167245864868164s individual

.
current test PASSED/SKIPPED -- test_path_not_found in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 74.48371243476868s cumulative, 0.004543781280517578s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_response in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 74.48862600326538s cumulative, 0.0049135684967041016s individual

.
current test PASSED/SKIPPED -- test_client_disconnect_uncaught_error in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 74.49336266517639s cumulative, 0.004736661911010742s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_middleware in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 74.49795627593994s cumulative, 0.004593610763549805s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 74.5035171508789s cumulative, 0.005560874938964844s individual

.
current test PASSED/SKIPPED -- test_client_disconnect_early in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 74.50948333740234s cumulative, 0.0059661865234375s individual

.
current test PASSED/SKIPPED -- test_translate_webserver_error in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 74.51376867294312s cumulative, 0.004285335540771484s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 74.51906681060791s cumulative, 0.005298137664794922s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 74.52404117584229s cumulative, 0.004974365234375s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_response in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 74.5289032459259s cumulative, 0.004862070083618164s individual

.
current test PASSED/SKIPPED -- test_subprotocol in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 74.53387260437012s cumulative, 0.004969358444213867s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 74.53898048400879s cumulative, 0.005107879638671875s individual

s.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 74.54368448257446s cumulative, 0.004703998565673828s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 74.54934453964233s cumulative, 0.005660057067871094s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 74.55400824546814s cumulative, 0.004663705825805664s individual

.
current test PASSED/SKIPPED -- test_client_disconnect_uncaught_error in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 74.55889940261841s cumulative, 0.004891157150268555s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 74.56705260276794s cumulative, 0.008153200149536133s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 74.57231879234314s cumulative, 0.0052661895751953125s individual


tests/test_deps.py .
current test PASSED/SKIPPED -- test_deps_mimeparse_correct_package in /home/kaiyaok2/PythonProjects/falcon/tests/test_deps.py: 74.57481217384338s cumulative, 0.0024933815002441406s individual


tests/asgi/test_testing_asgi.py .
current test PASSED/SKIPPED -- test_asgi_request_event_emitter_hang in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_testing_asgi.py: 75.57801389694214s cumulative, 1.0032017230987549s individual


tests/test_media_urlencoded.py .
current test PASSED/SKIPPED -- test_urlencoded_form in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_urlencoded.py: 75.58495497703552s cumulative, 0.006941080093383789s individual

.
current test PASSED/SKIPPED -- test_urlencoded_form in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_urlencoded.py: 75.5895848274231s cumulative, 0.004629850387573242s individual

.
current test PASSED/SKIPPED -- test_urlencoded_form in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_urlencoded.py: 75.59437775611877s cumulative, 0.004792928695678711s individual

.
current test PASSED/SKIPPED -- test_urlencoded_form in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_urlencoded.py: 75.59903883934021s cumulative, 0.004661083221435547s individual

.
current test PASSED/SKIPPED -- test_urlencoded_form in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_urlencoded.py: 75.60415530204773s cumulative, 0.005116462707519531s individual

.
current test PASSED/SKIPPED -- test_urlencoded_form in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_urlencoded.py: 75.60864210128784s cumulative, 0.004486799240112305s individual

.
current test PASSED/SKIPPED -- test_urlencoded_form_handler_serialize in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_urlencoded.py: 75.6115972995758s cumulative, 0.002955198287963867s individual

.
current test PASSED/SKIPPED -- test_urlencoded_form in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_urlencoded.py: 75.61603927612305s cumulative, 0.004441976547241211s individual

.
current test PASSED/SKIPPED -- test_urlencoded_form in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_urlencoded.py: 75.62041854858398s cumulative, 0.0043792724609375s individual

.
current test PASSED/SKIPPED -- test_empty_form in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_urlencoded.py: 75.62448954582214s cumulative, 0.00407099723815918s individual

.
current test PASSED/SKIPPED -- test_empty_form in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_urlencoded.py: 75.62911176681519s cumulative, 0.004622220993041992s individual

.
current test PASSED/SKIPPED -- test_deserialize_invalid_unicode in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_urlencoded.py: 75.6317446231842s cumulative, 0.0026328563690185547s individual

.
current test PASSED/SKIPPED -- test_deserialize_empty_form in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_urlencoded.py: 75.63419198989868s cumulative, 0.002447366714477539s individual

.
current test PASSED/SKIPPED -- test_urlencoded_form_handler_serialize in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_urlencoded.py: 75.63704752922058s cumulative, 0.002855539321899414s individual

.
current test PASSED/SKIPPED -- test_urlencoded_form in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_urlencoded.py: 75.64161348342896s cumulative, 0.0045659542083740234s individual

.
current test PASSED/SKIPPED -- test_urlencoded_form in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_urlencoded.py: 75.64604496955872s cumulative, 0.004431486129760742s individual


tests/test_sink_and_static.py .
current test PASSED/SKIPPED -- test_sink_before_static_route in /home/kaiyaok2/PythonProjects/falcon/tests/test_sink_and_static.py: 75.6540777683258s cumulative, 0.008032798767089844s individual

.
current test PASSED/SKIPPED -- test_sink_before_static_route in /home/kaiyaok2/PythonProjects/falcon/tests/test_sink_and_static.py: 75.66000699996948s cumulative, 0.005929231643676758s individual

.
current test PASSED/SKIPPED -- test_sink_after_static_route in /home/kaiyaok2/PythonProjects/falcon/tests/test_sink_and_static.py: 75.66991543769836s cumulative, 0.009908437728881836s individual

.
current test PASSED/SKIPPED -- test_sink_after_static_route in /home/kaiyaok2/PythonProjects/falcon/tests/test_sink_and_static.py: 75.67553687095642s cumulative, 0.005621433258056641s individual


tests/asgi/test_scheduled_callbacks.py .
current test PASSED/SKIPPED -- test_multiple in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scheduled_callbacks.py: 76.18567657470703s cumulative, 0.5101397037506104s individual


tests/test_static.py .
current test PASSED/SKIPPED -- test_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.1940245628357s cumulative, 0.00834798812866211s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.19754266738892s cumulative, 0.0035181045532226562s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.20089411735535s cumulative, 0.003351449966430664s individual

.
current test PASSED/SKIPPED -- test_bad_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.20550203323364s cumulative, 0.0046079158782958984s individual

.
current test PASSED/SKIPPED -- test_match in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.20866250991821s cumulative, 0.0031604766845703125s individual

.
current test PASSED/SKIPPED -- test_invalid_args_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.21236371994019s cumulative, 0.0037012100219726562s individual

.
current test PASSED/SKIPPED -- test_bad_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.21753334999084s cumulative, 0.00516963005065918s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.22086334228516s cumulative, 0.0033299922943115234s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.22427940368652s cumulative, 0.0034160614013671875s individual

.
current test PASSED/SKIPPED -- test_e2e_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.22978854179382s cumulative, 0.005509138107299805s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.23311758041382s cumulative, 0.003329038619995117s individual

.
current test PASSED/SKIPPED -- test_invalid_args in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.23644733428955s cumulative, 0.003329753875732422s individual

.
current test PASSED/SKIPPED -- test_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.2417414188385s cumulative, 0.005294084548950195s individual

.
current test PASSED/SKIPPED -- test_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.24574899673462s cumulative, 0.004007577896118164s individual

.
current test PASSED/SKIPPED -- test_bad_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.25030088424683s cumulative, 0.004551887512207031s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.2537477016449s cumulative, 0.003446817398071289s individual

.
current test PASSED/SKIPPED -- test_match in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.25686383247375s cumulative, 0.003116130828857422s individual

.
current test PASSED/SKIPPED -- test_e2e_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.26474738121033s cumulative, 0.007883548736572266s individual

.
current test PASSED/SKIPPED -- test_e2e_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.27014827728271s cumulative, 0.005400896072387695s individual

.
current test PASSED/SKIPPED -- test_e2e_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.27700281143188s cumulative, 0.006854534149169922s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.28041934967041s cumulative, 0.0034165382385253906s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.28369665145874s cumulative, 0.003277301788330078s individual

.
current test PASSED/SKIPPED -- test_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.28764462471008s cumulative, 0.0039479732513427734s individual

.
current test PASSED/SKIPPED -- test_good_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.29183506965637s cumulative, 0.0041904449462890625s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.2951226234436s cumulative, 0.0032875537872314453s individual

.
current test PASSED/SKIPPED -- test_invalid_args_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.29848194122314s cumulative, 0.0033593177795410156s individual

.
current test PASSED/SKIPPED -- test_good_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.30296730995178s cumulative, 0.004485368728637695s individual

.
current test PASSED/SKIPPED -- test_range_request_zero_length in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.30744433403015s cumulative, 0.004477024078369141s individual

.
current test PASSED/SKIPPED -- test_e2e_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.31276059150696s cumulative, 0.005316257476806641s individual

.
current test PASSED/SKIPPED -- test_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.31775212287903s cumulative, 0.0049915313720703125s individual

.
current test PASSED/SKIPPED -- test_bad_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.32247805595398s cumulative, 0.004725933074951172s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.32584595680237s cumulative, 0.003367900848388672s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.32910490036011s cumulative, 0.003258943557739258s individual

.
current test PASSED/SKIPPED -- test_bad_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.33370184898376s cumulative, 0.0045969486236572266s individual

.
current test PASSED/SKIPPED -- test_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.33870124816895s cumulative, 0.004999399185180664s individual

.
current test PASSED/SKIPPED -- test_e2e_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.34595012664795s cumulative, 0.007248878479003906s individual

.
current test PASSED/SKIPPED -- test_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.34999752044678s cumulative, 0.004047393798828125s individual

.
current test PASSED/SKIPPED -- test_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.35470271110535s cumulative, 0.004705190658569336s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.35812568664551s cumulative, 0.003422975540161133s individual

.
current test PASSED/SKIPPED -- test_downloadable_not_found in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.36230278015137s cumulative, 0.004177093505859375s individual

.
current test PASSED/SKIPPED -- test_match in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.36544823646545s cumulative, 0.003145456314086914s individual

.
current test PASSED/SKIPPED -- test_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.37237548828125s cumulative, 0.0069272518157958984s individual

.
current test PASSED/SKIPPED -- test_match in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.37552237510681s cumulative, 0.0031468868255615234s individual

.
current test PASSED/SKIPPED -- test_file_closed in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.37975454330444s cumulative, 0.004232168197631836s individual

.
current test PASSED/SKIPPED -- test_bad_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.38437342643738s cumulative, 0.00461888313293457s individual

.
current test PASSED/SKIPPED -- test_lifo in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.38907241821289s cumulative, 0.004698991775512695s individual

.
current test PASSED/SKIPPED -- test_bad_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.39379215240479s cumulative, 0.004719734191894531s individual

.
current test PASSED/SKIPPED -- test_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.40100979804993s cumulative, 0.0072176456451416016s individual

.
current test PASSED/SKIPPED -- test_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.40496897697449s cumulative, 0.003959178924560547s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.40839624404907s cumulative, 0.003427267074584961s individual

.
current test PASSED/SKIPPED -- test_filesystem_traversal_fuse in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.4125304222107s cumulative, 0.004134178161621094s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.4160041809082s cumulative, 0.0034737586975097656s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.41974997520447s cumulative, 0.0037457942962646484s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.42306566238403s cumulative, 0.0033156871795654297s individual

.
current test PASSED/SKIPPED -- test_good_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.42771172523499s cumulative, 0.0046460628509521484s individual

.
current test PASSED/SKIPPED -- test_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.43230867385864s cumulative, 0.0045969486236572266s individual

.
current test PASSED/SKIPPED -- test_good_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.43667554855347s cumulative, 0.004366874694824219s individual

.
current test PASSED/SKIPPED -- test_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.44067716598511s cumulative, 0.004001617431640625s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.4441306591034s cumulative, 0.003453493118286133s individual

.
current test PASSED/SKIPPED -- test_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.45280194282532s cumulative, 0.008671283721923828s individual

.
current test PASSED/SKIPPED -- test_invalid_args in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.45626854896545s cumulative, 0.0034666061401367188s individual

.
current test PASSED/SKIPPED -- test_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.4610812664032s cumulative, 0.004812717437744141s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.46443176269531s cumulative, 0.003350496292114258s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.4678258895874s cumulative, 0.0033941268920898438s individual

.
current test PASSED/SKIPPED -- test_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.47320675849915s cumulative, 0.005380868911743164s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.4765408039093s cumulative, 0.00333404541015625s individual

.
current test PASSED/SKIPPED -- test_range_request_zero_length in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.48203444480896s cumulative, 0.005493640899658203s individual

.
current test PASSED/SKIPPED -- test_good_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.4865026473999s cumulative, 0.004468202590942383s individual

.
current test PASSED/SKIPPED -- test_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.49113392829895s cumulative, 0.0046312808990478516s individual

.
current test PASSED/SKIPPED -- test_range_request_zero_length in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.49689602851868s cumulative, 0.0057621002197265625s individual

.
current test PASSED/SKIPPED -- test_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.50177240371704s cumulative, 0.004876375198364258s individual

.
current test PASSED/SKIPPED -- test_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.50654125213623s cumulative, 0.004768848419189453s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.50985431671143s cumulative, 0.0033130645751953125s individual

.
current test PASSED/SKIPPED -- test_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.51387023925781s cumulative, 0.004015922546386719s individual

.
current test PASSED/SKIPPED -- test_bad_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.51866269111633s cumulative, 0.004792451858520508s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.5225088596344s cumulative, 0.0038461685180664062s individual

.
current test PASSED/SKIPPED -- test_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.5272011756897s cumulative, 0.0046923160552978516s individual

.
current test PASSED/SKIPPED -- test_e2e_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.53447461128235s cumulative, 0.007273435592651367s individual

.
current test PASSED/SKIPPED -- test_good_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.53895235061646s cumulative, 0.004477739334106445s individual

.
current test PASSED/SKIPPED -- test_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.5437958240509s cumulative, 0.004843473434448242s individual

.
current test PASSED/SKIPPED -- test_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.54891204833984s cumulative, 0.00511622428894043s individual

.
current test PASSED/SKIPPED -- test_lifo_negative in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.55684113502502s cumulative, 0.007929086685180664s individual

.
current test PASSED/SKIPPED -- test_bad_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.56138634681702s cumulative, 0.0045452117919921875s individual

.
current test PASSED/SKIPPED -- test_invalid_args in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.564945936203s cumulative, 0.003559589385986328s individual

.
current test PASSED/SKIPPED -- test_e2e_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.57033109664917s cumulative, 0.005385160446166992s individual

.
current test PASSED/SKIPPED -- test_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.57719373703003s cumulative, 0.006862640380859375s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.58064317703247s cumulative, 0.0034494400024414062s individual

.
current test PASSED/SKIPPED -- test_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.5846176147461s cumulative, 0.003974437713623047s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.5879077911377s cumulative, 0.0032901763916015625s individual

.
current test PASSED/SKIPPED -- test_e2e_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.59336829185486s cumulative, 0.005460500717163086s individual

.
current test PASSED/SKIPPED -- test_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.59769177436829s cumulative, 0.004323482513427734s individual

.
current test PASSED/SKIPPED -- test_match in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.60084962844849s cumulative, 0.0031578540802001953s individual

.
current test PASSED/SKIPPED -- test_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.60562825202942s cumulative, 0.004778623580932617s individual

.
current test PASSED/SKIPPED -- test_match in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.60874438285828s cumulative, 0.003116130828857422s individual

.
current test PASSED/SKIPPED -- test_e2e_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.6141152381897s cumulative, 0.0053708553314208984s individual

.
current test PASSED/SKIPPED -- test_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.6203122138977s cumulative, 0.0061969757080078125s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.62381553649902s cumulative, 0.0035033226013183594s individual

.
current test PASSED/SKIPPED -- test_good_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.62859106063843s cumulative, 0.004775524139404297s individual

.
current test PASSED/SKIPPED -- test_lifo in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.63618087768555s cumulative, 0.007589817047119141s individual

.
current test PASSED/SKIPPED -- test_e2e_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.64306044578552s cumulative, 0.006879568099975586s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.64650368690491s cumulative, 0.0034432411193847656s individual

.
current test PASSED/SKIPPED -- test_match in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.64962124824524s cumulative, 0.0031175613403320312s individual

.
current test PASSED/SKIPPED -- test_downloadable in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.65972781181335s cumulative, 0.010106563568115234s individual

.
current test PASSED/SKIPPED -- test_e2e_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.6653699874878s cumulative, 0.0056421756744384766s individual

.
current test PASSED/SKIPPED -- test_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.66941976547241s cumulative, 0.004049777984619141s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.67270159721375s cumulative, 0.003281831741333008s individual

.
current test PASSED/SKIPPED -- test_good_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.67648696899414s cumulative, 0.003785371780395508s individual

.
current test PASSED/SKIPPED -- test_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.68333554267883s cumulative, 0.006848573684692383s individual

.
current test PASSED/SKIPPED -- test_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.68799591064453s cumulative, 0.004660367965698242s individual

.
current test PASSED/SKIPPED -- test_bad_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.6925630569458s cumulative, 0.004567146301269531s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.69597220420837s cumulative, 0.003409147262573242s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.70012021064758s cumulative, 0.004148006439208984s individual

.
current test PASSED/SKIPPED -- test_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.70928382873535s cumulative, 0.009163618087768555s individual

.
current test PASSED/SKIPPED -- test_good_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.71314477920532s cumulative, 0.003860950469970703s individual

.
current test PASSED/SKIPPED -- test_match in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.71623945236206s cumulative, 0.0030946731567382812s individual

.
current test PASSED/SKIPPED -- test_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.72229743003845s cumulative, 0.0060579776763916016s individual

.
current test PASSED/SKIPPED -- test_match in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.72547745704651s cumulative, 0.0031800270080566406s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.72897696495056s cumulative, 0.0034995079040527344s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.73236131668091s cumulative, 0.0033843517303466797s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.73564100265503s cumulative, 0.0032796859741210938s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.7393205165863s cumulative, 0.003679513931274414s individual

.
current test PASSED/SKIPPED -- test_good_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.74308276176453s cumulative, 0.0037622451782226562s individual

.
current test PASSED/SKIPPED -- test_invalid_args in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.74661326408386s cumulative, 0.0035305023193359375s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.75002551078796s cumulative, 0.0034122467041015625s individual

.
current test PASSED/SKIPPED -- test_match in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.75330805778503s cumulative, 0.0032825469970703125s individual

.
current test PASSED/SKIPPED -- test_invalid_args in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.75681734085083s cumulative, 0.0035092830657958984s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.76017808914185s cumulative, 0.003360748291015625s individual

.
current test PASSED/SKIPPED -- test_range_request_zero_length in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.76490449905396s cumulative, 0.004726409912109375s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.76850032806396s cumulative, 0.0035958290100097656s individual

.
current test PASSED/SKIPPED -- test_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.77249598503113s cumulative, 0.003995656967163086s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.77577710151672s cumulative, 0.003281116485595703s individual

.
current test PASSED/SKIPPED -- test_invalid_args_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.7792854309082s cumulative, 0.003508329391479492s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.78254723548889s cumulative, 0.0032618045806884766s individual

.
current test PASSED/SKIPPED -- test_e2e_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.79025673866272s cumulative, 0.007709503173828125s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.79373216629028s cumulative, 0.0034754276275634766s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.7970540523529s cumulative, 0.0033218860626220703s individual

.
current test PASSED/SKIPPED -- test_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.8010630607605s cumulative, 0.0040090084075927734s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.80444955825806s cumulative, 0.0033864974975585938s individual

.
current test PASSED/SKIPPED -- test_e2e_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.81029987335205s cumulative, 0.005850315093994141s individual

.
current test PASSED/SKIPPED -- test_invalid_args in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.81385207176208s cumulative, 0.0035521984100341797s individual

.
current test PASSED/SKIPPED -- test_bad_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.81841611862183s cumulative, 0.004564046859741211s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.82237386703491s cumulative, 0.0039577484130859375s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.82568287849426s cumulative, 0.003309011459350586s individual

.
current test PASSED/SKIPPED -- test_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.83251309394836s cumulative, 0.0068302154541015625s individual

.
current test PASSED/SKIPPED -- test_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.837082862854s cumulative, 0.0045697689056396484s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.84039688110352s cumulative, 0.0033140182495117188s individual

.
current test PASSED/SKIPPED -- test_range_request_zero_length in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.84470582008362s cumulative, 0.004308938980102539s individual

.
current test PASSED/SKIPPED -- test_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.85095691680908s cumulative, 0.006251096725463867s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.85429573059082s cumulative, 0.0033388137817382812s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.8578519821167s cumulative, 0.0035562515258789062s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.861252784729s cumulative, 0.0034008026123046875s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.86460876464844s cumulative, 0.0033559799194335938s individual

.
current test PASSED/SKIPPED -- test_downloadable in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.86963558197021s cumulative, 0.005026817321777344s individual

.
current test PASSED/SKIPPED -- test_match in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.87276315689087s cumulative, 0.003127574920654297s individual

.
current test PASSED/SKIPPED -- test_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.87810111045837s cumulative, 0.005337953567504883s individual

.
current test PASSED/SKIPPED -- test_match in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.88121485710144s cumulative, 0.0031137466430664062s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.88461136817932s cumulative, 0.0033965110778808594s individual

.
current test PASSED/SKIPPED -- test_range_request_zero_length in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.88995456695557s cumulative, 0.005343198776245117s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.89328718185425s cumulative, 0.0033326148986816406s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.8966703414917s cumulative, 0.003383159637451172s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.90050268173218s cumulative, 0.0038323402404785156s individual

.
current test PASSED/SKIPPED -- test_e2e_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.90752172470093s cumulative, 0.00701904296875s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.91101121902466s cumulative, 0.0034894943237304688s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.9144811630249s cumulative, 0.0034699440002441406s individual

.
current test PASSED/SKIPPED -- test_bad_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.91965794563293s cumulative, 0.0051767826080322266s individual

.
current test PASSED/SKIPPED -- test_range_request_zero_length in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.92395830154419s cumulative, 0.004300355911254883s individual

.
current test PASSED/SKIPPED -- test_bad_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.92843556404114s cumulative, 0.004477262496948242s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.93172240257263s cumulative, 0.0032868385314941406s individual

.
current test PASSED/SKIPPED -- test_range_request_zero_length in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.9371976852417s cumulative, 0.005475282669067383s individual

.
current test PASSED/SKIPPED -- test_e2e_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.9431140422821s cumulative, 0.0059163570404052734s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.94651508331299s cumulative, 0.003401041030883789s individual

.
current test PASSED/SKIPPED -- test_good_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.9502546787262s cumulative, 0.003739595413208008s individual

.
current test PASSED/SKIPPED -- test_good_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.95394325256348s cumulative, 0.0036885738372802734s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.95732975006104s cumulative, 0.0033864974975585938s individual

.
current test PASSED/SKIPPED -- test_bad_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.9623281955719s cumulative, 0.004998445510864258s individual

.
current test PASSED/SKIPPED -- test_invalid_args_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.96565413475037s cumulative, 0.003325939178466797s individual

.
current test PASSED/SKIPPED -- test_bad_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.97014856338501s cumulative, 0.004494428634643555s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.9737868309021s cumulative, 0.0036382675170898438s individual

.
current test PASSED/SKIPPED -- test_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.97873187065125s cumulative, 0.004945039749145508s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.9839301109314s cumulative, 0.005198240280151367s individual

.
current test PASSED/SKIPPED -- test_good_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.98846387863159s cumulative, 0.0045337677001953125s individual

.
current test PASSED/SKIPPED -- test_range_request_zero_length in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.99403500556946s cumulative, 0.005571126937866211s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 76.99738049507141s cumulative, 0.003345489501953125s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.000812292099s cumulative, 0.0034317970275878906s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.00416231155396s cumulative, 0.0033500194549560547s individual

.
current test PASSED/SKIPPED -- test_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.00934052467346s cumulative, 0.005178213119506836s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.012766122818s cumulative, 0.00342559814453125s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.01605725288391s cumulative, 0.0032911300659179688s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.01933264732361s cumulative, 0.0032753944396972656s individual

.
current test PASSED/SKIPPED -- test_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.02327561378479s cumulative, 0.003942966461181641s individual

.
current test PASSED/SKIPPED -- test_good_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.0269844532013s cumulative, 0.0037088394165039062s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.03070950508118s cumulative, 0.0037250518798828125s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.03407645225525s cumulative, 0.0033669471740722656s individual

.
current test PASSED/SKIPPED -- test_good_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.03853058815002s cumulative, 0.004454135894775391s individual

.
current test PASSED/SKIPPED -- test_invalid_args_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.04199576377869s cumulative, 0.0034651756286621094s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.04543113708496s cumulative, 0.003435373306274414s individual

.
current test PASSED/SKIPPED -- test_invalid_args_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.04888939857483s cumulative, 0.003458261489868164s individual

.
current test PASSED/SKIPPED -- test_good_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.05305743217468s cumulative, 0.004168033599853516s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.05631279945374s cumulative, 0.0032553672790527344s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.05954933166504s cumulative, 0.003236532211303711s individual

.
current test PASSED/SKIPPED -- test_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.06411123275757s cumulative, 0.004561901092529297s individual

.
current test PASSED/SKIPPED -- test_bounded_file_wrapper in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.06660580635071s cumulative, 0.0024945735931396484s individual

.
current test PASSED/SKIPPED -- test_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.07305240631104s cumulative, 0.0064465999603271484s individual

.
current test PASSED/SKIPPED -- test_bad_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.07770848274231s cumulative, 0.004656076431274414s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.0814700126648s cumulative, 0.0037615299224853516s individual

.
current test PASSED/SKIPPED -- test_e2e_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.0899510383606s cumulative, 0.008481025695800781s individual

.
current test PASSED/SKIPPED -- test_e2e_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.09818482398987s cumulative, 0.008233785629272461s individual

.
current test PASSED/SKIPPED -- test_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.10278248786926s cumulative, 0.004597663879394531s individual

.
current test PASSED/SKIPPED -- test_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.10679841041565s cumulative, 0.004015922546386719s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.11009049415588s cumulative, 0.003292083740234375s individual

.
current test PASSED/SKIPPED -- test_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.11532711982727s cumulative, 0.005236625671386719s individual

.
current test PASSED/SKIPPED -- test_downloadable_not_found in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.11930584907532s cumulative, 0.003978729248046875s individual

.
current test PASSED/SKIPPED -- test_pathlib_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.1225836277008s cumulative, 0.0032777786254882812s individual

.
current test PASSED/SKIPPED -- test_range_request_zero_length in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.12787866592407s cumulative, 0.0052950382232666016s individual

.
current test PASSED/SKIPPED -- test_range_request_zero_length in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.13360404968262s cumulative, 0.005725383758544922s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.13708758354187s cumulative, 0.0034835338592529297s individual

.
current test PASSED/SKIPPED -- test_invalid_args in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.14090967178345s cumulative, 0.0038220882415771484s individual

.
current test PASSED/SKIPPED -- test_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.14559698104858s cumulative, 0.004687309265136719s individual

.
current test PASSED/SKIPPED -- test_pathlib_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.14968514442444s cumulative, 0.004088163375854492s individual

.
current test PASSED/SKIPPED -- test_file_closed in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.15523529052734s cumulative, 0.0055501461029052734s individual

.
current test PASSED/SKIPPED -- test_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.16165113449097s cumulative, 0.006415843963623047s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.16501975059509s cumulative, 0.0033686161041259766s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.16874122619629s cumulative, 0.003721475601196289s individual

.
current test PASSED/SKIPPED -- test_e2e_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.17411947250366s cumulative, 0.005378246307373047s individual

.
current test PASSED/SKIPPED -- test_good_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.17858815193176s cumulative, 0.004468679428100586s individual

.
current test PASSED/SKIPPED -- test_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.18323707580566s cumulative, 0.004648923873901367s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.18654704093933s cumulative, 0.003309965133666992s individual

.
current test PASSED/SKIPPED -- test_bad_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.19176506996155s cumulative, 0.005218029022216797s individual

.
current test PASSED/SKIPPED -- test_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.19820499420166s cumulative, 0.006439924240112305s individual

.
current test PASSED/SKIPPED -- test_range_request_zero_length in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.20253920555115s cumulative, 0.004334211349487305s individual

.
current test PASSED/SKIPPED -- test_filesystem_traversal_fuse in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.20665693283081s cumulative, 0.004117727279663086s individual

.
current test PASSED/SKIPPED -- test_good_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.21122241020203s cumulative, 0.00456547737121582s individual

.
current test PASSED/SKIPPED -- test_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.21521401405334s cumulative, 0.003991603851318359s individual

.
current test PASSED/SKIPPED -- test_match in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.21831822395325s cumulative, 0.0031042098999023438s individual

.
current test PASSED/SKIPPED -- test_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.22471046447754s cumulative, 0.006392240524291992s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.22805047035217s cumulative, 0.003340005874633789s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.2313437461853s cumulative, 0.003293275833129883s individual

.
current test PASSED/SKIPPED -- test_match in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.234459400177s cumulative, 0.0031156539916992188s individual

.
current test PASSED/SKIPPED -- test_lifo_negative in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.23959994316101s cumulative, 0.005140542984008789s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.24305629730225s cumulative, 0.0034563541412353516s individual

.
current test PASSED/SKIPPED -- test_bad_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.24799799919128s cumulative, 0.004941701889038086s individual

.
current test PASSED/SKIPPED -- test_good_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.25174689292908s cumulative, 0.0037488937377929688s individual

.
current test PASSED/SKIPPED -- test_invalid_args in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.25508093833923s cumulative, 0.00333404541015625s individual

.
current test PASSED/SKIPPED -- test_match in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.2581958770752s cumulative, 0.003114938735961914s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.26145672798157s cumulative, 0.0032608509063720703s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.26480436325073s cumulative, 0.003347635269165039s individual

.
current test PASSED/SKIPPED -- test_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.26988315582275s cumulative, 0.005078792572021484s individual

.
current test PASSED/SKIPPED -- test_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.27447986602783s cumulative, 0.004596710205078125s individual

.
current test PASSED/SKIPPED -- test_good_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.27819442749023s cumulative, 0.0037145614624023438s individual

.
current test PASSED/SKIPPED -- test_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.28297901153564s cumulative, 0.004784584045410156s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.28639316558838s cumulative, 0.003414154052734375s individual

.
current test PASSED/SKIPPED -- test_range_request_zero_length in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.2920081615448s cumulative, 0.0056149959564208984s individual

.
current test PASSED/SKIPPED -- test_e2e_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.29767060279846s cumulative, 0.005662441253662109s individual

.
current test PASSED/SKIPPED -- test_match in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.30080461502075s cumulative, 0.003134012222290039s individual

.
current test PASSED/SKIPPED -- test_range_request_zero_length in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 77.30521750450134s cumulative, 0.00441288948059082s individual


tests/asgi/test_buffered_reader.py .
current test PASSED/SKIPPED -- test_read_until_shared_boundary in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.30814528465271s cumulative, 0.0029277801513671875s individual

.
current test PASSED/SKIPPED -- test_read_until_shared_boundary in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.31089377403259s cumulative, 0.0027484893798828125s individual

.
current test PASSED/SKIPPED -- test_invalid_delimiter_length in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.31366324424744s cumulative, 0.00276947021484375s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.31699061393738s cumulative, 0.0033273696899414062s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.3214340209961s cumulative, 0.00444340705871582s individual

.
current test PASSED/SKIPPED -- test_peek in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.32430386543274s cumulative, 0.002869844436645508s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.32769274711609s cumulative, 0.0033888816833496094s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.33118796348572s cumulative, 0.0034952163696289062s individual

.
current test PASSED/SKIPPED -- test_read_until_shared_boundary in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.33392333984375s cumulative, 0.0027353763580322266s individual

.
current test PASSED/SKIPPED -- test_read in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.33711171150208s cumulative, 0.0031883716583251953s individual

.
current test PASSED/SKIPPED -- test_readall in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.33995056152344s cumulative, 0.0028388500213623047s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.34336447715759s cumulative, 0.0034139156341552734s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.34673309326172s cumulative, 0.0033686161041259766s individual

.
current test PASSED/SKIPPED -- test_read_until_shared_boundary in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.34944295883179s cumulative, 0.0027098655700683594s individual

.
current test PASSED/SKIPPED -- test_read_until_shared_boundary in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.35213446617126s cumulative, 0.002691507339477539s individual

.
current test PASSED/SKIPPED -- test_pipe_until_delimiter_not_found in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.35483860969543s cumulative, 0.002704143524169922s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.35824513435364s cumulative, 0.003406524658203125s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.36167645454407s cumulative, 0.0034313201904296875s individual

.
current test PASSED/SKIPPED -- test_read in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.36473608016968s cumulative, 0.0030596256256103516s individual

.
current test PASSED/SKIPPED -- test_read_until_shared_boundary in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.36744666099548s cumulative, 0.002710580825805664s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.3724672794342s cumulative, 0.005020618438720703s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.3759114742279s cumulative, 0.003444194793701172s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.3793306350708s cumulative, 0.003419160842895508s individual

.
current test PASSED/SKIPPED -- test_peek_at_eof in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.381906747818s cumulative, 0.002576112747192383s individual

.
current test PASSED/SKIPPED -- test_peek in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.3847131729126s cumulative, 0.002806425094604492s individual

.
current test PASSED/SKIPPED -- test_read_until_shared_boundary in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.3874158859253s cumulative, 0.0027027130126953125s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.3908019065857s cumulative, 0.0033860206604003906s individual

.
current test PASSED/SKIPPED -- test_read_until_shared_boundary in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.39350891113281s cumulative, 0.0027070045471191406s individual

.
current test PASSED/SKIPPED -- test_placeholder_methods in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.39609217643738s cumulative, 0.0025832653045654297s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.39946818351746s cumulative, 0.003376007080078125s individual

.
current test PASSED/SKIPPED -- test_read_until_shared_boundary in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.40218019485474s cumulative, 0.0027120113372802734s individual

.
current test PASSED/SKIPPED -- test_pipe in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.40485334396362s cumulative, 0.0026731491088867188s individual

.
current test PASSED/SKIPPED -- test_read_until_shared_boundary in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.40757894515991s cumulative, 0.0027256011962890625s individual

.
current test PASSED/SKIPPED -- test_peek in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.41035580635071s cumulative, 0.0027768611907958984s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.41377997398376s cumulative, 0.0034241676330566406s individual

.
current test PASSED/SKIPPED -- test_iteration_started in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.41653895378113s cumulative, 0.0027589797973632812s individual

.
current test PASSED/SKIPPED -- test_read_until_with_buffer_edge_case in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.41933941841125s cumulative, 0.002800464630126953s individual

.
current test PASSED/SKIPPED -- test_peek in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.42214012145996s cumulative, 0.0028007030487060547s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.42554044723511s cumulative, 0.0034003257751464844s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.42893028259277s cumulative, 0.0033898353576660156s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.43229866027832s cumulative, 0.003368377685546875s individual

.
current test PASSED/SKIPPED -- test_readall in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.43509721755981s cumulative, 0.0027985572814941406s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.43848085403442s cumulative, 0.003383636474609375s individual

.
current test PASSED/SKIPPED -- test_delimit in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.44146847724915s cumulative, 0.0029876232147216797s individual

.
current test PASSED/SKIPPED -- test_read_until_shared_boundary in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.44537878036499s cumulative, 0.0039103031158447266s individual

.
current test PASSED/SKIPPED -- test_readall in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.4482045173645s cumulative, 0.0028257369995117188s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.45165228843689s cumulative, 0.0034477710723876953s individual

.
current test PASSED/SKIPPED -- test_basic_aiter in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.45434069633484s cumulative, 0.0026884078979492188s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.45775055885315s cumulative, 0.003409862518310547s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.46116352081299s cumulative, 0.003412961959838867s individual

.
current test PASSED/SKIPPED -- test_delimit in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.4640953540802s cumulative, 0.002931833267211914s individual

.
current test PASSED/SKIPPED -- test_aiter_from_buffer in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.46683144569397s cumulative, 0.0027360916137695312s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.47020363807678s cumulative, 0.0033721923828125s individual

.
current test PASSED/SKIPPED -- test_delimit in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.47313141822815s cumulative, 0.0029277801513671875s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.47653889656067s cumulative, 0.0034074783325195312s individual

.
current test PASSED/SKIPPED -- test_read_until_shared_boundary in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.47925233840942s cumulative, 0.002713441848754883s individual

.
current test PASSED/SKIPPED -- test_read_until_shared_boundary in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.48194980621338s cumulative, 0.002697467803955078s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.48532843589783s cumulative, 0.003378629684448242s individual

.
current test PASSED/SKIPPED -- test_read in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.48835897445679s cumulative, 0.003030538558959961s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.49178314208984s cumulative, 0.0034241676330566406s individual

.
current test PASSED/SKIPPED -- test_peek in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.4945752620697s cumulative, 0.0027921199798583984s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.49796080589294s cumulative, 0.0033855438232421875s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.50137162208557s cumulative, 0.003410816192626953s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.50474309921265s cumulative, 0.0033714771270751953s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.50913548469543s cumulative, 0.004392385482788086s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.5125367641449s cumulative, 0.0034012794494628906s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.51586270332336s cumulative, 0.003325939178466797s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.51923680305481s cumulative, 0.0033740997314453125s individual

.
current test PASSED/SKIPPED -- test_exhaust in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.5219054222107s cumulative, 0.002668619155883789s individual

.
current test PASSED/SKIPPED -- test_read in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.52492666244507s cumulative, 0.003021240234375s individual

.
current test PASSED/SKIPPED -- test_read_until_shared_boundary in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.52763724327087s cumulative, 0.002710580825805664s individual

.
current test PASSED/SKIPPED -- test_read_until_shared_boundary in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.53046560287476s cumulative, 0.002828359603881836s individual

.
current test PASSED/SKIPPED -- test_delimit in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.53336882591248s cumulative, 0.0029032230377197266s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.53676438331604s cumulative, 0.003395557403564453s individual

.
current test PASSED/SKIPPED -- test_peek in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.53954911231995s cumulative, 0.00278472900390625s individual

.
current test PASSED/SKIPPED -- test_read_until_shared_boundary in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.5422523021698s cumulative, 0.0027031898498535156s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.54562473297119s cumulative, 0.0033724308013916016s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.54899740219116s cumulative, 0.003372669219970703s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.5522849559784s cumulative, 0.0032875537872314453s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.55566191673279s cumulative, 0.0033769607543945312s individual

.
current test PASSED/SKIPPED -- test_read_until_shared_boundary in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.55836009979248s cumulative, 0.002698183059692383s individual

.
current test PASSED/SKIPPED -- test_delimit in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.56125831604004s cumulative, 0.0028982162475585938s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 77.56464147567749s cumulative, 0.003383159637451172s individual


tests/test_utils.py .
current test PASSED/SKIPPED -- test_attributes_from_items in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.56730318069458s cumulative, 0.0026617050170898438s individual

.
current test PASSED/SKIPPED -- test_keys_and_values in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.56991195678711s cumulative, 0.002608776092529297s individual

.
current test PASSED/SKIPPED -- test_items_from_attributes in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.57256746292114s cumulative, 0.002655506134033203s individual

.
current test PASSED/SKIPPED -- test_dict_interface in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.57545638084412s cumulative, 0.002888917922973633s individual

.
current test PASSED/SKIPPED -- test_dict_interface in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.57828903198242s cumulative, 0.002832651138305664s individual

.
current test PASSED/SKIPPED -- test_attributes in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.58090782165527s cumulative, 0.0026187896728515625s individual

.
current test PASSED/SKIPPED -- test_attributes_from_items in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.58351755142212s cumulative, 0.002609729766845703s individual

.
current test PASSED/SKIPPED -- test_attributes in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.58611631393433s cumulative, 0.0025987625122070312s individual

.
current test PASSED/SKIPPED -- test_keys_and_values in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.58870720863342s cumulative, 0.0025908946990966797s individual

.
current test PASSED/SKIPPED -- test_items_from_attributes in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.59131002426147s cumulative, 0.002602815628051758s individual

.
current test PASSED/SKIPPED -- test_something in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.59480929374695s cumulative, 0.003499269485473633s individual

.
current test PASSED/SKIPPED -- test_simulate_free_functions in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.59957027435303s cumulative, 0.0047609806060791016s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.60293626785278s cumulative, 0.0033659934997558594s individual

.
current test PASSED/SKIPPED -- test_simulate_free_functions in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.60760188102722s cumulative, 0.0046656131744384766s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.6109344959259s cumulative, 0.0033326148986816406s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.61406779289246s cumulative, 0.0031332969665527344s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.61740493774414s cumulative, 0.0033371448516845703s individual

.
current test PASSED/SKIPPED -- test_simulate_free_functions in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.62180280685425s cumulative, 0.004397869110107422s individual

.
current test PASSED/SKIPPED -- test_simulate_free_functions in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.62555575370789s cumulative, 0.0037529468536376953s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.62889575958252s cumulative, 0.003340005874633789s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.63204765319824s cumulative, 0.0031518936157226562s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.63586401939392s cumulative, 0.003816366195678711s individual

.
current test PASSED/SKIPPED -- test_simulate_free_functions in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.63957667350769s cumulative, 0.0037126541137695312s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.6427390575409s cumulative, 0.003162384033203125s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.64603090286255s cumulative, 0.0032918453216552734s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.6491641998291s cumulative, 0.0031332969665527344s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.65227675437927s cumulative, 0.0031125545501708984s individual

.
current test PASSED/SKIPPED -- test_simulate_free_functions in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.6559431552887s cumulative, 0.003666400909423828s individual

.
current test PASSED/SKIPPED -- test_simulate_free_functions in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.66005969047546s cumulative, 0.004116535186767578s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.66336393356323s cumulative, 0.0033042430877685547s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.66665196418762s cumulative, 0.0032880306243896484s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.66976714134216s cumulative, 0.0031151771545410156s individual

.
current test PASSED/SKIPPED -- test_simulate_free_functions in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.67345833778381s cumulative, 0.0036911964416503906s individual

.
current test PASSED/SKIPPED -- test_simulate_free_functions in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.67713189125061s cumulative, 0.003673553466796875s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.68043684959412s cumulative, 0.0033049583435058594s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.68416261672974s cumulative, 0.003725767135620117s individual

.
current test PASSED/SKIPPED -- test_simulate_free_functions in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.68792772293091s cumulative, 0.003765106201171875s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.69125652313232s cumulative, 0.0033288002014160156s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.69454431533813s cumulative, 0.003287792205810547s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.69768500328064s cumulative, 0.003140687942504883s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.70080327987671s cumulative, 0.003118276596069336s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.70392942428589s cumulative, 0.0031261444091796875s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.70759105682373s cumulative, 0.003661632537841797s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.7109260559082s cumulative, 0.0033349990844726562s individual

.
current test PASSED/SKIPPED -- test_simulate_free_functions in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.7146692276001s cumulative, 0.0037431716918945312s individual

.
current test PASSED/SKIPPED -- test_simulate_free_functions in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.71841859817505s cumulative, 0.003749370574951172s individual

.
current test PASSED/SKIPPED -- test_simulate_free_functions in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.72216367721558s cumulative, 0.0037450790405273438s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.72536826133728s cumulative, 0.0032045841217041016s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.72889041900635s cumulative, 0.003522157669067383s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.7322027683258s cumulative, 0.003312349319458008s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.73531723022461s cumulative, 0.003114461898803711s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.73842597007751s cumulative, 0.0031087398529052734s individual

.
current test PASSED/SKIPPED -- test_something in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.74311232566833s cumulative, 0.0046863555908203125s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.74630999565125s cumulative, 0.0031976699829101562s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.74985337257385s cumulative, 0.003543376922607422s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.75315380096436s cumulative, 0.0033004283905029297s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.75643134117126s cumulative, 0.0032775402069091797s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.75957345962524s cumulative, 0.003142118453979492s individual

.
current test PASSED/SKIPPED -- test_json_deprecation in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.76218628883362s cumulative, 0.0026128292083740234s individual

.
current test PASSED/SKIPPED -- test_get_argnames in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.76497054100037s cumulative, 0.002784252166748047s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.76810884475708s cumulative, 0.003138303756713867s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.77128505706787s cumulative, 0.0031762123107910156s individual

.
current test PASSED/SKIPPED -- test_simulate_free_functions in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.77545237541199s cumulative, 0.004167318344116211s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.77879643440247s cumulative, 0.0033440589904785156s individual

.
current test PASSED/SKIPPED -- test_function in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.78161430358887s cumulative, 0.002817869186401367s individual

.
current test PASSED/SKIPPED -- test_method in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.78427982330322s cumulative, 0.0026655197143554688s individual

.
current test PASSED/SKIPPED -- test_simulate_json_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.78885459899902s cumulative, 0.004574775695800781s individual

.
current test PASSED/SKIPPED -- test_simulate_content_type in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.79301571846008s cumulative, 0.00416111946105957s individual

.
current test PASSED/SKIPPED -- test_simulate_with_environ_extras in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.79699969291687s cumulative, 0.003983974456787109s individual

.
current test PASSED/SKIPPED -- test_repr_result_when_body_varies in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.80290484428406s cumulative, 0.0059051513671875s individual

.
current test PASSED/SKIPPED -- test_simulate_json_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.80788612365723s cumulative, 0.004981279373168945s individual

.
current test PASSED/SKIPPED -- test_simulate_json_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.81250166893005s cumulative, 0.0046155452728271484s individual

.
current test PASSED/SKIPPED -- test_repr_result_when_body_varies in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.81671142578125s cumulative, 0.004209756851196289s individual

.
current test PASSED/SKIPPED -- test_simulate_json_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.82243609428406s cumulative, 0.005724668502807617s individual

.
current test PASSED/SKIPPED -- test_repr_result_when_body_varies in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.82665729522705s cumulative, 0.004221200942993164s individual

.
current test PASSED/SKIPPED -- test_simulate_content_type_extra_handler in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.831214427948s cumulative, 0.004557132720947266s individual

.
current test PASSED/SKIPPED -- test_simulate_json_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.83601331710815s cumulative, 0.00479888916015625s individual

.
current test PASSED/SKIPPED -- test_path_escape_chars_in_create_environ in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.83846402168274s cumulative, 0.002450704574584961s individual

.
current test PASSED/SKIPPED -- test_repr_result_when_body_varies in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.84304523468018s cumulative, 0.0045812129974365234s individual

.
current test PASSED/SKIPPED -- test_simulate_content_type_extra_handler in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.84746813774109s cumulative, 0.004422903060913086s individual

.
current test PASSED/SKIPPED -- test_simple_resource_body_json_xor in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.8501250743866s cumulative, 0.0026569366455078125s individual

.
current test PASSED/SKIPPED -- test_repr_without_content_type_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.85273623466492s cumulative, 0.0026111602783203125s individual

.
current test PASSED/SKIPPED -- test_simulate_remote_addr in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.8570020198822s cumulative, 0.004265785217285156s individual

.
current test PASSED/SKIPPED -- test_repr_result_when_body_varies in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.86119198799133s cumulative, 0.004189968109130859s individual

.
current test PASSED/SKIPPED -- test_query_string in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.86721587181091s cumulative, 0.006023883819580078s individual

.
current test PASSED/SKIPPED -- test_simulate_hostname in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.87120914459229s cumulative, 0.00399327278137207s individual

.
current test PASSED/SKIPPED -- test_decode_empty_result in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.87515616416931s cumulative, 0.003947019577026367s individual

.
current test PASSED/SKIPPED -- test_wsgi_iterable_not_closeable in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.87761354446411s cumulative, 0.0024573802947998047s individual

.
current test PASSED/SKIPPED -- test_repr_result_when_body_varies in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.8818826675415s cumulative, 0.004269123077392578s individual

.
current test PASSED/SKIPPED -- test_repr_without_content_type_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.8844940662384s cumulative, 0.002611398696899414s individual

.
current test PASSED/SKIPPED -- test_simulate_json_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.88894653320312s cumulative, 0.00445246696472168s individual

.
current test PASSED/SKIPPED -- test_repr_result_when_body_varies in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.89342665672302s cumulative, 0.004480123519897461s individual

.
current test PASSED/SKIPPED -- test_repr_result_when_body_varies in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.89759469032288s cumulative, 0.004168033599853516s individual

.
current test PASSED/SKIPPED -- test_repr_result_when_body_varies in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.90173029899597s cumulative, 0.004135608673095703s individual

.
current test PASSED/SKIPPED -- test_simulate_content_type in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.90569758415222s cumulative, 0.00396728515625s individual

.
current test PASSED/SKIPPED -- test_repr_result_when_body_varies in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.90996646881104s cumulative, 0.0042688846588134766s individual

.
current test PASSED/SKIPPED -- test_override_method_with_extras in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.91431021690369s cumulative, 0.004343748092651367s individual

.
current test PASSED/SKIPPED -- test_simulate_json_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.91891765594482s cumulative, 0.004607439041137695s individual

.
current test PASSED/SKIPPED -- test_simulate_json_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.92349243164062s cumulative, 0.004574775695800781s individual

.
current test PASSED/SKIPPED -- test_simulate_json_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.92792773246765s cumulative, 0.004435300827026367s individual

.
current test PASSED/SKIPPED -- test_simulate_remote_addr in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.93366575241089s cumulative, 0.005738019943237305s individual

.
current test PASSED/SKIPPED -- test_simulate_remote_addr in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.9387195110321s cumulative, 0.00505375862121582s individual

.
current test PASSED/SKIPPED -- test_repr_result_when_body_varies in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.94291114807129s cumulative, 0.00419163703918457s individual

.
current test PASSED/SKIPPED -- test_override_method_with_extras in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.94760203361511s cumulative, 0.004690885543823242s individual

.
current test PASSED/SKIPPED -- test_query_string_in_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.95337104797363s cumulative, 0.005769014358520508s individual

.
current test PASSED/SKIPPED -- test_simulate_json_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.9578652381897s cumulative, 0.004494190216064453s individual

.
current test PASSED/SKIPPED -- test_simulate_remote_addr in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.9620852470398s cumulative, 0.004220008850097656s individual

.
current test PASSED/SKIPPED -- test_none_header_value_in_create_environ in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.96452736854553s cumulative, 0.0024421215057373047s individual

.
current test PASSED/SKIPPED -- test_repr_result_when_body_varies in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.96879076957703s cumulative, 0.004263401031494141s individual

.
current test PASSED/SKIPPED -- test_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.97328758239746s cumulative, 0.00449681282043457s individual

.
current test PASSED/SKIPPED -- test_repr_result_when_body_varies in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.97746205329895s cumulative, 0.004174470901489258s individual

.
current test PASSED/SKIPPED -- test_repr_result_when_body_varies in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.98160195350647s cumulative, 0.004139900207519531s individual

.
current test PASSED/SKIPPED -- test_simulate_json_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.98620748519897s cumulative, 0.004605531692504883s individual

.
current test PASSED/SKIPPED -- test_simulate_content_type_extra_handler in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.99098944664001s cumulative, 0.004781961441040039s individual

.
current test PASSED/SKIPPED -- test_path_must_start_with_slash in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.99443650245667s cumulative, 0.0034470558166503906s individual

.
current test PASSED/SKIPPED -- test_repr_result_when_body_varies in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 77.9985659122467s cumulative, 0.0041294097900390625s individual

.
current test PASSED/SKIPPED -- test_repr_result_when_body_varies in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.00265979766846s cumulative, 0.00409388542175293s individual

.
current test PASSED/SKIPPED -- test_plus_in_path_in_create_environ in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.0051064491272s cumulative, 0.0024466514587402344s individual

.
current test PASSED/SKIPPED -- test_simulate_content_type_extra_handler in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.00976228713989s cumulative, 0.0046558380126953125s individual

.
current test PASSED/SKIPPED -- test_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.01436853408813s cumulative, 0.0046062469482421875s individual

.
current test PASSED/SKIPPED -- test_simulate_json_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.0188148021698s cumulative, 0.004446268081665039s individual

.
current test PASSED/SKIPPED -- test_query_string_no_question in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.02233600616455s cumulative, 0.0035212039947509766s individual

.
current test PASSED/SKIPPED -- test_cached_text_in_result in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.02637267112732s cumulative, 0.004036664962768555s individual

.
current test PASSED/SKIPPED -- test_simulate_remote_addr in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.03146982192993s cumulative, 0.005097150802612305s individual

.
current test PASSED/SKIPPED -- test_simulate_content_type_extra_handler in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.0356695652008s cumulative, 0.0041997432708740234s individual

.
current test PASSED/SKIPPED -- test_repr_result_when_body_varies in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.03975868225098s cumulative, 0.0040891170501708984s individual

.
current test PASSED/SKIPPED -- test_path_must_start_with_slash in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.0432939529419s cumulative, 0.0035352706909179688s individual

.
current test PASSED/SKIPPED -- test_httpnow_alias_for_backwards_compat in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.04572200775146s cumulative, 0.0024280548095703125s individual

.
current test PASSED/SKIPPED -- test_query_string in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.05687713623047s cumulative, 0.011155128479003906s individual

.
current test PASSED/SKIPPED -- test_simulate_json_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.06141328811646s cumulative, 0.004536151885986328s individual

.
current test PASSED/SKIPPED -- test_simulate_content_type_extra_handler in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.06573224067688s cumulative, 0.004318952560424805s individual

.
current test PASSED/SKIPPED -- test_simulate_content_type_extra_handler in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.0702633857727s cumulative, 0.004531145095825195s individual

.
current test PASSED/SKIPPED -- test_simulate_content_type_extra_handler in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.07504892349243s cumulative, 0.0047855377197265625s individual

.
current test PASSED/SKIPPED -- test_repr_result_when_body_varies in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.07924127578735s cumulative, 0.004192352294921875s individual

.
current test PASSED/SKIPPED -- test_simple_resource_body_json_xor in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.08185720443726s cumulative, 0.0026159286499023438s individual

.
current test PASSED/SKIPPED -- test_simulate_content_type_extra_handler in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.08602952957153s cumulative, 0.004172325134277344s individual

.
current test PASSED/SKIPPED -- test_repr_result_when_body_varies in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.09028911590576s cumulative, 0.004259586334228516s individual

.
current test PASSED/SKIPPED -- test_simulate_remote_addr in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.09493017196655s cumulative, 0.004641056060791016s individual

.
current test PASSED/SKIPPED -- test_simulate_json_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.09932041168213s cumulative, 0.004390239715576172s individual

.
current test PASSED/SKIPPED -- test_repr_result_when_body_varies in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.10342717170715s cumulative, 0.004106760025024414s individual

.
current test PASSED/SKIPPED -- test_simulate_remote_addr in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.10760807991028s cumulative, 0.004180908203125s individual

.
current test PASSED/SKIPPED -- test_simulate_with_environ_extras in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.11162042617798s cumulative, 0.004012346267700195s individual

.
current test PASSED/SKIPPED -- test_query_string_no_question in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.11555528640747s cumulative, 0.0039348602294921875s individual

.
current test PASSED/SKIPPED -- test_simulate_json_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.12021088600159s cumulative, 0.004655599594116211s individual

.
current test PASSED/SKIPPED -- test_default_headers_with_override in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.12518072128296s cumulative, 0.00496983528137207s individual

.
current test PASSED/SKIPPED -- test_repr_result_when_body_varies in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.12937664985657s cumulative, 0.0041959285736083984s individual

.
current test PASSED/SKIPPED -- test_simulate_remote_addr in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.13468956947327s cumulative, 0.005312919616699219s individual

.
current test PASSED/SKIPPED -- test_default_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.14069867134094s cumulative, 0.006009101867675781s individual

.
current test PASSED/SKIPPED -- test_default_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.14509868621826s cumulative, 0.004400014877319336s individual

.
current test PASSED/SKIPPED -- test_decode_empty_result in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.14904117584229s cumulative, 0.0039424896240234375s individual

.
current test PASSED/SKIPPED -- test_no_prefix_allowed_for_query_strings_in_create_environ in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.15152788162231s cumulative, 0.002486705780029297s individual

.
current test PASSED/SKIPPED -- test_simulate_content_type in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.15563678741455s cumulative, 0.004108905792236328s individual

.
current test PASSED/SKIPPED -- test_simulate_remote_addr in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.16022157669067s cumulative, 0.004584789276123047s individual

.
current test PASSED/SKIPPED -- test_cached_text_in_result in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.16488552093506s cumulative, 0.004663944244384766s individual

.
current test PASSED/SKIPPED -- test_repr_result_when_body_varies in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.16905450820923s cumulative, 0.004168987274169922s individual

.
current test PASSED/SKIPPED -- test_default_headers_with_override in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.17307353019714s cumulative, 0.004019021987915039s individual

.
current test PASSED/SKIPPED -- test_query_string_in_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.1773521900177s cumulative, 0.004278659820556641s individual

.
current test PASSED/SKIPPED -- test_simulate_remote_addr in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.18250107765198s cumulative, 0.005148887634277344s individual

.
current test PASSED/SKIPPED -- test_simulate_hostname in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.18705224990845s cumulative, 0.0045511722564697266s individual

.
current test PASSED/SKIPPED -- test_simulate_json_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.19167876243591s cumulative, 0.00462651252746582s individual

.
current test PASSED/SKIPPED -- test_repr_result_when_body_varies in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.19586515426636s cumulative, 0.004186391830444336s individual

.
current test PASSED/SKIPPED -- test_repr_result_when_body_varies in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.20046973228455s cumulative, 0.0046045780181884766s individual

.
current test PASSED/SKIPPED -- test_simulate_content_type_extra_handler in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.20468854904175s cumulative, 0.0042188167572021484s individual

.
current test PASSED/SKIPPED -- test_code_to_http_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.2075891494751s cumulative, 0.0029006004333496094s individual

.
current test PASSED/SKIPPED -- test_misc_isascii in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.21056246757507s cumulative, 0.002973318099975586s individual

.
current test PASSED/SKIPPED -- test_misc_isascii in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.213543176651s cumulative, 0.0029807090759277344s individual

.
current test PASSED/SKIPPED -- test_code_to_http_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.21640586853027s cumulative, 0.002862691879272461s individual

.
current test PASSED/SKIPPED -- test_unquote_string in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.2190511226654s cumulative, 0.002645254135131836s individual

.
current test PASSED/SKIPPED -- test_misc_isascii in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.22204184532166s cumulative, 0.00299072265625s individual

.
current test PASSED/SKIPPED -- test_uri_decode_bad_unicode in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.22527408599854s cumulative, 0.003232240676879883s individual

.
current test PASSED/SKIPPED -- test_parse_query_string_edge_cases in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.22829294204712s cumulative, 0.0030188560485839844s individual

.
current test PASSED/SKIPPED -- test_etag_strong_vs_weak_comparison in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.23096489906311s cumulative, 0.002671957015991211s individual

.
current test PASSED/SKIPPED -- test_code_to_http_status_value_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.23372554779053s cumulative, 0.002760648727416992s individual

.
current test PASSED/SKIPPED -- test_uri_encode_double in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.23868322372437s cumulative, 0.004957675933837891s individual

.
current test PASSED/SKIPPED -- test_uri_decode_bad_coding in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.24187517166138s cumulative, 0.0031919479370117188s individual

.
current test PASSED/SKIPPED -- test_parse_query_string_edge_cases in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.24485993385315s cumulative, 0.002984762191772461s individual

.
current test PASSED/SKIPPED -- test_code_to_http_status_value_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.2476122379303s cumulative, 0.0027523040771484375s individual

.
current test PASSED/SKIPPED -- test_secure_filename_empty_value in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.25020217895508s cumulative, 0.0025899410247802734s individual

.
current test PASSED/SKIPPED -- test_parse_query_string_edge_cases in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.25317978858948s cumulative, 0.002977609634399414s individual

.
current test PASSED/SKIPPED -- test_to_query_str_encoding in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.25643491744995s cumulative, 0.003255128860473633s individual

.
current test PASSED/SKIPPED -- test_misc_isascii in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.25943684577942s cumulative, 0.0030019283294677734s individual

.
current test PASSED/SKIPPED -- test_secure_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.2624237537384s cumulative, 0.002986907958984375s individual

.
current test PASSED/SKIPPED -- test_uri_decode_bad_coding in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.26555705070496s cumulative, 0.0031332969665527344s individual

.
current test PASSED/SKIPPED -- test_http_status_to_code in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.26841020584106s cumulative, 0.0028531551361083984s individual

.
current test PASSED/SKIPPED -- test_http_status_to_code_neg in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.27116441726685s cumulative, 0.00275421142578125s individual

.
current test PASSED/SKIPPED -- test_pack_query_params_one in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.2737786769867s cumulative, 0.002614259719848633s individual

.
current test PASSED/SKIPPED -- test_uri_decode_bad_coding in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.27701091766357s cumulative, 0.003232240676879883s individual

.
current test PASSED/SKIPPED -- test_uri_decode_unquote_plus in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.27991962432861s cumulative, 0.0029087066650390625s individual

.
current test PASSED/SKIPPED -- test_dt_to_http in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.28259325027466s cumulative, 0.002673625946044922s individual

.
current test PASSED/SKIPPED -- test_parse_query_string_edge_cases in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.2855772972107s cumulative, 0.0029840469360351562s individual

.
current test PASSED/SKIPPED -- test_http_status_to_code in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.2884259223938s cumulative, 0.0028486251831054688s individual

.
current test PASSED/SKIPPED -- test_code_to_http_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.29127740859985s cumulative, 0.0028514862060546875s individual

.
current test PASSED/SKIPPED -- test_uri_encode in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.29389142990112s cumulative, 0.0026140213012695312s individual

.
current test PASSED/SKIPPED -- test_http_status_to_code in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.29675436019897s cumulative, 0.0028629302978515625s individual

.
current test PASSED/SKIPPED -- test_code_to_http_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.2996129989624s cumulative, 0.0028586387634277344s individual

.
current test PASSED/SKIPPED -- test_uri_decode_bad_unicode in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.3027651309967s cumulative, 0.003152132034301758s individual

.
current test PASSED/SKIPPED -- test_parse_query_string_edge_cases in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.30577254295349s cumulative, 0.0030074119567871094s individual

.
current test PASSED/SKIPPED -- test_to_query_str_encoding in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.30868434906006s cumulative, 0.002911806106567383s individual

.
current test PASSED/SKIPPED -- test_http_status_to_code_neg in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.31141352653503s cumulative, 0.002729177474975586s individual

.
current test PASSED/SKIPPED -- test_code_to_http_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.31428050994873s cumulative, 0.002866983413696289s individual

.
current test PASSED/SKIPPED -- test_uri_decode_bad_unicode in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.31750702857971s cumulative, 0.0032265186309814453s individual

.
current test PASSED/SKIPPED -- test_prop_uri_encode_models_stdlib_quote in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.32366061210632s cumulative, 0.006153583526611328s individual

.
current test PASSED/SKIPPED -- test_http_status_to_code in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.32650542259216s cumulative, 0.0028448104858398438s individual

.
current test PASSED/SKIPPED -- test_misc_isascii in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.32964754104614s cumulative, 0.003142118453979492s individual

.
current test PASSED/SKIPPED -- test_code_to_http_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.33257365226746s cumulative, 0.0029261112213134766s individual

.
current test PASSED/SKIPPED -- test_parse_query_string_edge_cases in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.33556604385376s cumulative, 0.002992391586303711s individual

.
current test PASSED/SKIPPED -- test_secure_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.33841514587402s cumulative, 0.002849102020263672s individual

.
current test PASSED/SKIPPED -- test_http_status_to_code in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.3412606716156s cumulative, 0.0028455257415771484s individual

.
current test PASSED/SKIPPED -- test_misc_isascii in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.34423613548279s cumulative, 0.0029754638671875s individual

.
current test PASSED/SKIPPED -- test_http_status_to_code_neg in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.34697961807251s cumulative, 0.0027434825897216797s individual

.
current test PASSED/SKIPPED -- test_parse_query_string_edge_cases in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.35094785690308s cumulative, 0.003968238830566406s individual

.
current test PASSED/SKIPPED -- test_misc_isascii in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.36318969726562s cumulative, 0.012241840362548828s individual

.
current test PASSED/SKIPPED -- test_secure_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.36614298820496s cumulative, 0.0029532909393310547s individual

.
current test PASSED/SKIPPED -- test_code_to_http_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.36899137496948s cumulative, 0.002848386764526367s individual

.
current test PASSED/SKIPPED -- test_misc_isascii in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.37200236320496s cumulative, 0.003010988235473633s individual

.
current test PASSED/SKIPPED -- test_uri_decode_bad_coding in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.37514352798462s cumulative, 0.003141164779663086s individual

.
current test PASSED/SKIPPED -- test_uri_decode_bad_unicode in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.37828660011292s cumulative, 0.0031430721282958984s individual

.
current test PASSED/SKIPPED -- test_secure_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.38113379478455s cumulative, 0.0028471946716308594s individual

.
current test PASSED/SKIPPED -- test_misc_isascii in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.38413500785828s cumulative, 0.0030012130737304688s individual

.
current test PASSED/SKIPPED -- test_http_status_to_code_neg in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.38690829277039s cumulative, 0.002773284912109375s individual

.
current test PASSED/SKIPPED -- test_code_to_http_status_value_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.38965106010437s cumulative, 0.002742767333984375s individual

.
current test PASSED/SKIPPED -- test_secure_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.3925404548645s cumulative, 0.002889394760131836s individual

.
current test PASSED/SKIPPED -- test_code_to_http_status_value_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.39534544944763s cumulative, 0.002804994583129883s individual

.
current test PASSED/SKIPPED -- test_code_to_http_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.3981990814209s cumulative, 0.0028536319732666016s individual

.
current test PASSED/SKIPPED -- test_parse_query_string_edge_cases in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.4012098312378s cumulative, 0.0030107498168945312s individual

.
current test PASSED/SKIPPED -- test_code_to_http_status_value_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.40447688102722s cumulative, 0.003267049789428711s individual

.
current test PASSED/SKIPPED -- test_code_to_http_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.40732502937317s cumulative, 0.0028481483459472656s individual

.
current test PASSED/SKIPPED -- test_parse_query_string_edge_cases in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.41039490699768s cumulative, 0.0030698776245117188s individual

.
current test PASSED/SKIPPED -- test_to_query_str_encoding in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.41338515281677s cumulative, 0.002990245819091797s individual

.
current test PASSED/SKIPPED -- test_code_to_http_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.41624331474304s cumulative, 0.0028581619262695312s individual

.
current test PASSED/SKIPPED -- test_pack_query_params_none in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.41880941390991s cumulative, 0.002566099166870117s individual

.
current test PASSED/SKIPPED -- test_code_to_http_status_value_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.42158126831055s cumulative, 0.0027718544006347656s individual

.
current test PASSED/SKIPPED -- test_code_to_http_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.42440605163574s cumulative, 0.0028247833251953125s individual

.
current test PASSED/SKIPPED -- test_misc_isascii in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.42735362052917s cumulative, 0.002947568893432617s individual

.
current test PASSED/SKIPPED -- test_uri_decode in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.43031024932861s cumulative, 0.0029566287994384766s individual

.
current test PASSED/SKIPPED -- test_uri_decode_bad_unicode in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.43343043327332s cumulative, 0.0031201839447021484s individual

.
current test PASSED/SKIPPED -- test_http_status_to_code_neg in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.43619966506958s cumulative, 0.0027692317962646484s individual

.
current test PASSED/SKIPPED -- test_code_to_http_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.43902611732483s cumulative, 0.0028264522552490234s individual

.
current test PASSED/SKIPPED -- test_to_query_str_encoding in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.44192481040955s cumulative, 0.002898693084716797s individual

.
current test PASSED/SKIPPED -- test_code_to_http_status_value_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.44468021392822s cumulative, 0.002755403518676758s individual

.
current test PASSED/SKIPPED -- test_to_query_str_encoding in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.4475769996643s cumulative, 0.0028967857360839844s individual

.
current test PASSED/SKIPPED -- test_to_query_str_encoding in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.45044112205505s cumulative, 0.0028641223907470703s individual

.
current test PASSED/SKIPPED -- test_code_to_http_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.45327472686768s cumulative, 0.0028336048126220703s individual

.
current test PASSED/SKIPPED -- test_uri_decode_bad_coding in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.45642471313477s cumulative, 0.0031499862670898438s individual

.
current test PASSED/SKIPPED -- test_uri_decode_bad_unicode in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.45956087112427s cumulative, 0.003136157989501953s individual

.
current test PASSED/SKIPPED -- test_deprecated_decorator in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.46287655830383s cumulative, 0.0033156871795654297s individual

.
current test PASSED/SKIPPED -- test_secure_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.4658043384552s cumulative, 0.0029277801513671875s individual

.
current test PASSED/SKIPPED -- test_to_query_str_encoding in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.46882820129395s cumulative, 0.003023862838745117s individual

.
current test PASSED/SKIPPED -- test_http_date_to_dt in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.47746109962463s cumulative, 0.008632898330688477s individual

.
current test PASSED/SKIPPED -- test_etag_dumps_to_header_format in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.48012828826904s cumulative, 0.0026671886444091797s individual

.
current test PASSED/SKIPPED -- test_parse_query_string_edge_cases in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.4831132888794s cumulative, 0.0029850006103515625s individual

.
current test PASSED/SKIPPED -- test_parse_query_string_edge_cases in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.48616671562195s cumulative, 0.003053426742553711s individual

.
current test PASSED/SKIPPED -- test_uri_decode_bad_unicode in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.48936152458191s cumulative, 0.0031948089599609375s individual

.
current test PASSED/SKIPPED -- test_http_status_to_code in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.49242448806763s cumulative, 0.0030629634857177734s individual

.
current test PASSED/SKIPPED -- test_misc_isascii in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.49541783332825s cumulative, 0.002993345260620117s individual

.
current test PASSED/SKIPPED -- test_uri_decode_unquote_plus in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.49909162521362s cumulative, 0.0036737918853759766s individual

.
current test PASSED/SKIPPED -- test_prop_uri_encode_value_models_stdlib_quote_safe_tilde in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.50653386116028s cumulative, 0.0074422359466552734s individual

.
current test PASSED/SKIPPED -- test_misc_isascii in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.50951933860779s cumulative, 0.0029854774475097656s individual

.
current test PASSED/SKIPPED -- test_parse_host in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.51216959953308s cumulative, 0.0026502609252929688s individual

.
current test PASSED/SKIPPED -- test_uri_decode_bad_coding in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.51543998718262s cumulative, 0.003270387649536133s individual

.
current test PASSED/SKIPPED -- test_get_http_status_warns in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.51822972297668s cumulative, 0.002789735794067383s individual

.
current test PASSED/SKIPPED -- test_code_to_http_status_value_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.52100491523743s cumulative, 0.0027751922607421875s individual

.
current test PASSED/SKIPPED -- test_parse_query_string in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.5267243385315s cumulative, 0.005719423294067383s individual

.
current test PASSED/SKIPPED -- test_misc_isascii in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.52974820137024s cumulative, 0.003023862838745117s individual

.
current test PASSED/SKIPPED -- test_misc_isascii in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.53274011611938s cumulative, 0.002991914749145508s individual

.
current test PASSED/SKIPPED -- test_parse_query_string_edge_cases in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.53572702407837s cumulative, 0.002986907958984375s individual

.
current test PASSED/SKIPPED -- test_http_status_to_code_neg in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.53847479820251s cumulative, 0.002747774124145508s individual

.
current test PASSED/SKIPPED -- test_secure_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.54135513305664s cumulative, 0.0028803348541259766s individual

.
current test PASSED/SKIPPED -- test_http_status_to_code_neg in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.54412579536438s cumulative, 0.002770662307739258s individual

.
current test PASSED/SKIPPED -- test_http_status_to_code in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.54697632789612s cumulative, 0.0028505325317382812s individual

.
current test PASSED/SKIPPED -- test_uri_encode_value in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.54959273338318s cumulative, 0.002616405487060547s individual

.
current test PASSED/SKIPPED -- test_uri_decode_bad_unicode in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.55283880233765s cumulative, 0.0032460689544677734s individual

.
current test PASSED/SKIPPED -- test_code_to_http_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.55569648742676s cumulative, 0.002857685089111328s individual

.
current test PASSED/SKIPPED -- test_parse_query_string_edge_cases in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.55868554115295s cumulative, 0.002989053726196289s individual

.
current test PASSED/SKIPPED -- test_code_to_http_status_value_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.56143546104431s cumulative, 0.002749919891357422s individual

.
current test PASSED/SKIPPED -- test_http_status_to_code in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.56428575515747s cumulative, 0.0028502941131591797s individual

.
current test PASSED/SKIPPED -- test_http_status_to_code_neg in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.56703162193298s cumulative, 0.0027458667755126953s individual

.
current test PASSED/SKIPPED -- test_http_now in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.56979894638062s cumulative, 0.002767324447631836s individual

.
current test PASSED/SKIPPED -- test_pack_query_params_several in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.57241892814636s cumulative, 0.0026199817657470703s individual

.
current test PASSED/SKIPPED -- test_code_to_http_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.57526755332947s cumulative, 0.0028486251831054688s individual

.
current test PASSED/SKIPPED -- test_to_query_str_encoding in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.57822227478027s cumulative, 0.002954721450805664s individual

.
current test PASSED/SKIPPED -- test_prop_uri_decode_models_stdlib_unquote_plus in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.58703207969666s cumulative, 0.008809804916381836s individual

.
current test PASSED/SKIPPED -- test_http_status_to_code in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.5899248123169s cumulative, 0.002892732620239258s individual

.
current test PASSED/SKIPPED -- test_code_to_http_status_value_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.5926821231842s cumulative, 0.0027573108673095703s individual

.
current test PASSED/SKIPPED -- test_get_http_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.59550404548645s cumulative, 0.0028219223022460938s individual

.
current test PASSED/SKIPPED -- test_code_to_http_status_value_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.59825992584229s cumulative, 0.002755880355834961s individual

.
current test PASSED/SKIPPED -- test_parse_query_string_edge_cases in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.601407289505s cumulative, 0.0031473636627197266s individual

.
current test PASSED/SKIPPED -- test_to_query_str_encoding in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.60434293746948s cumulative, 0.002935647964477539s individual

.
current test PASSED/SKIPPED -- test_to_query_str_encoding in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.60725665092468s cumulative, 0.0029137134552001953s individual

.
current test PASSED/SKIPPED -- test_code_to_http_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.61012005805969s cumulative, 0.0028634071350097656s individual

.
current test PASSED/SKIPPED -- test_code_to_http_status_value_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.61286163330078s cumulative, 0.002741575241088867s individual

.
current test PASSED/SKIPPED -- test_parse_query_string_edge_cases in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.61582016944885s cumulative, 0.002958536148071289s individual

.
current test PASSED/SKIPPED -- test_uri_decode in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 78.61880278587341s cumulative, 0.002982616424560547s individual


tests/asgi/test_asgi_helpers.py .
current test PASSED/SKIPPED -- test_intricate_app in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_helpers.py: 78.62175130844116s cumulative, 0.0029485225677490234s individual


tests/test_query_params.py .
current test PASSED/SKIPPED -- test_dont_auto_parse_by_default in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.62878441810608s cumulative, 0.007033109664916992s individual

.
current test PASSED/SKIPPED -- test_dont_auto_parse_by_default in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.6329505443573s cumulative, 0.004166126251220703s individual

.
current test PASSED/SKIPPED -- test_get_datetime_valid in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.63738536834717s cumulative, 0.004434823989868164s individual

s
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.64215159416199s cumulative, 0.004766225814819336s individual

.
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.6467764377594s cumulative, 0.004624843597412109s individual

.
current test PASSED/SKIPPED -- test_get_datetime_valid in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.6510751247406s cumulative, 0.004298686981201172s individual

.
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.65561270713806s cumulative, 0.0045375823974609375s individual

s
current test PASSED/SKIPPED -- test_float_neg in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.65970349311829s cumulative, 0.004090785980224609s individual

.
current test PASSED/SKIPPED -- test_int in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.66529726982117s cumulative, 0.005593776702880859s individual

.
current test PASSED/SKIPPED -- test_get_param_as_json_no_handler_json in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.66968202590942s cumulative, 0.004384756088256836s individual

s
current test PASSED/SKIPPED -- test_multiple_form_keys_as_list in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.67326164245605s cumulative, 0.0035796165466308594s individual

.
current test PASSED/SKIPPED -- test_has_param in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.67786765098572s cumulative, 0.004606008529663086s individual

.
current test PASSED/SKIPPED -- test_get_param_as_json_handler_json in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.68291115760803s cumulative, 0.005043506622314453s individual

.
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.68837642669678s cumulative, 0.005465269088745117s individual

s
current test PASSED/SKIPPED -- test_get_dict_missing_param in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.69199657440186s cumulative, 0.003620147705078125s individual

.
current test PASSED/SKIPPED -- test_simple in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.69662165641785s cumulative, 0.004625082015991211s individual

.
current test PASSED/SKIPPED -- test_list_type in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.70143294334412s cumulative, 0.004811286926269531s individual

s
current test PASSED/SKIPPED -- test_simple in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.70503234863281s cumulative, 0.003599405288696289s individual

.
current test PASSED/SKIPPED -- test_boolean in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.70988011360168s cumulative, 0.00484776496887207s individual

.
current test PASSED/SKIPPED -- test_list_type_blank in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.71483707427979s cumulative, 0.004956960678100586s individual

.
current test PASSED/SKIPPED -- test_get_datetime_valid_with_format in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.72017312049866s cumulative, 0.00533604621887207s individual

.
current test PASSED/SKIPPED -- test_uuid in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.72458028793335s cumulative, 0.004407167434692383s individual

.
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.73088908195496s cumulative, 0.006308794021606445s individual

s
current test PASSED/SKIPPED -- test_get_dict_invalid in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.73448586463928s cumulative, 0.003596782684326172s individual

.
current test PASSED/SKIPPED -- test_int_neg in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.7395544052124s cumulative, 0.005068540573120117s individual

s
current test PASSED/SKIPPED -- test_blank in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.74367809295654s cumulative, 0.004123687744140625s individual

.
current test PASSED/SKIPPED -- test_none in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.74811935424805s cumulative, 0.004441261291503906s individual

.
current test PASSED/SKIPPED -- test_get_param_as_json_handler_json in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.75231337547302s cumulative, 0.004194021224975586s individual

.
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.7577075958252s cumulative, 0.0053942203521728516s individual

s
current test PASSED/SKIPPED -- test_default in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.76183581352234s cumulative, 0.004128217697143555s individual

.
current test PASSED/SKIPPED -- test_get_date_invalid in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.76744842529297s cumulative, 0.005612611770629883s individual

.
current test PASSED/SKIPPED -- test_get_dict_valid in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.77172136306763s cumulative, 0.004272937774658203s individual

s
current test PASSED/SKIPPED -- test_required in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.77542662620544s cumulative, 0.003705263137817383s individual

.
current test PASSED/SKIPPED -- test_float in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.78018236160278s cumulative, 0.004755735397338867s individual

.
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_simple_false in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.78433012962341s cumulative, 0.004147768020629883s individual

.
current test PASSED/SKIPPED -- test_percent_encoded in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.78858590126038s cumulative, 0.004255771636962891s individual

s
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.79275321960449s cumulative, 0.004167318344116211s individual

.
current test PASSED/SKIPPED -- test_multiple_keys_as_int in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.79751706123352s cumulative, 0.00476384162902832s individual

.
current test PASSED/SKIPPED -- test_uuid in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.80177307128906s cumulative, 0.004256010055541992s individual

.
current test PASSED/SKIPPED -- test_get_dict_missing_param in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.80667114257812s cumulative, 0.0048980712890625s individual

.
current test PASSED/SKIPPED -- test_none in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.81099557876587s cumulative, 0.004324436187744141s individual

s
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.81733727455139s cumulative, 0.006341695785522461s individual

s
current test PASSED/SKIPPED -- test_list_transformer in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.82149147987366s cumulative, 0.004154205322265625s individual

.
current test PASSED/SKIPPED -- test_int_neg in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.82595324516296s cumulative, 0.004461765289306641s individual

.
current test PASSED/SKIPPED -- test_multiple_keys_as_float in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.83013153076172s cumulative, 0.004178285598754883s individual

.
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_simple_false in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.83570671081543s cumulative, 0.0055751800537109375s individual

.
current test PASSED/SKIPPED -- test_get_datetime_store in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.84001922607422s cumulative, 0.0043125152587890625s individual

.
current test PASSED/SKIPPED -- test_multiple_keys_as_int in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.84520745277405s cumulative, 0.0051882266998291016s individual

.
current test PASSED/SKIPPED -- test_get_dict_missing_param in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.84943509101868s cumulative, 0.004227638244628906s individual

.
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_simple_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.85407853126526s cumulative, 0.004643440246582031s individual

.
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.85862922668457s cumulative, 0.0045506954193115234s individual

.
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_complex_false in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.86279964447021s cumulative, 0.004170417785644531s individual

s
current test PASSED/SKIPPED -- test_get_date_valid in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.86639404296875s cumulative, 0.0035943984985351562s individual

.
current test PASSED/SKIPPED -- test_get_date_valid_with_format in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.87185478210449s cumulative, 0.0054607391357421875s individual

.
current test PASSED/SKIPPED -- test_get_date_valid in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.87668108940125s cumulative, 0.00482630729675293s individual

.
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.88127636909485s cumulative, 0.004595279693603516s individual

.
current test PASSED/SKIPPED -- test_required in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.88645887374878s cumulative, 0.005182504653930664s individual

.
current test PASSED/SKIPPED -- test_int in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.8912661075592s cumulative, 0.004807233810424805s individual

.
current test PASSED/SKIPPED -- test_get_datetime_invalid in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.89639925956726s cumulative, 0.005133152008056641s individual

.
current test PASSED/SKIPPED -- test_get_dict_invalid in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.90067553520203s cumulative, 0.004276275634765625s individual

s
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.90485453605652s cumulative, 0.0041790008544921875s individual

s
current test PASSED/SKIPPED -- test_required in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.90903949737549s cumulative, 0.0041849613189697266s individual

s
current test PASSED/SKIPPED -- test_get_date_store in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.91272211074829s cumulative, 0.0036826133728027344s individual

.
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.91744756698608s cumulative, 0.004725456237792969s individual

.
current test PASSED/SKIPPED -- test_get_datetime_invalid in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.9230580329895s cumulative, 0.005610466003417969s individual

.
current test PASSED/SKIPPED -- test_default in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.92804884910583s cumulative, 0.004990816116333008s individual

.
current test PASSED/SKIPPED -- test_has_param in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.93221592903137s cumulative, 0.004167079925537109s individual

.
current test PASSED/SKIPPED -- test_float_neg in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.93648910522461s cumulative, 0.004273176193237305s individual

.
current test PASSED/SKIPPED -- test_get_datetime_store in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.94174551963806s cumulative, 0.0052564144134521484s individual

.
current test PASSED/SKIPPED -- test_required in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.94611597061157s cumulative, 0.004370450973510742s individual

.
current test PASSED/SKIPPED -- test_bad_percentage in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.95026850700378s cumulative, 0.004152536392211914s individual

.
current test PASSED/SKIPPED -- test_get_dict_missing_param in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.95448279380798s cumulative, 0.004214286804199219s individual

.
current test PASSED/SKIPPED -- test_boolean_blank in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.95997428894043s cumulative, 0.005491495132446289s individual

.
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_simple_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.96486926078796s cumulative, 0.00489497184753418s individual

.
current test PASSED/SKIPPED -- test_get_datetime_missing_param in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.96907114982605s cumulative, 0.0042018890380859375s individual

s
current test PASSED/SKIPPED -- test_required in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.97291779518127s cumulative, 0.0038466453552246094s individual

.
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.97795462608337s cumulative, 0.005036830902099609s individual

.
current test PASSED/SKIPPED -- test_param_property in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.98313403129578s cumulative, 0.005179405212402344s individual

.
current test PASSED/SKIPPED -- test_get_date_missing_param in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.98731899261475s cumulative, 0.0041849613189697266s individual

.
current test PASSED/SKIPPED -- test_has_param in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.99234223365784s cumulative, 0.00502324104309082s individual

s
current test PASSED/SKIPPED -- test_required in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 78.9966447353363s cumulative, 0.004302501678466797s individual

.
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.00177788734436s cumulative, 0.005133152008056641s individual

.
current test PASSED/SKIPPED -- test_param_property in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.00597858428955s cumulative, 0.00420069694519043s individual

.
current test PASSED/SKIPPED -- test_float_neg in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.01034331321716s cumulative, 0.004364728927612305s individual

.
current test PASSED/SKIPPED -- test_required in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.01518273353577s cumulative, 0.004839420318603516s individual

s
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_complex_false in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.01873588562012s cumulative, 0.003553152084350586s individual

.
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_complex_false in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.02372241020203s cumulative, 0.00498652458190918s individual

s
current test PASSED/SKIPPED -- test_none in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.0297474861145s cumulative, 0.006025075912475586s individual

.
current test PASSED/SKIPPED -- test_boolean_blank in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.03403210639954s cumulative, 0.00428462028503418s individual

.
current test PASSED/SKIPPED -- test_boolean in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.03915071487427s cumulative, 0.005118608474731445s individual

.
current test PASSED/SKIPPED -- test_get_param_as_json_no_handler_json in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.04424238204956s cumulative, 0.005091667175292969s individual

.
current test PASSED/SKIPPED -- test_list_type_blank in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.04909896850586s cumulative, 0.004856586456298828s individual

s
current test PASSED/SKIPPED -- test_multiple_keys_as_bool in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.05268144607544s cumulative, 0.003582477569580078s individual

.
current test PASSED/SKIPPED -- test_get_date_invalid in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.05695152282715s cumulative, 0.004270076751708984s individual

s
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.06134843826294s cumulative, 0.004396915435791016s individual

.
current test PASSED/SKIPPED -- test_required in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.06646847724915s cumulative, 0.005120038986206055s individual

.
current test PASSED/SKIPPED -- test_param_property in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.07078742980957s cumulative, 0.004318952560424805s individual

s
current test PASSED/SKIPPED -- test_get_datetime_valid_with_format in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.07439661026001s cumulative, 0.003609180450439453s individual

s
current test PASSED/SKIPPED -- test_boolean in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.07834696769714s cumulative, 0.003950357437133789s individual

.
current test PASSED/SKIPPED -- test_get_datetime_missing_param in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.08252167701721s cumulative, 0.004174709320068359s individual

.
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.08826279640198s cumulative, 0.005741119384765625s individual

.
current test PASSED/SKIPPED -- test_list_transformer in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.09377527236938s cumulative, 0.0055124759674072266s individual

.
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.09907221794128s cumulative, 0.005296945571899414s individual

s
current test PASSED/SKIPPED -- test_get_date_invalid in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.10267734527588s cumulative, 0.0036051273345947266s individual

.
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.10726761817932s cumulative, 0.004590272903442383s individual

.
current test PASSED/SKIPPED -- test_required in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.11268067359924s cumulative, 0.005413055419921875s individual

s
current test PASSED/SKIPPED -- test_required in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.11640810966492s cumulative, 0.003727436065673828s individual

.
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.12100887298584s cumulative, 0.0046007633209228516s individual

.
current test PASSED/SKIPPED -- test_get_date_store in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.1254551410675s cumulative, 0.004446268081665039s individual

s
current test PASSED/SKIPPED -- test_get_dict_valid in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.12962818145752s cumulative, 0.0041730403900146484s individual

.
current test PASSED/SKIPPED -- test_get_datetime_valid_with_format in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.13393211364746s cumulative, 0.004303932189941406s individual

.
current test PASSED/SKIPPED -- test_multiple_form_keys in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.13809847831726s cumulative, 0.004166364669799805s individual

.
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.14394450187683s cumulative, 0.0058460235595703125s individual

.
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_complex_false in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.14822840690613s cumulative, 0.004283905029296875s individual

.
current test PASSED/SKIPPED -- test_percent_encoded in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.15312910079956s cumulative, 0.004900693893432617s individual

.
current test PASSED/SKIPPED -- test_get_date_store in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.15748190879822s cumulative, 0.0043528079986572266s individual

.
current test PASSED/SKIPPED -- test_required in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.16299939155579s cumulative, 0.005517482757568359s individual

.
current test PASSED/SKIPPED -- test_default_auto_parse_csv_behaviour in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.16747426986694s cumulative, 0.0044748783111572266s individual

s
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.17145609855652s cumulative, 0.003981828689575195s individual

.
current test PASSED/SKIPPED -- test_required in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.17695808410645s cumulative, 0.005501985549926758s individual

.
current test PASSED/SKIPPED -- test_float in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.18188261985779s cumulative, 0.0049245357513427734s individual

.
current test PASSED/SKIPPED -- test_required in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.18620800971985s cumulative, 0.004325389862060547s individual

.
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_multiple_fields_false in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.19036960601807s cumulative, 0.0041615962982177734s individual

.
current test PASSED/SKIPPED -- test_get_dict_valid in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.19493508338928s cumulative, 0.00456547737121582s individual

.
current test PASSED/SKIPPED -- test_get_dict_invalid in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.19918441772461s cumulative, 0.0042493343353271484s individual

.
current test PASSED/SKIPPED -- test_multiple_form_keys_as_list in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.20331454277039s cumulative, 0.004130125045776367s individual

s
current test PASSED/SKIPPED -- test_get_datetime_store in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.20697593688965s cumulative, 0.0036613941192626953s individual

s
current test PASSED/SKIPPED -- test_multiple_form_keys in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.21107888221741s cumulative, 0.004102945327758789s individual

s
current test PASSED/SKIPPED -- test_get_date_valid_with_format in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.21454739570618s cumulative, 0.0034685134887695312s individual

.
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.21912384033203s cumulative, 0.004576444625854492s individual

.
current test PASSED/SKIPPED -- test_allowed_names in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.22505068778992s cumulative, 0.005926847457885742s individual

.
current test PASSED/SKIPPED -- test_int in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.22943210601807s cumulative, 0.004381418228149414s individual

.
current test PASSED/SKIPPED -- test_bad_percentage in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.23370289802551s cumulative, 0.004270792007446289s individual

.
current test PASSED/SKIPPED -- test_blank in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.23785185813904s cumulative, 0.004148960113525391s individual

.
current test PASSED/SKIPPED -- test_get_date_missing_param in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.24197840690613s cumulative, 0.004126548767089844s individual

s
current test PASSED/SKIPPED -- test_required in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.24605059623718s cumulative, 0.0040721893310546875s individual

.
current test PASSED/SKIPPED -- test_get_dict_valid in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.25112581253052s cumulative, 0.005075216293334961s individual

.
current test PASSED/SKIPPED -- test_simple in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.25595831871033s cumulative, 0.00483250617980957s individual

.
current test PASSED/SKIPPED -- test_get_datetime_store in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.2612853050232s cumulative, 0.005326986312866211s individual

.
current test PASSED/SKIPPED -- test_uuid in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.26635026931763s cumulative, 0.005064964294433594s individual

s
current test PASSED/SKIPPED -- test_has_param in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.27000665664673s cumulative, 0.0036563873291015625s individual

s
current test PASSED/SKIPPED -- test_allowed_names in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.27394580841064s cumulative, 0.003939151763916016s individual

.
current test PASSED/SKIPPED -- test_default_auto_parse_csv_behaviour in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.27879285812378s cumulative, 0.004847049713134766s individual

.
current test PASSED/SKIPPED -- test_required in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.28315258026123s cumulative, 0.004359722137451172s individual

s
current test PASSED/SKIPPED -- test_list_type in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.28676247596741s cumulative, 0.003609895706176758s individual

.
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.29178500175476s cumulative, 0.005022525787353516s individual

s
current test PASSED/SKIPPED -- test_get_datetime_invalid in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.29534244537354s cumulative, 0.003557443618774414s individual

.
current test PASSED/SKIPPED -- test_list_type_blank in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.29957008361816s cumulative, 0.004227638244628906s individual

s
current test PASSED/SKIPPED -- test_get_date_missing_param in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.30353212356567s cumulative, 0.003962039947509766s individual

s
current test PASSED/SKIPPED -- test_get_datetime_valid in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.30705118179321s cumulative, 0.0035190582275390625s individual

.
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.31164240837097s cumulative, 0.004591226577758789s individual

.
current test PASSED/SKIPPED -- test_get_datetime_invalid in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.31590914726257s cumulative, 0.0042667388916015625s individual

s
current test PASSED/SKIPPED -- test_boolean_blank in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.31990242004395s cumulative, 0.00399327278137207s individual

.
current test PASSED/SKIPPED -- test_default in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.32410478591919s cumulative, 0.004202365875244141s individual

.
current test PASSED/SKIPPED -- test_required in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.32920098304749s cumulative, 0.0050961971282958984s individual

.
current test PASSED/SKIPPED -- test_multiple_keys_as_float in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.33343982696533s cumulative, 0.00423884391784668s individual

.
current test PASSED/SKIPPED -- test_simple in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.33801484107971s cumulative, 0.004575014114379883s individual

s
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.34199571609497s cumulative, 0.003980875015258789s individual

.
current test PASSED/SKIPPED -- test_list_transformer in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.34620332717896s cumulative, 0.004207611083984375s individual

.
current test PASSED/SKIPPED -- test_required in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.35047960281372s cumulative, 0.004276275634765625s individual

.
current test PASSED/SKIPPED -- test_list_type in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.35506415367126s cumulative, 0.004584550857543945s individual

.
current test PASSED/SKIPPED -- test_boolean_blank in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.35921478271484s cumulative, 0.0041506290435791016s individual

.
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_simple_false in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.36396598815918s cumulative, 0.0047512054443359375s individual

s
current test PASSED/SKIPPED -- test_default_auto_parse_csv_behaviour in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.36845874786377s cumulative, 0.004492759704589844s individual

s
current test PASSED/SKIPPED -- test_float in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.37247610092163s cumulative, 0.004017353057861328s individual

s
current test PASSED/SKIPPED -- test_int in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.37596583366394s cumulative, 0.0034897327423095703s individual

.
current test PASSED/SKIPPED -- test_multiple_form_keys in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.38110542297363s cumulative, 0.005139589309692383s individual

.
current test PASSED/SKIPPED -- test_blank in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.38656973838806s cumulative, 0.005464315414428711s individual

.
current test PASSED/SKIPPED -- test_blank in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.39076232910156s cumulative, 0.0041925907135009766s individual

.
current test PASSED/SKIPPED -- test_multiple_keys_as_bool in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.3957622051239s cumulative, 0.004999876022338867s individual

.
current test PASSED/SKIPPED -- test_none in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.40066528320312s cumulative, 0.004903078079223633s individual

s
current test PASSED/SKIPPED -- test_param_property in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.40473985671997s cumulative, 0.004074573516845703s individual

.
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.40929913520813s cumulative, 0.00455927848815918s individual

.
current test PASSED/SKIPPED -- test_required in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.41361284255981s cumulative, 0.00431370735168457s individual

.
current test PASSED/SKIPPED -- test_get_date_valid_with_format in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.41805744171143s cumulative, 0.004444599151611328s individual

s
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_simple_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.42363047599792s cumulative, 0.0055730342864990234s individual

.
current test PASSED/SKIPPED -- test_get_dict_store in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.42787003517151s cumulative, 0.004239559173583984s individual

s
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_simple_false in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.43143558502197s cumulative, 0.003565549850463867s individual

.
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_multiple_fields_false in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.43568468093872s cumulative, 0.004249095916748047s individual

.
current test PASSED/SKIPPED -- test_multiple_keys_as_bool in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.44028520584106s cumulative, 0.00460052490234375s individual

.
current test PASSED/SKIPPED -- test_get_date_store in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.44536232948303s cumulative, 0.0050771236419677734s individual

s
current test PASSED/SKIPPED -- test_uuid in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.44894123077393s cumulative, 0.0035789012908935547s individual

.
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.45353770256042s cumulative, 0.0045964717864990234s individual

.
current test PASSED/SKIPPED -- test_list_type in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.45817732810974s cumulative, 0.004639625549316406s individual

s
current test PASSED/SKIPPED -- test_multiple_keys_as_int in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.46174144744873s cumulative, 0.003564119338989258s individual

.
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_multiple_fields_false in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.46674513816833s cumulative, 0.005003690719604492s individual

.
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.47257041931152s cumulative, 0.0058252811431884766s individual

.
current test PASSED/SKIPPED -- test_get_date_valid in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.47679710388184s cumulative, 0.0042266845703125s individual

.
current test PASSED/SKIPPED -- test_allowed_names in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.48170614242554s cumulative, 0.004909038543701172s individual

.
current test PASSED/SKIPPED -- test_required in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.48604822158813s cumulative, 0.004342079162597656s individual

.
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.49105191230774s cumulative, 0.005003690719604492s individual

.
current test PASSED/SKIPPED -- test_float_neg in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.49603724479675s cumulative, 0.004985332489013672s individual

.
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.50067400932312s cumulative, 0.0046367645263671875s individual

.
current test PASSED/SKIPPED -- test_multiple_form_keys in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.50491571426392s cumulative, 0.0042417049407958984s individual

.
current test PASSED/SKIPPED -- test_required in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.50965237617493s cumulative, 0.004736661911010742s individual

s
current test PASSED/SKIPPED -- test_percent_encoded in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.51321601867676s cumulative, 0.0035636425018310547s individual

.
current test PASSED/SKIPPED -- test_allowed_names in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.5173647403717s cumulative, 0.004148721694946289s individual

.
current test PASSED/SKIPPED -- test_get_dict_store in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.5227620601654s cumulative, 0.005397319793701172s individual

.
current test PASSED/SKIPPED -- test_default_auto_parse_csv_behaviour in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.52694964408875s cumulative, 0.004187583923339844s individual

.
current test PASSED/SKIPPED -- test_get_date_invalid in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.5311861038208s cumulative, 0.004236459732055664s individual

.
current test PASSED/SKIPPED -- test_multiple_keys_as_float in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.5360975265503s cumulative, 0.0049114227294921875s individual

.
current test PASSED/SKIPPED -- test_get_dict_store in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.54075002670288s cumulative, 0.004652500152587891s individual

s
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.54469227790833s cumulative, 0.003942251205444336s individual

.
current test PASSED/SKIPPED -- test_multiple_keys_as_bool in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.54882621765137s cumulative, 0.004133939743041992s individual

.
current test PASSED/SKIPPED -- test_list_transformer in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.5530104637146s cumulative, 0.004184246063232422s individual

.
current test PASSED/SKIPPED -- test_get_date_missing_param in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.55833220481873s cumulative, 0.0053217411041259766s individual

.
current test PASSED/SKIPPED -- test_get_datetime_valid_with_format in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.56326580047607s cumulative, 0.004933595657348633s individual

.
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.56865429878235s cumulative, 0.005388498306274414s individual

s
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.5729706287384s cumulative, 0.0043163299560546875s individual

.
current test PASSED/SKIPPED -- test_get_date_valid_with_format in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.57715368270874s cumulative, 0.004183053970336914s individual

s
current test PASSED/SKIPPED -- test_get_dict_store in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.58075428009033s cumulative, 0.003600597381591797s individual

s
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_multiple_fields_false in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.58472633361816s cumulative, 0.003972053527832031s individual

.
current test PASSED/SKIPPED -- test_get_date_valid in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.58965373039246s cumulative, 0.004927396774291992s individual

s
current test PASSED/SKIPPED -- test_multiple_keys_as_float in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.59336543083191s cumulative, 0.003711700439453125s individual

s
current test PASSED/SKIPPED -- test_list_type_blank in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.59727549552917s cumulative, 0.003910064697265625s individual

.
current test PASSED/SKIPPED -- test_get_datetime_missing_param in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.60204648971558s cumulative, 0.004770994186401367s individual

.
current test PASSED/SKIPPED -- test_bad_percentage in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.60689568519592s cumulative, 0.00484919548034668s individual

s
current test PASSED/SKIPPED -- test_get_datetime_missing_param in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.61066246032715s cumulative, 0.003766775131225586s individual

.
current test PASSED/SKIPPED -- test_required in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.61674237251282s cumulative, 0.006079912185668945s individual

.
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.62126898765564s cumulative, 0.004526615142822266s individual

.
current test PASSED/SKIPPED -- test_int_neg in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.6255395412445s cumulative, 0.0042705535888671875s individual

.
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.63006067276001s cumulative, 0.00452113151550293s individual

.
current test PASSED/SKIPPED -- test_boolean in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.63427472114563s cumulative, 0.004214048385620117s individual

.
current test PASSED/SKIPPED -- test_required in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.63892674446106s cumulative, 0.0046520233154296875s individual

.
current test PASSED/SKIPPED -- test_multiple_form_keys_as_list in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.64303660392761s cumulative, 0.004109859466552734s individual

.
current test PASSED/SKIPPED -- test_get_datetime_valid in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.64811420440674s cumulative, 0.0050776004791259766s individual

.
current test PASSED/SKIPPED -- test_percent_encoded in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.65232825279236s cumulative, 0.004214048385620117s individual

.
current test PASSED/SKIPPED -- test_multiple_form_keys_as_list in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.65745186805725s cumulative, 0.005123615264892578s individual

.
current test PASSED/SKIPPED -- test_required in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.66176462173462s cumulative, 0.004312753677368164s individual

.
current test PASSED/SKIPPED -- test_multiple_keys_as_int in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.66590285301208s cumulative, 0.00413823127746582s individual

s
current test PASSED/SKIPPED -- test_int_neg in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.66944932937622s cumulative, 0.003546476364135742s individual

.
current test PASSED/SKIPPED -- test_required in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.67415833473206s cumulative, 0.004709005355834961s individual

.
current test PASSED/SKIPPED -- test_get_dict_invalid in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.67913126945496s cumulative, 0.004972934722900391s individual

.
current test PASSED/SKIPPED -- test_default in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.68335342407227s cumulative, 0.00422215461730957s individual

.
current test PASSED/SKIPPED -- test_float in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.68777370452881s cumulative, 0.004420280456542969s individual

.
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_simple_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.69227647781372s cumulative, 0.004502773284912109s individual

.
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.69677972793579s cumulative, 0.0045032501220703125s individual

s
current test PASSED/SKIPPED -- test_bad_percentage in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.70033383369446s cumulative, 0.003554105758666992s individual

.
current test PASSED/SKIPPED -- test_http_methods_body_expected in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.70465636253357s cumulative, 0.004322528839111328s individual

.
current test PASSED/SKIPPED -- test_http_methods_body_expected in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.70939707756042s cumulative, 0.004740715026855469s individual

s
current test PASSED/SKIPPED -- test_http_methods_body_expected in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.71307444572449s cumulative, 0.0036773681640625s individual

.
current test PASSED/SKIPPED -- test_http_methods_body_not_expected in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.71731114387512s cumulative, 0.004236698150634766s individual

s
current test PASSED/SKIPPED -- test_non_ascii in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.72085118293762s cumulative, 0.0035400390625s individual

s
current test PASSED/SKIPPED -- test_http_methods_body_not_expected in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.72488689422607s cumulative, 0.0040357112884521484s individual

.
current test PASSED/SKIPPED -- test_non_ascii in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.72958636283875s cumulative, 0.0046994686126708984s individual

.
current test PASSED/SKIPPED -- test_http_methods_body_expected in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.73389220237732s cumulative, 0.004305839538574219s individual

s
current test PASSED/SKIPPED -- test_explicitly_disable_auto_parse in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.73750257492065s cumulative, 0.003610372543334961s individual

s
current test PASSED/SKIPPED -- test_http_methods_body_not_expected in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.74154901504517s cumulative, 0.004046440124511719s individual

.
current test PASSED/SKIPPED -- test_empty_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.74568295478821s cumulative, 0.004133939743041992s individual

.
current test PASSED/SKIPPED -- test_asgi_raises_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.7492470741272s cumulative, 0.003564119338989258s individual

s
current test PASSED/SKIPPED -- test_http_methods_body_expected in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.75332427024841s cumulative, 0.00407719612121582s individual

.
current test PASSED/SKIPPED -- test_explicitly_disable_auto_parse in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.75746870040894s cumulative, 0.004144430160522461s individual

.
current test PASSED/SKIPPED -- test_http_methods_body_not_expected in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.76169753074646s cumulative, 0.004228830337524414s individual

s
current test PASSED/SKIPPED -- test_http_methods_body_expected in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.76548194885254s cumulative, 0.0037844181060791016s individual

.
current test PASSED/SKIPPED -- test_http_methods_body_expected in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.77021050453186s cumulative, 0.004728555679321289s individual

s
current test PASSED/SKIPPED -- test_http_methods_body_expected in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.77388119697571s cumulative, 0.0036706924438476562s individual

.
current test PASSED/SKIPPED -- test_http_methods_body_expected in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.77815437316895s cumulative, 0.004273176193237305s individual

s
current test PASSED/SKIPPED -- test_http_methods_body_expected in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.7818775177002s cumulative, 0.00372314453125s individual

s
current test PASSED/SKIPPED -- test_empty_body_no_content_length in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.78575396537781s cumulative, 0.0038764476776123047s individual

.
current test PASSED/SKIPPED -- test_empty_body_no_content_length in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.78982782363892s cumulative, 0.0040738582611083984s individual

s
current test PASSED/SKIPPED -- test_empty_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 79.79336977005005s cumulative, 0.0035419464111328125s individual


tests/test_request_attrs.py .
current test PASSED/SKIPPED -- test_netloc_from_env in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 79.7967278957367s cumulative, 0.003358125686645508s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 79.80030608177185s cumulative, 0.00357818603515625s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 79.80385875701904s cumulative, 0.003552675247192383s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 79.8074598312378s cumulative, 0.00360107421875s individual

.
current test PASSED/SKIPPED -- test_uri_https in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 79.81121397018433s cumulative, 0.003754138946533203s individual

.
current test PASSED/SKIPPED -- test_app_blank in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 79.81426525115967s cumulative, 0.003051280975341797s individual

.
current test PASSED/SKIPPED -- test_date_missing in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 79.81744313240051s cumulative, 0.0031778812408447266s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 79.82106256484985s cumulative, 0.0036194324493408203s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 79.82467532157898s cumulative, 0.0036127567291259766s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 79.829745054245s cumulative, 0.005069732666015625s individual

.
current test PASSED/SKIPPED -- test_etag_is_missing in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 79.83274936676025s cumulative, 0.003004312515258789s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 79.83634686470032s cumulative, 0.0035974979400634766s individual

.
current test PASSED/SKIPPED -- test_netloc_nondefault_port in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 79.83952260017395s cumulative, 0.0031757354736328125s individual

.
current test PASSED/SKIPPED -- test_attribute_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 79.84313082695007s cumulative, 0.003608226776123047s individual

.
current test PASSED/SKIPPED -- test_scheme_https in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 79.84661817550659s cumulative, 0.0034873485565185547s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 79.85037326812744s cumulative, 0.0037550926208496094s individual

.
current test PASSED/SKIPPED -- test_empty_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 79.85337948799133s cumulative, 0.0030062198638916016s individual

.
current test PASSED/SKIPPED -- test_client_accepts_bogus in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 79.85642647743225s cumulative, 0.0030469894409179688s individual

.
current test PASSED/SKIPPED -- test_client_accepts in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 79.86105394363403s cumulative, 0.0046274662017822266s individual

.
current test PASSED/SKIPPED -- test_uri_https in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 79.86419534683228s cumulative, 0.0031414031982421875s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 79.86776232719421s cumulative, 0.0035669803619384766s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 79.87129545211792s cumulative, 0.0035331249237060547s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 79.87485456466675s cumulative, 0.003559112548828125s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 79.8786072731018s cumulative, 0.0037527084350585938s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 79.88216590881348s cumulative, 0.003558635711669922s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 79.88579177856445s cumulative, 0.0036258697509765625s individual

.
current test PASSED/SKIPPED -- test_empty in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 79.88871955871582s cumulative, 0.0029277801513671875s individual

.
current test PASSED/SKIPPED -- test_missing_attribute_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 79.89187574386597s cumulative, 0.0031561851501464844s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 79.89563488960266s cumulative, 0.003759145736694336s individual

.
current test PASSED/SKIPPED -- test_bogus_content_length_nan in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 79.89876985549927s cumulative, 0.0031349658966064453s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 79.90233898162842s cumulative, 0.0035691261291503906s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 79.90588283538818s cumulative, 0.003543853759765625s individual

.
current test PASSED/SKIPPED -- test_empty in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 79.9088249206543s cumulative, 0.0029420852661132812s individual

.
current test PASSED/SKIPPED -- test_date_missing in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 79.91198658943176s cumulative, 0.0031616687774658203s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 79.91570591926575s cumulative, 0.003719329833984375s individual

.
current test PASSED/SKIPPED -- test_range in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 79.91916704177856s cumulative, 0.003461122512817383s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 79.92274808883667s cumulative, 0.0035810470581054688s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 79.92629551887512s cumulative, 0.0035474300384521484s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 79.92999196052551s cumulative, 0.003696441650390625s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 79.93350982666016s cumulative, 0.0035178661346435547s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 79.93716192245483s cumulative, 0.0036520957946777344s individual

.
current test PASSED/SKIPPED -- test_netloc_nondefault_port in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 79.94041228294373s cumulative, 0.0032503604888916016s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 79.94396734237671s cumulative, 0.0035550594329833984s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 79.94771432876587s cumulative, 0.0037469863891601562s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 79.95124053955078s cumulative, 0.0035262107849121094s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 79.95485520362854s cumulative, 0.003614664077758789s individual

.
current test PASSED/SKIPPED -- test_attribute_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 79.95848655700684s cumulative, 0.0036313533782958984s individual

.
current test PASSED/SKIPPED -- test_attribute_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 79.96208882331848s cumulative, 0.003602266311645508s individual

.
current test PASSED/SKIPPED -- test_etag_parsing_helper in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 79.96515846252441s cumulative, 0.003069639205932617s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 79.96889472007751s cumulative, 0.003736257553100586s individual

.
current test PASSED/SKIPPED -- test_subdomain in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 79.97353053092957s cumulative, 0.004635810852050781s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 79.97719407081604s cumulative, 0.0036635398864746094s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 79.98075842857361s cumulative, 0.0035643577575683594s individual

.
current test PASSED/SKIPPED -- test_netloc_nondefault_port in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 79.98411870002747s cumulative, 0.003360271453857422s individual

.
current test PASSED/SKIPPED -- test_content_length_method in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 79.98704123497009s cumulative, 0.002922534942626953s individual

.
current test PASSED/SKIPPED -- test_scheme_http in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 79.99034905433655s cumulative, 0.003307819366455078s individual

.
current test PASSED/SKIPPED -- test_uri in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 79.99329662322998s cumulative, 0.002947568893432617s individual

.
current test PASSED/SKIPPED -- test_range_unit in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 79.9966402053833s cumulative, 0.0033435821533203125s individual

.
current test PASSED/SKIPPED -- test_nonlatin_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.00002193450928s cumulative, 0.0033817291259765625s individual

.
current test PASSED/SKIPPED -- test_attribute_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.0036404132843s cumulative, 0.003618478775024414s individual

.
current test PASSED/SKIPPED -- test_client_accepts_props in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.00744104385376s cumulative, 0.003800630569458008s individual

.
current test PASSED/SKIPPED -- test_date in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.01126623153687s cumulative, 0.0038251876831054688s individual

.
current test PASSED/SKIPPED -- test_scheme_http in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.01472854614258s cumulative, 0.0034623146057128906s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.01829886436462s cumulative, 0.0035703182220458984s individual

.
current test PASSED/SKIPPED -- test_scheme_https in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.02157640457153s cumulative, 0.0032775402069091797s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.02516722679138s cumulative, 0.003590822219848633s individual

.
current test PASSED/SKIPPED -- test_date_missing in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.0283555984497s cumulative, 0.0031883716583251953s individual

.
current test PASSED/SKIPPED -- test_netloc_from_env in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.03152656555176s cumulative, 0.0031709671020507812s individual

.
current test PASSED/SKIPPED -- test_app_present in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.03568840026855s cumulative, 0.004161834716796875s individual

.
current test PASSED/SKIPPED -- test_scheme_http in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.0389952659607s cumulative, 0.003306865692138672s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.04256224632263s cumulative, 0.0035669803619384766s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.04609060287476s cumulative, 0.0035283565521240234s individual

.
current test PASSED/SKIPPED -- test_uri_http_1_0 in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.04946708679199s cumulative, 0.003376483917236328s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.05326128005981s cumulative, 0.0037941932678222656s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.05680060386658s cumulative, 0.0035393238067626953s individual

.
current test PASSED/SKIPPED -- test_content_length in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.05990552902222s cumulative, 0.0031049251556396484s individual

.
current test PASSED/SKIPPED -- test_host in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.06286430358887s cumulative, 0.0029587745666503906s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.06641817092896s cumulative, 0.0035538673400878906s individual

.
current test PASSED/SKIPPED -- test_scheme_http in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.06987738609314s cumulative, 0.0034592151641845703s individual

.
current test PASSED/SKIPPED -- test_scheme_https in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.07304215431213s cumulative, 0.0031647682189941406s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.07662606239319s cumulative, 0.0035839080810546875s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.08020877838135s cumulative, 0.0035827159881591797s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.08386611938477s cumulative, 0.0036573410034179688s individual

.
current test PASSED/SKIPPED -- test_etag_parsing_helper in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.0869824886322s cumulative, 0.0031163692474365234s individual

.
current test PASSED/SKIPPED -- test_etag_parsing_helper in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.09019374847412s cumulative, 0.0032112598419189453s individual

.
current test PASSED/SKIPPED -- test_range_invalid in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.09536123275757s cumulative, 0.005167484283447266s individual

.
current test PASSED/SKIPPED -- test_relative_uri in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.09867572784424s cumulative, 0.003314495086669922s individual

.
current test PASSED/SKIPPED -- test_attribute_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.10229253768921s cumulative, 0.003616809844970703s individual

.
current test PASSED/SKIPPED -- test_host in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.10525727272034s cumulative, 0.0029647350311279297s individual

.
current test PASSED/SKIPPED -- test_etag_parsing_helper in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.10833215713501s cumulative, 0.0030748844146728516s individual

.
current test PASSED/SKIPPED -- test_scheme_https in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.11147546768188s cumulative, 0.003143310546875s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.11519289016724s cumulative, 0.0037174224853515625s individual

.
current test PASSED/SKIPPED -- test_date_invalid in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.11869621276855s cumulative, 0.0035033226013183594s individual

.
current test PASSED/SKIPPED -- test_scheme_http in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.12206029891968s cumulative, 0.003364086151123047s individual

.
current test PASSED/SKIPPED -- test_attribute_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.12564373016357s cumulative, 0.0035834312438964844s individual

.
current test PASSED/SKIPPED -- test_netloc_default_port in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.12883925437927s cumulative, 0.003195524215698242s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.13257765769958s cumulative, 0.0037384033203125s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.13611006736755s cumulative, 0.00353240966796875s individual

.
current test PASSED/SKIPPED -- test_client_prefers in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.13940501213074s cumulative, 0.0032949447631835938s individual

.
current test PASSED/SKIPPED -- test_attribute_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.14298152923584s cumulative, 0.003576517105102539s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.14654541015625s cumulative, 0.0035638809204101562s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.15024328231812s cumulative, 0.0036978721618652344s individual

.
current test PASSED/SKIPPED -- test_port_explicit in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.15340542793274s cumulative, 0.0031621456146240234s individual

.
current test PASSED/SKIPPED -- test_date in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.15676212310791s cumulative, 0.0033566951751708984s individual

.
current test PASSED/SKIPPED -- test_netloc_default_port in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.15992903709412s cumulative, 0.0031669139862060547s individual

.
current test PASSED/SKIPPED -- test_date_invalid in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.16339945793152s cumulative, 0.0034704208374023438s individual

.
current test PASSED/SKIPPED -- test_scheme_http in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.1669294834137s cumulative, 0.0035300254821777344s individual

.
current test PASSED/SKIPPED -- test_content_length in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.16999864578247s cumulative, 0.003069162368774414s individual

.
current test PASSED/SKIPPED -- test_etag_is_missing in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.17294788360596s cumulative, 0.002949237823486328s individual

.
current test PASSED/SKIPPED -- test_empty_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.17602181434631s cumulative, 0.0030739307403564453s individual

.
current test PASSED/SKIPPED -- test_attribute_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.17963743209839s cumulative, 0.0036156177520751953s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.1833074092865s cumulative, 0.0036699771881103516s individual

.
current test PASSED/SKIPPED -- test_content_type_method in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.18619227409363s cumulative, 0.0028848648071289062s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.1897943019867s cumulative, 0.0036020278930664062s individual

.
current test PASSED/SKIPPED -- test_scheme_http in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.19310712814331s cumulative, 0.003312826156616211s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.19666147232056s cumulative, 0.0035543441772460938s individual

.
current test PASSED/SKIPPED -- test_range in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.20020699501038s cumulative, 0.003545522689819336s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.20380854606628s cumulative, 0.003601551055908203s individual

.
current test PASSED/SKIPPED -- test_date_invalid in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.20726895332336s cumulative, 0.003460407257080078s individual

.
current test PASSED/SKIPPED -- test_netloc_from_env in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.21049737930298s cumulative, 0.003228425979614258s individual

.
current test PASSED/SKIPPED -- test_content_type_method in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.21342396736145s cumulative, 0.0029265880584716797s individual

.
current test PASSED/SKIPPED -- test_nonlatin_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.21692657470703s cumulative, 0.0035026073455810547s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.22043490409851s cumulative, 0.003508329391479492s individual

.
current test PASSED/SKIPPED -- test_scheme_http in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.22372317314148s cumulative, 0.00328826904296875s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.22725868225098s cumulative, 0.0035355091094970703s individual

.
current test PASSED/SKIPPED -- test_client_accepts_props in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.23186707496643s cumulative, 0.0046083927154541016s individual

.
current test PASSED/SKIPPED -- test_scheme_http in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.23517298698425s cumulative, 0.0033059120178222656s individual

.
current test PASSED/SKIPPED -- test_date in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.23852753639221s cumulative, 0.0033545494079589844s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.24209690093994s cumulative, 0.003569364547729492s individual

.
current test PASSED/SKIPPED -- test_netloc_nondefault_port in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.24526953697205s cumulative, 0.003172636032104492s individual

.
current test PASSED/SKIPPED -- test_netloc_from_env in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.24851608276367s cumulative, 0.0032465457916259766s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.25218081474304s cumulative, 0.003664731979370117s individual

.
current test PASSED/SKIPPED -- test_reconstruct_url in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.25513100624084s cumulative, 0.0029501914978027344s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.25865173339844s cumulative, 0.0035207271575927734s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.26217007637024s cumulative, 0.003518342971801758s individual

.
current test PASSED/SKIPPED -- test_method in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.26522970199585s cumulative, 0.0030596256256103516s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.26890993118286s cumulative, 0.0036802291870117188s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.27244067192078s cumulative, 0.003530740737915039s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.27599549293518s cumulative, 0.003554821014404297s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.27954602241516s cumulative, 0.0035505294799804688s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.28310465812683s cumulative, 0.003558635711669922s individual

.
current test PASSED/SKIPPED -- test_client_prefers in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.28653883934021s cumulative, 0.0034341812133789062s individual

.
current test PASSED/SKIPPED -- test_date_missing in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.28971886634827s cumulative, 0.0031800270080566406s individual

.
current test PASSED/SKIPPED -- test_nonlatin_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.292888879776s cumulative, 0.003170013427734375s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.29643964767456s cumulative, 0.0035507678985595703s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.29999804496765s cumulative, 0.0035583972930908203s individual

.
current test PASSED/SKIPPED -- test_scheme_http in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.30343317985535s cumulative, 0.0034351348876953125s individual

.
current test PASSED/SKIPPED -- test_etag_parsing_helper in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.3064534664154s cumulative, 0.0030202865600585938s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.3099730014801s cumulative, 0.0035195350646972656s individual

.
current test PASSED/SKIPPED -- test_date in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.31340789794922s cumulative, 0.003434896469116211s individual

.
current test PASSED/SKIPPED -- test_uri_http_1_0 in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.31669640541077s cumulative, 0.0032885074615478516s individual

.
current test PASSED/SKIPPED -- test_attribute_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.32046842575073s cumulative, 0.0037720203399658203s individual

.
current test PASSED/SKIPPED -- test_attribute_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.32409310340881s cumulative, 0.0036246776580810547s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.32764077186584s cumulative, 0.00354766845703125s individual

.
current test PASSED/SKIPPED -- test_netloc_default_port in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.33078455924988s cumulative, 0.003143787384033203s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.33434629440308s cumulative, 0.003561735153198242s individual

.
current test PASSED/SKIPPED -- test_port_explicit in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.33767414093018s cumulative, 0.0033278465270996094s individual

.
current test PASSED/SKIPPED -- test_nonlatin_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.34080028533936s cumulative, 0.0031261444091796875s individual

.
current test PASSED/SKIPPED -- test_attribute_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.3444356918335s cumulative, 0.003635406494140625s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.34797811508179s cumulative, 0.0035424232482910156s individual

.
current test PASSED/SKIPPED -- test_date_invalid in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.35152220726013s cumulative, 0.0035440921783447266s individual

.
current test PASSED/SKIPPED -- test_reconstruct_url in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.35483837127686s cumulative, 0.003316164016723633s individual

.
current test PASSED/SKIPPED -- test_nonlatin_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.35799074172974s cumulative, 0.0031523704528808594s individual

.
current test PASSED/SKIPPED -- test_date_invalid in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.36151576042175s cumulative, 0.0035250186920166016s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.36508464813232s cumulative, 0.003568887710571289s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.36868143081665s cumulative, 0.003596782684326172s individual

.
current test PASSED/SKIPPED -- test_bogus_content_length_neg in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.37183237075806s cumulative, 0.00315093994140625s individual

.
current test PASSED/SKIPPED -- test_date_missing in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.37495565414429s cumulative, 0.0031232833862304688s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.37856125831604s cumulative, 0.0036056041717529297s individual

.
current test PASSED/SKIPPED -- test_etag_parsing_helper in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.3816077709198s cumulative, 0.0030465126037597656s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.3851683139801s cumulative, 0.0035605430603027344s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.38871693611145s cumulative, 0.0035486221313476562s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.39239048957825s cumulative, 0.003673553466796875s individual

.
current test PASSED/SKIPPED -- test_port_explicit in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.39553761482239s cumulative, 0.003147125244140625s individual

.
current test PASSED/SKIPPED -- test_relative_uri in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.39877128601074s cumulative, 0.003233671188354492s individual

.
current test PASSED/SKIPPED -- test_port_explicit in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.40191960334778s cumulative, 0.003148317337036133s individual

.
current test PASSED/SKIPPED -- test_netloc_nondefault_port in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.40510725975037s cumulative, 0.0031876564025878906s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.40878367424011s cumulative, 0.0036764144897460938s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.4123158454895s cumulative, 0.0035321712493896484s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.415842294693s cumulative, 0.003526449203491211s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.41941571235657s cumulative, 0.0035734176635742188s individual

.
current test PASSED/SKIPPED -- test_netloc_from_env in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.422696352005s cumulative, 0.0032806396484375s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.42707562446594s cumulative, 0.0043792724609375s individual

.
current test PASSED/SKIPPED -- test_app_missing in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.42968487739563s cumulative, 0.0026092529296875s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.43366718292236s cumulative, 0.0039823055267333984s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.43724131584167s cumulative, 0.0035741329193115234s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.44089221954346s cumulative, 0.0036509037017822266s individual

.
current test PASSED/SKIPPED -- test_netloc_default_port in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.44402360916138s cumulative, 0.003131389617919922s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.44875812530518s cumulative, 0.004734516143798828s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.45230531692505s cumulative, 0.003547191619873047s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.45586133003235s cumulative, 0.0035560131072998047s individual

.
current test PASSED/SKIPPED -- test_app_present in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.45888137817383s cumulative, 0.003020048141479492s individual

.
current test PASSED/SKIPPED -- test_attribute_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.46250820159912s cumulative, 0.0036268234252929688s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.4661693572998s cumulative, 0.0036611557006835938s individual

.
current test PASSED/SKIPPED -- test_content_length_method in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.46924328804016s cumulative, 0.0030739307403564453s individual

.
current test PASSED/SKIPPED -- test_netloc_default_port in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.47243881225586s cumulative, 0.003195524215698242s individual

.
current test PASSED/SKIPPED -- test_app_blank in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.47542023658752s cumulative, 0.002981424331665039s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.47897839546204s cumulative, 0.0035581588745117188s individual

.
current test PASSED/SKIPPED -- test_port_explicit in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.48215341567993s cumulative, 0.003175020217895508s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.48581099510193s cumulative, 0.0036575794219970703s individual

.
current test PASSED/SKIPPED -- test_date_missing in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.48896050453186s cumulative, 0.0031495094299316406s individual

.
current test PASSED/SKIPPED -- test_method in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.49196672439575s cumulative, 0.0030062198638916016s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.49553942680359s cumulative, 0.003572702407836914s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.49947023391724s cumulative, 0.003930807113647461s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.50318050384521s cumulative, 0.0037102699279785156s individual

.
current test PASSED/SKIPPED -- test_missing_qs in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.50567269325256s cumulative, 0.002492189407348633s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.50923490524292s cumulative, 0.0035622119903564453s individual

.
current test PASSED/SKIPPED -- test_nonlatin_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.51239848136902s cumulative, 0.003163576126098633s individual

.
current test PASSED/SKIPPED -- test_netloc_from_env in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.51553606987s cumulative, 0.0031375885009765625s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.51912307739258s cumulative, 0.003587007522583008s individual

.
current test PASSED/SKIPPED -- test_scheme_http in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.52260231971741s cumulative, 0.0034792423248291016s individual

.
current test PASSED/SKIPPED -- test_subdomain in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.5260374546051s cumulative, 0.0034351348876953125s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.52957010269165s cumulative, 0.0035326480865478516s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.53312659263611s cumulative, 0.003556489944458008s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.53685092926025s cumulative, 0.003724336624145508s individual

.
current test PASSED/SKIPPED -- test_bogus_content_length_neg in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.53991031646729s cumulative, 0.00305938720703125s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.54347372055054s cumulative, 0.003563404083251953s individual

.
current test PASSED/SKIPPED -- test_missing_attribute_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.54654288291931s cumulative, 0.003069162368774414s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.55008482933044s cumulative, 0.0035419464111328125s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.55378150939941s cumulative, 0.0036966800689697266s individual

.
current test PASSED/SKIPPED -- test_scheme_http in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.55703687667847s cumulative, 0.0032553672790527344s individual

.
current test PASSED/SKIPPED -- test_port_explicit in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.56021189689636s cumulative, 0.003175020217895508s individual

.
current test PASSED/SKIPPED -- test_range_invalid in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.56552386283875s cumulative, 0.0053119659423828125s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.56909537315369s cumulative, 0.0035715103149414062s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.57260966300964s cumulative, 0.0035142898559570312s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.57614850997925s cumulative, 0.003538846969604492s individual

.
current test PASSED/SKIPPED -- test_uri in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.57918405532837s cumulative, 0.0030355453491210938s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.58289241790771s cumulative, 0.003708362579345703s individual

.
current test PASSED/SKIPPED -- test_date_invalid in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.58629894256592s cumulative, 0.003406524658203125s individual

.
current test PASSED/SKIPPED -- test_attribute_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.5899121761322s cumulative, 0.0036132335662841797s individual

.
current test PASSED/SKIPPED -- test_scheme_https in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.59311962127686s cumulative, 0.0032074451446533203s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.59666132926941s cumulative, 0.003541707992553711s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.60035419464111s cumulative, 0.0036928653717041016s individual

.
current test PASSED/SKIPPED -- test_client_accepts_bogus in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.60340118408203s cumulative, 0.0030469894409179688s individual

.
current test PASSED/SKIPPED -- test_range_unit in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.60669445991516s cumulative, 0.003293275833129883s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.61024832725525s cumulative, 0.0035538673400878906s individual

.
current test PASSED/SKIPPED -- test_scheme_https in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.61343097686768s cumulative, 0.003182649612426758s individual

.
current test PASSED/SKIPPED -- test_attribute_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.61721611022949s cumulative, 0.0037851333618164062s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.62073540687561s cumulative, 0.003519296646118164s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.62426972389221s cumulative, 0.0035343170166015625s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.62786984443665s cumulative, 0.0036001205444335938s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.63143110275269s cumulative, 0.003561258316040039s individual

.
current test PASSED/SKIPPED -- test_date in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.63491606712341s cumulative, 0.003484964370727539s individual

.
current test PASSED/SKIPPED -- test_client_accepts in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.63940000534058s cumulative, 0.004483938217163086s individual

.
current test PASSED/SKIPPED -- test_bogus_content_length_nan in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.64246845245361s cumulative, 0.0030684471130371094s individual

.
current test PASSED/SKIPPED -- test_netloc_nondefault_port in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.6467297077179s cumulative, 0.0042612552642822266s individual

.
current test PASSED/SKIPPED -- test_date in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.65004849433899s cumulative, 0.00331878662109375s individual

.
current test PASSED/SKIPPED -- test_netloc_default_port in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 80.65322041511536s cumulative, 0.0031719207763671875s individual


tests/test_sinks.py .
current test PASSED/SKIPPED -- test_add_sync_sink in /home/kaiyaok2/PythonProjects/falcon/tests/test_sinks.py: 80.65706419944763s cumulative, 0.0038437843322753906s individual

.
current test PASSED/SKIPPED -- test_add_async_sink in /home/kaiyaok2/PythonProjects/falcon/tests/test_sinks.py: 80.6621835231781s cumulative, 0.00511932373046875s individual

.
current test PASSED/SKIPPED -- test_add_sync_sink_with_wrapping in /home/kaiyaok2/PythonProjects/falcon/tests/test_sinks.py: 80.6664834022522s cumulative, 0.00429987907409668s individual

.
current test PASSED/SKIPPED -- test_add_async_sink in /home/kaiyaok2/PythonProjects/falcon/tests/test_sinks.py: 80.66980242729187s cumulative, 0.0033190250396728516s individual

.
current test PASSED/SKIPPED -- test_add_sync_sink_with_wrapping in /home/kaiyaok2/PythonProjects/falcon/tests/test_sinks.py: 80.67488217353821s cumulative, 0.005079746246337891s individual

.
current test PASSED/SKIPPED -- test_add_sync_sink in /home/kaiyaok2/PythonProjects/falcon/tests/test_sinks.py: 80.67941331863403s cumulative, 0.004531145095825195s individual

.
current test PASSED/SKIPPED -- test_with_route in /home/kaiyaok2/PythonProjects/falcon/tests/test_sinks.py: 80.6855776309967s cumulative, 0.0061643123626708984s individual

.
current test PASSED/SKIPPED -- test_single_simple_pattern in /home/kaiyaok2/PythonProjects/falcon/tests/test_sinks.py: 80.68979167938232s cumulative, 0.004214048385620117s individual

.
current test PASSED/SKIPPED -- test_route_precedence in /home/kaiyaok2/PythonProjects/falcon/tests/test_sinks.py: 80.69419503211975s cumulative, 0.004403352737426758s individual

.
current test PASSED/SKIPPED -- test_route_precedence_with_id in /home/kaiyaok2/PythonProjects/falcon/tests/test_sinks.py: 80.69927144050598s cumulative, 0.005076408386230469s individual

.
current test PASSED/SKIPPED -- test_named_groups in /home/kaiyaok2/PythonProjects/falcon/tests/test_sinks.py: 80.70423436164856s cumulative, 0.004962921142578125s individual

.
current test PASSED/SKIPPED -- test_single_default_pattern in /home/kaiyaok2/PythonProjects/falcon/tests/test_sinks.py: 80.7083957195282s cumulative, 0.004161357879638672s individual

.
current test PASSED/SKIPPED -- test_route_precedence in /home/kaiyaok2/PythonProjects/falcon/tests/test_sinks.py: 80.7135272026062s cumulative, 0.00513148307800293s individual

.
current test PASSED/SKIPPED -- test_multiple_patterns in /home/kaiyaok2/PythonProjects/falcon/tests/test_sinks.py: 80.71826648712158s cumulative, 0.004739284515380859s individual

.
current test PASSED/SKIPPED -- test_route_precedence_with_id in /home/kaiyaok2/PythonProjects/falcon/tests/test_sinks.py: 80.7235460281372s cumulative, 0.005279541015625s individual

.
current test PASSED/SKIPPED -- test_with_route in /home/kaiyaok2/PythonProjects/falcon/tests/test_sinks.py: 80.72815418243408s cumulative, 0.004608154296875s individual

.
current test PASSED/SKIPPED -- test_route_precedence_with_both_id in /home/kaiyaok2/PythonProjects/falcon/tests/test_sinks.py: 80.73265933990479s cumulative, 0.004505157470703125s individual

.
current test PASSED/SKIPPED -- test_single_simple_pattern in /home/kaiyaok2/PythonProjects/falcon/tests/test_sinks.py: 80.7371153831482s cumulative, 0.004456043243408203s individual

.
current test PASSED/SKIPPED -- test_named_groups in /home/kaiyaok2/PythonProjects/falcon/tests/test_sinks.py: 80.74162435531616s cumulative, 0.00450897216796875s individual

.
current test PASSED/SKIPPED -- test_single_compiled_pattern in /home/kaiyaok2/PythonProjects/falcon/tests/test_sinks.py: 80.74696469306946s cumulative, 0.0053403377532958984s individual

.
current test PASSED/SKIPPED -- test_single_compiled_pattern in /home/kaiyaok2/PythonProjects/falcon/tests/test_sinks.py: 80.75144839286804s cumulative, 0.004483699798583984s individual

.
current test PASSED/SKIPPED -- test_multiple_patterns in /home/kaiyaok2/PythonProjects/falcon/tests/test_sinks.py: 80.75579500198364s cumulative, 0.004346609115600586s individual

.
current test PASSED/SKIPPED -- test_single_default_pattern in /home/kaiyaok2/PythonProjects/falcon/tests/test_sinks.py: 80.75980758666992s cumulative, 0.004012584686279297s individual

.
current test PASSED/SKIPPED -- test_route_precedence_with_both_id in /home/kaiyaok2/PythonProjects/falcon/tests/test_sinks.py: 80.76505422592163s cumulative, 0.005246639251708984s individual


tests/test_response_body.py .
current test PASSED/SKIPPED -- test_response_body_rendition_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_body.py: 80.77147507667542s cumulative, 0.00642085075378418s individual

.
current test PASSED/SKIPPED -- test_response_body_rendition_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_body.py: 80.77624893188477s cumulative, 0.004773855209350586s individual

.
current test PASSED/SKIPPED -- test_content_length_set_on_head_with_no_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_body.py: 80.78102898597717s cumulative, 0.0047800540924072266s individual

.
current test PASSED/SKIPPED -- test_content_length_not_set_when_streaming_response in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_body.py: 80.7852520942688s cumulative, 0.0042231082916259766s individual

.
current test PASSED/SKIPPED -- test_append_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_body.py: 80.78829097747803s cumulative, 0.0030388832092285156s individual

.
current test PASSED/SKIPPED -- test_content_length_not_set_when_streaming_response in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_body.py: 80.7923378944397s cumulative, 0.004046916961669922s individual

.
current test PASSED/SKIPPED -- test_unsupported_response_content_type in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_body.py: 80.79732322692871s cumulative, 0.004985332489013672s individual

.
current test PASSED/SKIPPED -- test_append_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_body.py: 80.80030989646912s cumulative, 0.0029866695404052734s individual

.
current test PASSED/SKIPPED -- test_response_repr in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_body.py: 80.80314087867737s cumulative, 0.002830982208251953s individual

.
current test PASSED/SKIPPED -- test_response_repr in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_body.py: 80.8063895702362s cumulative, 0.0032486915588378906s individual

.
current test PASSED/SKIPPED -- test_content_length_not_set_when_streaming_response in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_body.py: 80.8104898929596s cumulative, 0.004100322723388672s individual

.
current test PASSED/SKIPPED -- test_content_length_set_on_head_with_no_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_body.py: 80.81494212150574s cumulative, 0.004452228546142578s individual

.
current test PASSED/SKIPPED -- test_content_length_not_set_when_streaming_response in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_body.py: 80.81901264190674s cumulative, 0.0040705204010009766s individual

.
current test PASSED/SKIPPED -- test_unsupported_response_content_type in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_body.py: 80.8230140209198s cumulative, 0.0040013790130615234s individual


tests/asgi/test_buffered_reader.py .
current test PASSED/SKIPPED -- test_varying_read_size in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 82.50423789024353s cumulative, 1.6812238693237305s individual


tests/test_request_context.py .
current test PASSED/SKIPPED -- test_default_request_context in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_context.py: 82.50756454467773s cumulative, 0.0033266544342041016s individual

.
current test PASSED/SKIPPED -- test_custom_request_context_failure in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_context.py: 82.51034164428711s cumulative, 0.002777099609375s individual

.
current test PASSED/SKIPPED -- test_custom_request_context in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_context.py: 82.51301956176758s cumulative, 0.00267791748046875s individual

.
current test PASSED/SKIPPED -- test_custom_request_context_request_access in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_context.py: 82.51565647125244s cumulative, 0.0026369094848632812s individual


tests/asgi/test_request_body_asgi.py .
current test PASSED/SKIPPED -- test_read_body in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_request_body_asgi.py: 82.5748462677002s cumulative, 0.059189796447753906s individual

.
current test PASSED/SKIPPED -- test_bounded_stream_alias in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_request_body_asgi.py: 82.5776014328003s cumulative, 0.0027551651000976562s individual

.
current test PASSED/SKIPPED -- test_content_length_smaller_than_body in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_request_body_asgi.py: 82.58161425590515s cumulative, 0.0040128231048583984s individual

.
current test PASSED/SKIPPED -- test_empty_body in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_request_body_asgi.py: 82.58721923828125s cumulative, 0.005604982376098633s individual

.
current test PASSED/SKIPPED -- test_content_length_smaller_than_body in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_request_body_asgi.py: 82.59030413627625s cumulative, 0.003084897994995117s individual

.
current test PASSED/SKIPPED -- test_request_repr in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_request_body_asgi.py: 82.59291625022888s cumulative, 0.0026121139526367188s individual

.
current test PASSED/SKIPPED -- test_content_length_smaller_than_body in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_request_body_asgi.py: 82.59660744667053s cumulative, 0.0036911964416503906s individual

.
current test PASSED/SKIPPED -- test_content_length_smaller_than_body in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_request_body_asgi.py: 82.59962868690491s cumulative, 0.003021240234375s individual

.
current test PASSED/SKIPPED -- test_content_length_smaller_than_body in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_request_body_asgi.py: 82.60261797904968s cumulative, 0.0029892921447753906s individual

.
current test PASSED/SKIPPED -- test_tiny_body_overflow in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_request_body_asgi.py: 82.60824751853943s cumulative, 0.005629539489746094s individual

.
current test PASSED/SKIPPED -- test_tiny_body in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_request_body_asgi.py: 82.61236906051636s cumulative, 0.004121541976928711s individual

.
current test PASSED/SKIPPED -- test_content_length_smaller_than_body in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_request_body_asgi.py: 82.6153564453125s cumulative, 0.002987384796142578s individual


tests/asgi/test_middleware_asgi.py .
current test PASSED/SKIPPED -- test_raise_on_incompatible in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_middleware_asgi.py: 82.61896276473999s cumulative, 0.0036063194274902344s individual

.
current test PASSED/SKIPPED -- test_raise_on_incompatible in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_middleware_asgi.py: 82.62211012840271s cumulative, 0.0031473636627197266s individual

.
current test PASSED/SKIPPED -- test_raise_on_incompatible in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_middleware_asgi.py: 82.62533283233643s cumulative, 0.0032227039337158203s individual

.
current test PASSED/SKIPPED -- test_raise_on_incompatible in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_middleware_asgi.py: 82.62860655784607s cumulative, 0.0032737255096435547s individual


tests/test_middleware.py .
current test PASSED/SKIPPED -- test_process_resource_cached in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.63444447517395s cumulative, 0.005837917327880859s individual

.
current test PASSED/SKIPPED -- test_process_request_cached in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.6390450000763s cumulative, 0.00460052490234375s individual

.
current test PASSED/SKIPPED -- test_process_request_cached in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.64357256889343s cumulative, 0.004527568817138672s individual

.
current test PASSED/SKIPPED -- test_process_resource_cached in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.64873623847961s cumulative, 0.005163669586181641s individual

.
current test PASSED/SKIPPED -- test_process_request_not_cached in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.65523529052734s cumulative, 0.006499052047729492s individual

.
current test PASSED/SKIPPED -- test_process_resource_cached in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.66040515899658s cumulative, 0.005169868469238281s individual

.
current test PASSED/SKIPPED -- test_process_request_cached in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.66512560844421s cumulative, 0.004720449447631836s individual

.
current test PASSED/SKIPPED -- test_process_request_cached in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.66932535171509s cumulative, 0.0041997432708740234s individual

.
current test PASSED/SKIPPED -- test_process_request_not_cached in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.6738829612732s cumulative, 0.004557609558105469s individual

.
current test PASSED/SKIPPED -- test_process_resource_cached in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.67908430099487s cumulative, 0.0052013397216796875s individual

.
current test PASSED/SKIPPED -- test_generate_trans_id_with_request in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.68324065208435s cumulative, 0.004156351089477539s individual

.
current test PASSED/SKIPPED -- test_generate_trans_id_with_request in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.68817138671875s cumulative, 0.004930734634399414s individual

s.
current test PASSED/SKIPPED -- test_error_composed_before_resp_middleware_called in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.69274997711182s cumulative, 0.004578590393066406s individual

.
current test PASSED/SKIPPED -- test_http_status_raised_from_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.69833397865295s cumulative, 0.005584001541137695s individual

.
current test PASSED/SKIPPED -- test_http_status_raised_from_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.70292925834656s cumulative, 0.004595279693603516s individual

.
current test PASSED/SKIPPED -- test_error_composed_before_resp_middleware_called in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.7078766822815s cumulative, 0.0049474239349365234s individual

.
current test PASSED/SKIPPED -- test_add_invalid_middleware in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.7108826637268s cumulative, 0.0030059814453125s individual

.
current test PASSED/SKIPPED -- test_log_get_request in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.71592998504639s cumulative, 0.005047321319580078s individual

.
current test PASSED/SKIPPED -- test_log_get_request in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.72140407562256s cumulative, 0.005474090576171875s individual

.
current test PASSED/SKIPPED -- test_skip_process_resource in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.72570204734802s cumulative, 0.004297971725463867s individual

.
current test PASSED/SKIPPED -- test_add_invalid_middleware in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.72860908508301s cumulative, 0.0029070377349853516s individual

.
current test PASSED/SKIPPED -- test_response_middleware_raises_exception in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.73427319526672s cumulative, 0.00566411018371582s individual

.
current test PASSED/SKIPPED -- test_log_get_request in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.73865175247192s cumulative, 0.004378557205200195s individual

.
current test PASSED/SKIPPED -- test_skip_process_resource in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.7428708076477s cumulative, 0.00421905517578125s individual

.
current test PASSED/SKIPPED -- test_response_middleware_raises_exception in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.74891424179077s cumulative, 0.006043434143066406s individual

.
current test PASSED/SKIPPED -- test_log_get_request in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.75322389602661s cumulative, 0.004309654235839844s individual

.
current test PASSED/SKIPPED -- test_api_initialization_with_cors_enabled_and_middleware_param in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.75818085670471s cumulative, 0.004956960678100586s individual

.
current test PASSED/SKIPPED -- test_api_initialization_with_cors_enabled_and_middleware_param in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.76253247261047s cumulative, 0.004351615905761719s individual

.
current test PASSED/SKIPPED -- test_api_initialization_with_cors_enabled_and_middleware_param in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.76691555976868s cumulative, 0.004383087158203125s individual

.
current test PASSED/SKIPPED -- test_api_initialization_with_cors_enabled_and_middleware_param in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.77140665054321s cumulative, 0.004491090774536133s individual

.
current test PASSED/SKIPPED -- test_api_initialization_with_cors_enabled_and_middleware_param in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.77627873420715s cumulative, 0.00487208366394043s individual

.
current test PASSED/SKIPPED -- test_api_initialization_with_cors_enabled_and_middleware_param in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.78101444244385s cumulative, 0.004735708236694336s individual

.
current test PASSED/SKIPPED -- test_api_initialization_with_cors_enabled_and_middleware_param in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.785391330719s cumulative, 0.004376888275146484s individual

.
current test PASSED/SKIPPED -- test_api_initialization_with_cors_enabled_and_middleware_param in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.79042291641235s cumulative, 0.005031585693359375s individual

.
current test PASSED/SKIPPED -- test_inner_mw_throw_exception in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.7944107055664s cumulative, 0.003987789154052734s individual

.
current test PASSED/SKIPPED -- test_order_mw_executed_when_exception_in_rsrc in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.79906797409058s cumulative, 0.004657268524169922s individual

.
current test PASSED/SKIPPED -- test_inner_mw_throw_exception_while_processing_resp in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.80465126037598s cumulative, 0.005583286285400391s individual

.
current test PASSED/SKIPPED -- test_inner_mw_with_ex_handler_throw_exception in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.80859065055847s cumulative, 0.003939390182495117s individual

.
current test PASSED/SKIPPED -- test_order_mw_executed_when_exception_in_req in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.81263446807861s cumulative, 0.0040438175201416016s individual

.
current test PASSED/SKIPPED -- test_multiple_response_mw_throw_exception in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.81705737113953s cumulative, 0.004422903060913086s individual

.
current test PASSED/SKIPPED -- test_multiple_response_mw_throw_exception in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.82267379760742s cumulative, 0.005616426467895508s individual

.
current test PASSED/SKIPPED -- test_order_independent_mw_executed_when_exception_in_resp in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.82687401771545s cumulative, 0.0042002201080322266s individual

.
current test PASSED/SKIPPED -- test_order_independent_mw_executed_when_exception_in_req in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.83095097541809s cumulative, 0.004076957702636719s individual

.
current test PASSED/SKIPPED -- test_order_independent_mw_executed_when_exception_in_req in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.83482599258423s cumulative, 0.0038750171661376953s individual

.
current test PASSED/SKIPPED -- test_order_mw_executed_when_exception_in_rsrc in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.84162998199463s cumulative, 0.006803989410400391s individual

.
current test PASSED/SKIPPED -- test_inner_mw_throw_exception_while_processing_resp in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.84578394889832s cumulative, 0.0041539669036865234s individual

.
current test PASSED/SKIPPED -- test_legacy_middleware_called_with_correct_args in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.84980320930481s cumulative, 0.004019260406494141s individual

.
current test PASSED/SKIPPED -- test_order_mw_executed_when_exception_in_resp in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.85393047332764s cumulative, 0.0041272640228271484s individual

.
current test PASSED/SKIPPED -- test_order_independent_mw_executed_when_exception_in_rsrc in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.85842990875244s cumulative, 0.0044994354248046875s individual

.
current test PASSED/SKIPPED -- test_legacy_middleware_called_with_correct_args in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.86361575126648s cumulative, 0.005185842514038086s individual

.
current test PASSED/SKIPPED -- test_outer_mw_with_ex_handler_throw_exception in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.86901688575745s cumulative, 0.005401134490966797s individual

.
current test PASSED/SKIPPED -- test_outer_mw_with_ex_handler_throw_exception in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.87291860580444s cumulative, 0.0039017200469970703s individual

.
current test PASSED/SKIPPED -- test_independent_middleware_execution_order in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.87779664993286s cumulative, 0.004878044128417969s individual

.
current test PASSED/SKIPPED -- test_inner_mw_with_ex_handler_throw_exception in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.88227534294128s cumulative, 0.0044786930084228516s individual

.
current test PASSED/SKIPPED -- test_generate_trans_id_and_time_with_request in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.88733458518982s cumulative, 0.005059242248535156s individual

.
current test PASSED/SKIPPED -- test_order_independent_mw_executed_when_exception_in_resp in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.8921799659729s cumulative, 0.004845380783081055s individual

.
current test PASSED/SKIPPED -- test_order_independent_mw_executed_when_exception_in_rsrc in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.896399974823s cumulative, 0.004220008850097656s individual

.
current test PASSED/SKIPPED -- test_order_mw_executed_when_exception_in_req in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.90068006515503s cumulative, 0.00428009033203125s individual

.
current test PASSED/SKIPPED -- test_inner_mw_throw_exception in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.9044463634491s cumulative, 0.003766298294067383s individual

.
current test PASSED/SKIPPED -- test_generate_trans_id_and_time_with_request in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.90876197814941s cumulative, 0.004315614700317383s individual

.
current test PASSED/SKIPPED -- test_middleware_execution_order in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.91391181945801s cumulative, 0.00514984130859375s individual

.
current test PASSED/SKIPPED -- test_generate_trans_id_and_time_with_request in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.91830563545227s cumulative, 0.004393815994262695s individual

.
current test PASSED/SKIPPED -- test_middleware_execution_order in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.9227364063263s cumulative, 0.0044307708740234375s individual

.
current test PASSED/SKIPPED -- test_independent_middleware_execution_order in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.9268045425415s cumulative, 0.004068136215209961s individual

.
current test PASSED/SKIPPED -- test_generate_trans_id_and_time_with_request in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.93194699287415s cumulative, 0.0051424503326416016s individual

.
current test PASSED/SKIPPED -- test_order_mw_executed_when_exception_in_resp in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.93685293197632s cumulative, 0.0049059391021728516s individual

.
current test PASSED/SKIPPED -- test_dont_need_params_in_signature in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.9400327205658s cumulative, 0.003179788589477539s individual

.
current test PASSED/SKIPPED -- test_dont_need_params_in_signature in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.94369268417358s cumulative, 0.003659963607788086s individual

.
current test PASSED/SKIPPED -- test_can_access_resource_params in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.94856476783752s cumulative, 0.00487208366394043s individual

.
current test PASSED/SKIPPED -- test_can_access_resource_params in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.95302748680115s cumulative, 0.004462718963623047s individual

.
current test PASSED/SKIPPED -- test_can_access_resource_params in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.95789504051208s cumulative, 0.0048675537109375s individual

.
current test PASSED/SKIPPED -- test_can_access_resource_params in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.96265983581543s cumulative, 0.0047647953033447266s individual

.
current test PASSED/SKIPPED -- test_base_path_is_removed_before_routing in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.96801996231079s cumulative, 0.005360126495361328s individual

.
current test PASSED/SKIPPED -- test_base_path_is_removed_before_routing in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 82.9725501537323s cumulative, 0.004530191421508789s individual


tests/test_request_body.py .
current test PASSED/SKIPPED -- test_body_stream_wrapper in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_body.py: 82.97717070579529s cumulative, 0.004620552062988281s individual

.
current test PASSED/SKIPPED -- test_tiny_body_overflow in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_body.py: 82.98133897781372s cumulative, 0.004168272018432617s individual

.
current test PASSED/SKIPPED -- test_request_repr in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_body.py: 82.98394703865051s cumulative, 0.002608060836791992s individual

.
current test PASSED/SKIPPED -- test_read_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_body.py: 82.98913502693176s cumulative, 0.00518798828125s individual

.
current test PASSED/SKIPPED -- test_bounded_stream_property_empty_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_body.py: 82.99171137809753s cumulative, 0.0025763511657714844s individual

.
current test PASSED/SKIPPED -- test_empty_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_body.py: 82.99566602706909s cumulative, 0.003954648971557617s individual

.
current test PASSED/SKIPPED -- test_tiny_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_body.py: 83.00014305114746s cumulative, 0.004477024078369141s individual


tests/test_compiled_router.py .
current test PASSED/SKIPPED -- test_multithread_compile in /home/kaiyaok2/PythonProjects/falcon/tests/test_compiled_router.py: 83.05717396736145s cumulative, 0.05703091621398926s individual


tests/test_media_multipart.py .
current test PASSED/SKIPPED -- test_random_form in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 83.32559251785278s cumulative, 0.268418550491333s individual


tests/test_slots.py .
current test PASSED/SKIPPED -- test_slots_request in /home/kaiyaok2/PythonProjects/falcon/tests/test_slots.py: 83.32893586158752s cumulative, 0.003343343734741211s individual

.
current test PASSED/SKIPPED -- test_slots_request in /home/kaiyaok2/PythonProjects/falcon/tests/test_slots.py: 83.33177256584167s cumulative, 0.0028367042541503906s individual

.
current test PASSED/SKIPPED -- test_slots_response in /home/kaiyaok2/PythonProjects/falcon/tests/test_slots.py: 83.33508205413818s cumulative, 0.003309488296508789s individual

.
current test PASSED/SKIPPED -- test_slots_response in /home/kaiyaok2/PythonProjects/falcon/tests/test_slots.py: 83.33782911300659s cumulative, 0.002747058868408203s individual


tests/test_wsgi_errors.py .
current test PASSED/SKIPPED -- test_responder_logged_bytestring in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_errors.py: 83.34407258033752s cumulative, 0.006243467330932617s individual


tests/test_buffered_reader.py .
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 84.40797138214111s cumulative, 1.0638988018035889s individual


tests/test_request_access_route.py .
current test PASSED/SKIPPED -- test_rfc_forwarded in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_access_route.py: 84.41156911849976s cumulative, 0.003597736358642578s individual

.
current test PASSED/SKIPPED -- test_x_forwarded_for in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_access_route.py: 84.41461133956909s cumulative, 0.0030422210693359375s individual

.
current test PASSED/SKIPPED -- test_remote_addr_default in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_access_route.py: 84.41727113723755s cumulative, 0.0026597976684570312s individual

.
current test PASSED/SKIPPED -- test_remote_addr in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_access_route.py: 84.42005443572998s cumulative, 0.0027832984924316406s individual

.
current test PASSED/SKIPPED -- test_remote_addr_non_default in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_access_route.py: 84.42277264595032s cumulative, 0.002718210220336914s individual

.
current test PASSED/SKIPPED -- test_x_real_ip in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_access_route.py: 84.42542290687561s cumulative, 0.0026502609252929688s individual

.
current test PASSED/SKIPPED -- test_x_forwarded_for in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_access_route.py: 84.42959117889404s cumulative, 0.004168272018432617s individual

.
current test PASSED/SKIPPED -- test_malformed_rfc_forwarded in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_access_route.py: 84.43226647377014s cumulative, 0.002675294876098633s individual

.
current test PASSED/SKIPPED -- test_remote_addr in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_access_route.py: 84.43515229225159s cumulative, 0.0028858184814453125s individual

.
current test PASSED/SKIPPED -- test_remote_addr_non_default in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_access_route.py: 84.43783283233643s cumulative, 0.002680540084838867s individual

.
current test PASSED/SKIPPED -- test_remote_addr_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_access_route.py: 84.4405779838562s cumulative, 0.0027451515197753906s individual

.
current test PASSED/SKIPPED -- test_remote_addr in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_access_route.py: 84.44340014457703s cumulative, 0.0028221607208251953s individual

.
current test PASSED/SKIPPED -- test_remote_addr_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_access_route.py: 84.44625401496887s cumulative, 0.002853870391845703s individual

.
current test PASSED/SKIPPED -- test_malformed_rfc_forwarded in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_access_route.py: 84.44890761375427s cumulative, 0.0026535987854003906s individual

.
current test PASSED/SKIPPED -- test_x_forwarded_for in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_access_route.py: 84.4516954421997s cumulative, 0.0027878284454345703s individual

.
current test PASSED/SKIPPED -- test_x_real_ip in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_access_route.py: 84.45434498786926s cumulative, 0.002649545669555664s individual

.
current test PASSED/SKIPPED -- test_rfc_forwarded in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_access_route.py: 84.45711207389832s cumulative, 0.0027670860290527344s individual

.
current test PASSED/SKIPPED -- test_remote_addr in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_access_route.py: 84.45989966392517s cumulative, 0.0027875900268554688s individual

.
current test PASSED/SKIPPED -- test_remote_addr_default in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_access_route.py: 84.46259784698486s cumulative, 0.002698183059692383s individual

.
current test PASSED/SKIPPED -- test_remote_addr_missing in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_access_route.py: 84.4650890827179s cumulative, 0.0024912357330322266s individual

.
current test PASSED/SKIPPED -- test_x_forwarded_for in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_access_route.py: 84.4680724143982s cumulative, 0.0029833316802978516s individual


tests/asgi/test_boundedstream_asgi.py .
current test PASSED/SKIPPED -- test_read_all in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 92.46333694458008s cumulative, 7.995264530181885s individual

.
current test PASSED/SKIPPED -- test_read_all in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 100.33752775192261s cumulative, 7.874190807342529s individual


tests/test_request_media.py .
current test PASSED/SKIPPED -- test_invalid_msgpack in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 100.34451842308044s cumulative, 0.006990671157836914s individual

.
current test PASSED/SKIPPED -- test_json in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 100.34923768043518s cumulative, 0.004719257354736328s individual

.
current test PASSED/SKIPPED -- test_fallback_does_not_override_media_default in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 100.35328674316406s cumulative, 0.004049062728881836s individual

.
current test PASSED/SKIPPED -- test_msgpack in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 100.35954856872559s cumulative, 0.0062618255615234375s individual

.
current test PASSED/SKIPPED -- test_fallback in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 100.3635687828064s cumulative, 0.004020214080810547s individual

.
current test PASSED/SKIPPED -- test_empty_json_media in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 100.36765241622925s cumulative, 0.0040836334228515625s individual

.
current test PASSED/SKIPPED -- test_empty_json_media in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 100.37184548377991s cumulative, 0.00419306755065918s individual

.
current test PASSED/SKIPPED -- test_empty_json_media in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 100.37612748146057s cumulative, 0.0042819976806640625s individual

.
current test PASSED/SKIPPED -- test_fallback_does_not_override_media_default in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 100.38998675346375s cumulative, 0.013859272003173828s individual

.
current test PASSED/SKIPPED -- test_empty_json_media in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 100.39437794685364s cumulative, 0.004391193389892578s individual

.
current test PASSED/SKIPPED -- test_fallback in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 100.39883232116699s cumulative, 0.004454374313354492s individual

.
current test PASSED/SKIPPED -- test_complete_consumption in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 100.40306568145752s cumulative, 0.004233360290527344s individual

.
current test PASSED/SKIPPED -- test_fallback_not_for_error_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 100.40806603431702s cumulative, 0.00500035285949707s individual

.
current test PASSED/SKIPPED -- test_empty_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 100.41225290298462s cumulative, 0.004186868667602539s individual

.
current test PASSED/SKIPPED -- test_msgpack in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 100.41698908805847s cumulative, 0.004736185073852539s individual

.
current test PASSED/SKIPPED -- test_msgpack in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 100.42144918441772s cumulative, 0.00446009635925293s individual

.
current test PASSED/SKIPPED -- test_repeated_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 100.42642331123352s cumulative, 0.0049741268157958984s individual

.
current test PASSED/SKIPPED -- test_msgpack in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 100.43095254898071s cumulative, 0.004529237747192383s individual

.
current test PASSED/SKIPPED -- test_json in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 100.43515181541443s cumulative, 0.00419926643371582s individual

.
current test PASSED/SKIPPED -- test_empty_json_media in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 100.43926310539246s cumulative, 0.004111289978027344s individual

.
current test PASSED/SKIPPED -- test_empty_json_media in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 100.44332957267761s cumulative, 0.00406646728515625s individual

.
current test PASSED/SKIPPED -- test_repeated_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 100.44812750816345s cumulative, 0.004797935485839844s individual

.
current test PASSED/SKIPPED -- test_json in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 100.4524257183075s cumulative, 0.004298210144042969s individual

.
current test PASSED/SKIPPED -- test_repeated_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 100.45673274993896s cumulative, 0.0043070316314697266s individual

.
current test PASSED/SKIPPED -- test_json in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 100.46150588989258s cumulative, 0.004773139953613281s individual

.
current test PASSED/SKIPPED -- test_null_json_media in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 100.46557688713074s cumulative, 0.00407099723815918s individual

.
current test PASSED/SKIPPED -- test_fallback_not_for_error_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 100.46985912322998s cumulative, 0.004282236099243164s individual

.
current test PASSED/SKIPPED -- test_invalid_json in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 100.47402000427246s cumulative, 0.004160881042480469s individual

.
current test PASSED/SKIPPED -- test_unknown_media_type in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 100.47853350639343s cumulative, 0.00451350212097168s individual

.
current test PASSED/SKIPPED -- test_empty_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 100.48270106315613s cumulative, 0.0041675567626953125s individual

.
current test PASSED/SKIPPED -- test_empty_json_media in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 100.48677611351013s cumulative, 0.004075050354003906s individual

.
current test PASSED/SKIPPED -- test_json in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 100.49112224578857s cumulative, 0.004346132278442383s individual

.
current test PASSED/SKIPPED -- test_json in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 100.4959602355957s cumulative, 0.004837989807128906s individual

.
current test PASSED/SKIPPED -- test_empty_json_media in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 100.50000596046448s cumulative, 0.004045724868774414s individual

.
current test PASSED/SKIPPED -- test_invalid_msgpack in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 100.50402998924255s cumulative, 0.004024028778076172s individual

.
current test PASSED/SKIPPED -- test_empty_json_media in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 100.50807166099548s cumulative, 0.0040416717529296875s individual

.
current test PASSED/SKIPPED -- test_repeated_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 100.51274371147156s cumulative, 0.004672050476074219s individual

.
current test PASSED/SKIPPED -- test_invalid_json in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 100.5167407989502s cumulative, 0.003997087478637695s individual

.
current test PASSED/SKIPPED -- test_empty_json_media in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 100.52081894874573s cumulative, 0.0040781497955322266s individual

.
current test PASSED/SKIPPED -- test_empty_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 100.52495098114014s cumulative, 0.00413203239440918s individual

.
current test PASSED/SKIPPED -- test_error_after_first_default in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 100.52947688102722s cumulative, 0.004525899887084961s individual

.
current test PASSED/SKIPPED -- test_json in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 100.53369045257568s cumulative, 0.004213571548461914s individual

.
current test PASSED/SKIPPED -- test_json in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 100.53792071342468s cumulative, 0.0042302608489990234s individual

.
current test PASSED/SKIPPED -- test_fallback_not_for_error_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 100.54207420349121s cumulative, 0.00415349006652832s individual

.
current test PASSED/SKIPPED -- test_empty_json_media in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 100.54659795761108s cumulative, 0.004523754119873047s individual

.
current test PASSED/SKIPPED -- test_msgpack in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 100.55128931999207s cumulative, 0.004691362380981445s individual

.
current test PASSED/SKIPPED -- test_fallback_not_for_error_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 100.55557441711426s cumulative, 0.004285097122192383s individual

.
current test PASSED/SKIPPED -- test_fallback_not_for_error_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 100.55983400344849s cumulative, 0.004259586334228516s individual

.
current test PASSED/SKIPPED -- test_fallback_not_for_error_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 100.5647041797638s cumulative, 0.004870176315307617s individual

.
current test PASSED/SKIPPED -- test_empty_json_media in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 100.56876826286316s cumulative, 0.004064083099365234s individual

.
current test PASSED/SKIPPED -- test_msgpack in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 100.57320165634155s cumulative, 0.004433393478393555s individual

.
current test PASSED/SKIPPED -- test_fallback_not_for_error_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 100.57761573791504s cumulative, 0.004414081573486328s individual

.
current test PASSED/SKIPPED -- test_empty_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 100.58241271972656s cumulative, 0.0047969818115234375s individual

.
current test PASSED/SKIPPED -- test_fallback_not_for_error_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 100.58674454689026s cumulative, 0.004331827163696289s individual

.
current test PASSED/SKIPPED -- test_error_after_first_default in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 100.59077048301697s cumulative, 0.004025936126708984s individual

.
current test PASSED/SKIPPED -- test_null_json_media in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 100.59675812721252s cumulative, 0.005987644195556641s individual

.
current test PASSED/SKIPPED -- test_unknown_media_type in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 100.60090398788452s cumulative, 0.00414586067199707s individual

.
current test PASSED/SKIPPED -- test_complete_consumption in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 100.60488724708557s cumulative, 0.003983259201049805s individual


tests/test_options.py .
current test PASSED/SKIPPED -- test_options_toggle in /home/kaiyaok2/PythonProjects/falcon/tests/test_options.py: 100.60755920410156s cumulative, 0.002671957015991211s individual

.
current test PASSED/SKIPPED -- test_options_toggle in /home/kaiyaok2/PythonProjects/falcon/tests/test_options.py: 100.61019992828369s cumulative, 0.0026407241821289062s individual

.
current test PASSED/SKIPPED -- test_options_toggle in /home/kaiyaok2/PythonProjects/falcon/tests/test_options.py: 100.61289644241333s cumulative, 0.002696514129638672s individual

.
current test PASSED/SKIPPED -- test_options_toggle in /home/kaiyaok2/PythonProjects/falcon/tests/test_options.py: 100.61554431915283s cumulative, 0.002647876739501953s individual

.
current test PASSED/SKIPPED -- test_incorrect_options in /home/kaiyaok2/PythonProjects/falcon/tests/test_options.py: 100.61806130409241s cumulative, 0.0025169849395751953s individual

.
current test PASSED/SKIPPED -- test_option_defaults in /home/kaiyaok2/PythonProjects/falcon/tests/test_options.py: 100.62054347991943s cumulative, 0.002482175827026367s individual


tests/test_cython.py F
current test FAILED -- test_imported_from_c_modules in /home/kaiyaok2/PythonProjects/falcon/tests/test_cython.py: 100.6280529499054s cumulative, 0.007509469985961914s individual

F
current test FAILED -- test_stream_has_private_read in /home/kaiyaok2/PythonProjects/falcon/tests/test_cython.py: 100.63364315032959s cumulative, 0.005590200424194336s individual


tests/test_wsgiref_inputwrapper_with_size.py .
current test PASSED/SKIPPED -- test_resources_can_read_request_stream_during_tests in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgiref_inputwrapper_with_size.py: 100.63760542869568s cumulative, 0.003962278366088867s individual


tests/test_app_initializers.py .
current test PASSED/SKIPPED -- test_api_media_type_overriding in /home/kaiyaok2/PythonProjects/falcon/tests/test_app_initializers.py: 100.64204549789429s cumulative, 0.0044400691986083984s individual

.
current test PASSED/SKIPPED -- test_api_media_type_overriding in /home/kaiyaok2/PythonProjects/falcon/tests/test_app_initializers.py: 100.64642763137817s cumulative, 0.004382133483886719s individual


tests/test_custom_router.py .
current test PASSED/SKIPPED -- test_custom_router_takes_req_positional_argument in /home/kaiyaok2/PythonProjects/falcon/tests/test_custom_router.py: 100.65004372596741s cumulative, 0.0036160945892333984s individual

.
current test PASSED/SKIPPED -- test_custom_router_takes_req_positional_argument in /home/kaiyaok2/PythonProjects/falcon/tests/test_custom_router.py: 100.65350580215454s cumulative, 0.003462076187133789s individual

.
current test PASSED/SKIPPED -- test_custom_router_add_route_should_be_used in /home/kaiyaok2/PythonProjects/falcon/tests/test_custom_router.py: 100.65697884559631s cumulative, 0.003473043441772461s individual

.
current test PASSED/SKIPPED -- test_custom_router_takes_req_keyword_argument in /home/kaiyaok2/PythonProjects/falcon/tests/test_custom_router.py: 100.66044569015503s cumulative, 0.0034668445587158203s individual

.
current test PASSED/SKIPPED -- test_custom_router_find_should_be_used in /home/kaiyaok2/PythonProjects/falcon/tests/test_custom_router.py: 100.6654405593872s cumulative, 0.004994869232177734s individual

.
current test PASSED/SKIPPED -- test_custom_router_takes_req_keyword_argument in /home/kaiyaok2/PythonProjects/falcon/tests/test_custom_router.py: 100.66889786720276s cumulative, 0.003457307815551758s individual

.
current test PASSED/SKIPPED -- test_custom_router_find_should_be_used in /home/kaiyaok2/PythonProjects/falcon/tests/test_custom_router.py: 100.67431735992432s cumulative, 0.005419492721557617s individual

.
current test PASSED/SKIPPED -- test_can_pass_additional_params_to_add_route in /home/kaiyaok2/PythonProjects/falcon/tests/test_custom_router.py: 100.67735147476196s cumulative, 0.0030341148376464844s individual

.
current test PASSED/SKIPPED -- test_custom_router_add_route_should_be_used in /home/kaiyaok2/PythonProjects/falcon/tests/test_custom_router.py: 100.68021297454834s cumulative, 0.002861499786376953s individual

.
current test PASSED/SKIPPED -- test_can_pass_additional_params_to_add_route in /home/kaiyaok2/PythonProjects/falcon/tests/test_custom_router.py: 100.68364429473877s cumulative, 0.0034313201904296875s individual


tests/test_response_media.py .
current test PASSED/SKIPPED -- test_json in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_media.py: 100.68778824806213s cumulative, 0.004143953323364258s individual

.
current test PASSED/SKIPPED -- test_json in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_media.py: 100.69181632995605s cumulative, 0.0040280818939208984s individual

.
current test PASSED/SKIPPED -- test_non_ascii_json_serialization in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_media.py: 100.69576048851013s cumulative, 0.0039441585540771484s individual

.
current test PASSED/SKIPPED -- test_media in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_media.py: 100.69964265823364s cumulative, 0.003882169723510742s individual

.
current test PASSED/SKIPPED -- test_non_ascii_json_serialization in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_media.py: 100.70395541191101s cumulative, 0.004312753677368164s individual

.
current test PASSED/SKIPPED -- test_text in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_media.py: 100.70782470703125s cumulative, 0.003869295120239258s individual

.
current test PASSED/SKIPPED -- test_msgpack in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_media.py: 100.71177387237549s cumulative, 0.003949165344238281s individual

.
current test PASSED/SKIPPED -- test_json in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_media.py: 100.7157666683197s cumulative, 0.003992795944213867s individual

.
current test PASSED/SKIPPED -- test_non_ascii_json_serialization in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_media.py: 100.71962094306946s cumulative, 0.0038542747497558594s individual

.
current test PASSED/SKIPPED -- test_unknown_media_type in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_media.py: 100.72419047355652s cumulative, 0.004569530487060547s individual

.
current test PASSED/SKIPPED -- test_msgpack in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_media.py: 100.72808384895325s cumulative, 0.0038933753967285156s individual

.
current test PASSED/SKIPPED -- test_use_cached_media in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_media.py: 100.7319164276123s cumulative, 0.003832578659057617s individual

.
current test PASSED/SKIPPED -- test_msgpack in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_media.py: 100.73577070236206s cumulative, 0.0038542747497558594s individual

.
current test PASSED/SKIPPED -- test_data in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_media.py: 100.73958778381348s cumulative, 0.0038170814514160156s individual

.
current test PASSED/SKIPPED -- test_mimeparse_edgecases in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_media.py: 100.74396800994873s cumulative, 0.004380226135253906s individual

.
current test PASSED/SKIPPED -- test_non_ascii_json_serialization in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_media.py: 100.74784255027771s cumulative, 0.003874540328979492s individual

.
current test PASSED/SKIPPED -- test_media_rendered_cached in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_media.py: 100.75170350074768s cumulative, 0.003860950469970703s individual

.
current test PASSED/SKIPPED -- test_default_media_type in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_media.py: 100.75555729866028s cumulative, 0.0038537979125976562s individual

.
current test PASSED/SKIPPED -- test_non_ascii_json_serialization in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_media.py: 100.75939917564392s cumulative, 0.003841876983642578s individual


tests/test_buffered_reader.py .
current test PASSED/SKIPPED -- test_pipe_until_without_destination in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 100.8955807685852s cumulative, 0.13618159294128418s individual


tests/test_python_version_requirements.py .
current test PASSED/SKIPPED -- test_asgi in /home/kaiyaok2/PythonProjects/falcon/tests/test_python_version_requirements.py: 100.89814043045044s cumulative, 0.002559661865234375s individual


tests/asgi/test_asgi_conductor.py .
current test PASSED/SKIPPED -- test_responders in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_conductor.py: 100.90660429000854s cumulative, 0.008463859558105469s individual

.
current test PASSED/SKIPPED -- test_generic_request in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_conductor.py: 100.91247534751892s cumulative, 0.0058710575103759766s individual

.
current test PASSED/SKIPPED -- test_responders in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_conductor.py: 100.91676259040833s cumulative, 0.004287242889404297s individual

.
current test PASSED/SKIPPED -- test_responders in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_conductor.py: 100.9210889339447s cumulative, 0.004326343536376953s individual

.
current test PASSED/SKIPPED -- test_responders in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_conductor.py: 100.92533111572266s cumulative, 0.0042421817779541016s individual

.
current test PASSED/SKIPPED -- test_responders in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_conductor.py: 100.93000602722168s cumulative, 0.0046749114990234375s individual

.
current test PASSED/SKIPPED -- test_responders in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_conductor.py: 100.93419170379639s cumulative, 0.004185676574707031s individual

.
current test PASSED/SKIPPED -- test_responders in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_conductor.py: 100.93839025497437s cumulative, 0.004198551177978516s individual

.
current test PASSED/SKIPPED -- test_generic_request in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_conductor.py: 100.94285655021667s cumulative, 0.00446629524230957s individual

.
current test PASSED/SKIPPED -- test_wsgi_not_supported in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_conductor.py: 100.94727039337158s cumulative, 0.0044138431549072266s individual

.
current test PASSED/SKIPPED -- test_responders in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_conductor.py: 100.95146298408508s cumulative, 0.0041925907135009766s individual

.
current test PASSED/SKIPPED -- test_responders in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_conductor.py: 100.95558857917786s cumulative, 0.0041255950927734375s individual

.
current test PASSED/SKIPPED -- test_responders in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_conductor.py: 100.95975422859192s cumulative, 0.0041656494140625s individual

.
current test PASSED/SKIPPED -- test_responders in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_conductor.py: 100.96432065963745s cumulative, 0.0045664310455322266s individual

.
current test PASSED/SKIPPED -- test_responders in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_conductor.py: 100.96842789649963s cumulative, 0.004107236862182617s individual

.
current test PASSED/SKIPPED -- test_default_headers in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_conductor.py: 100.97238206863403s cumulative, 0.003954172134399414s individual

.
current test PASSED/SKIPPED -- test_responders in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_conductor.py: 100.97654294967651s cumulative, 0.004160881042480469s individual

.
current test PASSED/SKIPPED -- test_responders in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_conductor.py: 100.98115038871765s cumulative, 0.004607439041137695s individual


tests/asgi/test_ws.py .
current test PASSED/SKIPPED -- test_ws_responder_never_ready in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 101.48699975013733s cumulative, 0.5058493614196777s individual


tests/asgi/test_asgi_servers.py INFO:     127.0.0.1:53366 - "GET / HTTP/1.1" 200 OK
INFO:     127.0.0.1:53374 - "GET /events HTTP/1.1" 200 OK

[Starting server process...]
.
[Sending SIGTERM to server process...]

current test PASSED/SKIPPED -- test_sse in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 104.74785876274109s cumulative, 3.2608590126037598s individual


tests/test_before_hooks.py .
current test PASSED/SKIPPED -- test_param_validator in /home/kaiyaok2/PythonProjects/falcon/tests/test_before_hooks.py: 104.7601866722107s cumulative, 0.012327909469604492s individual

.
current test PASSED/SKIPPED -- test_field_validator in /home/kaiyaok2/PythonProjects/falcon/tests/test_before_hooks.py: 104.7665147781372s cumulative, 0.006328105926513672s individual

.
current test PASSED/SKIPPED -- test_parser_async in /home/kaiyaok2/PythonProjects/falcon/tests/test_before_hooks.py: 104.77250671386719s cumulative, 0.005991935729980469s individual

.
current test PASSED/SKIPPED -- test_input_validator_inherited in /home/kaiyaok2/PythonProjects/falcon/tests/test_before_hooks.py: 106.20395708084106s cumulative, 1.431450366973877s individual

.
current test PASSED/SKIPPED -- test_multiple_resource_hooks in /home/kaiyaok2/PythonProjects/falcon/tests/test_before_hooks.py: 106.21101689338684s cumulative, 0.007059812545776367s individual

.
current test PASSED/SKIPPED -- test_input_validator in /home/kaiyaok2/PythonProjects/falcon/tests/test_before_hooks.py: 106.215656042099s cumulative, 0.004639148712158203s individual

.
current test PASSED/SKIPPED -- test_piggybacking_resource_post_item in /home/kaiyaok2/PythonProjects/falcon/tests/test_before_hooks.py: 106.22364258766174s cumulative, 0.00798654556274414s individual

.
current test PASSED/SKIPPED -- test_piggybacking_resource_post_item in /home/kaiyaok2/PythonProjects/falcon/tests/test_before_hooks.py: 106.22905278205872s cumulative, 0.005410194396972656s individual

.
current test PASSED/SKIPPED -- test_decorable_name_pattern in /home/kaiyaok2/PythonProjects/falcon/tests/test_before_hooks.py: 106.23151516914368s cumulative, 0.0024623870849609375s individual

.
current test PASSED/SKIPPED -- test_piggybacking_resource_post_and_delete in /home/kaiyaok2/PythonProjects/falcon/tests/test_before_hooks.py: 106.249760389328s cumulative, 0.018245220184326172s individual

.
current test PASSED/SKIPPED -- test_wrapped_resource_with_hooks_aware_of_resource in /home/kaiyaok2/PythonProjects/falcon/tests/test_before_hooks.py: 106.2603747844696s cumulative, 0.010614395141601562s individual

.
current test PASSED/SKIPPED -- test_piggybacking_resource_post_and_delete in /home/kaiyaok2/PythonProjects/falcon/tests/test_before_hooks.py: 106.27114367485046s cumulative, 0.010768890380859375s individual

.
current test PASSED/SKIPPED -- test_field_validator in /home/kaiyaok2/PythonProjects/falcon/tests/test_before_hooks.py: 106.27629899978638s cumulative, 0.005155324935913086s individual

.
current test PASSED/SKIPPED -- test_input_validator in /home/kaiyaok2/PythonProjects/falcon/tests/test_before_hooks.py: 106.28134179115295s cumulative, 0.0050427913665771484s individual

.
current test PASSED/SKIPPED -- test_parser_async in /home/kaiyaok2/PythonProjects/falcon/tests/test_before_hooks.py: 106.28700304031372s cumulative, 0.0056612491607666016s individual

.
current test PASSED/SKIPPED -- test_parser_sync in /home/kaiyaok2/PythonProjects/falcon/tests/test_before_hooks.py: 106.29119300842285s cumulative, 0.004189968109130859s individual

.
current test PASSED/SKIPPED -- test_multiple_resource_hooks in /home/kaiyaok2/PythonProjects/falcon/tests/test_before_hooks.py: 106.29632711410522s cumulative, 0.005134105682373047s individual

.
current test PASSED/SKIPPED -- test_input_validator_inherited in /home/kaiyaok2/PythonProjects/falcon/tests/test_before_hooks.py: 106.30339097976685s cumulative, 0.007063865661621094s individual

.
current test PASSED/SKIPPED -- test_multiple_resource_hooks in /home/kaiyaok2/PythonProjects/falcon/tests/test_before_hooks.py: 106.30837512016296s cumulative, 0.004984140396118164s individual

.
current test PASSED/SKIPPED -- test_parser_sync in /home/kaiyaok2/PythonProjects/falcon/tests/test_before_hooks.py: 106.31248044967651s cumulative, 0.004105329513549805s individual

.
current test PASSED/SKIPPED -- test_param_validator in /home/kaiyaok2/PythonProjects/falcon/tests/test_before_hooks.py: 106.3171398639679s cumulative, 0.004659414291381836s individual

.
current test PASSED/SKIPPED -- test_field_validator in /home/kaiyaok2/PythonProjects/falcon/tests/test_before_hooks.py: 106.32384753227234s cumulative, 0.006707668304443359s individual

.
current test PASSED/SKIPPED -- test_parser_sync in /home/kaiyaok2/PythonProjects/falcon/tests/test_before_hooks.py: 106.32839226722717s cumulative, 0.004544734954833984s individual

.
current test PASSED/SKIPPED -- test_wrapped_resource in /home/kaiyaok2/PythonProjects/falcon/tests/test_before_hooks.py: 106.33726453781128s cumulative, 0.008872270584106445s individual

.
current test PASSED/SKIPPED -- test_field_validator in /home/kaiyaok2/PythonProjects/falcon/tests/test_before_hooks.py: 106.34391164779663s cumulative, 0.0066471099853515625s individual

.
current test PASSED/SKIPPED -- test_field_validator in /home/kaiyaok2/PythonProjects/falcon/tests/test_before_hooks.py: 106.34947657585144s cumulative, 0.00556492805480957s individual

.
current test PASSED/SKIPPED -- test_parser_async in /home/kaiyaok2/PythonProjects/falcon/tests/test_before_hooks.py: 106.35464191436768s cumulative, 0.0051653385162353516s individual

.
current test PASSED/SKIPPED -- test_field_validator in /home/kaiyaok2/PythonProjects/falcon/tests/test_before_hooks.py: 106.36087965965271s cumulative, 0.00623774528503418s individual

.
current test PASSED/SKIPPED -- test_multiple_resource_hooks in /home/kaiyaok2/PythonProjects/falcon/tests/test_before_hooks.py: 106.36531066894531s cumulative, 0.004431009292602539s individual

.
current test PASSED/SKIPPED -- test_parser_sync in /home/kaiyaok2/PythonProjects/falcon/tests/test_before_hooks.py: 106.36974930763245s cumulative, 0.004438638687133789s individual

.
current test PASSED/SKIPPED -- test_wrapped_resource_with_hooks_aware_of_resource in /home/kaiyaok2/PythonProjects/falcon/tests/test_before_hooks.py: 106.3760883808136s cumulative, 0.006339073181152344s individual

.
current test PASSED/SKIPPED -- test_parser_async in /home/kaiyaok2/PythonProjects/falcon/tests/test_before_hooks.py: 106.38112998008728s cumulative, 0.005041599273681641s individual

.
current test PASSED/SKIPPED -- test_wrapped_resource in /home/kaiyaok2/PythonProjects/falcon/tests/test_before_hooks.py: 106.38751912117004s cumulative, 0.006389141082763672s individual


tests/asgi/test_testing_asgi.py .
current test PASSED/SKIPPED -- test_create_scope_default_ua in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_testing_asgi.py: 106.39012837409973s cumulative, 0.0026092529296875s individual

.
current test PASSED/SKIPPED -- test_create_scope_default_ua_override in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_testing_asgi.py: 106.39268970489502s cumulative, 0.002561330795288086s individual

.
current test PASSED/SKIPPED -- test_missing_header_is_none in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_testing_asgi.py: 106.39522290229797s cumulative, 0.0025331974029541016s individual

.
current test PASSED/SKIPPED -- test_is_asgi_app_cls in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_testing_asgi.py: 106.3977780342102s cumulative, 0.0025551319122314453s individual

.
current test PASSED/SKIPPED -- test_ignore_extra_asgi_events in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_testing_asgi.py: 106.40079498291016s cumulative, 0.003016948699951172s individual

.
current test PASSED/SKIPPED -- test_create_scope_default_ua_modify_global in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_testing_asgi.py: 106.40334701538086s cumulative, 0.002552032470703125s individual

.
current test PASSED/SKIPPED -- test_immediate_disconnect in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_testing_asgi.py: 106.4064347743988s cumulative, 0.003087759017944336s individual

.
current test PASSED/SKIPPED -- test_cookies_jar in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_testing_asgi.py: 106.41100573539734s cumulative, 0.004570960998535156s individual

.
current test PASSED/SKIPPED -- test_invalid_asgi_events in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_testing_asgi.py: 106.41378378868103s cumulative, 0.0027780532836914062s individual


tests/asgi/test_sse.py .
current test PASSED/SKIPPED -- test_multiple_events in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_sse.py: 106.42651200294495s cumulative, 0.012728214263916016s individual

.
current test PASSED/SKIPPED -- test_single_event in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_sse.py: 106.4309561252594s cumulative, 0.004444122314453125s individual

.
current test PASSED/SKIPPED -- test_use_media_handler_dumps in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_sse.py: 106.4350905418396s cumulative, 0.004134416580200195s individual

.
current test PASSED/SKIPPED -- test_no_events in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_sse.py: 106.43904829025269s cumulative, 0.0039577484130859375s individual

.
current test PASSED/SKIPPED -- test_invalid_event_values in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_sse.py: 106.44182109832764s cumulative, 0.002772808074951172s individual

.
current test PASSED/SKIPPED -- test_no_json_media_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_sse.py: 106.44644689559937s cumulative, 0.004625797271728516s individual

.
current test PASSED/SKIPPED -- test_non_iterable in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_sse.py: 106.45042443275452s cumulative, 0.003977537155151367s individual


tests/test_error_handlers.py .
current test PASSED/SKIPPED -- test_error_precedence_subclass in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 106.45696878433228s cumulative, 0.006544351577758789s individual

.
current test PASSED/SKIPPED -- test_uncaught_python_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 106.46409153938293s cumulative, 0.00712275505065918s individual

.
current test PASSED/SKIPPED -- test_subclass_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 106.46825695037842s cumulative, 0.0041654109954833984s individual

.
current test PASSED/SKIPPED -- test_handler_must_be_coroutine_for_asgi in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 106.47119331359863s cumulative, 0.0029363632202148438s individual

.
current test PASSED/SKIPPED -- test_catch_http_no_route_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 106.47610116004944s cumulative, 0.004907846450805664s individual

.
current test PASSED/SKIPPED -- test_handler_multiple_exception_iterable in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 106.4835798740387s cumulative, 0.0074787139892578125s individual

.
current test PASSED/SKIPPED -- test_invalid_add_exception_handler_input in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 106.48727321624756s cumulative, 0.0036933422088623047s individual

.
current test PASSED/SKIPPED -- test_uncaught_python_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 106.49618649482727s cumulative, 0.008913278579711914s individual

.
current test PASSED/SKIPPED -- test_handler_multiple_exception_iterable in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 106.50238633155823s cumulative, 0.006199836730957031s individual

.
current test PASSED/SKIPPED -- test_converted_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 106.50801134109497s cumulative, 0.005625009536743164s individual

.
current test PASSED/SKIPPED -- test_uncaught_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 106.51277899742126s cumulative, 0.004767656326293945s individual

.
current test PASSED/SKIPPED -- test_handle_not_defined in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 106.51611804962158s cumulative, 0.003339052200317383s individual

.
current test PASSED/SKIPPED -- test_error_precedence_subclass_order_indifference in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 106.52155494689941s cumulative, 0.005436897277832031s individual

.
current test PASSED/SKIPPED -- test_handler_multiple_exception_iterable in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 106.52628946304321s cumulative, 0.004734516143798828s individual

.
current test PASSED/SKIPPED -- test_error_precedence_duplicate in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 106.53043794631958s cumulative, 0.0041484832763671875s individual

.
current test PASSED/SKIPPED -- test_handle_not_defined in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 106.53392910957336s cumulative, 0.0034911632537841797s individual

.
current test PASSED/SKIPPED -- test_converted_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 106.5382251739502s cumulative, 0.004296064376831055s individual

.
current test PASSED/SKIPPED -- test_invalid_add_exception_handler_input in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 106.54214572906494s cumulative, 0.003920555114746094s individual

.
current test PASSED/SKIPPED -- test_handler_single_exception_iterable in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 106.54625844955444s cumulative, 0.004112720489501953s individual

.
current test PASSED/SKIPPED -- test_invalid_add_exception_handler_input in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 106.54991245269775s cumulative, 0.003654003143310547s individual

.
current test PASSED/SKIPPED -- test_caught_error_async in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 106.5554735660553s cumulative, 0.005561113357543945s individual

.
current test PASSED/SKIPPED -- test_uncaught_error_else in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 106.55950808525085s cumulative, 0.004034519195556641s individual

.
current test PASSED/SKIPPED -- test_invalid_add_exception_handler_input in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 106.56310558319092s cumulative, 0.0035974979400634766s individual

s
current test PASSED/SKIPPED -- test_caught_error_async in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 106.56641244888306s cumulative, 0.003306865692138672s individual

.
current test PASSED/SKIPPED -- test_handler_multiple_exception_iterable in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 106.57209753990173s cumulative, 0.005685091018676758s individual

.
current test PASSED/SKIPPED -- test_invalid_add_exception_handler_input in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 106.5757749080658s cumulative, 0.0036773681640625s individual

.
current test PASSED/SKIPPED -- test_uncaught_python_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 106.58199501037598s cumulative, 0.006220102310180664s individual

.
current test PASSED/SKIPPED -- test_caught_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 106.58648657798767s cumulative, 0.004491567611694336s individual

.
current test PASSED/SKIPPED -- test_subclass_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 106.59197688102722s cumulative, 0.005490303039550781s individual

.
current test PASSED/SKIPPED -- test_uncaught_python_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 106.59700584411621s cumulative, 0.005028963088989258s individual

.
current test PASSED/SKIPPED -- test_invalid_add_exception_handler_input in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 106.60066294670105s cumulative, 0.003657102584838867s individual

.
current test PASSED/SKIPPED -- test_error_precedence_subclass in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 106.606041431427s cumulative, 0.0053784847259521484s individual

.
current test PASSED/SKIPPED -- test_error_precedence_subclass_order_indifference in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 106.61014866828918s cumulative, 0.004107236862182617s individual

.
current test PASSED/SKIPPED -- test_catch_http_no_route_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 106.61613130569458s cumulative, 0.005982637405395508s individual

.
current test PASSED/SKIPPED -- test_uncaught_error_else in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 106.62081456184387s cumulative, 0.004683256149291992s individual

.
current test PASSED/SKIPPED -- test_caught_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 106.62634325027466s cumulative, 0.005528688430786133s individual

.
current test PASSED/SKIPPED -- test_invalid_add_exception_handler_input in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 106.62983322143555s cumulative, 0.003489971160888672s individual

.
current test PASSED/SKIPPED -- test_uncaught_python_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 106.63565707206726s cumulative, 0.005823850631713867s individual

.
current test PASSED/SKIPPED -- test_error_precedence_duplicate in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 106.64031219482422s cumulative, 0.004655122756958008s individual

.
current test PASSED/SKIPPED -- test_uncaught_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 106.64432311058044s cumulative, 0.004010915756225586s individual

.
current test PASSED/SKIPPED -- test_uncaught_python_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 106.6496844291687s cumulative, 0.005361318588256836s individual

.
current test PASSED/SKIPPED -- test_invalid_add_exception_handler_input in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 106.65315890312195s cumulative, 0.0034744739532470703s individual

.
current test PASSED/SKIPPED -- test_handler_single_exception_iterable in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 106.65821409225464s cumulative, 0.00505518913269043s individual

.
current test PASSED/SKIPPED -- test_handler_signature_shim in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 106.66302943229675s cumulative, 0.004815340042114258s individual

.
current test PASSED/SKIPPED -- test_media_is_set in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 106.66708135604858s cumulative, 0.004051923751831055s individual

.
current test PASSED/SKIPPED -- test_media_is_set in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 106.67189598083496s cumulative, 0.004814624786376953s individual

.
current test PASSED/SKIPPED -- test_data_is_set in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 106.67605066299438s cumulative, 0.004154682159423828s individual

.
current test PASSED/SKIPPED -- test_data_is_set in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 106.68120956420898s cumulative, 0.005158901214599609s individual

.
current test PASSED/SKIPPED -- test_body_is_set in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 106.68529605865479s cumulative, 0.004086494445800781s individual

.
current test PASSED/SKIPPED -- test_body_is_set in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 106.68986511230469s cumulative, 0.004569053649902344s individual

.
current test PASSED/SKIPPED -- test_body_is_set in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 106.69399309158325s cumulative, 0.004127979278564453s individual

.
current test PASSED/SKIPPED -- test_media_is_set in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 106.69919872283936s cumulative, 0.005205631256103516s individual

.
current test PASSED/SKIPPED -- test_data_is_set in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 106.70389652252197s cumulative, 0.0046977996826171875s individual

.
current test PASSED/SKIPPED -- test_data_is_set in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 106.70800542831421s cumulative, 0.004108905792236328s individual

.
current test PASSED/SKIPPED -- test_media_is_set in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 106.71204924583435s cumulative, 0.0040438175201416016s individual

.
current test PASSED/SKIPPED -- test_body_is_set in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 106.71715879440308s cumulative, 0.005109548568725586s individual


tests/test_cmd_inspect_app.py .
current test PASSED/SKIPPED -- test_make_parser in /home/kaiyaok2/PythonProjects/falcon/tests/test_cmd_inspect_app.py: 106.72219324111938s cumulative, 0.005034446716308594s individual

.
current test PASSED/SKIPPED -- test_make_parser_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_cmd_inspect_app.py: 106.72650289535522s cumulative, 0.004309654235839844s individual

.
current test PASSED/SKIPPED -- test_make_parser in /home/kaiyaok2/PythonProjects/falcon/tests/test_cmd_inspect_app.py: 106.73036289215088s cumulative, 0.003859996795654297s individual

.
current test PASSED/SKIPPED -- test_make_parser in /home/kaiyaok2/PythonProjects/falcon/tests/test_cmd_inspect_app.py: 106.73408579826355s cumulative, 0.0037229061126708984s individual

.
current test PASSED/SKIPPED -- test_make_parser in /home/kaiyaok2/PythonProjects/falcon/tests/test_cmd_inspect_app.py: 106.73778414726257s cumulative, 0.0036983489990234375s individual

.
current test PASSED/SKIPPED -- test_make_parser in /home/kaiyaok2/PythonProjects/falcon/tests/test_cmd_inspect_app.py: 106.74152302742004s cumulative, 0.003738880157470703s individual

.
current test PASSED/SKIPPED -- test_make_parser in /home/kaiyaok2/PythonProjects/falcon/tests/test_cmd_inspect_app.py: 106.74521970748901s cumulative, 0.0036966800689697266s individual

.
current test PASSED/SKIPPED -- test_make_parser in /home/kaiyaok2/PythonProjects/falcon/tests/test_cmd_inspect_app.py: 106.74890732765198s cumulative, 0.003687620162963867s individual

.
current test PASSED/SKIPPED -- test_route_main in /home/kaiyaok2/PythonProjects/falcon/tests/test_cmd_inspect_app.py: 106.7515172958374s cumulative, 0.0026099681854248047s individual

.
current test PASSED/SKIPPED -- test_make_parser in /home/kaiyaok2/PythonProjects/falcon/tests/test_cmd_inspect_app.py: 106.7572660446167s cumulative, 0.005748748779296875s individual

F
current test FAILED -- test_routes_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_cmd_inspect_app.py: 106.84399557113647s cumulative, 0.08672952651977539s individual

F
current test FAILED -- test_inspect in /home/kaiyaok2/PythonProjects/falcon/tests/test_cmd_inspect_app.py: 106.90159916877747s cumulative, 0.05760359764099121s individual

F
current test FAILED -- test_inspect in /home/kaiyaok2/PythonProjects/falcon/tests/test_cmd_inspect_app.py: 106.95784544944763s cumulative, 0.056246280670166016s individual

F
current test FAILED -- test_routes_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_cmd_inspect_app.py: 107.01340770721436s cumulative, 0.05556225776672363s individual

F
current test FAILED -- test_inspect in /home/kaiyaok2/PythonProjects/falcon/tests/test_cmd_inspect_app.py: 107.06851029396057s cumulative, 0.05510258674621582s individual

F
current test FAILED -- test_inspect in /home/kaiyaok2/PythonProjects/falcon/tests/test_cmd_inspect_app.py: 107.12352705001831s cumulative, 0.05501675605773926s individual

F
current test FAILED -- test_routes_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_cmd_inspect_app.py: 107.17876172065735s cumulative, 0.055234670639038086s individual

F
current test FAILED -- test_routes_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_cmd_inspect_app.py: 107.23424744606018s cumulative, 0.05548572540283203s individual

F
current test FAILED -- test_load_app_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_cmd_inspect_app.py: 107.29053974151611s cumulative, 0.05629229545593262s individual

.
current test PASSED/SKIPPED -- test_load_app_module_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_cmd_inspect_app.py: 107.29486775398254s cumulative, 0.004328012466430664s individual

F
current test FAILED -- test_load_app_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_cmd_inspect_app.py: 107.35024690628052s cumulative, 0.05537915229797363s individual

F
current test FAILED -- test_load_app in /home/kaiyaok2/PythonProjects/falcon/tests/test_cmd_inspect_app.py: 107.40478277206421s cumulative, 0.054535865783691406s individual

F
current test FAILED -- test_load_app_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_cmd_inspect_app.py: 107.45923900604248s cumulative, 0.054456233978271484s individual

F
current test FAILED -- test_load_app in /home/kaiyaok2/PythonProjects/falcon/tests/test_cmd_inspect_app.py: 107.51158738136292s cumulative, 0.05234837532043457s individual


tests/test_error.py .
current test PASSED/SKIPPED -- test_with_title_desc_and_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.51433825492859s cumulative, 0.002750873565673828s individual

.
current test PASSED/SKIPPED -- test_with_default_title_and_desc in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.51716208457947s cumulative, 0.0028238296508789062s individual

.
current test PASSED/SKIPPED -- test_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.5201632976532s cumulative, 0.0030012130737304688s individual

.
current test PASSED/SKIPPED -- test_other_header_list in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.52349638938904s cumulative, 0.0033330917358398438s individual

.
current test PASSED/SKIPPED -- test_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.52613377571106s cumulative, 0.0026373863220214844s individual

.
current test PASSED/SKIPPED -- test_override_header_list in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.5294406414032s cumulative, 0.003306865692138672s individual

.
current test PASSED/SKIPPED -- test_with_title_desc_and_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.53209662437439s cumulative, 0.0026559829711914062s individual

.
current test PASSED/SKIPPED -- test_with_title_desc_and_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.53470754623413s cumulative, 0.002610921859741211s individual

.
current test PASSED/SKIPPED -- test_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.53733777999878s cumulative, 0.0026302337646484375s individual

.
current test PASSED/SKIPPED -- test_no_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.54060649871826s cumulative, 0.003268718719482422s individual

.
current test PASSED/SKIPPED -- test_with_retry_after_and_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.54322457313538s cumulative, 0.002618074417114258s individual

.
current test PASSED/SKIPPED -- test_http_error_repr in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.5460033416748s cumulative, 0.002778768539428711s individual

.
current test PASSED/SKIPPED -- test_other_header_list in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.54929828643799s cumulative, 0.0032949447631835938s individual

.
current test PASSED/SKIPPED -- test_with_default_title_and_desc in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.55223059654236s cumulative, 0.002932310104370117s individual

.
current test PASSED/SKIPPED -- test_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.55488133430481s cumulative, 0.002650737762451172s individual

.
current test PASSED/SKIPPED -- test_override_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.5581533908844s cumulative, 0.0032720565795898438s individual

.
current test PASSED/SKIPPED -- test_with_title_desc_and_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.56076049804688s cumulative, 0.002607107162475586s individual

.
current test PASSED/SKIPPED -- test_with_default_title_and_desc in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.56348919868469s cumulative, 0.002728700637817383s individual

.
current test PASSED/SKIPPED -- test_other_header_list in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.56672978401184s cumulative, 0.0032405853271484375s individual

.
current test PASSED/SKIPPED -- test_override_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.56997323036194s cumulative, 0.0032434463500976562s individual

.
current test PASSED/SKIPPED -- test_other_header_list in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.57322645187378s cumulative, 0.0032532215118408203s individual

.
current test PASSED/SKIPPED -- test_override_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.57649493217468s cumulative, 0.0032684803009033203s individual

.
current test PASSED/SKIPPED -- test_with_default_title_and_desc in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.57922267913818s cumulative, 0.0027277469635009766s individual

.
current test PASSED/SKIPPED -- test_with_default_title_and_desc in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.58194875717163s cumulative, 0.0027260780334472656s individual

.
current test PASSED/SKIPPED -- test_no_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.58523225784302s cumulative, 0.0032835006713867188s individual

.
current test PASSED/SKIPPED -- test_with_default_title_and_desc in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.58796548843384s cumulative, 0.0027332305908203125s individual

.
current test PASSED/SKIPPED -- test_with_default_title_and_desc in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.59103727340698s cumulative, 0.0030717849731445312s individual

.
current test PASSED/SKIPPED -- test_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.59369397163391s cumulative, 0.002656698226928711s individual

.
current test PASSED/SKIPPED -- test_with_title_desc_and_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.59630727767944s cumulative, 0.0026133060455322266s individual

.
current test PASSED/SKIPPED -- test_args_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.59914255142212s cumulative, 0.0028352737426757812s individual

.
current test PASSED/SKIPPED -- test_with_title_desc_and_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.60175657272339s cumulative, 0.0026140213012695312s individual

.
current test PASSED/SKIPPED -- test_with_default_title_and_desc in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.60451912879944s cumulative, 0.0027625560760498047s individual

.
current test PASSED/SKIPPED -- test_with_title_desc_and_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.60712337493896s cumulative, 0.002604246139526367s individual

.
current test PASSED/SKIPPED -- test_with_title_desc_and_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.61007714271545s cumulative, 0.002953767776489258s individual

.
current test PASSED/SKIPPED -- test_with_default_title_and_desc in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.61281418800354s cumulative, 0.0027370452880859375s individual

.
current test PASSED/SKIPPED -- test_other_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.61604619026184s cumulative, 0.0032320022583007812s individual

.
current test PASSED/SKIPPED -- test_with_retry_after in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.61863827705383s cumulative, 0.0025920867919921875s individual

.
current test PASSED/SKIPPED -- test_with_default_title_and_desc in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.62135767936707s cumulative, 0.002719402313232422s individual

.
current test PASSED/SKIPPED -- test_with_title_desc_and_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.62429070472717s cumulative, 0.002933025360107422s individual

.
current test PASSED/SKIPPED -- test_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.62694883346558s cumulative, 0.0026581287384033203s individual

.
current test PASSED/SKIPPED -- test_other_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.63023161888123s cumulative, 0.003282785415649414s individual

.
current test PASSED/SKIPPED -- test_with_title_desc_and_headers_args in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.63297200202942s cumulative, 0.0027403831481933594s individual

.
current test PASSED/SKIPPED -- test_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.6356041431427s cumulative, 0.00263214111328125s individual

.
current test PASSED/SKIPPED -- test_with_title_desc_and_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.63820362091064s cumulative, 0.002599477767944336s individual

.
current test PASSED/SKIPPED -- test_with_title_desc_and_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.64084649085999s cumulative, 0.0026428699493408203s individual

.
current test PASSED/SKIPPED -- test_with_retry_after_and_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.64344668388367s cumulative, 0.0026001930236816406s individual

.
current test PASSED/SKIPPED -- test_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.64607858657837s cumulative, 0.0026319026947021484s individual

.
current test PASSED/SKIPPED -- test_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.64871120452881s cumulative, 0.002632617950439453s individual

.
current test PASSED/SKIPPED -- test_custom_400 in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.65176033973694s cumulative, 0.003049135208129883s individual

.
current test PASSED/SKIPPED -- test_no_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.65501880645752s cumulative, 0.0032584667205810547s individual

.
current test PASSED/SKIPPED -- test_with_default_title_and_desc in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.65773797035217s cumulative, 0.0027191638946533203s individual

.
current test PASSED/SKIPPED -- test_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.6603536605835s cumulative, 0.002615690231323242s individual

.
current test PASSED/SKIPPED -- test_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.66296410560608s cumulative, 0.002610445022583008s individual

.
current test PASSED/SKIPPED -- test_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.66557145118713s cumulative, 0.0026073455810546875s individual

.
current test PASSED/SKIPPED -- test_with_title_desc_and_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.66847777366638s cumulative, 0.002906322479248047s individual

.
current test PASSED/SKIPPED -- test_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.67114520072937s cumulative, 0.0026674270629882812s individual

.
current test PASSED/SKIPPED -- test_with_title_desc_and_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.67374420166016s cumulative, 0.002599000930786133s individual

.
current test PASSED/SKIPPED -- test_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.67637372016907s cumulative, 0.002629518508911133s individual

.
current test PASSED/SKIPPED -- test_with_default_title_and_desc in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.6791181564331s cumulative, 0.002744436264038086s individual

.
current test PASSED/SKIPPED -- test_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.68174624443054s cumulative, 0.0026280879974365234s individual

.
current test PASSED/SKIPPED -- test_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.68436598777771s cumulative, 0.0026197433471679688s individual

.
current test PASSED/SKIPPED -- test_with_title_desc_and_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.68696451187134s cumulative, 0.0025985240936279297s individual

.
current test PASSED/SKIPPED -- test_with_title_desc_and_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.68955755233765s cumulative, 0.0025930404663085938s individual

.
current test PASSED/SKIPPED -- test_custom_400 in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.69253993034363s cumulative, 0.0029823780059814453s individual

.
current test PASSED/SKIPPED -- test_with_default_title_and_desc in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.69524955749512s cumulative, 0.002709627151489258s individual

.
current test PASSED/SKIPPED -- test_override_header_list in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.69848942756653s cumulative, 0.003239870071411133s individual

.
current test PASSED/SKIPPED -- test_custom_400 in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.70145201683044s cumulative, 0.0029625892639160156s individual

.
current test PASSED/SKIPPED -- test_with_title_desc_and_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.70402789115906s cumulative, 0.0025758743286132812s individual

.
current test PASSED/SKIPPED -- test_other_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.70761561393738s cumulative, 0.0035877227783203125s individual

.
current test PASSED/SKIPPED -- test_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.71024298667908s cumulative, 0.0026273727416992188s individual

.
current test PASSED/SKIPPED -- test_other_header_list in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.71350264549255s cumulative, 0.0032596588134765625s individual

.
current test PASSED/SKIPPED -- test_no_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.71674513816833s cumulative, 0.00324249267578125s individual

.
current test PASSED/SKIPPED -- test_override_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.71998953819275s cumulative, 0.0032444000244140625s individual

.
current test PASSED/SKIPPED -- test_with_default_title_and_desc in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.72271132469177s cumulative, 0.0027217864990234375s individual

.
current test PASSED/SKIPPED -- test_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.72532773017883s cumulative, 0.002616405487060547s individual

.
current test PASSED/SKIPPED -- test_with_title_desc_and_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.72792935371399s cumulative, 0.00260162353515625s individual

.
current test PASSED/SKIPPED -- test_args_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.73069190979004s cumulative, 0.0027625560760498047s individual

.
current test PASSED/SKIPPED -- test_with_default_title_and_desc in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.7334246635437s cumulative, 0.0027327537536621094s individual

.
current test PASSED/SKIPPED -- test_with_title_desc_and_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.73601508140564s cumulative, 0.0025904178619384766s individual

.
current test PASSED/SKIPPED -- test_with_default_title_and_desc in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.73873090744019s cumulative, 0.0027158260345458984s individual

.
current test PASSED/SKIPPED -- test_with_title_desc_and_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.74132943153381s cumulative, 0.0025985240936279297s individual

.
current test PASSED/SKIPPED -- test_with_default_title_and_desc in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.74405264854431s cumulative, 0.002723217010498047s individual

.
current test PASSED/SKIPPED -- test_with_title_desc_and_headers_args in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.74676895141602s cumulative, 0.0027163028717041016s individual

.
current test PASSED/SKIPPED -- test_with_title_desc_and_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.74968576431274s cumulative, 0.0029168128967285156s individual

.
current test PASSED/SKIPPED -- test_with_title_desc_and_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.75228095054626s cumulative, 0.002595186233520508s individual

.
current test PASSED/SKIPPED -- test_other_header_list in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.75553750991821s cumulative, 0.003256559371948242s individual

.
current test PASSED/SKIPPED -- test_no_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.75876116752625s cumulative, 0.0032236576080322266s individual

.
current test PASSED/SKIPPED -- test_with_default_title_and_desc in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.76147818565369s cumulative, 0.0027170181274414062s individual

.
current test PASSED/SKIPPED -- test_other_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.76471042633057s cumulative, 0.003232240676879883s individual

.
current test PASSED/SKIPPED -- test_with_title_desc_and_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.76730370521545s cumulative, 0.0025932788848876953s individual

.
current test PASSED/SKIPPED -- test_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.76994442939758s cumulative, 0.0026407241821289062s individual

.
current test PASSED/SKIPPED -- test_with_default_title_and_desc in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.77268505096436s cumulative, 0.002740621566772461s individual

.
current test PASSED/SKIPPED -- test_with_title_desc_and_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.77528357505798s cumulative, 0.0025985240936279297s individual

.
current test PASSED/SKIPPED -- test_override_header_list in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.77851486206055s cumulative, 0.0032312870025634766s individual

.
current test PASSED/SKIPPED -- test_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.7811164855957s cumulative, 0.00260162353515625s individual

.
current test PASSED/SKIPPED -- test_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.78371238708496s cumulative, 0.0025959014892578125s individual

.
current test PASSED/SKIPPED -- test_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.78630638122559s cumulative, 0.002593994140625s individual

.
current test PASSED/SKIPPED -- test_args_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.789053440094s cumulative, 0.002747058868408203s individual

.
current test PASSED/SKIPPED -- test_override_header_list in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.79228663444519s cumulative, 0.003233194351196289s individual

.
current test PASSED/SKIPPED -- test_with_title_desc_and_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.79487133026123s cumulative, 0.002584695816040039s individual

.
current test PASSED/SKIPPED -- test_args_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.79794073104858s cumulative, 0.0030694007873535156s individual

.
current test PASSED/SKIPPED -- test_no_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.80118083953857s cumulative, 0.0032401084899902344s individual

.
current test PASSED/SKIPPED -- test_with_title_desc_and_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.80379867553711s cumulative, 0.0026178359985351562s individual

.
current test PASSED/SKIPPED -- test_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.80644249916077s cumulative, 0.0026438236236572266s individual

.
current test PASSED/SKIPPED -- test_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.809077501297s cumulative, 0.0026350021362304688s individual

.
current test PASSED/SKIPPED -- test_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.8117036819458s cumulative, 0.002626180648803711s individual

.
current test PASSED/SKIPPED -- test_with_retry_after in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.81430339813232s cumulative, 0.0025997161865234375s individual

.
current test PASSED/SKIPPED -- test_with_default_title_and_desc_args in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.81714963912964s cumulative, 0.002846240997314453s individual

.
current test PASSED/SKIPPED -- test_with_retry_after in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.81973266601562s cumulative, 0.002583026885986328s individual

.
current test PASSED/SKIPPED -- test_with_title_desc_and_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.8223168849945s cumulative, 0.002584218978881836s individual

.
current test PASSED/SKIPPED -- test_with_default_title_and_desc in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.82502841949463s cumulative, 0.0027115345001220703s individual

.
current test PASSED/SKIPPED -- test_custom_400 in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.8279938697815s cumulative, 0.0029654502868652344s individual

.
current test PASSED/SKIPPED -- test_other_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.83122038841248s cumulative, 0.0032265186309814453s individual

.
current test PASSED/SKIPPED -- test_with_default_title_and_desc in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.83392786979675s cumulative, 0.0027074813842773438s individual

.
current test PASSED/SKIPPED -- test_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.8376214504242s cumulative, 0.0036935806274414062s individual

.
current test PASSED/SKIPPED -- test_with_default_title_and_desc in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.8403754234314s cumulative, 0.0027539730072021484s individual

.
current test PASSED/SKIPPED -- test_with_default_title_and_desc in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.84311246871948s cumulative, 0.0027370452880859375s individual

.
current test PASSED/SKIPPED -- test_with_default_title_and_desc in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.84586787223816s cumulative, 0.002755403518676758s individual

.
current test PASSED/SKIPPED -- test_with_title_desc_and_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.84848427772522s cumulative, 0.002616405487060547s individual

.
current test PASSED/SKIPPED -- test_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.85112404823303s cumulative, 0.0026397705078125s individual

.
current test PASSED/SKIPPED -- test_with_default_title_and_desc_args in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.85396885871887s cumulative, 0.0028448104858398438s individual

.
current test PASSED/SKIPPED -- test_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.85659074783325s cumulative, 0.002621889114379883s individual

.
current test PASSED/SKIPPED -- test_with_default_title_and_desc in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.85929584503174s cumulative, 0.002705097198486328s individual

.
current test PASSED/SKIPPED -- test_other_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.86252427101135s cumulative, 0.003228425979614258s individual

.
current test PASSED/SKIPPED -- test_with_default_title_and_desc in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.8652412891388s cumulative, 0.0027170181274414062s individual

.
current test PASSED/SKIPPED -- test_with_title_desc_and_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.86783504486084s cumulative, 0.0025937557220458984s individual

.
current test PASSED/SKIPPED -- test_with_retry_after_and_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.87043404579163s cumulative, 0.002599000930786133s individual

.
current test PASSED/SKIPPED -- test_override_header_list in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.87406873703003s cumulative, 0.0036346912384033203s individual

.
current test PASSED/SKIPPED -- test_override_header_list in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.87732648849487s cumulative, 0.00325775146484375s individual

.
current test PASSED/SKIPPED -- test_override_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.88056921958923s cumulative, 0.0032427310943603516s individual

.
current test PASSED/SKIPPED -- test_override_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.88383603096008s cumulative, 0.0032668113708496094s individual

.
current test PASSED/SKIPPED -- test_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.88647437095642s cumulative, 0.0026383399963378906s individual

.
current test PASSED/SKIPPED -- test_with_default_title_and_desc in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.88920831680298s cumulative, 0.002733945846557617s individual

.
current test PASSED/SKIPPED -- test_args_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.89197182655334s cumulative, 0.002763509750366211s individual

.
current test PASSED/SKIPPED -- test_with_title_desc_and_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.89456677436829s cumulative, 0.0025949478149414062s individual

.
current test PASSED/SKIPPED -- test_args_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.8973159790039s cumulative, 0.002749204635620117s individual

.
current test PASSED/SKIPPED -- test_with_default_title_and_desc in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.90003848075867s cumulative, 0.002722501754760742s individual

.
current test PASSED/SKIPPED -- test_with_default_title_and_desc in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 107.90279531478882s cumulative, 0.002756834030151367s individual


tests/test_wsgi.py .
current test PASSED/SKIPPED -- test_head_405 in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi.py: 107.93078327178955s cumulative, 0.027987957000732422s individual

.
current test PASSED/SKIPPED -- test_put in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi.py: 107.93878698348999s cumulative, 0.008003711700439453s individual

.
current test PASSED/SKIPPED -- test_get in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi.py: 107.94418144226074s cumulative, 0.005394458770751953s individual

.
current test PASSED/SKIPPED -- test_post_read_bounded_stream_no_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi.py: 107.94977903366089s cumulative, 0.005597591400146484s individual

.
current test PASSED/SKIPPED -- test_post in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi.py: 107.95665001869202s cumulative, 0.00687098503112793s individual

.
current test PASSED/SKIPPED -- test_post_read_bounded_stream in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi.py: 107.96935606002808s cumulative, 0.01270604133605957s individual

.
current test PASSED/SKIPPED -- test_post_invalid_content_length in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi.py: 107.9756977558136s cumulative, 0.006341695785522461s individual


tests/asgi/test_response_media_asgi.py .
current test PASSED/SKIPPED -- test_custom_render_body in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_response_media_asgi.py: 107.98661518096924s cumulative, 0.010917425155639648s individual

.
current test PASSED/SKIPPED -- test_json in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_response_media_asgi.py: 107.99174046516418s cumulative, 0.005125284194946289s individual

.
current test PASSED/SKIPPED -- test_mimeparse_edgecases in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_response_media_asgi.py: 107.99660658836365s cumulative, 0.004866123199462891s individual

.
current test PASSED/SKIPPED -- test_text in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_response_media_asgi.py: 108.00177693367004s cumulative, 0.005170345306396484s individual

.
current test PASSED/SKIPPED -- test_msgpack in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_response_media_asgi.py: 108.00594115257263s cumulative, 0.004164218902587891s individual

.
current test PASSED/SKIPPED -- test_mimeparse_edgecases in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_response_media_asgi.py: 108.01098132133484s cumulative, 0.005040168762207031s individual

.
current test PASSED/SKIPPED -- test_json in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_response_media_asgi.py: 108.01532435417175s cumulative, 0.0043430328369140625s individual

.
current test PASSED/SKIPPED -- test_custom_media_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_response_media_asgi.py: 108.02171993255615s cumulative, 0.006395578384399414s individual

.
current test PASSED/SKIPPED -- test_msgpack in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_response_media_asgi.py: 108.02587914466858s cumulative, 0.004159212112426758s individual

.
current test PASSED/SKIPPED -- test_non_ascii_json_serialization in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_response_media_asgi.py: 108.02999901771545s cumulative, 0.004119873046875s individual

.
current test PASSED/SKIPPED -- test_json in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_response_media_asgi.py: 108.03408408164978s cumulative, 0.004085063934326172s individual

.
current test PASSED/SKIPPED -- test_non_ascii_json_serialization in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_response_media_asgi.py: 108.03845882415771s cumulative, 0.00437474250793457s individual

.
current test PASSED/SKIPPED -- test_data_masquerading_as_text in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_response_media_asgi.py: 108.0427303314209s cumulative, 0.004271507263183594s individual

.
current test PASSED/SKIPPED -- test_default_media_type in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_response_media_asgi.py: 108.0466239452362s cumulative, 0.003893613815307617s individual

.
current test PASSED/SKIPPED -- test_data in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_response_media_asgi.py: 108.05052542686462s cumulative, 0.0039014816284179688s individual

.
current test PASSED/SKIPPED -- test_non_ascii_json_serialization in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_response_media_asgi.py: 108.05454897880554s cumulative, 0.004023551940917969s individual

.
current test PASSED/SKIPPED -- test_unknown_media_type in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_response_media_asgi.py: 108.05933427810669s cumulative, 0.004785299301147461s individual

.
current test PASSED/SKIPPED -- test_msgpack in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_response_media_asgi.py: 108.06377029418945s cumulative, 0.004436016082763672s individual

.
current test PASSED/SKIPPED -- test_media_rendered_cached in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_response_media_asgi.py: 108.06764459609985s cumulative, 0.0038743019104003906s individual

.
current test PASSED/SKIPPED -- test_non_ascii_json_serialization in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_response_media_asgi.py: 108.07165026664734s cumulative, 0.0040056705474853516s individual

.
current test PASSED/SKIPPED -- test_media in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_response_media_asgi.py: 108.07557511329651s cumulative, 0.003924846649169922s individual

.
current test PASSED/SKIPPED -- test_non_ascii_json_serialization in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_response_media_asgi.py: 108.07967782020569s cumulative, 0.0041027069091796875s individual


tests/asgi/test_buffered_reader.py .
current test PASSED/SKIPPED -- test_irregular_large_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 109.85599708557129s cumulative, 1.7763192653656006s individual


tests/test_buffered_reader.py .
current test PASSED/SKIPPED -- test_fragmented_reads in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 110.86537742614746s cumulative, 1.0093803405761719s individual

.
current test PASSED/SKIPPED -- test_irregular_large_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 112.76385259628296s cumulative, 1.898475170135498s individual


tests/asgi/test_sync.py .
current test PASSED/SKIPPED -- test_sync_helpers in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_sync.py: 116.14899516105652s cumulative, 3.3851425647735596s individual


tests/asgi/test_cythonized_asgi.py .
current test PASSED/SKIPPED -- test_is_cython_func in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_cythonized_asgi.py: 116.1517825126648s cumulative, 0.002787351608276367s individual

.
current test PASSED/SKIPPED -- test_not_cython_func in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_cythonized_asgi.py: 116.1543960571289s cumulative, 0.002613544464111328s individual

.
current test PASSED/SKIPPED -- test_not_cython_func in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_cythonized_asgi.py: 116.15704107284546s cumulative, 0.0026450157165527344s individual

.
current test PASSED/SKIPPED -- test_scheduled_jobs_type_error in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_cythonized_asgi.py: 116.16421318054199s cumulative, 0.007172107696533203s individual

.
current test PASSED/SKIPPED -- test_is_cython_func in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_cythonized_asgi.py: 116.1668152809143s cumulative, 0.002602100372314453s individual

.
current test PASSED/SKIPPED -- test_not_cython_func in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_cythonized_asgi.py: 116.16938424110413s cumulative, 0.002568960189819336s individual

F
current test FAILED -- test_jsonchema_validator in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_cythonized_asgi.py: 116.24558639526367s cumulative, 0.0762021541595459s individual

.
current test PASSED/SKIPPED -- test_not_cython_func in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_cythonized_asgi.py: 116.24820971488953s cumulative, 0.002623319625854492s individual

F
current test FAILED -- test_hooks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_cythonized_asgi.py: 116.31173372268677s cumulative, 0.06352400779724121s individual

.
current test PASSED/SKIPPED -- test_not_cython_func in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_cythonized_asgi.py: 116.31435799598694s cumulative, 0.0026242733001708984s individual

.
current test PASSED/SKIPPED -- test_not_cython_func in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_cythonized_asgi.py: 116.31694507598877s cumulative, 0.0025870800018310547s individual

.
current test PASSED/SKIPPED -- test_is_cython_func in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_cythonized_asgi.py: 116.31951808929443s cumulative, 0.0025730133056640625s individual

.
current test PASSED/SKIPPED -- test_is_cython_func in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_cythonized_asgi.py: 116.3221333026886s cumulative, 0.002615213394165039s individual

.
current test PASSED/SKIPPED -- test_is_cython_func in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_cythonized_asgi.py: 116.32471060752869s cumulative, 0.0025773048400878906s individual

.
current test PASSED/SKIPPED -- test_is_cython_func in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_cythonized_asgi.py: 116.32729196548462s cumulative, 0.002581357955932617s individual


tests/test_media_handlers.py .
current test PASSED/SKIPPED -- test_deserialization_raises in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 116.33413863182068s cumulative, 0.00684666633605957s individual

.
current test PASSED/SKIPPED -- test_full_app in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 116.34967517852783s cumulative, 0.01553654670715332s individual

.
current test PASSED/SKIPPED -- test_json in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 116.35281324386597s cumulative, 0.0031380653381347656s individual

.
current test PASSED/SKIPPED -- test_serialization in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 116.35596895217896s cumulative, 0.0031557083129882812s individual

.
current test PASSED/SKIPPED -- test_full_app in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 116.36411094665527s cumulative, 0.00814199447631836s individual

.
current test PASSED/SKIPPED -- test_sync_methods_not_overridden in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 116.37313795089722s cumulative, 0.00902700424194336s individual

.
current test PASSED/SKIPPED -- test_full_app in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 116.38033080101013s cumulative, 0.007192850112915039s individual

.
current test PASSED/SKIPPED -- test_full_app in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 116.38518857955933s cumulative, 0.004857778549194336s individual

.
current test PASSED/SKIPPED -- test_full_app in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 116.38983941078186s cumulative, 0.00465083122253418s individual

.
current test PASSED/SKIPPED -- test_deserialization_raises in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 116.39605021476746s cumulative, 0.006210803985595703s individual

.
current test PASSED/SKIPPED -- test_deserialization_raises in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 116.40087985992432s cumulative, 0.0048296451568603516s individual

.
current test PASSED/SKIPPED -- test_full_app in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 116.40533995628357s cumulative, 0.00446009635925293s individual

.
current test PASSED/SKIPPED -- test_deserialization_raises in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 116.41053581237793s cumulative, 0.0051958560943603516s individual

.
current test PASSED/SKIPPED -- test_deserialization in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 116.41369199752808s cumulative, 0.0031561851501464844s individual

.
current test PASSED/SKIPPED -- test_full_app in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 116.4181067943573s cumulative, 0.004414796829223633s individual

.
current test PASSED/SKIPPED -- test_full_app in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 116.42261123657227s cumulative, 0.00450444221496582s individual

.
current test PASSED/SKIPPED -- test_deserialization in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 116.42610120773315s cumulative, 0.003489971160888672s individual

.
current test PASSED/SKIPPED -- test_full_app in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 116.4306960105896s cumulative, 0.0045948028564453125s individual

.
current test PASSED/SKIPPED -- test_serialization in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 116.43388104438782s cumulative, 0.0031850337982177734s individual

.
current test PASSED/SKIPPED -- test_serialization in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 116.43697667121887s cumulative, 0.0030956268310546875s individual

.
current test PASSED/SKIPPED -- test_sync_methods_not_overridden in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 116.44421076774597s cumulative, 0.007234096527099609s individual

.
current test PASSED/SKIPPED -- test_defaultError in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 116.44681930541992s cumulative, 0.0026085376739501953s individual

.
current test PASSED/SKIPPED -- test_serialization in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 116.44981956481934s cumulative, 0.0030002593994140625s individual

.
current test PASSED/SKIPPED -- test_async_methods_not_overridden in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 116.45410370826721s cumulative, 0.0042841434478759766s individual

.
current test PASSED/SKIPPED -- test_serialization in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 116.45708751678467s cumulative, 0.0029838085174560547s individual

.
current test PASSED/SKIPPED -- test_serialization in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 116.46010136604309s cumulative, 0.0030138492584228516s individual

.
current test PASSED/SKIPPED -- test_full_app in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 116.46887946128845s cumulative, 0.008778095245361328s individual

.
current test PASSED/SKIPPED -- test_deserialization in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 116.47189831733704s cumulative, 0.0030188560485839844s individual

.
current test PASSED/SKIPPED -- test_full_app in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 116.47995257377625s cumulative, 0.008054256439208984s individual

.
current test PASSED/SKIPPED -- test_serialization in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 116.48297452926636s cumulative, 0.0030219554901123047s individual

.
current test PASSED/SKIPPED -- test_full_app in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 116.48751163482666s cumulative, 0.004537105560302734s individual

.
current test PASSED/SKIPPED -- test_full_app in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 116.49209332466125s cumulative, 0.0045816898345947266s individual

.
current test PASSED/SKIPPED -- test_deserialization_raises in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 116.49669647216797s cumulative, 0.004603147506713867s individual

.
current test PASSED/SKIPPED -- test_deserialization in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 116.50008153915405s cumulative, 0.0033850669860839844s individual

.
current test PASSED/SKIPPED -- test_full_app in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 116.50515413284302s cumulative, 0.005072593688964844s individual

.
current test PASSED/SKIPPED -- test_json_err_no_handler in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 116.50963568687439s cumulative, 0.00448155403137207s individual

.
current test PASSED/SKIPPED -- test_full_app in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 116.51746606826782s cumulative, 0.007830381393432617s individual

.
current test PASSED/SKIPPED -- test_serialization in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 116.52379941940308s cumulative, 0.006333351135253906s individual

.
current test PASSED/SKIPPED -- test_serialization in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 116.52695083618164s cumulative, 0.003151416778564453s individual

.
current test PASSED/SKIPPED -- test_deserialization in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 116.52997589111328s cumulative, 0.003025054931640625s individual

.
current test PASSED/SKIPPED -- test_full_app in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 116.53666114807129s cumulative, 0.0066852569580078125s individual

.
current test PASSED/SKIPPED -- test_deserialization in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 116.53988718986511s cumulative, 0.003226041793823242s individual

.
current test PASSED/SKIPPED -- test_serialization in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 116.54301381111145s cumulative, 0.0031266212463378906s individual

.
current test PASSED/SKIPPED -- test_full_app in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 116.54753112792969s cumulative, 0.004517316818237305s individual

.
current test PASSED/SKIPPED -- test_deserialization in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 116.55054306983948s cumulative, 0.003011941909790039s individual

.
current test PASSED/SKIPPED -- test_serialization in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 116.55352354049683s cumulative, 0.002980470657348633s individual

.
current test PASSED/SKIPPED -- test_full_app in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 116.55809545516968s cumulative, 0.0045719146728515625s individual

.
current test PASSED/SKIPPED -- test_async_handler_returning_none in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 116.56224656105042s cumulative, 0.004151105880737305s individual

.
current test PASSED/SKIPPED -- test_json_err_no_handler in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 116.56706857681274s cumulative, 0.0048220157623291016s individual

.
current test PASSED/SKIPPED -- test_deserialization in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 116.57027244567871s cumulative, 0.003203868865966797s individual

.
current test PASSED/SKIPPED -- test_deserialization_raises in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 116.57493877410889s cumulative, 0.004666328430175781s individual

F
current test FAILED -- test_json_err_no_handler in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 116.65355491638184s cumulative, 0.07861614227294922s individual

.
current test PASSED/SKIPPED -- test_deserialization in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 116.65710592269897s cumulative, 0.003551006317138672s individual

.
current test PASSED/SKIPPED -- test_deserialization_raises in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 116.66300511360168s cumulative, 0.005899190902709961s individual

.
current test PASSED/SKIPPED -- test_deserialization_raises in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 116.66894555091858s cumulative, 0.005940437316894531s individual

F
current test FAILED -- test_json_err_no_handler in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 116.7405891418457s cumulative, 0.07164359092712402s individual

.
current test PASSED/SKIPPED -- test_serialization in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 116.74374532699585s cumulative, 0.0031561851501464844s individual

.
current test PASSED/SKIPPED -- test_serialization in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 116.75303792953491s cumulative, 0.0092926025390625s individual

.
current test PASSED/SKIPPED -- test_full_app in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 116.75909495353699s cumulative, 0.006057024002075195s individual

.
current test PASSED/SKIPPED -- test_deserialization in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 116.76230525970459s cumulative, 0.003210306167602539s individual

.
current test PASSED/SKIPPED -- test_full_app in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 116.76696014404297s cumulative, 0.004654884338378906s individual

.
current test PASSED/SKIPPED -- test_deserialization in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 116.76997208595276s cumulative, 0.003011941909790039s individual

.
current test PASSED/SKIPPED -- test_deserialization in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 116.77308535575867s cumulative, 0.003113269805908203s individual

.
current test PASSED/SKIPPED -- test_serialization in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 116.77617406845093s cumulative, 0.003088712692260742s individual


tests/test_hello.py .
current test PASSED/SKIPPED -- test_stream_known_len in /home/kaiyaok2/PythonProjects/falcon/tests/test_hello.py: 116.78058409690857s cumulative, 0.0044100284576416016s individual

.
current test PASSED/SKIPPED -- test_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_hello.py: 116.78509378433228s cumulative, 0.004509687423706055s individual

.
current test PASSED/SKIPPED -- test_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_hello.py: 116.78951525688171s cumulative, 0.0044214725494384766s individual

.
current test PASSED/SKIPPED -- test_no_body_on_head in /home/kaiyaok2/PythonProjects/falcon/tests/test_hello.py: 116.79340934753418s cumulative, 0.0038940906524658203s individual

.
current test PASSED/SKIPPED -- test_filelike_closing in /home/kaiyaok2/PythonProjects/falcon/tests/test_hello.py: 116.80040693283081s cumulative, 0.006997585296630859s individual

.
current test PASSED/SKIPPED -- test_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_hello.py: 116.80481338500977s cumulative, 0.004406452178955078s individual

.
current test PASSED/SKIPPED -- test_status_not_set in /home/kaiyaok2/PythonProjects/falcon/tests/test_hello.py: 116.80871272087097s cumulative, 0.0038993358612060547s individual

.
current test PASSED/SKIPPED -- test_filelike_using_helper in /home/kaiyaok2/PythonProjects/falcon/tests/test_hello.py: 116.812584400177s cumulative, 0.0038716793060302734s individual

.
current test PASSED/SKIPPED -- test_filelike in /home/kaiyaok2/PythonProjects/falcon/tests/test_hello.py: 116.8175528049469s cumulative, 0.004968404769897461s individual

.
current test PASSED/SKIPPED -- test_root_route in /home/kaiyaok2/PythonProjects/falcon/tests/test_hello.py: 116.8219199180603s cumulative, 0.00436711311340332s individual

.
current test PASSED/SKIPPED -- test_filelike_closing in /home/kaiyaok2/PythonProjects/falcon/tests/test_hello.py: 116.82605242729187s cumulative, 0.004132509231567383s individual

.
current test PASSED/SKIPPED -- test_env_headers_list_of_tuples in /home/kaiyaok2/PythonProjects/falcon/tests/test_hello.py: 116.82898426055908s cumulative, 0.002931833267211914s individual

.
current test PASSED/SKIPPED -- test_no_route in /home/kaiyaok2/PythonProjects/falcon/tests/test_hello.py: 116.8330626487732s cumulative, 0.004078388214111328s individual

.
current test PASSED/SKIPPED -- test_stream_chunked in /home/kaiyaok2/PythonProjects/falcon/tests/test_hello.py: 116.83688068389893s cumulative, 0.003818035125732422s individual


tests/test_buffered_reader.py .
current test PASSED/SKIPPED -- test_pipe_until in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 117.20280575752258s cumulative, 0.3659250736236572s individual


tests/asgi/test_asgi_servers.py INFO:     127.0.0.1:53166 - "GET / HTTP/1.1" 200 OK
INFO:     127.0.0.1:53182 - "PUT /bucket/drops HTTP/1.1" 200 OK

[Starting server process...]
.
[Sending SIGTERM to server process...]

current test PASSED/SKIPPED -- test_stream_chunked_request in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 118.1350028514862s cumulative, 0.932197093963623s individual

INFO:     127.0.0.1:42934 - "GET / HTTP/1.1" 200 OK

[Starting server process...]
.on_websocket:send_text

[Sending SIGTERM to server process...]

current test PASSED/SKIPPED -- test_close_code_on_unhandled_http_error in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 119.09506583213806s cumulative, 0.9600629806518555s individual

INFO:     127.0.0.1:55548 - "GET / HTTP/1.1" 200 OK

[Starting server process...]
.on_websocket:send_text

[Sending SIGTERM to server process...]

current test PASSED/SKIPPED -- test_close_code_on_unhandled_error in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 120.06205129623413s cumulative, 0.9669854640960693s individual


tests/test_headers.py F
current test FAILED -- test_custom_content_type in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 120.19095301628113s cumulative, 0.12890172004699707s individual

.
current test PASSED/SKIPPED -- test_unset_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 120.19781374931335s cumulative, 0.0068607330322265625s individual

.
current test PASSED/SKIPPED -- test_no_content_type in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 120.2026801109314s cumulative, 0.004866361618041992s individual

.
current test PASSED/SKIPPED -- test_content_header_missing in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 120.2083113193512s cumulative, 0.005631208419799805s individual

.
current test PASSED/SKIPPED -- test_content_disposition_inline_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 120.21543216705322s cumulative, 0.007120847702026367s individual

.
current test PASSED/SKIPPED -- test_append_link_invalid_crossorigin_value in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 120.21858549118042s cumulative, 0.0031533241271972656s individual

F
current test FAILED -- test_set_headers_with_custom_class in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 120.3218948841095s cumulative, 0.10330939292907715s individual

.
current test PASSED/SKIPPED -- test_set_cookie_disallowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 120.32657241821289s cumulative, 0.004677534103393555s individual

F
current test FAILED -- test_default_media_type in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 120.4427649974823s cumulative, 0.11619257926940918s individual

F
current test FAILED -- test_append_link_with_type_hint in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 120.5642626285553s cumulative, 0.12149763107299805s individual

F
current test FAILED -- test_content_length in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 120.65581679344177s cumulative, 0.09155416488647461s individual

.
current test PASSED/SKIPPED -- test_set_cookie_disallowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 120.6601026058197s cumulative, 0.0042858123779296875s individual

F
current test FAILED -- test_append_link_crossorigin in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 122.25302624702454s cumulative, 1.592923641204834s individual

F
current test FAILED -- test_vary_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 122.36172461509705s cumulative, 0.10869836807250977s individual

F
current test FAILED -- test_append_link_multiple in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 122.48385405540466s cumulative, 0.12212944030761719s individual

F
current test FAILED -- test_declared_content_length_overridden_by_no_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 122.57495164871216s cumulative, 0.09109759330749512s individual

.
current test PASSED/SKIPPED -- test_set_cookie_disallowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 122.5797848701477s cumulative, 0.004833221435546875s individual

.
current test PASSED/SKIPPED -- test_append_link_with_title_star in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 122.58502221107483s cumulative, 0.0052373409271240234s individual

.
current test PASSED/SKIPPED -- test_content_disposition_attachment_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 122.58945941925049s cumulative, 0.00443720817565918s individual

.
current test PASSED/SKIPPED -- test_override_default_media_type_missing_encoding in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 122.59459924697876s cumulative, 0.005139827728271484s individual

.
current test PASSED/SKIPPED -- test_set_cookie_disallowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 122.59830927848816s cumulative, 0.003710031509399414s individual

F
current test FAILED -- test_append_link_with_anchor in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 122.71691346168518s cumulative, 0.11860418319702148s individual

F
current test FAILED -- test_unicode_headers_contain_non_ascii in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 122.80941367149353s cumulative, 0.09250020980834961s individual

.
current test PASSED/SKIPPED -- test_append_link_complex in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 122.8151228427887s cumulative, 0.005709171295166016s individual

.
current test PASSED/SKIPPED -- test_default_media_type in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 122.81955885887146s cumulative, 0.004436016082763672s individual

.
current test PASSED/SKIPPED -- test_override_default_media_type in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 122.82437920570374s cumulative, 0.004820346832275391s individual

F
current test FAILED -- test_append_link_crossorigin in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 122.94311714172363s cumulative, 0.11873793601989746s individual

F
current test FAILED -- test_content_disposition_attachment_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 123.03439283370972s cumulative, 0.09127569198608398s individual

.
current test PASSED/SKIPPED -- test_unicode_headers_contain_non_ascii in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 123.04043173789978s cumulative, 0.0060389041900634766s individual

F
current test FAILED -- test_content_disposition_attachment_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 124.60208368301392s cumulative, 1.5616519451141357s individual

.
current test PASSED/SKIPPED -- test_custom_content_type in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 124.60812282562256s cumulative, 0.006039142608642578s individual

.
current test PASSED/SKIPPED -- test_content_length_options in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 124.61364126205444s cumulative, 0.005518436431884766s individual

F
current test FAILED -- test_content_type_no_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 124.70708084106445s cumulative, 0.09343957901000977s individual

.
current test PASSED/SKIPPED -- test_set_cookie_disallowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 124.71147108078003s cumulative, 0.004390239715576172s individual

F
current test FAILED -- test_unicode_headers_contain_non_ascii in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 124.80739951133728s cumulative, 0.09592843055725098s individual

F
current test FAILED -- test_vary_star in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 124.89800643920898s cumulative, 0.0906069278717041s individual

F
current test FAILED -- test_unicode_headers_contain_only_ascii in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 124.98960781097412s cumulative, 0.09160137176513672s individual

.
current test PASSED/SKIPPED -- test_append_link_multiple in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 124.99659180641174s cumulative, 0.00698399543762207s individual

.
current test PASSED/SKIPPED -- test_append_link_single in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 125.00071573257446s cumulative, 0.0041239261627197266s individual

.
current test PASSED/SKIPPED -- test_set_cookie_disallowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 125.00442004203796s cumulative, 0.0037043094635009766s individual

F
current test FAILED -- test_content_disposition_attachment_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 125.0978729724884s cumulative, 0.09345293045043945s individual

.
current test PASSED/SKIPPED -- test_headers_with_custom_class_not_callable in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 125.10496807098389s cumulative, 0.0070950984954833984s individual

F
current test FAILED -- test_no_content_length in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 125.19699048995972s cumulative, 0.09202241897583008s individual

s
current test PASSED/SKIPPED -- test_unicode_headers_contain_non_ascii in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 125.20411849021912s cumulative, 0.007128000259399414s individual

.
current test PASSED/SKIPPED -- test_vary_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 125.20914483070374s cumulative, 0.005026340484619141s individual

F
current test FAILED -- test_no_content_type in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 126.786203622818s cumulative, 1.5770587921142578s individual

F
current test FAILED -- test_response_header_helpers_on_get in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 126.88048720359802s cumulative, 0.0942835807800293s individual

.
current test PASSED/SKIPPED -- test_set_cookie_disallowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 126.88495993614197s cumulative, 0.0044727325439453125s individual

F
current test FAILED -- test_override_default_media_type_missing_encoding in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 126.98924970626831s cumulative, 0.10428977012634277s individual

.
current test PASSED/SKIPPED -- test_content_disposition_attachment_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 126.99606275558472s cumulative, 0.00681304931640625s individual

.
current test PASSED/SKIPPED -- test_append_link_with_hreflang_multi in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 127.00028610229492s cumulative, 0.004223346710205078s individual

.
current test PASSED/SKIPPED -- test_unset_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 127.00456643104553s cumulative, 0.0042803287506103516s individual

.
current test PASSED/SKIPPED -- test_request_multiple_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 127.00931191444397s cumulative, 0.0047454833984375s individual

F
current test FAILED -- test_unset_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 127.10361075401306s cumulative, 0.0942988395690918s individual

F
current test FAILED -- test_content_disposition_inline_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 127.19557642936707s cumulative, 0.0919656753540039s individual

.
current test PASSED/SKIPPED -- test_no_content_length in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 127.20118570327759s cumulative, 0.005609273910522461s individual

.
current test PASSED/SKIPPED -- test_get_header_as_int in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 127.20596432685852s cumulative, 0.004778623580932617s individual

.
current test PASSED/SKIPPED -- test_override_default_media_type in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 127.21265697479248s cumulative, 0.006692647933959961s individual

.
current test PASSED/SKIPPED -- test_set_headers_with_custom_class in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 127.21665954589844s cumulative, 0.004002571105957031s individual

F
current test FAILED -- test_expires_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 127.31084990501404s cumulative, 0.09419035911560059s individual

F
current test FAILED -- test_get_header_as_int in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 127.4056715965271s cumulative, 0.09482169151306152s individual

.
current test PASSED/SKIPPED -- test_declared_content_length_overriden_by_body_length in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 127.41172218322754s cumulative, 0.006050586700439453s individual

F
current test FAILED -- test_append_link_with_title in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 127.52797961235046s cumulative, 0.1162574291229248s individual

.
current test PASSED/SKIPPED -- test_content_disposition_attachment_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 127.53394150733948s cumulative, 0.005961894989013672s individual

.
current test PASSED/SKIPPED -- test_content_disposition_attachment_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 127.53838396072388s cumulative, 0.004442453384399414s individual

F
current test FAILED -- test_unset_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 129.1107120513916s cumulative, 1.5723280906677246s individual

.
current test PASSED/SKIPPED -- test_request_latin1_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 129.11891770362854s cumulative, 0.008205652236938477s individual

.
current test PASSED/SKIPPED -- test_append_link_crossorigin in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 129.12351059913635s cumulative, 0.0045928955078125s individual

F
current test FAILED -- test_append_link_complex in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 129.24277019500732s cumulative, 0.11925959587097168s individual

.
current test PASSED/SKIPPED -- test_append_link_invalid_crossorigin_value in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 129.24633359909058s cumulative, 0.003563404083251953s individual

.
current test PASSED/SKIPPED -- test_passthrough_request_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 129.25199270248413s cumulative, 0.0056591033935546875s individual

.
current test PASSED/SKIPPED -- test_set_cookie_disallowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 129.25580263137817s cumulative, 0.0038099288940429688s individual

F
current test FAILED -- test_override_default_media_type in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 129.35303139686584s cumulative, 0.0972287654876709s individual

F
current test FAILED -- test_headers_as_list in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 129.44552636146545s cumulative, 0.09249496459960938s individual

F
current test FAILED -- test_passthrough_request_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 129.5374357700348s cumulative, 0.09190940856933594s individual

.
current test PASSED/SKIPPED -- test_content_disposition_attachment_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 129.54356837272644s cumulative, 0.006132602691650391s individual

F
current test FAILED -- test_append_link_crossorigin in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 129.66195225715637s cumulative, 0.11838388442993164s individual

F
current test FAILED -- test_declared_content_length_overriden_by_body_length in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 129.75184893608093s cumulative, 0.08989667892456055s individual

.
current test PASSED/SKIPPED -- test_expires_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 129.75731229782104s cumulative, 0.005463361740112305s individual

.
current test PASSED/SKIPPED -- test_append_link_with_type_hint in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 129.7614345550537s cumulative, 0.004122257232666016s individual

.
current test PASSED/SKIPPED -- test_vary_star in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 129.765527009964s cumulative, 0.00409245491027832s individual

.
current test PASSED/SKIPPED -- test_headers_as_list in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 129.7700867652893s cumulative, 0.004559755325317383s individual

.
current test PASSED/SKIPPED -- test_declared_content_length_overriden_by_data_length in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 129.77422833442688s cumulative, 0.004141569137573242s individual

.
current test PASSED/SKIPPED -- test_append_link_crossorigin in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 129.77853059768677s cumulative, 0.004302263259887695s individual

F
current test FAILED -- test_response_append_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 131.36716175079346s cumulative, 1.5886311531066895s individual

.
current test PASSED/SKIPPED -- test_unicode_headers_contain_non_ascii in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 131.3732829093933s cumulative, 0.006121158599853516s individual

F
current test FAILED -- test_append_link_crossorigin in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 131.49429750442505s cumulative, 0.12101459503173828s individual

.
current test PASSED/SKIPPED -- test_vary_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 131.50017142295837s cumulative, 0.005873918533325195s individual

.
current test PASSED/SKIPPED -- test_unicode_headers_contain_only_ascii in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 131.50439357757568s cumulative, 0.00422215461730957s individual

F
current test FAILED -- test_unicode_location_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 131.5977144241333s cumulative, 0.09332084655761719s individual

.
current test PASSED/SKIPPED -- test_declared_content_length_overridden_by_no_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 131.60295987129211s cumulative, 0.0052454471588134766s individual

.
current test PASSED/SKIPPED -- test_append_link_with_link_extension in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 131.60717105865479s cumulative, 0.0042111873626708984s individual

.
current test PASSED/SKIPPED -- test_unicode_location_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 131.61165165901184s cumulative, 0.004480600357055664s individual

F
current test FAILED -- test_append_link_with_hreflang_multi in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 131.7299041748047s cumulative, 0.11825251579284668s individual

.
current test PASSED/SKIPPED -- test_set_cookie_disallowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 131.7345461845398s cumulative, 0.004642009735107422s individual

.
current test PASSED/SKIPPED -- test_set_cookie_disallowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 131.73817658424377s cumulative, 0.003630399703979492s individual

F
current test FAILED -- test_no_content_type in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 131.83085250854492s cumulative, 0.09267592430114746s individual

F
current test FAILED -- test_append_link_crossorigin in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 131.94808411598206s cumulative, 0.11723160743713379s individual

.
current test PASSED/SKIPPED -- test_set_cookie_disallowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 131.95273184776306s cumulative, 0.004647731781005859s individual

F
current test FAILED -- test_default_value in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 132.04323625564575s cumulative, 0.09050440788269043s individual

F
current test FAILED -- test_unicode_headers_contain_non_ascii in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 132.13509440422058s cumulative, 0.0918581485748291s individual

.
current test PASSED/SKIPPED -- test_response_set_and_get_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 132.1416516304016s cumulative, 0.0065572261810302734s individual

.
current test PASSED/SKIPPED -- test_declared_content_length_on_head in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 132.14586448669434s cumulative, 0.004212856292724609s individual

.
current test PASSED/SKIPPED -- test_response_append_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 132.15078568458557s cumulative, 0.0049211978912353516s individual

.
current test PASSED/SKIPPED -- test_append_link_invalid_crossorigin_value in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 132.15362453460693s cumulative, 0.0028388500213623047s individual

F
current test FAILED -- test_content_disposition_attachment_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 133.75695157051086s cumulative, 1.6033270359039307s individual

.
current test PASSED/SKIPPED -- test_append_link_with_anchor in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 133.76331782341003s cumulative, 0.006366252899169922s individual

F
current test FAILED -- test_no_content_length in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 133.86026763916016s cumulative, 0.09694981575012207s individual

F
current test FAILED -- test_headers_with_custom_class_not_callable in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 133.95212650299072s cumulative, 0.0918588638305664s individual

F
current test FAILED -- test_declared_content_length_overriden_by_data_length in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 134.04621839523315s cumulative, 0.09409189224243164s individual

.
current test PASSED/SKIPPED -- test_no_content_length in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 134.0524001121521s cumulative, 0.0061817169189453125s individual

.
current test PASSED/SKIPPED -- test_required_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 134.05676937103271s cumulative, 0.004369258880615234s individual

.
current test PASSED/SKIPPED -- test_content_disposition_inline_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 134.0612120628357s cumulative, 0.004442691802978516s individual

.
current test PASSED/SKIPPED -- test_content_type_no_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 134.06585264205933s cumulative, 0.0046405792236328125s individual

F
current test FAILED -- test_content_disposition_inline_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 134.16092252731323s cumulative, 0.09506988525390625s individual

F
current test FAILED -- test_request_multiple_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 134.25802779197693s cumulative, 0.09710526466369629s individual

.
current test PASSED/SKIPPED -- test_append_link_with_title in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 134.26421356201172s cumulative, 0.006185770034790039s individual

.
current test PASSED/SKIPPED -- test_content_length in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 134.26855754852295s cumulative, 0.004343986511230469s individual

F
current test FAILED -- test_response_set_and_get_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 134.36499500274658s cumulative, 0.09643745422363281s individual

.
current test PASSED/SKIPPED -- test_append_link_crossorigin in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 134.3710265159607s cumulative, 0.006031513214111328s individual

F
current test FAILED -- test_content_disposition_inline_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 135.96381378173828s cumulative, 1.592787265777588s individual

.
current test PASSED/SKIPPED -- test_append_link_crossorigin in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 135.969961643219s cumulative, 0.006147861480712891s individual

F
current test FAILED -- test_append_link_single in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 136.09442019462585s cumulative, 0.12445855140686035s individual

.
current test PASSED/SKIPPED -- test_response_header_helpers_on_get in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 136.1010706424713s cumulative, 0.006650447845458984s individual

.
current test PASSED/SKIPPED -- test_content_disposition_attachment_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 136.10551762580872s cumulative, 0.004446983337402344s individual

F
current test FAILED -- test_content_disposition_attachment_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 136.20013070106506s cumulative, 0.09461307525634766s individual

.
current test PASSED/SKIPPED -- test_set_cookie_disallowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 136.20478224754333s cumulative, 0.004651546478271484s individual

F
current test FAILED -- test_content_disposition_attachment_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 136.2978870868683s cumulative, 0.09310483932495117s individual

F
current test FAILED -- test_vary_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 136.4014229774475s cumulative, 0.10353589057922363s individual

F
current test FAILED -- test_content_disposition_attachment_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 136.49340963363647s cumulative, 0.09198665618896484s individual

.
current test PASSED/SKIPPED -- test_append_link_crossorigin in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 136.4996201992035s cumulative, 0.0062105655670166016s individual

F
current test FAILED -- test_content_disposition_attachment_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 136.59772181510925s cumulative, 0.09810161590576172s individual

F
current test FAILED -- test_unicode_headers_contain_non_ascii in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 136.68876671791077s cumulative, 0.09104490280151367s individual

F
current test FAILED -- test_request_latin1_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 138.28694581985474s cumulative, 1.5981791019439697s individual

.
current test PASSED/SKIPPED -- test_content_length_options in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 138.29311800003052s cumulative, 0.00617218017578125s individual

F
current test FAILED -- test_append_link_crossorigin in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 138.41525053977966s cumulative, 0.12213253974914551s individual

.
current test PASSED/SKIPPED -- test_append_link_invalid_crossorigin_value in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 138.4189145565033s cumulative, 0.0036640167236328125s individual

.
current test PASSED/SKIPPED -- test_append_link_crossorigin in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 138.4241042137146s cumulative, 0.005189657211303711s individual

.
current test PASSED/SKIPPED -- test_append_link_with_hreflang in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 138.4282147884369s cumulative, 0.004110574722290039s individual

.
current test PASSED/SKIPPED -- test_append_link_invalid_crossorigin_value in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 138.4311580657959s cumulative, 0.002943277359008789s individual

F
current test FAILED -- test_override_default_media_type in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 138.52613639831543s cumulative, 0.09497833251953125s individual

.
current test PASSED/SKIPPED -- test_content_disposition_attachment_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 138.5318567752838s cumulative, 0.005720376968383789s individual

F
current test FAILED -- test_declared_content_length_on_head in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 138.62539434432983s cumulative, 0.09353756904602051s individual

.
current test PASSED/SKIPPED -- test_content_disposition_attachment_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 138.63147020339966s cumulative, 0.006075859069824219s individual

.
current test PASSED/SKIPPED -- test_content_disposition_inline_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 138.63591980934143s cumulative, 0.004449605941772461s individual

.
current test PASSED/SKIPPED -- test_default_value in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 138.66544461250305s cumulative, 0.029524803161621094s individual

.
current test PASSED/SKIPPED -- test_content_header_missing in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 138.66877937316895s cumulative, 0.0033347606658935547s individual

.
current test PASSED/SKIPPED -- test_unicode_headers_contain_non_ascii in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 138.67391777038574s cumulative, 0.005138397216796875s individual

F
current test FAILED -- test_append_link_with_link_extension in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 138.7924177646637s cumulative, 0.1184999942779541s individual

F
current test FAILED -- test_required_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 138.88466596603394s cumulative, 0.09224820137023926s individual

F
current test FAILED -- test_append_link_with_title_star in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 139.00274467468262s cumulative, 0.11807870864868164s individual

.
current test PASSED/SKIPPED -- test_append_link_invalid_crossorigin_value in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 139.0063738822937s cumulative, 0.0036292076110839844s individual

F
current test FAILED -- test_append_link_with_hreflang in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 139.12300610542297s cumulative, 0.11663222312927246s individual

.
current test PASSED/SKIPPED -- test_no_content_type in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 139.12890434265137s cumulative, 0.005898237228393555s individual


tests/test_http_custom_method_routing.py sE
current test FAILED -- test_foo in /home/kaiyaok2/PythonProjects/falcon/tests/test_http_custom_method_routing.py: 140.69655585289001s cumulative, 1.5676515102386475s individual

ss.
current test PASSED/SKIPPED -- test_bar in /home/kaiyaok2/PythonProjects/falcon/tests/test_http_custom_method_routing.py: 140.70556259155273s cumulative, 0.009006738662719727s individual

E
current test FAILED -- test_bar in /home/kaiyaok2/PythonProjects/falcon/tests/test_http_custom_method_routing.py: 140.77500462532043s cumulative, 0.0694420337677002s individual

E
current test FAILED -- test_map_http_methods in /home/kaiyaok2/PythonProjects/falcon/tests/test_http_custom_method_routing.py: 140.8418529033661s cumulative, 0.0668482780456543s individual

s.
current test PASSED/SKIPPED -- test_map_http_methods in /home/kaiyaok2/PythonProjects/falcon/tests/test_http_custom_method_routing.py: 140.8472239971161s cumulative, 0.00537109375s individual

s.
current test PASSED/SKIPPED -- test_foo in /home/kaiyaok2/PythonProjects/falcon/tests/test_http_custom_method_routing.py: 140.85305190086365s cumulative, 0.005827903747558594s individual

s
tests/test_testing.py .
current test PASSED/SKIPPED -- test_closed_wsgi_iterable in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 140.8556351661682s cumulative, 0.0025832653045654297s individual

F
current test FAILED -- test_client_simulate_aliases in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 140.88315844535828s cumulative, 0.027523279190063477s individual

.
current test PASSED/SKIPPED -- test_simulate_request_http_version in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 140.8867814540863s cumulative, 0.0036230087280273438s individual

.
current test PASSED/SKIPPED -- test_create_environ_default_ua_override in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 140.88933110237122s cumulative, 0.0025496482849121094s individual

.
current test PASSED/SKIPPED -- test_simulate_request_http_version in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 140.89485430717468s cumulative, 0.005523204803466797s individual

.
current test PASSED/SKIPPED -- test_client_simulate_aliases in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 140.89901471138s cumulative, 0.004160404205322266s individual

.
current test PASSED/SKIPPED -- test_client_simulate_aliases in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 140.9031581878662s cumulative, 0.004143476486206055s individual

.
current test PASSED/SKIPPED -- test_create_environ_default_ua in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 140.9057273864746s cumulative, 0.0025691986083984375s individual

.
current test PASSED/SKIPPED -- test_simulate_request_http_version in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 140.90907859802246s cumulative, 0.0033512115478515625s individual

.
current test PASSED/SKIPPED -- test_simulate_request_http_version in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 140.91290307044983s cumulative, 0.003824472427368164s individual

.
current test PASSED/SKIPPED -- test_simulate_request_http_version in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 140.91687393188477s cumulative, 0.0039708614349365234s individual

.
current test PASSED/SKIPPED -- test_client_simulate_aliases in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 140.9206018447876s cumulative, 0.0037279129028320312s individual

F
current test FAILED -- test_client_simulate_aliases in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 140.9475519657135s cumulative, 0.02695012092590332s individual

F
current test FAILED -- test_client_simulate_aliases in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 140.97194695472717s cumulative, 0.024394989013671875s individual

F
current test FAILED -- test_client_simulate_aliases in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 140.99705290794373s cumulative, 0.025105953216552734s individual

.
current test PASSED/SKIPPED -- test_closed_wsgi_iterable in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 140.99970388412476s cumulative, 0.0026509761810302734s individual

.
current test PASSED/SKIPPED -- test_missing_header_is_none in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 141.00235867500305s cumulative, 0.0026547908782958984s individual

.
current test PASSED/SKIPPED -- test_simulate_request_http_version in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 141.00664496421814s cumulative, 0.004286289215087891s individual

F
current test FAILED -- test_client_simulate_aliases in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 141.03173851966858s cumulative, 0.025093555450439453s individual

.
current test PASSED/SKIPPED -- test_client_simulate_aliases in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 141.03576612472534s cumulative, 0.004027605056762695s individual

.
current test PASSED/SKIPPED -- test_closed_wsgi_iterable in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 141.03839468955994s cumulative, 0.0026285648345947266s individual

.
current test PASSED/SKIPPED -- test_simulate_request_content_type in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 141.04417824745178s cumulative, 0.005783557891845703s individual

F
current test FAILED -- test_client_simulate_aliases in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 141.06952261924744s cumulative, 0.025344371795654297s individual

.
current test PASSED/SKIPPED -- test_client_simulate_aliases in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 141.07344508171082s cumulative, 0.003922462463378906s individual

.
current test PASSED/SKIPPED -- test_client_simulate_aliases in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 141.07717323303223s cumulative, 0.003728151321411133s individual

.
current test PASSED/SKIPPED -- test_simulate_request_http_version in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 141.08046436309814s cumulative, 0.0032911300659179688s individual

.
current test PASSED/SKIPPED -- test_create_environ_cookies in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 141.0830693244934s cumulative, 0.002604961395263672s individual

.
current test PASSED/SKIPPED -- test_simulate_request_http_version in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 141.08696103096008s cumulative, 0.0038917064666748047s individual

.
current test PASSED/SKIPPED -- test_testing_client_handles_wsgi_generator_app in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 141.08969497680664s cumulative, 0.002733945846557617s individual

.
current test PASSED/SKIPPED -- test_simulate_request_http_version in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 141.09354043006897s cumulative, 0.0038454532623291016s individual

.
current test PASSED/SKIPPED -- test_client_simulate_aliases in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 141.09782457351685s cumulative, 0.0042841434478759766s individual

.
current test PASSED/SKIPPED -- test_client_simulate_aliases in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 141.1015796661377s cumulative, 0.0037550926208496094s individual

.
current test PASSED/SKIPPED -- test_create_environ_cookies in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 141.10418796539307s cumulative, 0.0026082992553710938s individual

.
current test PASSED/SKIPPED -- test_simulate_request_http_version in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 141.1080560684204s cumulative, 0.00386810302734375s individual

.
current test PASSED/SKIPPED -- test_cookies_jar in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 141.11238527297974s cumulative, 0.004329204559326172s individual

.
current test PASSED/SKIPPED -- test_simulate_request_http_version in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 141.11570715904236s cumulative, 0.0033218860626220703s individual

F
current test FAILED -- test_client_simulate_aliases in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 141.14130020141602s cumulative, 0.025593042373657227s individual

.
current test PASSED/SKIPPED -- test_closed_wsgi_iterable in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 141.1438901424408s cumulative, 0.0025899410247802734s individual

.
current test PASSED/SKIPPED -- test_create_environ_cookies_options_method in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 141.14632534980774s cumulative, 0.0024352073669433594s individual

.
current test PASSED/SKIPPED -- test_simulate_request_http_version in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 141.1498031616211s cumulative, 0.003477811813354492s individual

.
current test PASSED/SKIPPED -- test_simulate_request_http_version in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 141.15327954292297s cumulative, 0.003476381301879883s individual

.
current test PASSED/SKIPPED -- test_create_environ_preserve_raw_uri in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 141.1557502746582s cumulative, 0.002470731735229492s individual

F
current test FAILED -- test_client_simulate_aliases in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 141.1806607246399s cumulative, 0.024910449981689453s individual


tests/test_redirects.py .
current test PASSED/SKIPPED -- test_redirect_with_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_redirects.py: 141.18564128875732s cumulative, 0.004980564117431641s individual

E
current test FAILED -- test_redirect in /home/kaiyaok2/PythonProjects/falcon/tests/test_redirects.py: 141.25701355934143s cumulative, 0.07137227058410645s individual

.
current test PASSED/SKIPPED -- test_redirect_with_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_redirects.py: 141.2626016139984s cumulative, 0.005588054656982422s individual

E
current test FAILED -- test_redirect in /home/kaiyaok2/PythonProjects/falcon/tests/test_redirects.py: 141.32834887504578s cumulative, 0.06574726104736328s individual

.
current test PASSED/SKIPPED -- test_redirect in /home/kaiyaok2/PythonProjects/falcon/tests/test_redirects.py: 141.33357214927673s cumulative, 0.005223274230957031s individual

E
current test FAILED -- test_redirect in /home/kaiyaok2/PythonProjects/falcon/tests/test_redirects.py: 141.3977189064026s cumulative, 0.06414675712585449s individual

E
current test FAILED -- test_redirect_with_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_redirects.py: 141.46245098114014s cumulative, 0.06473207473754883s individual

.
current test PASSED/SKIPPED -- test_redirect_with_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_redirects.py: 141.4681534767151s cumulative, 0.005702495574951172s individual

E
current test FAILED -- test_redirect in /home/kaiyaok2/PythonProjects/falcon/tests/test_redirects.py: 141.53399324417114s cumulative, 0.06583976745605469s individual

.
current test PASSED/SKIPPED -- test_redirect in /home/kaiyaok2/PythonProjects/falcon/tests/test_redirects.py: 141.53936123847961s cumulative, 0.00536799430847168s individual

E
current test FAILED -- test_redirect_with_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_redirects.py: 141.60494923591614s cumulative, 0.06558799743652344s individual

.
current test PASSED/SKIPPED -- test_redirect in /home/kaiyaok2/PythonProjects/falcon/tests/test_redirects.py: 141.61026668548584s cumulative, 0.0053174495697021484s individual

E
current test FAILED -- test_redirect_with_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_redirects.py: 141.67518043518066s cumulative, 0.06491374969482422s individual

E
current test FAILED -- test_redirect in /home/kaiyaok2/PythonProjects/falcon/tests/test_redirects.py: 141.73937726020813s cumulative, 0.06419682502746582s individual

.
current test PASSED/SKIPPED -- test_redirect in /home/kaiyaok2/PythonProjects/falcon/tests/test_redirects.py: 141.74492931365967s cumulative, 0.005552053451538086s individual

.
current test PASSED/SKIPPED -- test_redirect in /home/kaiyaok2/PythonProjects/falcon/tests/test_redirects.py: 141.74949502944946s cumulative, 0.004565715789794922s individual

.
current test PASSED/SKIPPED -- test_redirect_with_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_redirects.py: 141.75394463539124s cumulative, 0.004449605941772461s individual

.
current test PASSED/SKIPPED -- test_redirect_with_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_redirects.py: 141.758695602417s cumulative, 0.004750967025756836s individual

E
current test FAILED -- test_redirect_with_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_redirects.py: 143.3342719078064s cumulative, 1.5755763053894043s individual

E
current test FAILED -- test_redirect_with_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_redirects.py: 143.40251970291138s cumulative, 0.06824779510498047s individual


tests/test_wsgi_servers.py INFO:     127.0.0.1:55634 - "GET /hello HTTP/1.1" 200 OK
INFO:     127.0.0.1:53628 - "POST /forms HTTP/1.1" 200 OK
Starting Uvicorn (WSGI interface)...
/usr/bin/python3 -m uvicorn --host 127.0.0.1 --port 39497 --interface wsgi _wsgi_test_app:app
.
[Sending SIGTERM to server process...]

current test PASSED/SKIPPED -- test_post_multipart_form in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 144.32958579063416s cumulative, 0.9270660877227783s individual

127.0.0.1 - - [30/Jan/2024:22:21:08 +0000] "GET /hello HTTP/1.1" 200 14 "-" "python-requests/2.31.0"
127.0.0.1 - - [30/Jan/2024:22:21:08 +0000] "POST /forms HTTP/1.1" 200 180 "-" "python-requests/2.31.0"
Starting Gunicorn...
/usr/bin/python3 -m gunicorn --access-logfile - --bind 127.0.0.1:45541 --graceful-timeout 10 --timeout 10 _wsgi_test_app:app
.
[Sending SIGTERM to server process...]

current test PASSED/SKIPPED -- test_post_multipart_form in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 145.62005615234375s cumulative, 1.2904703617095947s individual


tests/asgi/test_buffered_reader.py .
current test PASSED/SKIPPED -- test_irregular_large_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 147.670480966568s cumulative, 2.050424814224243s individual


tests/asgi/test_lifespan_handlers.py .
current test PASSED/SKIPPED -- test_startup_raises in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_lifespan_handlers.py: 147.67738723754883s cumulative, 0.006906270980834961s individual

.
current test PASSED/SKIPPED -- test_shutdown_only in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_lifespan_handlers.py: 147.68309569358826s cumulative, 0.005708456039428711s individual

.
current test PASSED/SKIPPED -- test_asgi_conductor_raised_error_skips_shutdown in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_lifespan_handlers.py: 147.68846368789673s cumulative, 0.00536799430847168s individual

.
current test PASSED/SKIPPED -- test_startup_only in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_lifespan_handlers.py: 147.69242405891418s cumulative, 0.003960371017456055s individual

.
current test PASSED/SKIPPED -- test_multiple_handlers in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_lifespan_handlers.py: 147.69622659683228s cumulative, 0.0038025379180908203s individual

.
current test PASSED/SKIPPED -- test_at_least_one_event_method_required in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_lifespan_handlers.py: 147.69909167289734s cumulative, 0.0028650760650634766s individual

.
current test PASSED/SKIPPED -- test_shutdown_raises in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_lifespan_handlers.py: 147.7031066417694s cumulative, 0.0040149688720703125s individual


tests/asgi/test_buffered_reader.py .
current test PASSED/SKIPPED -- test_small_reads_with_delimiter in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 148.25829195976257s cumulative, 0.5551853179931641s individual


tests/test_media_multipart.py .
current test PASSED/SKIPPED -- test_random_form in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 148.51704144477844s cumulative, 0.25874948501586914s individual


tests/asgi/test_request_asgi.py .
current test PASSED/SKIPPED -- test_log_error_not_supported in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_request_asgi.py: 148.5203297138214s cumulative, 0.00328826904296875s individual

.
current test PASSED/SKIPPED -- test_missing_server_in_scope in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_request_asgi.py: 148.5229148864746s cumulative, 0.002585172653198242s individual


tests/test_validators.py .
current test PASSED/SKIPPED -- test_resp_schema_validation_failure in /home/kaiyaok2/PythonProjects/falcon/tests/test_validators.py: 148.5398313999176s cumulative, 0.016916513442993164s individual

.
current test PASSED/SKIPPED -- test_both_schemas_validation_failure in /home/kaiyaok2/PythonProjects/falcon/tests/test_validators.py: 148.55190420150757s cumulative, 0.01207280158996582s individual

.
current test PASSED/SKIPPED -- test_resp_schema_validation_success in /home/kaiyaok2/PythonProjects/falcon/tests/test_validators.py: 148.55599284172058s cumulative, 0.004088640213012695s individual

.
current test PASSED/SKIPPED -- test_req_schema_validation_failure in /home/kaiyaok2/PythonProjects/falcon/tests/test_validators.py: 148.5599184036255s cumulative, 0.0039255619049072266s individual

.
current test PASSED/SKIPPED -- test_req_schema_validation_failure in /home/kaiyaok2/PythonProjects/falcon/tests/test_validators.py: 148.56399059295654s cumulative, 0.0040721893310546875s individual

.
current test PASSED/SKIPPED -- test_both_schemas_validation_success in /home/kaiyaok2/PythonProjects/falcon/tests/test_validators.py: 148.5732593536377s cumulative, 0.009268760681152344s individual

.
current test PASSED/SKIPPED -- test_req_schema_validation_failure in /home/kaiyaok2/PythonProjects/falcon/tests/test_validators.py: 148.5773766040802s cumulative, 0.004117250442504883s individual

.
current test PASSED/SKIPPED -- test_req_schema_validation_failure in /home/kaiyaok2/PythonProjects/falcon/tests/test_validators.py: 148.5814607143402s cumulative, 0.004084110260009766s individual

.
current test PASSED/SKIPPED -- test_both_schemas_validation_failure in /home/kaiyaok2/PythonProjects/falcon/tests/test_validators.py: 148.5911087989807s cumulative, 0.00964808464050293s individual

.
current test PASSED/SKIPPED -- test_req_schema_validation_success in /home/kaiyaok2/PythonProjects/falcon/tests/test_validators.py: 148.5950062274933s cumulative, 0.003897428512573242s individual

.
current test PASSED/SKIPPED -- test_resp_schema_validation_success in /home/kaiyaok2/PythonProjects/falcon/tests/test_validators.py: 148.59871554374695s cumulative, 0.0037093162536621094s individual

.
current test PASSED/SKIPPED -- test_req_schema_validation_success in /home/kaiyaok2/PythonProjects/falcon/tests/test_validators.py: 148.6024374961853s cumulative, 0.003721952438354492s individual

.
current test PASSED/SKIPPED -- test_resp_schema_validation_failure in /home/kaiyaok2/PythonProjects/falcon/tests/test_validators.py: 148.60622453689575s cumulative, 0.0037870407104492188s individual

.
current test PASSED/SKIPPED -- test_both_schemas_validation_success in /home/kaiyaok2/PythonProjects/falcon/tests/test_validators.py: 148.61543655395508s cumulative, 0.009212017059326172s individual


tests/asgi/test_scheduled_callbacks.py .
current test PASSED/SKIPPED -- test_callback in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scheduled_callbacks.py: 148.6208724975586s cumulative, 0.005435943603515625s individual

.
current test PASSED/SKIPPED -- test_callback in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scheduled_callbacks.py: 148.62620902061462s cumulative, 0.0053365230560302734s individual

.
current test PASSED/SKIPPED -- test_callback in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scheduled_callbacks.py: 148.63184928894043s cumulative, 0.005640268325805664s individual

.
current test PASSED/SKIPPED -- test_callback in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scheduled_callbacks.py: 148.6368064880371s cumulative, 0.0049571990966796875s individual


tests/asgi/test_buffered_reader.py .
current test PASSED/SKIPPED -- test_varying_read_size in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 151.16038012504578s cumulative, 2.523573637008667s individual


tests/asgi/test_boundedstream_asgi.py .
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.1647298336029s cumulative, 0.004349708557128906s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.168288230896s cumulative, 0.0035583972930908203s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.1718282699585s cumulative, 0.0035400390625s individual

.
current test PASSED/SKIPPED -- test_exhaust_with_disconnect in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.17442154884338s cumulative, 0.0025932788848876953s individual

.
current test PASSED/SKIPPED -- test_read_all in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.177983045578s cumulative, 0.0035614967346191406s individual

s
current test PASSED/SKIPPED -- test_read_all in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.18122959136963s cumulative, 0.0032465457916259766s individual

.
current test PASSED/SKIPPED -- test_read_all in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.18470907211304s cumulative, 0.003479480743408203s individual

.
current test PASSED/SKIPPED -- test_read_all in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.18814158439636s cumulative, 0.0034325122833251953s individual

.
current test PASSED/SKIPPED -- test_read_all in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.1914255619049s cumulative, 0.003283977508544922s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.19494915008545s cumulative, 0.003523588180541992s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.19853591918945s cumulative, 0.0035867691040039062s individual

s
current test PASSED/SKIPPED -- test_read_all in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.20152235031128s cumulative, 0.002986431121826172s individual

.
current test PASSED/SKIPPED -- test_exhaust in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.205463886261s cumulative, 0.003941535949707031s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.20908522605896s cumulative, 0.003621339797973633s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.21263027191162s cumulative, 0.003545045852661133s individual

.
current test PASSED/SKIPPED -- test_read_all in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.2160894870758s cumulative, 0.0034592151641845703s individual

s
current test PASSED/SKIPPED -- test_read_all in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.2191514968872s cumulative, 0.003062009811401367s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.2228262424469s cumulative, 0.003674745559692383s individual

.
current test PASSED/SKIPPED -- test_read_all in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.22622799873352s cumulative, 0.0034017562866210938s individual

.
current test PASSED/SKIPPED -- test_read_all in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.229633808136s cumulative, 0.0034058094024658203s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.23317503929138s cumulative, 0.003541231155395508s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.23668003082275s cumulative, 0.0035049915313720703s individual

.
current test PASSED/SKIPPED -- test_read_all in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.24009108543396s cumulative, 0.0034110546112060547s individual

.
current test PASSED/SKIPPED -- test_read_all in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.24352478981018s cumulative, 0.003433704376220703s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.24704909324646s cumulative, 0.003524303436279297s individual

s
current test PASSED/SKIPPED -- test_read_all in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.2500183582306s cumulative, 0.0029692649841308594s individual

.
current test PASSED/SKIPPED -- test_read_all in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.25346875190735s cumulative, 0.0034503936767578125s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.25703883171082s cumulative, 0.003570079803466797s individual

.
current test PASSED/SKIPPED -- test_read_all in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.26043176651s cumulative, 0.003392934799194336s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.26403760910034s cumulative, 0.0036058425903320312s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.26757550239563s cumulative, 0.003537893295288086s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.27114963531494s cumulative, 0.0035741329193115234s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.27467823028564s cumulative, 0.003528594970703125s individual

.
current test PASSED/SKIPPED -- test_read_all in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.27831482887268s cumulative, 0.003636598587036133s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.28187441825867s cumulative, 0.003559589385986328s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.28548645973206s cumulative, 0.003612041473388672s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.2892348766327s cumulative, 0.0037484169006347656s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.2975594997406s cumulative, 0.008324623107910156s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.3012616634369s cumulative, 0.0037021636962890625s individual

.
current test PASSED/SKIPPED -- test_iterate_streaming_request in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.30379581451416s cumulative, 0.002534151077270508s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.3080611228943s cumulative, 0.004265308380126953s individual

.
current test PASSED/SKIPPED -- test_read_all in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.3115198612213s cumulative, 0.003458738327026367s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.31503891944885s cumulative, 0.0035190582275390625s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.3185636997223s cumulative, 0.0035247802734375s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.32209968566895s cumulative, 0.0035359859466552734s individual

.
current test PASSED/SKIPPED -- test_read_all in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.32549333572388s cumulative, 0.0033936500549316406s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.32900381088257s cumulative, 0.0035104751586914062s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.33887028694153s cumulative, 0.009866476058959961s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.3424847126007s cumulative, 0.0036144256591796875s individual

.
current test PASSED/SKIPPED -- test_filelike in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.34516096115112s cumulative, 0.002676248550415039s individual

s
current test PASSED/SKIPPED -- test_read_all in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.34813165664673s cumulative, 0.0029706954956054688s individual

.
current test PASSED/SKIPPED -- test_iteration_already_started in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.35246229171753s cumulative, 0.004330635070800781s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.35596704483032s cumulative, 0.0035047531127929688s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.35947561264038s cumulative, 0.0035085678100585938s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.36315846443176s cumulative, 0.003682851791381836s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.36665391921997s cumulative, 0.003495454788208008s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.37369918823242s cumulative, 0.007045269012451172s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.37729859352112s cumulative, 0.003599405288696289s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.38081645965576s cumulative, 0.0035178661346435547s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.38435983657837s cumulative, 0.003543376922607422s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.38786554336548s cumulative, 0.003505706787109375s individual

.
current test PASSED/SKIPPED -- test_read_all in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.39126229286194s cumulative, 0.003396749496459961s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.4031801223755s cumulative, 0.011917829513549805s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.4076406955719s cumulative, 0.004460573196411133s individual

.
current test PASSED/SKIPPED -- test_read_all in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.41094756126404s cumulative, 0.003306865692138672s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.41451406478882s cumulative, 0.0035665035247802734s individual

s
current test PASSED/SKIPPED -- test_read_all in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.41753840446472s cumulative, 0.0030243396759033203s individual

s
current test PASSED/SKIPPED -- test_read_all in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.42048811912537s cumulative, 0.0029497146606445312s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.42407202720642s cumulative, 0.0035839080810546875s individual

.
current test PASSED/SKIPPED -- test_read_all in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.4274981021881s cumulative, 0.003426074981689453s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.43099975585938s cumulative, 0.0035016536712646484s individual

.
current test PASSED/SKIPPED -- test_read_all in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 151.43439602851868s cumulative, 0.003396272659301758s individual


tests/test_uri_templates_legacy.py .
current test PASSED/SKIPPED -- test_template_may_not_contain_double_slash in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates_legacy.py: 151.43710160255432s cumulative, 0.0027055740356445312s individual

.
current test PASSED/SKIPPED -- test_no_fields in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates_legacy.py: 151.44041633605957s cumulative, 0.0033147335052490234s individual

.
current test PASSED/SKIPPED -- test_template_must_start_with_slash in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates_legacy.py: 151.44307470321655s cumulative, 0.002658367156982422s individual

.
current test PASSED/SKIPPED -- test_string_type_required in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates_legacy.py: 151.4457049369812s cumulative, 0.0026302337646484375s individual

.
current test PASSED/SKIPPED -- test_template_may_not_contain_double_slash in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates_legacy.py: 151.44831728935242s cumulative, 0.0026123523712158203s individual

.
current test PASSED/SKIPPED -- test_template_may_not_contain_double_slash in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates_legacy.py: 151.4509346485138s cumulative, 0.002617359161376953s individual

.
current test PASSED/SKIPPED -- test_template_may_not_contain_double_slash in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates_legacy.py: 151.45356273651123s cumulative, 0.0026280879974365234s individual

.
current test PASSED/SKIPPED -- test_one_field_with_prefixed_digits in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates_legacy.py: 151.45618557929993s cumulative, 0.002622842788696289s individual

.
current test PASSED/SKIPPED -- test_malformed_field in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates_legacy.py: 151.45903301239014s cumulative, 0.002847433090209961s individual

.
current test PASSED/SKIPPED -- test_two_fields in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates_legacy.py: 151.4619517326355s cumulative, 0.002918720245361328s individual

.
current test PASSED/SKIPPED -- test_three_fields in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates_legacy.py: 151.4647228717804s cumulative, 0.002771139144897461s individual

.
current test PASSED/SKIPPED -- test_two_fields in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates_legacy.py: 151.46740698814392s cumulative, 0.0026841163635253906s individual

.
current test PASSED/SKIPPED -- test_no_fields in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates_legacy.py: 151.47017216682434s cumulative, 0.002765178680419922s individual

.
current test PASSED/SKIPPED -- test_no_fields in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates_legacy.py: 151.47294282913208s cumulative, 0.002770662307739258s individual

.
current test PASSED/SKIPPED -- test_one_field in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates_legacy.py: 151.476003408432s cumulative, 0.003060579299926758s individual

.
current test PASSED/SKIPPED -- test_string_type_required in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates_legacy.py: 151.47863292694092s cumulative, 0.002629518508911133s individual

.
current test PASSED/SKIPPED -- test_template_must_start_with_slash in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates_legacy.py: 151.48126935958862s cumulative, 0.002636432647705078s individual

.
current test PASSED/SKIPPED -- test_template_may_not_contain_double_slash in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates_legacy.py: 151.48388624191284s cumulative, 0.00261688232421875s individual

.
current test PASSED/SKIPPED -- test_one_field_with_digits in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates_legacy.py: 151.48654103279114s cumulative, 0.0026547908782958984s individual

.
current test PASSED/SKIPPED -- test_deprecated_warning in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates_legacy.py: 151.48941826820374s cumulative, 0.0028772354125976562s individual

.
current test PASSED/SKIPPED -- test_template_may_not_contain_double_slash in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates_legacy.py: 151.49205088615417s cumulative, 0.002632617950439453s individual

.
current test PASSED/SKIPPED -- test_root in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates_legacy.py: 151.49453043937683s cumulative, 0.00247955322265625s individual


tests/test_after_hooks.py F
current test FAILED -- test_resource_with_uri_fields in /home/kaiyaok2/PythonProjects/falcon/tests/test_after_hooks.py: 151.60210394859314s cumulative, 0.1075735092163086s individual

.
current test PASSED/SKIPPED -- test_after_hooks_on_suffixed_resource in /home/kaiyaok2/PythonProjects/falcon/tests/test_after_hooks.py: 151.6102910041809s cumulative, 0.008187055587768555s individual

.
current test PASSED/SKIPPED -- test_resource_with_uri_fields in /home/kaiyaok2/PythonProjects/falcon/tests/test_after_hooks.py: 151.61492919921875s cumulative, 0.004638195037841797s individual

.
current test PASSED/SKIPPED -- test_hook_as_callable_class in /home/kaiyaok2/PythonProjects/falcon/tests/test_after_hooks.py: 151.61898732185364s cumulative, 0.004058122634887695s individual

.
current test PASSED/SKIPPED -- test_resource_with_uri_fields_async in /home/kaiyaok2/PythonProjects/falcon/tests/test_after_hooks.py: 151.62474012374878s cumulative, 0.0057528018951416016s individual

.
current test PASSED/SKIPPED -- test_output_validator in /home/kaiyaok2/PythonProjects/falcon/tests/test_after_hooks.py: 151.6291105747223s cumulative, 0.004370450973510742s individual

.
current test PASSED/SKIPPED -- test_wrapped_resource in /home/kaiyaok2/PythonProjects/falcon/tests/test_after_hooks.py: 151.635174036026s cumulative, 0.0060634613037109375s individual

F
current test FAILED -- test_wrapped_resource_with_hooks_aware_of_resource in /home/kaiyaok2/PythonProjects/falcon/tests/test_after_hooks.py: 151.7101092338562s cumulative, 0.0749351978302002s individual

F
current test FAILED -- test_resource_with_uri_fields in /home/kaiyaok2/PythonProjects/falcon/tests/test_after_hooks.py: 151.78473377227783s cumulative, 0.07462453842163086s individual

.
current test PASSED/SKIPPED -- test_hook_as_callable_class in /home/kaiyaok2/PythonProjects/falcon/tests/test_after_hooks.py: 151.79085493087769s cumulative, 0.006121158599853516s individual

F
current test FAILED -- test_wrapped_resource in /home/kaiyaok2/PythonProjects/falcon/tests/test_after_hooks.py: 151.86442852020264s cumulative, 0.07357358932495117s individual

.
current test PASSED/SKIPPED -- test_wrapped_resource_with_hooks_aware_of_resource in /home/kaiyaok2/PythonProjects/falcon/tests/test_after_hooks.py: 151.87175250053406s cumulative, 0.0073239803314208984s individual

.
current test PASSED/SKIPPED -- test_serializer in /home/kaiyaok2/PythonProjects/falcon/tests/test_after_hooks.py: 151.87583446502686s cumulative, 0.0040819644927978516s individual

.
current test PASSED/SKIPPED -- test_after_hooks_on_suffixed_resource in /home/kaiyaok2/PythonProjects/falcon/tests/test_after_hooks.py: 151.88139820098877s cumulative, 0.0055637359619140625s individual

.
current test PASSED/SKIPPED -- test_after_hooks_on_suffixed_resource in /home/kaiyaok2/PythonProjects/falcon/tests/test_after_hooks.py: 151.88700151443481s cumulative, 0.005603313446044922s individual

F
current test FAILED -- test_wrapped_resource in /home/kaiyaok2/PythonProjects/falcon/tests/test_after_hooks.py: 151.96311163902283s cumulative, 0.0761101245880127s individual

.
current test PASSED/SKIPPED -- test_after_hooks_on_suffixed_resource in /home/kaiyaok2/PythonProjects/falcon/tests/test_after_hooks.py: 151.969952583313s cumulative, 0.006840944290161133s individual

.
current test PASSED/SKIPPED -- test_wrapped_resource in /home/kaiyaok2/PythonProjects/falcon/tests/test_after_hooks.py: 151.97622108459473s cumulative, 0.006268501281738281s individual

.
current test PASSED/SKIPPED -- test_resource_with_uri_fields in /home/kaiyaok2/PythonProjects/falcon/tests/test_after_hooks.py: 151.9806785583496s cumulative, 0.0044574737548828125s individual

.
current test PASSED/SKIPPED -- test_output_validator in /home/kaiyaok2/PythonProjects/falcon/tests/test_after_hooks.py: 151.98521900177002s cumulative, 0.004540443420410156s individual

.
current test PASSED/SKIPPED -- test_serializer in /home/kaiyaok2/PythonProjects/falcon/tests/test_after_hooks.py: 151.98989248275757s cumulative, 0.004673480987548828s individual


tests/test_things_example.py .
current test PASSED/SKIPPED -- test_things_resource_response in /home/kaiyaok2/PythonProjects/falcon/tests/test_things_example.py: 151.99353098869324s cumulative, 0.0036385059356689453s individual


tests/asgi/test_cythonized_asgi.py .
current test PASSED/SKIPPED -- test_scheduled_jobs in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_cythonized_asgi.py: 152.50162744522095s cumulative, 0.50809645652771s individual


tests/test_default_router.py .
current test PASSED/SKIPPED -- test_capture_path_no_match in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 152.50531005859375s cumulative, 0.0036826133728027344s individual

.
current test PASSED/SKIPPED -- test_literal_vs_variable in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 152.52210235595703s cumulative, 0.01679229736328125s individual

.
current test PASSED/SKIPPED -- test_invalid_field_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 152.53093242645264s cumulative, 0.008830070495605469s individual

.
current test PASSED/SKIPPED -- test_complex in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 152.54463362693787s cumulative, 0.013701200485229492s individual

.
current test PASSED/SKIPPED -- test_duplicate_field_names in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 152.547593832016s cumulative, 0.002960205078125s individual

.
current test PASSED/SKIPPED -- test_literal_vs_variable in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 152.56076502799988s cumulative, 0.013171195983886719s individual

.
current test PASSED/SKIPPED -- test_not_found in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 152.5761480331421s cumulative, 0.015383005142211914s individual

.
current test PASSED/SKIPPED -- test_invalid_field_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 152.58484029769897s cumulative, 0.008692264556884766s individual

.
current test PASSED/SKIPPED -- test_capture_path_complex in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 152.58820486068726s cumulative, 0.00336456298828125s individual

.
current test PASSED/SKIPPED -- test_literal_vs_variable in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 152.6015157699585s cumulative, 0.013310909271240234s individual

.
current test PASSED/SKIPPED -- test_subsegment_not_found in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 152.6144745349884s cumulative, 0.012958765029907227s individual

.
current test PASSED/SKIPPED -- test_literal in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 152.62832736968994s cumulative, 0.013852834701538086s individual

.
current test PASSED/SKIPPED -- test_user_regression_special_chars in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 152.63215708732605s cumulative, 0.0038297176361083984s individual

.
current test PASSED/SKIPPED -- test_invalid_field_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 152.640953540802s cumulative, 0.008796453475952148s individual

.
current test PASSED/SKIPPED -- test_params_in_non_taken_branches in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 152.64710474014282s cumulative, 0.0061511993408203125s individual

.
current test PASSED/SKIPPED -- test_invalid_field_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 152.65579199790955s cumulative, 0.008687257766723633s individual

.
current test PASSED/SKIPPED -- test_conflict in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 152.66448092460632s cumulative, 0.008688926696777344s individual

.
current test PASSED/SKIPPED -- test_malformed_pattern in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 152.6795163154602s cumulative, 0.015035390853881836s individual

.
current test PASSED/SKIPPED -- test_invalid_field_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 152.6883008480072s cumulative, 0.00878453254699707s individual

.
current test PASSED/SKIPPED -- test_duplicate_field_names in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 152.6910684108734s cumulative, 0.0027675628662109375s individual

.
current test PASSED/SKIPPED -- test_invalid_field_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 152.69962358474731s cumulative, 0.008555173873901367s individual

.
current test PASSED/SKIPPED -- test_user_regression_special_chars in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 152.70325589179993s cumulative, 0.0036323070526123047s individual

.
current test PASSED/SKIPPED -- test_options_converters_update in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 152.71653580665588s cumulative, 0.013279914855957031s individual

.
current test PASSED/SKIPPED -- test_literal_vs_variable in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 152.72959566116333s cumulative, 0.013059854507446289s individual

.
current test PASSED/SKIPPED -- test_dead_segment in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 152.74256992340088s cumulative, 0.012974262237548828s individual

.
current test PASSED/SKIPPED -- test_invalid_field_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 152.75123858451843s cumulative, 0.008668661117553711s individual

.
current test PASSED/SKIPPED -- test_malformed_pattern in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 152.76608800888062s cumulative, 0.014849424362182617s individual

.
current test PASSED/SKIPPED -- test_literal_vs_variable in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 152.77917957305908s cumulative, 0.013091564178466797s individual

.
current test PASSED/SKIPPED -- test_non_conflict in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 152.78808760643005s cumulative, 0.00890803337097168s individual

.
current test PASSED/SKIPPED -- test_not_found in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 152.80103588104248s cumulative, 0.012948274612426758s individual

.
current test PASSED/SKIPPED -- test_not_found in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 152.81385588645935s cumulative, 0.012820005416870117s individual

.
current test PASSED/SKIPPED -- test_user_regression_special_chars in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 152.81799697875977s cumulative, 0.004141092300415039s individual

.
current test PASSED/SKIPPED -- test_user_regression_special_chars in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 152.8216540813446s cumulative, 0.003657102584838867s individual

.
current test PASSED/SKIPPED -- test_complex_alt in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 152.83527445793152s cumulative, 0.013620376586914062s individual

.
current test PASSED/SKIPPED -- test_user_regression_special_chars in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 152.83889269828796s cumulative, 0.0036182403564453125s individual

.
current test PASSED/SKIPPED -- test_invalid_field_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 152.84970426559448s cumulative, 0.010811567306518555s individual

.
current test PASSED/SKIPPED -- test_user_regression_special_chars in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 152.85344910621643s cumulative, 0.003744840621948242s individual

.
current test PASSED/SKIPPED -- test_capture_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 152.85872340202332s cumulative, 0.005274295806884766s individual

.
current test PASSED/SKIPPED -- test_user_regression_versioned_url in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 152.86199164390564s cumulative, 0.0032682418823242188s individual

.
current test PASSED/SKIPPED -- test_invalid_field_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 152.8706021308899s cumulative, 0.00861048698425293s individual

.
current test PASSED/SKIPPED -- test_not_found in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 152.88366866111755s cumulative, 0.013066530227661133s individual

.
current test PASSED/SKIPPED -- test_converters in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 152.89684081077576s cumulative, 0.013172149658203125s individual

.
current test PASSED/SKIPPED -- test_match_entire_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 152.90008330345154s cumulative, 0.00324249267578125s individual

.
current test PASSED/SKIPPED -- test_not_str in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 152.9039225578308s cumulative, 0.003839254379272461s individual

.
current test PASSED/SKIPPED -- test_match_entire_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 152.9075744152069s cumulative, 0.003651857376098633s individual

.
current test PASSED/SKIPPED -- test_user_regression_special_chars in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 152.91117215156555s cumulative, 0.003597736358642578s individual

.
current test PASSED/SKIPPED -- test_literal_vs_variable in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 152.92449307441711s cumulative, 0.0133209228515625s individual

.
current test PASSED/SKIPPED -- test_literal_vs_variable in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 152.93776655197144s cumulative, 0.013273477554321289s individual

.
current test PASSED/SKIPPED -- test_capture_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 152.94299983978271s cumulative, 0.005233287811279297s individual

.
current test PASSED/SKIPPED -- test_not_found in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 152.95790553092957s cumulative, 0.014905691146850586s individual

.
current test PASSED/SKIPPED -- test_literal_vs_variable in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 152.97102975845337s cumulative, 0.013124227523803711s individual

.
current test PASSED/SKIPPED -- test_capture_path_complex in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 152.97416877746582s cumulative, 0.003139019012451172s individual

.
current test PASSED/SKIPPED -- test_not_found in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 152.98709058761597s cumulative, 0.012921810150146484s individual

.
current test PASSED/SKIPPED -- test_not_str in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 152.9907636642456s cumulative, 0.003673076629638672s individual

.
current test PASSED/SKIPPED -- test_not_found in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.0040316581726s cumulative, 0.013267993927001953s individual

.
current test PASSED/SKIPPED -- test_params_in_non_taken_branches in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.00966668128967s cumulative, 0.00563502311706543s individual

.
current test PASSED/SKIPPED -- test_converters in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.02286767959595s cumulative, 0.013200998306274414s individual

.
current test PASSED/SKIPPED -- test_invalid_field_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.0317199230194s cumulative, 0.008852243423461914s individual

.
current test PASSED/SKIPPED -- test_complex in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.04704093933105s cumulative, 0.015321016311645508s individual

.
current test PASSED/SKIPPED -- test_capture_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.05209159851074s cumulative, 0.0050506591796875s individual

.
current test PASSED/SKIPPED -- test_conflict in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.0608184337616s cumulative, 0.008726835250854492s individual

.
current test PASSED/SKIPPED -- test_user_regression_special_chars in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.0642580986023s cumulative, 0.003439664840698242s individual

.
current test PASSED/SKIPPED -- test_converters in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.0776562690735s cumulative, 0.013398170471191406s individual

.
current test PASSED/SKIPPED -- test_params_in_non_taken_branches in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.08353185653687s cumulative, 0.005875587463378906s individual

.
current test PASSED/SKIPPED -- test_capture_path_no_children in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.0875539779663s cumulative, 0.004022121429443359s individual

.
current test PASSED/SKIPPED -- test_literal_segment in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.10035014152527s cumulative, 0.012796163558959961s individual

.
current test PASSED/SKIPPED -- test_options_converters_set in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.1132025718689s cumulative, 0.01285243034362793s individual

.
current test PASSED/SKIPPED -- test_converters_with_invalid_options in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.12222909927368s cumulative, 0.009026527404785156s individual

.
current test PASSED/SKIPPED -- test_dead_segment in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.1370542049408s cumulative, 0.014825105667114258s individual

.
current test PASSED/SKIPPED -- test_capture_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.1421148777008s cumulative, 0.005060672760009766s individual

.
current test PASSED/SKIPPED -- test_non_conflict in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.15122628211975s cumulative, 0.009111404418945312s individual

.
current test PASSED/SKIPPED -- test_options_converters_invalid_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.15993785858154s cumulative, 0.008711576461791992s individual

.
current test PASSED/SKIPPED -- test_conflict in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.1690924167633s cumulative, 0.009154558181762695s individual

.
current test PASSED/SKIPPED -- test_match_entire_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.1725776195526s cumulative, 0.0034852027893066406s individual

.
current test PASSED/SKIPPED -- test_options_converters_invalid_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.18109250068665s cumulative, 0.008514881134033203s individual

.
current test PASSED/SKIPPED -- test_not_found in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.19419860839844s cumulative, 0.013106107711791992s individual

.
current test PASSED/SKIPPED -- test_user_regression_special_chars in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.19794154167175s cumulative, 0.0037429332733154297s individual

.
current test PASSED/SKIPPED -- test_converters in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.2111542224884s cumulative, 0.01321268081665039s individual

.
current test PASSED/SKIPPED -- test_invalid_field_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.22192883491516s cumulative, 0.010774612426757812s individual

.
current test PASSED/SKIPPED -- test_options_converters_invalid_name_on_update in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.2303111553192s cumulative, 0.008382320404052734s individual

.
current test PASSED/SKIPPED -- test_capture_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.23544764518738s cumulative, 0.0051364898681640625s individual

.
current test PASSED/SKIPPED -- test_options_converters_update in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.2484941482544s cumulative, 0.013046503067016602s individual

.
current test PASSED/SKIPPED -- test_complex_alt in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.26236724853516s cumulative, 0.013873100280761719s individual

.
current test PASSED/SKIPPED -- test_user_regression_special_chars in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.26612854003906s cumulative, 0.00376129150390625s individual

.
current test PASSED/SKIPPED -- test_user_regression_special_chars in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.26995754241943s cumulative, 0.0038290023803710938s individual

.
current test PASSED/SKIPPED -- test_converters_with_invalid_options in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.27876234054565s cumulative, 0.008804798126220703s individual

.
current test PASSED/SKIPPED -- test_capture_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.28393077850342s cumulative, 0.005168437957763672s individual

.
current test PASSED/SKIPPED -- test_not_found in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.29771494865417s cumulative, 0.013784170150756836s individual

.
current test PASSED/SKIPPED -- test_not_found in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.31134390830994s cumulative, 0.013628959655761719s individual

.
current test PASSED/SKIPPED -- test_capture_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.31872749328613s cumulative, 0.007383584976196289s individual

.
current test PASSED/SKIPPED -- test_literal_vs_variable in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.3320529460907s cumulative, 0.01332545280456543s individual

.
current test PASSED/SKIPPED -- test_not_str in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.3357765674591s cumulative, 0.003723621368408203s individual

.
current test PASSED/SKIPPED -- test_options_converters_invalid_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.34453916549683s cumulative, 0.008762598037719727s individual



def find(path, return_values, patterns, converters, params):
    path_len = len(path)
    if path_len > 0:
        if path[0] == 'repos':
            if path_len > 1:
                if path_len > 2:
                    if path_len > 3:
                        if path[3] == 'commits':
                            if path_len == 4:
                                params['org'] = path[1]
                                params['repo'] = path[2]
                                return return_values[3]
                            return None
                        if path[3] == 'compare':
                            if path_len > 4:
                                if path[4] == 'all':
                                    if path_len == 5:
                                        params['org'] = path[1]
                                        params['repo'] = path[2]
                                        return return_values[4]
                                match = patterns[0].match(path[4])  # ^(?P<usr0>.+):(?P<branch0>.+)\.\.\.(?P<usr1>.+):(?P<branch1>.+)$
                                if match is not None:
                                    dict_match_3 = match.groupdict()
                                    if path_len > 5:
                                        if path[5] == 'full':
                                            if path_len == 6:
                                                params['org'] = path[1]
                                                params['repo'] = path[2]
                                                params.update(dict_match_3)
                                                return return_values[6]
                                        if path[5] == 'part':
                                            if path_len == 6:
                                                params['org'] = path[1]
                                                params['repo'] = path[2]
                                                params.update(dict_match_3)
                                                return return_values[7]
                                    if path_len == 5:
                                        params['org'] = path[1]
                                        params['repo'] = path[2]
                                        params.update(dict_match_3)
                                        return return_values[5]
                                match = patterns[1].match(path[4])  # ^(?P<usr0>.+):(?P<branch0>.+)$
                                if match is not None:
                                    dict_match_3 = match.groupdict()
                                    if path_len > 5:
                                        if path[5] == 'full':
                                            if path_len == 6:
                                                params['org'] = path[1]
                                                params['repo'] = path[2]
                                                params.update(dict_match_3)
                                                return return_values[9]
                                    if path_len == 5:
                                        params['org'] = path[1]
                                        params['repo'] = path[2]
                                        params.update(dict_match_3)
                                        return return_values[8]
                            return None
                        return None
                    if path_len == 3:
                        params['org'] = path[1]
                        params['repo'] = path[2]
                        return return_values[2]
                    return None
                if path_len == 2:
                    params['org'] = path[1]
                    return return_values[1]
                return None
            if path_len == 1:
                return return_values[0]
            return None
        if path[0] == 'teams':
            if path_len > 1:
                if path[1] == 'default':
                    if path_len > 2:
                        if path[2] == 'members':
                            if path_len > 3:
                                if path[3] == 'thing':
                                    if path_len == 4:
                                        return return_values[11]
                    if path_len == 2:
                        return return_values[10]
                if path_len > 2:
                    if path[2] == 'members':
                        if path_len == 3:
                            params['id'] = path[1]
                            return return_values[13]
                if path_len == 2:
                    params['id'] = path[1]
                    return return_values[12]
            return None
        if path[0] == 'user':
            if path_len > 1:
                if path[1] == 'memberships':
                    if path_len == 2:
                        return return_values[14]
                    return None
                return None
            return None
        if path[0] == 'emojis':
            if path_len > 1:
                if path[1] == 'signs':
                    if path_len > 2:
                        if path[2] == '0':
                            if path_len == 3:
                                return return_values[16]
                        if path[2] == '42':
                            if path_len > 3:
                                if path[3] == 'small.jpg':
                                    if path_len == 4:
                                        return return_values[18]
                            if path_len == 3:
                                return return_values[17]
                        if path[2] == '78':
                            if path_len > 3:
                                if path[3] == 'small.png':
                                    if path_len == 4:
                                        return return_values[19]
                                if path[3] == 'small(png)':
                                    if path_len == 4:
                                        return return_values[20]
                                if path[3] == 'small_png':
                                    if path_len == 4:
                                        return return_values[21]
                        if path_len == 3:
                            params['id'] = path[2]
                            return return_values[22]
                    return None
                return None
            if path_len == 1:
                return return_values[15]
            return None
        if path[0] == 'images':
            if path_len > 1:
                match = patterns[2].match(path[1])  # ^(?P<id>.+)\.gif$
                if match is not None:
                    dict_match_1 = match.groupdict()
                    if path_len == 2:
                        params.update(dict_match_1)
                        return return_values[23]
                    return None
                return None
            return None
        if path[0] == 'gists':
            if path_len > 1:
                if path[1] == 'first':
                    if path_len == 2:
                        return return_values[24]
                if path_len > 2:
                    if path[2] == 'raw':
                        if path_len == 3:
                            params['id'] = path[1]
                            return return_values[25]
                    if path_len == 3:
                        params['id'] = path[1]
                        params['representation'] = path[2]
                        return return_values[26]
            return None
        if path[0] == 'item':
            if path_len > 1:
                if path_len == 2:
                    params['q'] = path[1]
                    return return_values[27]
                return None
            return None
        if path[0] == 'cvt':
            if path_len > 1:
                if path[1] == 'teams':
                    if path_len > 2:
                        if path[2] == 'default':
                            if path_len > 3:
                                if path[3] == 'members':
                                    if path_len > 4:
                                        match = patterns[3].match(path[4])  # ^(?P<id>.+)-(?P<tenure>.+)$
                                        if match is not None:
                                            groups = match.groupdict()
                                            fragment = groups.pop('id')
                                            field_value_1 = converters[0].convert(fragment)
                                            if field_value_1 is not None:
                                                fragment = groups.pop('tenure')
                                                field_value_2 = converters[1].convert(fragment)
                                                if field_value_2 is not None:
                                                    if path_len == 5:
                                                        params['id'] = field_value_1
                                                        params['tenure'] = field_value_2
                                                        return return_values[29]
                            if path_len == 3:
                                return return_values[28]
                        fragment = path[2]
                        field_value_1 = converters[2].convert(fragment)
                        if field_value_1 is not None:
                            if path_len > 3:
                                if path[3] == 'members':
                                    if path_len == 4:
                                        params['id'] = field_value_1
                                        return return_values[31]
                            if path_len == 3:
                                params['id'] = field_value_1
                                return return_values[30]
                    return None
                if path[1] == 'repos':
                    if path_len > 2:
                        if path_len > 3:
                            if path_len > 4:
                                if path[4] == 'compare':
                                    if path_len > 5:
                                        match = patterns[4].match(path[5])  # ^(?P<usr0>.+):(?P<branch0>.+)\.\.\.(?P<usr1>.+):(?P<branch1>.+)$
                                        if match is not None:
                                            groups = match.groupdict()
                                            fragment = groups.pop('branch0')
                                            field_value_3 = converters[3].convert(fragment)
                                            if field_value_3 is not None:
                                                fragment = groups.pop('branch1')
                                                field_value_4 = converters[4].convert(fragment)
                                                if field_value_4 is not None:
                                                    dict_groups_5 = groups
                                                    if path_len > 6:
                                                        if path[6] == 'part':
                                                            if path_len == 7:
                                                                params['org'] = path[2]
                                                                params['repo'] = path[3]
                                                                params['branch0'] = field_value_3
                                                                params['branch1'] = field_value_4
                                                                params.update(dict_groups_5)
                                                                return return_values[32]
                                        match = patterns[5].match(path[5])  # ^(?P<usr0>.+):(?P<branch0>.+)$
                                        if match is not None:
                                            groups = match.groupdict()
                                            fragment = groups.pop('branch0')
                                            field_value_3 = converters[5].convert(fragment)
                                            if field_value_3 is not None:
                                                dict_groups_4 = groups
                                                if path_len > 6:
                                                    if path[6] == 'full':
                                                        if path_len == 7:
                                                            params['org'] = path[2]
                                                            params['repo'] = path[3]
                                                            params['branch0'] = field_value_3
                                                            params.update(dict_groups_4)
                                                            return return_values[34]
                                                if path_len == 6:
                                                    params['org'] = path[2]
                                                    params['repo'] = path[3]
                                                    params['branch0'] = field_value_3
                                                    params.update(dict_groups_4)
                                                    return return_values[33]
                                    return None
                                return None
                            return None
                        return None
                    return None
                return None
            return None
        return None
    return None

.
current test PASSED/SKIPPED -- test_print_src in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.35750031471252s cumulative, 0.012961149215698242s individual

.
current test PASSED/SKIPPED -- test_invalid_field_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.36625623703003s cumulative, 0.008755922317504883s individual

.
current test PASSED/SKIPPED -- test_not_str in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.36975240707397s cumulative, 0.0034961700439453125s individual

.
current test PASSED/SKIPPED -- test_not_found in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.38279843330383s cumulative, 0.013046026229858398s individual

.
current test PASSED/SKIPPED -- test_not_found in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.3956859111786s cumulative, 0.01288747787475586s individual

.
current test PASSED/SKIPPED -- test_duplicate_field_names in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.3985481262207s cumulative, 0.002862215042114258s individual

.
current test PASSED/SKIPPED -- test_invalid_field_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.40955018997192s cumulative, 0.011002063751220703s individual

.
current test PASSED/SKIPPED -- test_invalid_field_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.41820120811462s cumulative, 0.008651018142700195s individual

.
current test PASSED/SKIPPED -- test_not_str in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.42147397994995s cumulative, 0.0032727718353271484s individual

.
current test PASSED/SKIPPED -- test_complex in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.4348292350769s cumulative, 0.013355255126953125s individual

.
current test PASSED/SKIPPED -- test_invalid_field_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.44355034828186s cumulative, 0.008721113204956055s individual

.
current test PASSED/SKIPPED -- test_user_regression_special_chars in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.44722890853882s cumulative, 0.003678560256958008s individual

.
current test PASSED/SKIPPED -- test_user_regression_special_chars in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.45114254951477s cumulative, 0.0039136409759521484s individual

.
current test PASSED/SKIPPED -- test_params_in_non_taken_branches in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.45675420761108s cumulative, 0.0056116580963134766s individual

.
current test PASSED/SKIPPED -- test_override in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.47164487838745s cumulative, 0.014890670776367188s individual

.
current test PASSED/SKIPPED -- test_converters in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.48476886749268s cumulative, 0.01312398910522461s individual

.
current test PASSED/SKIPPED -- test_literal_vs_variable in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.4978973865509s cumulative, 0.013128519058227539s individual

.
current test PASSED/SKIPPED -- test_literal_vs_variable in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.5133183002472s cumulative, 0.015420913696289062s individual

.
current test PASSED/SKIPPED -- test_user_regression_special_chars in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.5170738697052s cumulative, 0.0037555694580078125s individual

.
current test PASSED/SKIPPED -- test_invalid_field_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.52587389945984s cumulative, 0.008800029754638672s individual

.
current test PASSED/SKIPPED -- test_capture_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.53117537498474s cumulative, 0.005301475524902344s individual

.
current test PASSED/SKIPPED -- test_invalid_field_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.53980445861816s cumulative, 0.008629083633422852s individual

.
current test PASSED/SKIPPED -- test_not_found in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.55290269851685s cumulative, 0.01309823989868164s individual

.
current test PASSED/SKIPPED -- test_options_converters_invalid_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.56148672103882s cumulative, 0.008584022521972656s individual

.
current test PASSED/SKIPPED -- test_not_found in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.57451915740967s cumulative, 0.01303243637084961s individual

.
current test PASSED/SKIPPED -- test_invalid_field_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.58324313163757s cumulative, 0.008723974227905273s individual

.
current test PASSED/SKIPPED -- test_not_found in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.59814834594727s cumulative, 0.014905214309692383s individual

.
current test PASSED/SKIPPED -- test_capture_path_complex in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.60124683380127s cumulative, 0.0030984878540039062s individual

.
current test PASSED/SKIPPED -- test_not_found in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.61426758766174s cumulative, 0.013020753860473633s individual

.
current test PASSED/SKIPPED -- test_converters in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.6274185180664s cumulative, 0.013150930404663086s individual

.
current test PASSED/SKIPPED -- test_match_entire_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.63121247291565s cumulative, 0.003793954849243164s individual

.
current test PASSED/SKIPPED -- test_conflict in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.63989782333374s cumulative, 0.00868535041809082s individual

.
current test PASSED/SKIPPED -- test_not_found in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.65308451652527s cumulative, 0.01318669319152832s individual

.
current test PASSED/SKIPPED -- test_literal_vs_variable in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.6661684513092s cumulative, 0.013083934783935547s individual

.
current test PASSED/SKIPPED -- test_capture_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.67121267318726s cumulative, 0.005044221878051758s individual

.
current test PASSED/SKIPPED -- test_capture_path_complex in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.67432284355164s cumulative, 0.003110170364379883s individual

.
current test PASSED/SKIPPED -- test_multivar in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.68918800354004s cumulative, 0.01486515998840332s individual

.
current test PASSED/SKIPPED -- test_capture_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.69442486763s cumulative, 0.00523686408996582s individual

.
current test PASSED/SKIPPED -- test_invalid_field_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.70305633544922s cumulative, 0.008631467819213867s individual

.
current test PASSED/SKIPPED -- test_converters_with_invalid_options in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.7117464542389s cumulative, 0.008690118789672852s individual

.
current test PASSED/SKIPPED -- test_capture_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.71701979637146s cumulative, 0.005273342132568359s individual

.
current test PASSED/SKIPPED -- test_options_converters_invalid_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.7255027294159s cumulative, 0.008482933044433594s individual

.
current test PASSED/SKIPPED -- test_capture_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.73052167892456s cumulative, 0.005018949508666992s individual

.
current test PASSED/SKIPPED -- test_user_regression_special_chars in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.73417973518372s cumulative, 0.0036580562591552734s individual

.
current test PASSED/SKIPPED -- test_dead_segment in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.7473340034485s cumulative, 0.013154268264770508s individual

.
current test PASSED/SKIPPED -- test_capture_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.75256395339966s cumulative, 0.005229949951171875s individual

.
current test PASSED/SKIPPED -- test_converters_malformed_specification in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.76132559776306s cumulative, 0.00876164436340332s individual

.
current test PASSED/SKIPPED -- test_user_regression_special_chars in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.76496577262878s cumulative, 0.0036401748657226562s individual

.
current test PASSED/SKIPPED -- test_not_found in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.7781641483307s cumulative, 0.013198375701904297s individual

.
current test PASSED/SKIPPED -- test_dead_segment in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.79309368133545s cumulative, 0.014929533004760742s individual

.
current test PASSED/SKIPPED -- test_user_regression_recipes in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.7963011264801s cumulative, 0.0032074451446533203s individual

.
current test PASSED/SKIPPED -- test_options_converters_invalid_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.80483174324036s cumulative, 0.008530616760253906s individual

.
current test PASSED/SKIPPED -- test_converters_with_invalid_options in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.81376600265503s cumulative, 0.008934259414672852s individual

.
current test PASSED/SKIPPED -- test_capture_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.818834066391s cumulative, 0.005068063735961914s individual

.
current test PASSED/SKIPPED -- test_not_found in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.83185529708862s cumulative, 0.013021230697631836s individual

.
current test PASSED/SKIPPED -- test_not_found in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.84473323822021s cumulative, 0.012877941131591797s individual

.
current test PASSED/SKIPPED -- test_not_found in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.85762548446655s cumulative, 0.01289224624633789s individual

.
current test PASSED/SKIPPED -- test_duplicate_field_names in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.86044812202454s cumulative, 0.0028226375579833984s individual

.
current test PASSED/SKIPPED -- test_params_in_non_taken_branches in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.86607122421265s cumulative, 0.0056231021881103516s individual

.
current test PASSED/SKIPPED -- test_not_found in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.88054251670837s cumulative, 0.014471292495727539s individual

.
current test PASSED/SKIPPED -- test_invalid_field_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.8892900943756s cumulative, 0.008747577667236328s individual

.
current test PASSED/SKIPPED -- test_variable in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.9021134376526s cumulative, 0.012823343276977539s individual

.
current test PASSED/SKIPPED -- test_literal_vs_variable in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.9152913093567s cumulative, 0.013177871704101562s individual

.
current test PASSED/SKIPPED -- test_options_converters_invalid_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.92384791374207s cumulative, 0.008556604385375977s individual

.
current test PASSED/SKIPPED -- test_invalid_field_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.93246150016785s cumulative, 0.00861358642578125s individual

.
current test PASSED/SKIPPED -- test_user_regression_special_chars in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.93609380722046s cumulative, 0.0036323070526123047s individual

.
current test PASSED/SKIPPED -- test_invalid_field_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.94523811340332s cumulative, 0.009144306182861328s individual

.
current test PASSED/SKIPPED -- test_converters_malformed_specification in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.9538118839264s cumulative, 0.008573770523071289s individual

.
current test PASSED/SKIPPED -- test_not_str in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.95787024497986s cumulative, 0.004058361053466797s individual

.
current test PASSED/SKIPPED -- test_single_character_field_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.97317838668823s cumulative, 0.015308141708374023s individual

.
current test PASSED/SKIPPED -- test_invalid_field_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.98183512687683s cumulative, 0.008656740188598633s individual

.
current test PASSED/SKIPPED -- test_literal_vs_variable in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.99506378173828s cumulative, 0.013228654861450195s individual

.
current test PASSED/SKIPPED -- test_root_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 153.99797415733337s cumulative, 0.0029103755950927734s individual

.
current test PASSED/SKIPPED -- test_not_found in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 154.01081323623657s cumulative, 0.012839078903198242s individual

.
current test PASSED/SKIPPED -- test_capture_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 154.01604557037354s cumulative, 0.005232334136962891s individual

.
current test PASSED/SKIPPED -- test_non_conflict in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 154.0252480506897s cumulative, 0.00920248031616211s individual

.
current test PASSED/SKIPPED -- test_user_regression_special_chars in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 154.02901363372803s cumulative, 0.003765583038330078s individual

.
current test PASSED/SKIPPED -- test_invalid_field_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 154.03786492347717s cumulative, 0.008851289749145508s individual


tests/test_response.py .
current test PASSED/SKIPPED -- test_response_set_content_type_not_set in /home/kaiyaok2/PythonProjects/falcon/tests/test_response.py: 154.040997505188s cumulative, 0.0031325817108154297s individual

.
current test PASSED/SKIPPED -- test_response_option_mimetype_init in /home/kaiyaok2/PythonProjects/falcon/tests/test_response.py: 154.0455801486969s cumulative, 0.004582643508911133s individual

.
current test PASSED/SKIPPED -- test_response_set_content_type_not_set in /home/kaiyaok2/PythonProjects/falcon/tests/test_response.py: 154.04865670204163s cumulative, 0.0030765533447265625s individual

.
current test PASSED/SKIPPED -- test_response_attempt_to_set_read_only_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_response.py: 154.05140447616577s cumulative, 0.002747774124145508s individual

.
current test PASSED/SKIPPED -- test_response_removed_stream_len in /home/kaiyaok2/PythonProjects/falcon/tests/test_response.py: 154.05414628982544s cumulative, 0.0027418136596679688s individual

.
current test PASSED/SKIPPED -- test_response_attempt_to_set_read_only_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_response.py: 154.05703353881836s cumulative, 0.002887248992919922s individual

.
current test PASSED/SKIPPED -- test_response_get_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_response.py: 154.05990409851074s cumulative, 0.0028705596923828125s individual

.
current test PASSED/SKIPPED -- test_response_get_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_response.py: 154.0626347064972s cumulative, 0.0027306079864501953s individual

.
current test PASSED/SKIPPED -- test_response_removed_stream_len in /home/kaiyaok2/PythonProjects/falcon/tests/test_response.py: 154.06536865234375s cumulative, 0.002733945846557617s individual

.
current test PASSED/SKIPPED -- test_response_set_content_type_set in /home/kaiyaok2/PythonProjects/falcon/tests/test_response.py: 154.06805181503296s cumulative, 0.0026831626892089844s individual

.
current test PASSED/SKIPPED -- test_response_set_content_type_set in /home/kaiyaok2/PythonProjects/falcon/tests/test_response.py: 154.0707323551178s cumulative, 0.002680540084838867s individual


tests/test_buffered_reader.py .
current test PASSED/SKIPPED -- test_read_until_shared_boundary in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.0734462738037s cumulative, 0.002713918685913086s individual

.
current test PASSED/SKIPPED -- test_readlines_hint in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.07654070854187s cumulative, 0.0030944347381591797s individual

.
current test PASSED/SKIPPED -- test_read_until_with_size in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.07925629615784s cumulative, 0.002715587615966797s individual

.
current test PASSED/SKIPPED -- test_consume_delimiter in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.08181738853455s cumulative, 0.0025610923767089844s individual

.
current test PASSED/SKIPPED -- test_readlines_hint in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.08486080169678s cumulative, 0.0030434131622314453s individual

.
current test PASSED/SKIPPED -- test_read_until_shared_boundary in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.08742690086365s cumulative, 0.002566099166870117s individual

.
current test PASSED/SKIPPED -- test_read_from_buffer in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.09012079238892s cumulative, 0.0026938915252685547s individual

.
current test PASSED/SKIPPED -- test_pipe in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.09271025657654s cumulative, 0.0025894641876220703s individual

.
current test PASSED/SKIPPED -- test_read_until_shared_boundary in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.09529781341553s cumulative, 0.002587556838989258s individual

.
current test PASSED/SKIPPED -- test_read_until_with_size in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.09811973571777s cumulative, 0.0028219223022460938s individual

.
current test PASSED/SKIPPED -- test_readlines in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.10113954544067s cumulative, 0.0030198097229003906s individual

.
current test PASSED/SKIPPED -- test_read_until_shared_boundary in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.10374307632446s cumulative, 0.0026035308837890625s individual

.
current test PASSED/SKIPPED -- test_read_until_shared_boundary in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.10630536079407s cumulative, 0.002562284469604492s individual

.
current test PASSED/SKIPPED -- test_read_until_from_buffer in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.10897970199585s cumulative, 0.0026743412017822266s individual

.
current test PASSED/SKIPPED -- test_read_until_with_size in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.1116704940796s cumulative, 0.0026907920837402344s individual

.
current test PASSED/SKIPPED -- test_read_from_buffer in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.11707758903503s cumulative, 0.005407094955444336s individual

.
current test PASSED/SKIPPED -- test_read_until_from_buffer in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.11977362632751s cumulative, 0.0026960372924804688s individual

.
current test PASSED/SKIPPED -- test_read_until_shared_boundary in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.12313747406006s cumulative, 0.0033638477325439453s individual

.
current test PASSED/SKIPPED -- test_read_until_missing_delimiter in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.12587475776672s cumulative, 0.002737283706665039s individual

.
current test PASSED/SKIPPED -- test_read_until_shared_boundary in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.12845492362976s cumulative, 0.0025801658630371094s individual

.
current test PASSED/SKIPPED -- test_read_until_with_size in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.13123202323914s cumulative, 0.002777099609375s individual

.
current test PASSED/SKIPPED -- test_peek_eof in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.13366556167603s cumulative, 0.0024335384368896484s individual

.
current test PASSED/SKIPPED -- test_read_until_shared_boundary in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.13624930381775s cumulative, 0.002583742141723633s individual

.
current test PASSED/SKIPPED -- test_read_from_buffer in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.13896012306213s cumulative, 0.0027108192443847656s individual

.
current test PASSED/SKIPPED -- test_readline_with_size in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.1414294242859s cumulative, 0.002469301223754883s individual

.
current test PASSED/SKIPPED -- test_read_until_from_buffer in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.144118309021s cumulative, 0.002688884735107422s individual

.
current test PASSED/SKIPPED -- test_read_until_from_buffer in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.14681601524353s cumulative, 0.0026977062225341797s individual

.
current test PASSED/SKIPPED -- test_read_until_delimiter_size_check in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.1494219303131s cumulative, 0.002605915069580078s individual

.
current test PASSED/SKIPPED -- test_read_from_buffer in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.1521258354187s cumulative, 0.0027039051055908203s individual

.
current test PASSED/SKIPPED -- test_read_until_shared_boundary in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.15470790863037s cumulative, 0.002582073211669922s individual

.
current test PASSED/SKIPPED -- test_read_until_from_buffer in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.157390832901s cumulative, 0.002682924270629883s individual

.
current test PASSED/SKIPPED -- test_read_from_buffer in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.16010737419128s cumulative, 0.002716541290283203s individual

.
current test PASSED/SKIPPED -- test_read_until_from_buffer in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.16278767585754s cumulative, 0.0026803016662597656s individual

.
current test PASSED/SKIPPED -- test_read_until_with_size in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.16550850868225s cumulative, 0.0027208328247070312s individual

.
current test PASSED/SKIPPED -- test_read_until_shared_boundary in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.16808891296387s cumulative, 0.002580404281616211s individual

.
current test PASSED/SKIPPED -- test_read_from_buffer in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.1707751750946s cumulative, 0.0026862621307373047s individual

.
current test PASSED/SKIPPED -- test_read_until_with_size in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.17353010177612s cumulative, 0.0027549266815185547s individual

.
current test PASSED/SKIPPED -- test_peek in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.17609906196594s cumulative, 0.002568960189819336s individual

.
current test PASSED/SKIPPED -- test_duck_compatibility_with_io_base in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.1786332130432s cumulative, 0.002534151077270508s individual

.
current test PASSED/SKIPPED -- test_readlines_hint in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.1822373867035s cumulative, 0.0036041736602783203s individual

.
current test PASSED/SKIPPED -- test_read_until_with_size in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.18495512008667s cumulative, 0.002717733383178711s individual

.
current test PASSED/SKIPPED -- test_read_until_shared_boundary in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.1878960132599s cumulative, 0.0029408931732177734s individual

.
current test PASSED/SKIPPED -- test_read_until_shared_boundary in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.19055485725403s cumulative, 0.002658843994140625s individual

.
current test PASSED/SKIPPED -- test_read_from_buffer in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.19324731826782s cumulative, 0.0026924610137939453s individual

.
current test PASSED/SKIPPED -- test_read_until_from_buffer in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.19615125656128s cumulative, 0.0029039382934570312s individual

.
current test PASSED/SKIPPED -- test_read_until_shared_boundary in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.19875645637512s cumulative, 0.0026051998138427734s individual

.
current test PASSED/SKIPPED -- test_read_until_with_size in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.20145845413208s cumulative, 0.002701997756958008s individual

.
current test PASSED/SKIPPED -- test_readlines_hint in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.20453548431396s cumulative, 0.0030770301818847656s individual

.
current test PASSED/SKIPPED -- test_read_until_with_size in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.20725655555725s cumulative, 0.002721071243286133s individual

.
current test PASSED/SKIPPED -- test_read_until_with_size in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.20996499061584s cumulative, 0.00270843505859375s individual

.
current test PASSED/SKIPPED -- test_read_until_with_size in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.21264839172363s cumulative, 0.002683401107788086s individual

.
current test PASSED/SKIPPED -- test_readlines_hint in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.2156162261963s cumulative, 0.00296783447265625s individual

.
current test PASSED/SKIPPED -- test_read_until_from_buffer in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.2182981967926s cumulative, 0.0026819705963134766s individual

.
current test PASSED/SKIPPED -- test_read_until_shared_boundary in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.22246885299683s cumulative, 0.004170656204223633s individual

.
current test PASSED/SKIPPED -- test_bounded_read in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.22490215301514s cumulative, 0.002433300018310547s individual

.
current test PASSED/SKIPPED -- test_read_from_buffer in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.22759199142456s cumulative, 0.002689838409423828s individual

.
current test PASSED/SKIPPED -- test_read_until_shared_boundary in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.23016786575317s cumulative, 0.0025758743286132812s individual

.
current test PASSED/SKIPPED -- test_read_until_shared_boundary in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.23283076286316s cumulative, 0.0026628971099853516s individual

.
current test PASSED/SKIPPED -- test_read_until_from_buffer in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.2355272769928s cumulative, 0.002696514129638672s individual

.
current test PASSED/SKIPPED -- test_read_until_with_size in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.23968052864075s cumulative, 0.004153251647949219s individual

.
current test PASSED/SKIPPED -- test_read_until_from_buffer in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.24236845970154s cumulative, 0.0026879310607910156s individual

.
current test PASSED/SKIPPED -- test_read_from_buffer in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.24506378173828s cumulative, 0.002695322036743164s individual

.
current test PASSED/SKIPPED -- test_exhaust in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.24764156341553s cumulative, 0.0025777816772460938s individual

.
current test PASSED/SKIPPED -- test_read_from_buffer in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.2503457069397s cumulative, 0.002704143524169922s individual

.
current test PASSED/SKIPPED -- test_read_from_buffer in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.25315022468567s cumulative, 0.0028045177459716797s individual

.
current test PASSED/SKIPPED -- test_read_from_buffer in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.25586199760437s cumulative, 0.002711772918701172s individual

.
current test PASSED/SKIPPED -- test_read_until_shared_boundary in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.25845098495483s cumulative, 0.002588987350463867s individual

.
current test PASSED/SKIPPED -- test_readline in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.26094841957092s cumulative, 0.002497434616088867s individual

.
current test PASSED/SKIPPED -- test_read_until_from_buffer in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.26361441612244s cumulative, 0.002665996551513672s individual

.
current test PASSED/SKIPPED -- test_read_until_from_buffer in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.26628351211548s cumulative, 0.002669095993041992s individual

.
current test PASSED/SKIPPED -- test_read_from_buffer in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.26910543441772s cumulative, 0.0028219223022460938s individual

.
current test PASSED/SKIPPED -- test_read_until_with_size in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.2718198299408s cumulative, 0.002714395523071289s individual

.
current test PASSED/SKIPPED -- test_read_until_from_buffer in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.2745053768158s cumulative, 0.002685546875s individual

.
current test PASSED/SKIPPED -- test_read_until_with_size in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.27721166610718s cumulative, 0.002706289291381836s individual

.
current test PASSED/SKIPPED -- test_read_from_buffer in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 154.2799084186554s cumulative, 0.0026967525482177734s individual


tests/asgi/test_ws.py .
current test PASSED/SKIPPED -- test_ws_context_timeout in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 159.2938997745514s cumulative, 5.013991355895996s individual


tests/test_response_context.py .
current test PASSED/SKIPPED -- test_custom_response_context_factory in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_context.py: 159.29763197898865s cumulative, 0.0037322044372558594s individual

.
current test PASSED/SKIPPED -- test_custom_response_context_failure in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_context.py: 159.30066585540771s cumulative, 0.003033876419067383s individual

.
current test PASSED/SKIPPED -- test_default_response_context in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_context.py: 159.30348134040833s cumulative, 0.0028154850006103516s individual

.
current test PASSED/SKIPPED -- test_custom_response_context_factory in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_context.py: 159.30630040168762s cumulative, 0.002819061279296875s individual

.
current test PASSED/SKIPPED -- test_custom_response_context in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_context.py: 159.30996561050415s cumulative, 0.0036652088165283203s individual

.
current test PASSED/SKIPPED -- test_custom_response_context_failure in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_context.py: 159.3128354549408s cumulative, 0.002869844436645508s individual

.
current test PASSED/SKIPPED -- test_default_response_context in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_context.py: 159.31663465499878s cumulative, 0.0037992000579833984s individual

.
current test PASSED/SKIPPED -- test_custom_response_context in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_context.py: 159.32340288162231s cumulative, 0.006768226623535156s individual


tests/asgi/test_scope.py .
current test PASSED/SKIPPED -- test_supported_asgi_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 159.32738256454468s cumulative, 0.003979682922363281s individual

.
current test PASSED/SKIPPED -- test_supported_asgi_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 159.33178281784058s cumulative, 0.0044002532958984375s individual

.
current test PASSED/SKIPPED -- test_lifespan_scope_default_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 159.33611822128296s cumulative, 0.0043354034423828125s individual

.
current test PASSED/SKIPPED -- test_cookies in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 159.33879923820496s cumulative, 0.0026810169219970703s individual

.
current test PASSED/SKIPPED -- test_supported_asgi_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 159.34222507476807s cumulative, 0.0034258365631103516s individual

.
current test PASSED/SKIPPED -- test_lifespan_scope_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 159.34595108032227s cumulative, 0.0037260055541992188s individual

.
current test PASSED/SKIPPED -- test_unsupported_scope_type in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 159.3492090702057s cumulative, 0.0032579898834228516s individual

.
current test PASSED/SKIPPED -- test_supported_http_spec in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 159.3534688949585s cumulative, 0.004259824752807617s individual

.
current test PASSED/SKIPPED -- test_cookies_options_meathod in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 159.35591459274292s cumulative, 0.002445697784423828s individual

.
current test PASSED/SKIPPED -- test_unsupported_http_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 159.3592188358307s cumulative, 0.0033042430877685547s individual

.
current test PASSED/SKIPPED -- test_supported_http_spec in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 159.36316514015198s cumulative, 0.0039463043212890625s individual

.
current test PASSED/SKIPPED -- test_unsupported_http_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 159.36645007133484s cumulative, 0.003284931182861328s individual

.
current test PASSED/SKIPPED -- test_supported_asgi_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 159.36988377571106s cumulative, 0.003433704376220703s individual

.
current test PASSED/SKIPPED -- test_supported_http_spec in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 159.37329769134521s cumulative, 0.0034139156341552734s individual

.
current test PASSED/SKIPPED -- test_scheme in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 159.37604546546936s cumulative, 0.002747774124145508s individual

.
current test PASSED/SKIPPED -- test_supported_asgi_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 159.37989044189453s cumulative, 0.0038449764251708984s individual

.
current test PASSED/SKIPPED -- test_lifespan_scope_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 159.38314247131348s cumulative, 0.0032520294189453125s individual

.
current test PASSED/SKIPPED -- test_unsupported_http_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 159.3863537311554s cumulative, 0.0032112598419189453s individual

.
current test PASSED/SKIPPED -- test_supported_asgi_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 159.3897922039032s cumulative, 0.0034384727478027344s individual

.
current test PASSED/SKIPPED -- test_supported_asgi_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 159.39335799217224s cumulative, 0.0035657882690429688s individual

.
current test PASSED/SKIPPED -- test_supported_http_spec in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 159.39754676818848s cumulative, 0.0041887760162353516s individual

.
current test PASSED/SKIPPED -- test_scheme in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 159.4003140926361s cumulative, 0.002767324447631836s individual

.
current test PASSED/SKIPPED -- test_lifespan_scope_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 159.40483379364014s cumulative, 0.00451970100402832s individual

.
current test PASSED/SKIPPED -- test_lifespan_scope_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 159.40938115119934s cumulative, 0.0045473575592041016s individual

.
current test PASSED/SKIPPED -- test_query_string_values in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 159.41529417037964s cumulative, 0.0059130191802978516s individual

.
current test PASSED/SKIPPED -- test_supported_http_spec in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 159.41870546340942s cumulative, 0.0034112930297851562s individual

.
current test PASSED/SKIPPED -- test_scheme in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 159.42188119888306s cumulative, 0.0031757354736328125s individual

.
current test PASSED/SKIPPED -- test_unsupported_http_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 159.42633771896362s cumulative, 0.004456520080566406s individual

.
current test PASSED/SKIPPED -- test_supported_asgi_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 159.42977857589722s cumulative, 0.00344085693359375s individual

.
current test PASSED/SKIPPED -- test_lifespan_scope_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 159.43436217308044s cumulative, 0.004583597183227539s individual

.
current test PASSED/SKIPPED -- test_lifespan_scope_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 159.43801951408386s cumulative, 0.0036573410034179688s individual

.
current test PASSED/SKIPPED -- test_lifespan_scope_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 159.44125747680664s cumulative, 0.0032379627227783203s individual

.
current test PASSED/SKIPPED -- test_supported_asgi_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 159.44472527503967s cumulative, 0.0034677982330322266s individual

.
current test PASSED/SKIPPED -- test_scheme in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 159.4474537372589s cumulative, 0.0027284622192382812s individual

.
current test PASSED/SKIPPED -- test_supported_http_spec in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 159.45078945159912s cumulative, 0.003335714340209961s individual

.
current test PASSED/SKIPPED -- test_scheme in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 159.45362830162048s cumulative, 0.0028388500213623047s individual

.
current test PASSED/SKIPPED -- test_supported_http_spec in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 159.457417011261s cumulative, 0.0037887096405029297s individual

.
current test PASSED/SKIPPED -- test_scheme in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 159.4602644443512s cumulative, 0.002847433090209961s individual

.
current test PASSED/SKIPPED -- test_lifespan_scope_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 159.4647786617279s cumulative, 0.004514217376708984s individual

.
current test PASSED/SKIPPED -- test_lifespan_scope_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 159.46920490264893s cumulative, 0.004426240921020508s individual

.
current test PASSED/SKIPPED -- test_unsupported_scope_type in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 159.47250843048096s cumulative, 0.00330352783203125s individual

.
current test PASSED/SKIPPED -- test_supported_asgi_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 159.47603797912598s cumulative, 0.0035295486450195312s individual

.
current test PASSED/SKIPPED -- test_lifespan_scope_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 159.4809911251068s cumulative, 0.004953145980834961s individual

.
current test PASSED/SKIPPED -- test_unsupported_scope_type in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 159.48424172401428s cumulative, 0.003250598907470703s individual

.
current test PASSED/SKIPPED -- test_supported_asgi_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 159.48764824867249s cumulative, 0.003406524658203125s individual

.
current test PASSED/SKIPPED -- test_supported_asgi_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 159.49107789993286s cumulative, 0.0034296512603759766s individual

.
current test PASSED/SKIPPED -- test_cookies in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 159.4936921596527s cumulative, 0.002614259719848633s individual

.
current test PASSED/SKIPPED -- test_supported_http_spec in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 159.49706959724426s cumulative, 0.0033774375915527344s individual

.
current test PASSED/SKIPPED -- test_supported_asgi_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 159.50274348258972s cumulative, 0.005673885345458984s individual

.
current test PASSED/SKIPPED -- test_scheme in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 159.50550651550293s cumulative, 0.002763032913208008s individual

.
current test PASSED/SKIPPED -- test_missing_asgi_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 159.50916981697083s cumulative, 0.003663301467895508s individual

.
current test PASSED/SKIPPED -- test_supported_http_spec in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 159.5128664970398s cumulative, 0.0036966800689697266s individual

.
current test PASSED/SKIPPED -- test_supported_http_spec in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 159.51621174812317s cumulative, 0.0033452510833740234s individual

.
current test PASSED/SKIPPED -- test_supported_asgi_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 159.52019906044006s cumulative, 0.003987312316894531s individual

.
current test PASSED/SKIPPED -- test_lifespan_scope_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 159.52340269088745s cumulative, 0.0032036304473876953s individual

.
current test PASSED/SKIPPED -- test_supported_http_spec in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 159.5267472267151s cumulative, 0.0033445358276367188s individual


tests/test_boundedstream.py .
current test PASSED/SKIPPED -- test_not_writable in /home/kaiyaok2/PythonProjects/falcon/tests/test_boundedstream.py: 159.52941799163818s cumulative, 0.002670764923095703s individual


tests/asgi/test_asgi_servers.py INFO:     127.0.0.1:36072 - "GET / HTTP/1.1" 200 OK
INFO:     127.0.0.1:36080 - "PUT /bucket/drops HTTP/1.1" 200 OK

[Starting server process...]
.
[Sending SIGTERM to server process...]

current test PASSED/SKIPPED -- test_post_read_bounded_stream_large in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 160.36480474472046s cumulative, 0.8353867530822754s individual


tests/test_inspect.py .
current test PASSED/SKIPPED -- test_error_handler_verbose in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 160.37242984771729s cumulative, 0.007625102996826172s individual

.
current test PASSED/SKIPPED -- test_middleware in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 160.39144325256348s cumulative, 0.019013404846191406s individual

.
current test PASSED/SKIPPED -- test_app in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 160.4159677028656s cumulative, 0.024524450302124023s individual

.
current test PASSED/SKIPPED -- test_route_no_methods in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 160.42708110809326s cumulative, 0.011113405227661133s individual

.
current test PASSED/SKIPPED -- test_app_no_routes in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 160.45068430900574s cumulative, 0.023603200912475586s individual

.
current test PASSED/SKIPPED -- test_middleware_method_verbose in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 160.4652705192566s cumulative, 0.014586210250854492s individual

.
current test PASSED/SKIPPED -- test_app_no_middleware in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 160.4896388053894s cumulative, 0.0243682861328125s individual

.
current test PASSED/SKIPPED -- test_app in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 160.51498889923096s cumulative, 0.025350093841552734s individual

.
current test PASSED/SKIPPED -- test_app_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 162.0745861530304s cumulative, 1.5595972537994385s individual

.
current test PASSED/SKIPPED -- test_middleware_tree_no_resource in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 162.09073638916016s cumulative, 0.016150236129760742s individual

.
current test PASSED/SKIPPED -- test_middleware_tree_no_response in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 162.10547757148743s cumulative, 0.014741182327270508s individual

.
current test PASSED/SKIPPED -- test_middleware_class_no_methods in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 162.1201844215393s cumulative, 0.014706850051879883s individual

.
current test PASSED/SKIPPED -- test_app_no_middleware in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 162.143944978714s cumulative, 0.023760557174682617s individual

.
current test PASSED/SKIPPED -- test_middleware_tree_item in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 162.15885162353516s cumulative, 0.014906644821166992s individual

.
current test PASSED/SKIPPED -- test_app_no_middleware in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 162.1821587085724s cumulative, 0.023307085037231445s individual

.
current test PASSED/SKIPPED -- test_app_no_sink in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 162.20552372932434s cumulative, 0.023365020751953125s individual

.
current test PASSED/SKIPPED -- test_middleware_method_verbose in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 162.22082138061523s cumulative, 0.015297651290893555s individual

.
current test PASSED/SKIPPED -- test_middleware_tree in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 162.2356779575348s cumulative, 0.014856576919555664s individual

.
current test PASSED/SKIPPED -- test_app_no_routes in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 162.25869274139404s cumulative, 0.02301478385925293s individual

.
current test PASSED/SKIPPED -- test_route_method_verbose in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 162.26955676078796s cumulative, 0.010864019393920898s individual

.
current test PASSED/SKIPPED -- test_static_route in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 162.27349090576172s cumulative, 0.003934144973754883s individual

.
current test PASSED/SKIPPED -- test_middleware_tree_no_response in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 162.28812646865845s cumulative, 0.014635562896728516s individual

.
current test PASSED/SKIPPED -- test_error_handler_verbose in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 162.29220271110535s cumulative, 0.004076242446899414s individual

.
current test PASSED/SKIPPED -- test_app_no_sink in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 162.31595373153687s cumulative, 0.023751020431518555s individual

.
current test PASSED/SKIPPED -- test_app_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 162.3389871120453s cumulative, 0.02303338050842285s individual

.
current test PASSED/SKIPPED -- test_middleware_class in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 162.35377645492554s cumulative, 0.014789342880249023s individual

.
current test PASSED/SKIPPED -- test_middleware_tree_response_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 162.3683397769928s cumulative, 0.014563322067260742s individual

.
current test PASSED/SKIPPED -- test_static_route in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 162.37227988243103s cumulative, 0.003940105438232422s individual

.
current test PASSED/SKIPPED -- test_route_verbose in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 162.38411593437195s cumulative, 0.011836051940917969s individual

.
current test PASSED/SKIPPED -- test_middleware_tree in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 162.39890837669373s cumulative, 0.014792442321777344s individual

.
current test PASSED/SKIPPED -- test_middleware_method in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 162.41345024108887s cumulative, 0.014541864395141602s individual

.
current test PASSED/SKIPPED -- test_sink_verbose in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 162.41866517066956s cumulative, 0.0052149295806884766s individual

.
current test PASSED/SKIPPED -- test_middleware_verbose in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 162.43339943885803s cumulative, 0.014734268188476562s individual

.
current test PASSED/SKIPPED -- test_app_static_routes in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 162.4569549560547s cumulative, 0.023555517196655273s individual

.
current test PASSED/SKIPPED -- test_route_method_info_suffix in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 162.4594419002533s cumulative, 0.0024869441986083984s individual

.
current test PASSED/SKIPPED -- test_app_no_sink in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 162.4826145172119s cumulative, 0.023172616958618164s individual

.
current test PASSED/SKIPPED -- test_app in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 162.50652170181274s cumulative, 0.023907184600830078s individual

.
current test PASSED/SKIPPED -- test_middleware_verbose in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 162.5213406085968s cumulative, 0.014818906784057617s individual

.
current test PASSED/SKIPPED -- test_middleware_tree_item in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 162.53682017326355s cumulative, 0.015479564666748047s individual

.
current test PASSED/SKIPPED -- test_sink in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 162.54200911521912s cumulative, 0.005188941955566406s individual

.
current test PASSED/SKIPPED -- test_route in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 162.5530686378479s cumulative, 0.01105952262878418s individual

.
current test PASSED/SKIPPED -- test_route_verbose in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 162.56428265571594s cumulative, 0.011214017868041992s individual

.
current test PASSED/SKIPPED -- test_app_no_routes in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 162.58760952949524s cumulative, 0.023326873779296875s individual

.
current test PASSED/SKIPPED -- test_static_route in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 162.59158301353455s cumulative, 0.003973484039306641s individual

.
current test PASSED/SKIPPED -- test_middleware_tree in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 162.60639357566833s cumulative, 0.014810562133789062s individual

.
current test PASSED/SKIPPED -- test_sink_verbose in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 162.61155652999878s cumulative, 0.005162954330444336s individual

.
current test PASSED/SKIPPED -- test_app_no_errors in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 162.63488292694092s cumulative, 0.023326396942138672s individual

.
current test PASSED/SKIPPED -- test_middleware in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 162.64949870109558s cumulative, 0.014615774154663086s individual

.
current test PASSED/SKIPPED -- test_app_no_errors in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 162.67441987991333s cumulative, 0.024921178817749023s individual

.
current test PASSED/SKIPPED -- test_app_no_sink in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 162.6983289718628s cumulative, 0.02390909194946289s individual

.
current test PASSED/SKIPPED -- test_app_static_routes in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 162.7213957309723s cumulative, 0.02306675910949707s individual

.
current test PASSED/SKIPPED -- test_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 162.72547340393066s cumulative, 0.0040776729583740234s individual

.
current test PASSED/SKIPPED -- test_route_no_methods in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 162.73640537261963s cumulative, 0.010931968688964844s individual

.
current test PASSED/SKIPPED -- test_app in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 162.7602996826172s cumulative, 0.023894309997558594s individual

.
current test PASSED/SKIPPED -- test_string_visitor_class in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 162.76277565956116s cumulative, 0.0024759769439697266s individual

.
current test PASSED/SKIPPED -- test_app_no_routes in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 162.78577280044556s cumulative, 0.022997140884399414s individual

.
current test PASSED/SKIPPED -- test_middleware_tree_item in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 162.8004069328308s cumulative, 0.014634132385253906s individual

.
current test PASSED/SKIPPED -- test_app_static_routes in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 162.82444381713867s cumulative, 0.024036884307861328s individual

.
current test PASSED/SKIPPED -- test_app_no_middleware in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 162.84794664382935s cumulative, 0.023502826690673828s individual

.
current test PASSED/SKIPPED -- test_is_internal in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 162.85044503211975s cumulative, 0.0024983882904052734s individual

.
current test PASSED/SKIPPED -- test_middleware_class in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 162.86503720283508s cumulative, 0.014592170715332031s individual

.
current test PASSED/SKIPPED -- test_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 162.86910963058472s cumulative, 0.004072427749633789s individual

.
current test PASSED/SKIPPED -- test_middleware_class_verbose in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 162.88380241394043s cumulative, 0.01469278335571289s individual

.
current test PASSED/SKIPPED -- test_app_no_errors in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 162.90736079216003s cumulative, 0.023558378219604492s individual

.
current test PASSED/SKIPPED -- test_middleware_class_verbose in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 162.922589302063s cumulative, 0.015228509902954102s individual

.
current test PASSED/SKIPPED -- test_middleware_tree in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 162.93731832504272s cumulative, 0.014729022979736328s individual

.
current test PASSED/SKIPPED -- test_info_class_repr_to_string in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 162.96074032783508s cumulative, 0.0234220027923584s individual

.
current test PASSED/SKIPPED -- test_route_method in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 162.97175860404968s cumulative, 0.01101827621459961s individual

.
current test PASSED/SKIPPED -- test_middleware_method in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 162.98723030090332s cumulative, 0.015471696853637695s individual

.
current test PASSED/SKIPPED -- test_route in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 162.9981563091278s cumulative, 0.010926008224487305s individual

.
current test PASSED/SKIPPED -- test_middleware_tree_no_resource in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 163.01277804374695s cumulative, 0.014621734619140625s individual

.
current test PASSED/SKIPPED -- test_sink in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 163.01809191703796s cumulative, 0.005313873291015625s individual

.
current test PASSED/SKIPPED -- test_app_no_errors in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 163.0412163734436s cumulative, 0.02312445640563965s individual

.
current test PASSED/SKIPPED -- test_route_method in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 163.05215525627136s cumulative, 0.010938882827758789s individual

.
current test PASSED/SKIPPED -- test_route_method_verbose in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 163.06298685073853s cumulative, 0.010831594467163086s individual

.
current test PASSED/SKIPPED -- test_middleware_class_no_methods in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 163.07744312286377s cumulative, 0.01445627212524414s individual

.
current test PASSED/SKIPPED -- test_middleware_tree_response_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 163.09193873405457s cumulative, 0.014495611190795898s individual

.
current test PASSED/SKIPPED -- test_middleware_tree_item in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 163.1067714691162s cumulative, 0.014832735061645508s individual

.
current test PASSED/SKIPPED -- test_app_static_routes in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 163.1317436695099s cumulative, 0.024972200393676758s individual

.
current test PASSED/SKIPPED -- test_static_route in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 163.1357102394104s cumulative, 0.003966569900512695s individual

.
current test PASSED/SKIPPED -- test_register_router_multiple_time in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 163.13896584510803s cumulative, 0.003255605697631836s individual

.
current test PASSED/SKIPPED -- test_compiled_no_method_map in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 163.14266705513s cumulative, 0.0037012100219726562s individual

.
current test PASSED/SKIPPED -- test_register_router_not_found in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 163.1459949016571s cumulative, 0.0033278465270996094s individual

.
current test PASSED/SKIPPED -- test_compiled_partial in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 163.15122723579407s cumulative, 0.005232334136962891s individual

.
current test PASSED/SKIPPED -- test_register_other_router in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 163.15438556671143s cumulative, 0.0031583309173583984s individual

.
current test PASSED/SKIPPED -- test_sink in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 163.15959119796753s cumulative, 0.005205631256103516s individual

.
current test PASSED/SKIPPED -- test_static_routes in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 163.16334342956543s cumulative, 0.0037522315979003906s individual

F
current test FAILED -- test_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 163.23523473739624s cumulative, 0.07189130783081055s individual

.
current test PASSED/SKIPPED -- test_middleware_tree in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 163.2508945465088s cumulative, 0.015659809112548828s individual

.
current test PASSED/SKIPPED -- test_routes_empty_paths in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 163.25695419311523s cumulative, 0.0060596466064453125s individual

F
current test FAILED -- test_app in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 163.31817889213562s cumulative, 0.06122469902038574s individual

F
current test FAILED -- test_middleware_tree in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 163.37887382507324s cumulative, 0.06069493293762207s individual

.
current test PASSED/SKIPPED -- test_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 163.38368129730225s cumulative, 0.004807472229003906s individual

.
current test PASSED/SKIPPED -- test_dependent_middleware in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 163.38712453842163s cumulative, 0.0034432411193847656s individual

.
current test PASSED/SKIPPED -- test_routes_empty_paths in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 163.39336013793945s cumulative, 0.006235599517822266s individual

.
current test PASSED/SKIPPED -- test_empty_app in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 163.39671349525452s cumulative, 0.0033533573150634766s individual

.
current test PASSED/SKIPPED -- test_middleware in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 163.41141843795776s cumulative, 0.01470494270324707s individual

F
current test FAILED -- test_routes in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 163.47314715385437s cumulative, 0.061728715896606445s individual

.
current test PASSED/SKIPPED -- test_empty_app in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 163.4769642353058s cumulative, 0.0038170814514160156s individual

.
current test PASSED/SKIPPED -- test_routes in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 163.48824977874756s cumulative, 0.011285543441772461s individual

F
current test FAILED -- test_middleware in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 163.54907321929932s cumulative, 0.06082344055175781s individual

.
current test PASSED/SKIPPED -- test_dependent_middleware in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 163.5529534816742s cumulative, 0.0038802623748779297s individual

F
current test FAILED -- test_sink in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 163.61485695838928s cumulative, 0.06190347671508789s individual

F
current test FAILED -- test_static_routes in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 163.67557621002197s cumulative, 0.06071925163269043s individual

.
current test PASSED/SKIPPED -- test_app in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 163.69968247413635s cumulative, 0.024106264114379883s individual

.
current test PASSED/SKIPPED -- test_inspect_visitor in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 163.70265197753906s cumulative, 0.002969503402709961s individual

.
current test PASSED/SKIPPED -- test_process in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 163.7051317691803s cumulative, 0.0024797916412353516s individual


tests/test_media_multipart.py .
current test PASSED/SKIPPED -- test_parse in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 163.70839190483093s cumulative, 0.0032601356506347656s individual

.
current test PASSED/SKIPPED -- test_parsing_correctness in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 163.71151900291443s cumulative, 0.0031270980834960938s individual

.
current test PASSED/SKIPPED -- test_too_many_body_parts in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 163.7181794643402s cumulative, 0.00666046142578125s individual

.
current test PASSED/SKIPPED -- test_parsing_correctness in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 163.72142887115479s cumulative, 0.0032494068145751953s individual

.
current test PASSED/SKIPPED -- test_too_many_body_parts in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 163.7287130355835s cumulative, 0.0072841644287109375s individual

.
current test PASSED/SKIPPED -- test_content_transfer_encoding_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 163.73393630981445s cumulative, 0.005223274230957031s individual

.
current test PASSED/SKIPPED -- test_headers_edge_cases in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 163.7389633655548s cumulative, 0.005027055740356445s individual

.
current test PASSED/SKIPPED -- test_truncated_form in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 163.74552059173584s cumulative, 0.0065572261810302734s individual

.
current test PASSED/SKIPPED -- test_parsing_correctness in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 163.7488329410553s cumulative, 0.003312349319458008s individual

.
current test PASSED/SKIPPED -- test_truncated_form in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 163.75487971305847s cumulative, 0.006046772003173828s individual

.
current test PASSED/SKIPPED -- test_parsing_correctness in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 163.75851440429688s cumulative, 0.0036346912384033203s individual

.
current test PASSED/SKIPPED -- test_parsing_correctness in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 163.76193976402283s cumulative, 0.0034253597259521484s individual

.
current test PASSED/SKIPPED -- test_parse in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 163.7765121459961s cumulative, 0.014572381973266602s individual

.
current test PASSED/SKIPPED -- test_filename_star in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 163.7855305671692s cumulative, 0.009018421173095703s individual

.
current test PASSED/SKIPPED -- test_headers_edge_cases in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 163.7924726009369s cumulative, 0.006942033767700195s individual

.
current test PASSED/SKIPPED -- test_too_many_body_parts in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 163.79796290397644s cumulative, 0.005490303039550781s individual

.
current test PASSED/SKIPPED -- test_truncated_form in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 163.80408906936646s cumulative, 0.0061261653900146484s individual

.
current test PASSED/SKIPPED -- test_headers_edge_cases in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 163.8091962337494s cumulative, 0.00510716438293457s individual

.
current test PASSED/SKIPPED -- test_invalid_text_or_charset in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 163.81219935417175s cumulative, 0.0030031204223632812s individual

.
current test PASSED/SKIPPED -- test_serialize in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 163.81467509269714s cumulative, 0.002475738525390625s individual

.
current test PASSED/SKIPPED -- test_headers_edge_cases in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 163.81979370117188s cumulative, 0.005118608474731445s individual

.
current test PASSED/SKIPPED -- test_invalid_text_or_charset in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 163.82268142700195s cumulative, 0.002887725830078125s individual

.
current test PASSED/SKIPPED -- test_parsing_correctness in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 163.8261034488678s cumulative, 0.0034220218658447266s individual

.
current test PASSED/SKIPPED -- test_truncated_form in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 163.8321568965912s cumulative, 0.006053447723388672s individual

.
current test PASSED/SKIPPED -- test_body_part_media in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 163.83481979370117s cumulative, 0.0026628971099853516s individual

.
current test PASSED/SKIPPED -- test_parsing_correctness in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 163.83816957473755s cumulative, 0.003349781036376953s individual

.
current test PASSED/SKIPPED -- test_unexected_form_structure in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 163.8446798324585s cumulative, 0.006510257720947266s individual

.
current test PASSED/SKIPPED -- test_too_many_body_parts in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 163.85046362876892s cumulative, 0.005783796310424805s individual

.
current test PASSED/SKIPPED -- test_invalid_text_or_charset in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 163.853417634964s cumulative, 0.0029540061950683594s individual

.
current test PASSED/SKIPPED -- test_truncated_form in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 163.8589141368866s cumulative, 0.005496501922607422s individual

.
current test PASSED/SKIPPED -- test_missing_boundary in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 163.86152029037476s cumulative, 0.0026061534881591797s individual

.
current test PASSED/SKIPPED -- test_parsing_correctness in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 163.8647425174713s cumulative, 0.003222227096557617s individual

.
current test PASSED/SKIPPED -- test_truncated_form in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 163.8701434135437s cumulative, 0.005400896072387695s individual

.
current test PASSED/SKIPPED -- test_parsing_correctness in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 163.873676776886s cumulative, 0.0035333633422851562s individual

.
current test PASSED/SKIPPED -- test_parse in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 163.87667059898376s cumulative, 0.0029938220977783203s individual

.
current test PASSED/SKIPPED -- test_parsing_correctness in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 163.88029146194458s cumulative, 0.0036208629608154297s individual

.
current test PASSED/SKIPPED -- test_too_many_body_parts in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 163.88548254966736s cumulative, 0.00519108772277832s individual

.
current test PASSED/SKIPPED -- test_empty_input in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 163.88801336288452s cumulative, 0.002530813217163086s individual

.
current test PASSED/SKIPPED -- test_too_many_body_parts in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 163.89389896392822s cumulative, 0.005885601043701172s individual

.
current test PASSED/SKIPPED -- test_truncated_form in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 163.89966416358948s cumulative, 0.005765199661254883s individual

.
current test PASSED/SKIPPED -- test_unsupported_charset in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 163.90546226501465s cumulative, 0.0057981014251708984s individual

.
current test PASSED/SKIPPED -- test_deserialize_part_media in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 163.91060090065002s cumulative, 0.0051386356353759766s individual

.
current test PASSED/SKIPPED -- test_too_many_body_parts in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 163.9158697128296s cumulative, 0.00526881217956543s individual

.
current test PASSED/SKIPPED -- test_parsing_correctness in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 163.91918277740479s cumulative, 0.0033130645751953125s individual

.
current test PASSED/SKIPPED -- test_upload_multipart in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 163.92455554008484s cumulative, 0.005372762680053711s individual

.
current test PASSED/SKIPPED -- test_body_part_properties in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 163.9272027015686s cumulative, 0.0026471614837646484s individual

.
current test PASSED/SKIPPED -- test_deserialize_custom_media in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 163.9331657886505s cumulative, 0.00596308708190918s individual

.
current test PASSED/SKIPPED -- test_unknown_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 163.9364743232727s cumulative, 0.003308534622192383s individual

.
current test PASSED/SKIPPED -- test_parsing_correctness in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 163.94034790992737s cumulative, 0.003873586654663086s individual

.
current test PASSED/SKIPPED -- test_parsing_correctness in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 163.94371008872986s cumulative, 0.0033621788024902344s individual

.
current test PASSED/SKIPPED -- test_too_many_body_parts in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 163.9494297504425s cumulative, 0.005719661712646484s individual

.
current test PASSED/SKIPPED -- test_parsing_correctness in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 163.95276498794556s cumulative, 0.003335237503051758s individual

.
current test PASSED/SKIPPED -- test_parsing_correctness in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 163.95655012130737s cumulative, 0.0037851333618164062s individual

.
current test PASSED/SKIPPED -- test_headers_edge_cases in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 163.96169638633728s cumulative, 0.0051462650299072266s individual

.
current test PASSED/SKIPPED -- test_parsing_correctness in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 163.96482181549072s cumulative, 0.003125429153442383s individual

.
current test PASSED/SKIPPED -- test_parsing_correctness in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 163.9685401916504s cumulative, 0.0037183761596679688s individual

.
current test PASSED/SKIPPED -- test_parsing_correctness in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 163.97199773788452s cumulative, 0.0034575462341308594s individual

.
current test PASSED/SKIPPED -- test_nested_multipart_mixed in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 163.9767620563507s cumulative, 0.0047643184661865234s individual

.
current test PASSED/SKIPPED -- test_unsupported_charset in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 163.98206520080566s cumulative, 0.005303144454956055s individual

.
current test PASSED/SKIPPED -- test_parsing_correctness in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 163.98587155342102s cumulative, 0.0038063526153564453s individual

.
current test PASSED/SKIPPED -- test_headers_edge_cases in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 163.9908950328827s cumulative, 0.005023479461669922s individual

.
current test PASSED/SKIPPED -- test_too_many_body_parts in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 163.99663305282593s cumulative, 0.005738019943237305s individual

.
current test PASSED/SKIPPED -- test_unexected_form_structure in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 164.00250458717346s cumulative, 0.00587153434753418s individual

.
current test PASSED/SKIPPED -- test_parsing_correctness in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 164.0057258605957s cumulative, 0.003221273422241211s individual

.
current test PASSED/SKIPPED -- test_from_buffered_stream in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 164.0082302093506s cumulative, 0.0025043487548828125s individual

.
current test PASSED/SKIPPED -- test_parsing_correctness in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 164.01195859909058s cumulative, 0.0037283897399902344s individual

.
current test PASSED/SKIPPED -- test_too_many_body_parts in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 164.01814341545105s cumulative, 0.006184816360473633s individual

.
current test PASSED/SKIPPED -- test_deserialize_custom_media in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 164.02341079711914s cumulative, 0.00526738166809082s individual

.
current test PASSED/SKIPPED -- test_parsing_correctness in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 164.02660942077637s cumulative, 0.0031986236572265625s individual

.
current test PASSED/SKIPPED -- test_invalid_random_form in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 164.0458869934082s cumulative, 0.019277572631835938s individual

.
current test PASSED/SKIPPED -- test_parsing_correctness in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 164.04895496368408s cumulative, 0.0030679702758789062s individual

.
current test PASSED/SKIPPED -- test_parsing_correctness in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 164.0522997379303s cumulative, 0.0033447742462158203s individual

.
current test PASSED/SKIPPED -- test_parsing_correctness in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 164.05567526817322s cumulative, 0.003375530242919922s individual

.
current test PASSED/SKIPPED -- test_deserialize_part_media in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 164.06380558013916s cumulative, 0.008130311965942383s individual

.
current test PASSED/SKIPPED -- test_too_many_body_parts in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 164.0691282749176s cumulative, 0.005322694778442383s individual

.
current test PASSED/SKIPPED -- test_headers_edge_cases in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 164.07410168647766s cumulative, 0.004973411560058594s individual

.
current test PASSED/SKIPPED -- test_parsing_correctness in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 164.07717180252075s cumulative, 0.0030701160430908203s individual

.
current test PASSED/SKIPPED -- test_headers_edge_cases in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 164.08269095420837s cumulative, 0.00551915168762207s individual

.
current test PASSED/SKIPPED -- test_parsing_correctness in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 164.08579969406128s cumulative, 0.0031087398529052734s individual

.
current test PASSED/SKIPPED -- test_headers_edge_cases in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 164.09074926376343s cumulative, 0.0049495697021484375s individual

.
current test PASSED/SKIPPED -- test_headers_edge_cases in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 164.0956153869629s cumulative, 0.004866123199462891s individual

.
current test PASSED/SKIPPED -- test_headers_edge_cases in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 164.10114431381226s cumulative, 0.005528926849365234s individual

.
current test PASSED/SKIPPED -- test_content_transfer_encoding_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 164.10608410835266s cumulative, 0.0049397945404052734s individual

.
current test PASSED/SKIPPED -- test_parsing_correctness in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 164.1091706752777s cumulative, 0.003086566925048828s individual

.
current test PASSED/SKIPPED -- test_parsing_correctness in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 164.11255168914795s cumulative, 0.003381013870239258s individual

.
current test PASSED/SKIPPED -- test_invalid_random_form in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 164.12689685821533s cumulative, 0.014345169067382812s individual

.
current test PASSED/SKIPPED -- test_too_many_body_parts in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 164.13257884979248s cumulative, 0.0056819915771484375s individual

.
current test PASSED/SKIPPED -- test_too_many_body_parts in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 164.13824939727783s cumulative, 0.0056705474853515625s individual

.
current test PASSED/SKIPPED -- test_too_many_body_parts in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 164.14348101615906s cumulative, 0.005231618881225586s individual

.
current test PASSED/SKIPPED -- test_parsing_correctness in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 164.14679265022278s cumulative, 0.003311634063720703s individual

.
current test PASSED/SKIPPED -- test_parsing_correctness in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 164.15024256706238s cumulative, 0.0034499168395996094s individual

.
current test PASSED/SKIPPED -- test_parsing_correctness in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 164.15348315238953s cumulative, 0.0032405853271484375s individual

.
current test PASSED/SKIPPED -- test_upload_multipart in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 164.15899682044983s cumulative, 0.005513668060302734s individual

.
current test PASSED/SKIPPED -- test_filename_star in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 164.1650743484497s cumulative, 0.00607752799987793s individual

.
current test PASSED/SKIPPED -- test_data_too_large in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 164.17435932159424s cumulative, 0.00928497314453125s individual

.
current test PASSED/SKIPPED -- test_truncated_form in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 164.18084907531738s cumulative, 0.006489753723144531s individual

.
current test PASSED/SKIPPED -- test_invalid_text_or_charset in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 164.18382477760315s cumulative, 0.0029757022857666016s individual

.
current test PASSED/SKIPPED -- test_headers_edge_cases in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 164.18940329551697s cumulative, 0.005578517913818359s individual

.
current test PASSED/SKIPPED -- test_parse in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 164.1922664642334s cumulative, 0.002863168716430664s individual

.
current test PASSED/SKIPPED -- test_too_many_body_parts in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 164.19765377044678s cumulative, 0.005387306213378906s individual

.
current test PASSED/SKIPPED -- test_too_many_body_parts in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 164.2033667564392s cumulative, 0.005712985992431641s individual

.
current test PASSED/SKIPPED -- test_too_many_body_parts in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 164.2086980342865s cumulative, 0.005331277847290039s individual

.
current test PASSED/SKIPPED -- test_empty_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 164.21139335632324s cumulative, 0.002695322036743164s individual

.
current test PASSED/SKIPPED -- test_data_too_large in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 164.2252905368805s cumulative, 0.013897180557250977s individual

.
current test PASSED/SKIPPED -- test_too_many_body_parts in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 164.2319688796997s cumulative, 0.006678342819213867s individual


tests/test_cookies.py .
current test PASSED/SKIPPED -- test_invalid_cookies_are_ignored in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 164.2497832775116s cumulative, 0.01781439781188965s individual

E
current test FAILED -- test_same_site_empty_string in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 164.3351490497589s cumulative, 0.08536577224731445s individual

E
current test FAILED -- test_lax_same_site_value in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 164.41496109962463s cumulative, 0.07981204986572266s individual

.
current test PASSED/SKIPPED -- test_cookies_setable in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 164.41987872123718s cumulative, 0.004917621612548828s individual

.
current test PASSED/SKIPPED -- test_same_site_value_case_insensitive in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 164.42268300056458s cumulative, 0.002804279327392578s individual

.
current test PASSED/SKIPPED -- test_cookie_max_age_float_and_string in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 164.42893648147583s cumulative, 0.006253480911254883s individual

.
current test PASSED/SKIPPED -- test_cookie_timezone in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 164.43335509300232s cumulative, 0.004418611526489258s individual

E
current test FAILED -- test_unset_cookies in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 164.5119490623474s cumulative, 0.07859396934509277s individual

E
current test FAILED -- test_cookies_setable in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 164.58856463432312s cumulative, 0.07661557197570801s individual

.
current test PASSED/SKIPPED -- test_non_ascii_value in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 164.59198427200317s cumulative, 0.003419637680053711s individual

.
current test PASSED/SKIPPED -- test_response_disable_secure_globally in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 164.5983259677887s cumulative, 0.006341695785522461s individual

.
current test PASSED/SKIPPED -- test_cookie_expires_aware in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 164.60396885871887s cumulative, 0.005642890930175781s individual

.
current test PASSED/SKIPPED -- test_request_cookie_parsing in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 164.60676980018616s cumulative, 0.0028009414672851562s individual

.
current test PASSED/SKIPPED -- test_non_ascii_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 164.61008548736572s cumulative, 0.0033156871795654297s individual

E
current test FAILED -- test_cookie_timezone in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 166.20967364311218s cumulative, 1.59958815574646s individual

.
current test PASSED/SKIPPED -- test_cookie_expires_naive in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 166.21724128723145s cumulative, 0.007567644119262695s individual

.
current test PASSED/SKIPPED -- test_response_unset_cookie in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 166.22204160690308s cumulative, 0.004800319671630859s individual

.
current test PASSED/SKIPPED -- test_same_site_empty_string in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 166.22756004333496s cumulative, 0.005518436431884766s individual

E
current test FAILED -- test_cookie_max_age_float_and_string in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 166.3105127811432s cumulative, 0.08295273780822754s individual

E
current test FAILED -- test_response_disable_secure_globally in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 166.39122104644775s cumulative, 0.08070826530456543s individual

E
current test FAILED -- test_cookie_expires_aware in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 166.4693307876587s cumulative, 0.0781097412109375s individual

.
current test PASSED/SKIPPED -- test_invalid_same_site_value in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 166.47277784347534s cumulative, 0.0034470558166503906s individual

.
current test PASSED/SKIPPED -- test_non_ascii_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 166.47556948661804s cumulative, 0.0027916431427001953s individual

E
current test FAILED -- test_response_complex_case in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 166.55331182479858s cumulative, 0.07774233818054199s individual

E
current test FAILED -- test_none_same_site_value in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 166.63088178634644s cumulative, 0.07756996154785156s individual

.
current test PASSED/SKIPPED -- test_invalid_same_site_value in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 166.63426852226257s cumulative, 0.0033867359161376953s individual

.
current test PASSED/SKIPPED -- test_non_ascii_value in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 166.63708066940308s cumulative, 0.0028121471405029297s individual

E
current test FAILED -- test_cookie_expires_naive in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 166.71520590782166s cumulative, 0.0781252384185791s individual

.
current test PASSED/SKIPPED -- test_unset_cookies_samesite in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 166.72389769554138s cumulative, 0.008691787719726562s individual

.
current test PASSED/SKIPPED -- test_none_same_site_value in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 166.7292811870575s cumulative, 0.005383491516113281s individual

E
current test FAILED -- test_unset_cookies_samesite in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 166.80886054039001s cumulative, 0.07957935333251953s individual

.
current test PASSED/SKIPPED -- test_same_site_value_case_insensitive in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 166.81206488609314s cumulative, 0.003204345703125s individual

E
current test FAILED -- test_strict_same_site_value in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 166.89570713043213s cumulative, 0.08364224433898926s individual

.
current test PASSED/SKIPPED -- test_same_site_value_case_insensitive in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 166.8995180130005s cumulative, 0.003810882568359375s individual

.
current test PASSED/SKIPPED -- test_response_complex_case in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 166.90609574317932s cumulative, 0.006577730178833008s individual

.
current test PASSED/SKIPPED -- test_strict_same_site_value in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 166.91167664527893s cumulative, 0.005580902099609375s individual

E
current test FAILED -- test_response_base_case in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 166.99007844924927s cumulative, 0.07840180397033691s individual

.
current test PASSED/SKIPPED -- test_duplicate_cookie in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 166.9930293560028s cumulative, 0.002950906753540039s individual

.
current test PASSED/SKIPPED -- test_same_site_value_case_insensitive in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 166.99616503715515s cumulative, 0.00313568115234375s individual

E
current test FAILED -- test_response_unset_cookie in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 168.58966159820557s cumulative, 1.593496561050415s individual

.
current test PASSED/SKIPPED -- test_same_site_value_case_insensitive in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 168.59333562850952s cumulative, 0.003674030303955078s individual

.
current test PASSED/SKIPPED -- test_same_site_value_case_insensitive in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 168.59625554084778s cumulative, 0.002919912338256836s individual

.
current test PASSED/SKIPPED -- test_invalid_same_site_value in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 168.59907150268555s cumulative, 0.0028159618377685547s individual

.
current test PASSED/SKIPPED -- test_unicode_inside_ascii_range in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 168.60176467895508s cumulative, 0.00269317626953125s individual

.
current test PASSED/SKIPPED -- test_cookie_max_age_float_and_string in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 168.60820364952087s cumulative, 0.0064389705657958984s individual

E
current test FAILED -- test_cookie_max_age_float_and_string in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 168.68985390663147s cumulative, 0.0816502571105957s individual

.
current test PASSED/SKIPPED -- test_unset_cookies in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 168.69700264930725s cumulative, 0.00714874267578125s individual

.
current test PASSED/SKIPPED -- test_non_ascii_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 168.69987988471985s cumulative, 0.0028772354125976562s individual

.
current test PASSED/SKIPPED -- test_non_ascii_value in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 168.70268654823303s cumulative, 0.0028066635131835938s individual

.
current test PASSED/SKIPPED -- test_cookie_header_is_missing in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 168.70528364181519s cumulative, 0.0025970935821533203s individual

.
current test PASSED/SKIPPED -- test_lax_same_site_value in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 168.710551738739s cumulative, 0.005268096923828125s individual

.
current test PASSED/SKIPPED -- test_response_base_case in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 168.71553897857666s cumulative, 0.004987239837646484s individual


tests/test_uri_templates.py .
current test PASSED/SKIPPED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 168.7201852798462s cumulative, 0.00464630126953125s individual

.
current test PASSED/SKIPPED -- test_int_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 168.72461342811584s cumulative, 0.00442814826965332s individual

.
current test PASSED/SKIPPED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 168.72914457321167s cumulative, 0.004531145095825195s individual

.
current test PASSED/SKIPPED -- test_relative_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 168.7325999736786s cumulative, 0.0034554004669189453s individual

.
current test PASSED/SKIPPED -- test_uuid_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 168.73786282539368s cumulative, 0.005262851715087891s individual

F
current test FAILED -- test_datetime_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 168.8191328048706s cumulative, 0.08126997947692871s individual

F
current test FAILED -- test_converter_custom in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 168.89819931983948s cumulative, 0.07906651496887207s individual

F
current test FAILED -- test_uuid_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 168.9760823249817s cumulative, 0.07788300514221191s individual

.
current test PASSED/SKIPPED -- test_root_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 168.98177886009216s cumulative, 0.005696535110473633s individual

F
current test FAILED -- test_uuid_converter_complex_segment in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 169.05861854553223s cumulative, 0.07683968544006348s individual

.
current test PASSED/SKIPPED -- test_converter_custom in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 169.0652198791504s cumulative, 0.0066013336181640625s individual

.
current test PASSED/SKIPPED -- test_no_vars in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 169.06962156295776s cumulative, 0.004401683807373047s individual

F
current test FAILED -- test_no_vars in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 169.14840960502625s cumulative, 0.07878804206848145s individual

F
current test FAILED -- test_with_and_without_trailing_slash in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 169.2257273197174s cumulative, 0.07731771469116211s individual

F
current test FAILED -- test_int_converter_rejections in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 169.30348110198975s cumulative, 0.07775378227233887s individual

F
current test FAILED -- test_single in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 169.3808193206787s cumulative, 0.07733821868896484s individual

.
current test PASSED/SKIPPED -- test_empty_path_component in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 169.38477849960327s cumulative, 0.003959178924560547s individual

F
current test FAILED -- test_same_level_complex_var in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 170.97738075256348s cumulative, 1.592602252960205s individual

.
current test PASSED/SKIPPED -- test_datetime_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 170.98613595962524s cumulative, 0.008755207061767578s individual

F
current test FAILED -- test_special_chars in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 171.06633234024048s cumulative, 0.08019638061523438s individual

F
current test FAILED -- test_float_converter_non_finite_allowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 171.14490795135498s cumulative, 0.07857561111450195s individual

.
current test PASSED/SKIPPED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 171.1509656906128s cumulative, 0.0060577392578125s individual

.
current test PASSED/SKIPPED -- test_relative_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 171.15469193458557s cumulative, 0.0037262439727783203s individual

.
current test PASSED/SKIPPED -- test_uuid_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 171.1608157157898s cumulative, 0.006123781204223633s individual

.
current test PASSED/SKIPPED -- test_int_converter_rejections in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 171.16607403755188s cumulative, 0.005258321762084961s individual

F
current test FAILED -- test_int_converter_rejections in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 171.24567365646362s cumulative, 0.07959961891174316s individual

.
current test PASSED/SKIPPED -- test_relative_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 171.2498688697815s cumulative, 0.004195213317871094s individual

.
current test PASSED/SKIPPED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 171.2554214000702s cumulative, 0.005552530288696289s individual

F
current test FAILED -- test_float_converter_non_finite_allowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 171.33449935913086s cumulative, 0.07907795906066895s individual

.
current test PASSED/SKIPPED -- test_with_and_without_trailing_slash in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 171.34273052215576s cumulative, 0.008231163024902344s individual

.
current test PASSED/SKIPPED -- test_uuid_converter_complex_segment in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 171.3481101989746s cumulative, 0.005379676818847656s individual

F
current test FAILED -- test_single_path_segment in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 171.4260814189911s cumulative, 0.07797122001647949s individual

.
current test PASSED/SKIPPED -- test_datetime_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 171.43374586105347s cumulative, 0.00766444206237793s individual

.
current test PASSED/SKIPPED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 171.4387559890747s cumulative, 0.005010128021240234s individual

F
current test FAILED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 171.5161337852478s cumulative, 0.0773777961730957s individual

.
current test PASSED/SKIPPED -- test_converter_custom in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 171.52242398262024s cumulative, 0.0062901973724365234s individual

.
current test PASSED/SKIPPED -- test_int_converter_rejections in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 171.52712678909302s cumulative, 0.00470280647277832s individual

.
current test PASSED/SKIPPED -- test_float_converter_non_finite_allowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 171.5315809249878s cumulative, 0.004454135894775391s individual

.
current test PASSED/SKIPPED -- test_adding_suffix_routes in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 171.5381486415863s cumulative, 0.006567716598510742s individual

.
current test PASSED/SKIPPED -- test_relative_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 171.54183077812195s cumulative, 0.0036821365356445312s individual

.
current test PASSED/SKIPPED -- test_single in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 171.54616856575012s cumulative, 0.004337787628173828s individual

.
current test PASSED/SKIPPED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 171.55067420005798s cumulative, 0.004505634307861328s individual

.
current test PASSED/SKIPPED -- test_with_and_without_trailing_slash in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 171.55787014961243s cumulative, 0.007195949554443359s individual

F
current test FAILED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 171.63998222351074s cumulative, 0.08211207389831543s individual

.
current test PASSED/SKIPPED -- test_float_converter_non_finite_allowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 171.645516872406s cumulative, 0.005534648895263672s individual

.
current test PASSED/SKIPPED -- test_empty_path_component in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 171.6492030620575s cumulative, 0.003686189651489258s individual

F
current test FAILED -- test_same_level_complex_var in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 171.7262945175171s cumulative, 0.07709145545959473s individual

.
current test PASSED/SKIPPED -- test_relative_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 171.73047280311584s cumulative, 0.004178285598754883s individual

F
current test FAILED -- test_single in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 171.80824208259583s cumulative, 0.07776927947998047s individual

.
current test PASSED/SKIPPED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 171.81389713287354s cumulative, 0.005655050277709961s individual

F
current test FAILED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 171.88970375061035s cumulative, 0.0758066177368164s individual

.
current test PASSED/SKIPPED -- test_single in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 171.89526391029358s cumulative, 0.005560159683227539s individual

.
current test PASSED/SKIPPED -- test_empty_path_component in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 171.89884328842163s cumulative, 0.003579378128051758s individual

F
current test FAILED -- test_uuid_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 173.4936375617981s cumulative, 1.5947942733764648s individual

F
current test FAILED -- test_int_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 173.57377743721008s cumulative, 0.0801398754119873s individual

F
current test FAILED -- test_int_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 173.65170621871948s cumulative, 0.07792878150939941s individual

.
current test PASSED/SKIPPED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 173.65801644325256s cumulative, 0.006310224533081055s individual

F
current test FAILED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 173.73781657218933s cumulative, 0.07980012893676758s individual

F
current test FAILED -- test_multiple in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 173.81500601768494s cumulative, 0.07718944549560547s individual

.
current test PASSED/SKIPPED -- test_single_path_segment in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 173.82089924812317s cumulative, 0.005893230438232422s individual

F
current test FAILED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 173.89892172813416s cumulative, 0.07802248001098633s individual

.
current test PASSED/SKIPPED -- test_single in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 173.90440607070923s cumulative, 0.005484342575073242s individual

F
current test FAILED -- test_int_converter_rejections in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 173.98170137405396s cumulative, 0.07729530334472656s individual

.
current test PASSED/SKIPPED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 173.98795819282532s cumulative, 0.006256818771362305s individual

.
current test PASSED/SKIPPED -- test_same_level_complex_var in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 173.99355697631836s cumulative, 0.005598783493041992s individual

F
current test FAILED -- test_single in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 174.07053637504578s cumulative, 0.07697939872741699s individual

.
current test PASSED/SKIPPED -- test_multiple in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 174.07591938972473s cumulative, 0.005383014678955078s individual

.
current test PASSED/SKIPPED -- test_special_chars in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 174.08181238174438s cumulative, 0.00589299201965332s individual

.
current test PASSED/SKIPPED -- test_single_trailing_slash in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 174.09007501602173s cumulative, 0.00826263427734375s individual

F
current test FAILED -- test_datetime_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 174.17053246498108s cumulative, 0.08045744895935059s individual

F
current test FAILED -- test_root_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 175.7696304321289s cumulative, 1.5990979671478271s individual

.
current test PASSED/SKIPPED -- test_empty_path_component in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 175.7740592956543s cumulative, 0.004428863525390625s individual

F
current test FAILED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 175.85567235946655s cumulative, 0.08161306381225586s individual

F
current test FAILED -- test_converter_custom in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 175.93350172042847s cumulative, 0.07782936096191406s individual

.
current test PASSED/SKIPPED -- test_relative_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 175.93745589256287s cumulative, 0.003954172134399414s individual

.
current test PASSED/SKIPPED -- test_uuid_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 175.94386911392212s cumulative, 0.00641322135925293s individual

F
current test FAILED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 176.02415442466736s cumulative, 0.08028531074523926s individual

.
current test PASSED/SKIPPED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 176.0299961566925s cumulative, 0.005841732025146484s individual

F
current test FAILED -- test_datetime_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 176.10761380195618s cumulative, 0.07761764526367188s individual

F
current test FAILED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 176.18531560897827s cumulative, 0.07770180702209473s individual

.
current test PASSED/SKIPPED -- test_uuid_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 176.19206738471985s cumulative, 0.0067517757415771484s individual

.
current test PASSED/SKIPPED -- test_same_level_complex_var in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 176.1972095966339s cumulative, 0.0051422119140625s individual

.
current test PASSED/SKIPPED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 176.2017743587494s cumulative, 0.004564762115478516s individual

.
current test PASSED/SKIPPED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 176.2065234184265s cumulative, 0.0047490596771240234s individual

F
current test FAILED -- test_single_trailing_slash in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 176.28470540046692s cumulative, 0.07818198204040527s individual

F
current test FAILED -- test_uuid_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 176.36180567741394s cumulative, 0.07710027694702148s individual

F
current test FAILED -- test_int_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 176.4392294883728s cumulative, 0.0774238109588623s individual

.
current test PASSED/SKIPPED -- test_custom_error_on_suffix_route_not_found in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 176.44338989257812s cumulative, 0.004160404205322266s individual

F
current test FAILED -- test_adding_suffix_routes in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 176.5198357105255s cumulative, 0.0764458179473877s individual

F
current test FAILED -- test_float_converter_non_finite_allowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 176.59598851203918s cumulative, 0.07615280151367188s individual

.
current test PASSED/SKIPPED -- test_datetime_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 176.6038670539856s cumulative, 0.007878541946411133s individual

F
current test FAILED -- test_float_converter_non_finite_disallowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 178.1925129890442s cumulative, 1.5886459350585938s individual

.
current test PASSED/SKIPPED -- test_float_converter_non_finite_disallowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 178.1994297504425s cumulative, 0.00691676139831543s individual

F
current test FAILED -- test_int_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 178.281569480896s cumulative, 0.08213973045349121s individual

F
current test FAILED -- test_uuid_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 178.3605329990387s cumulative, 0.0789635181427002s individual

.
current test PASSED/SKIPPED -- test_uuid_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 178.36743187904358s cumulative, 0.0068988800048828125s individual

F
current test FAILED -- test_converter_custom in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 178.44555926322937s cumulative, 0.07812738418579102s individual

.
current test PASSED/SKIPPED -- test_int_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 178.45141983032227s cumulative, 0.005860567092895508s individual

.
current test PASSED/SKIPPED -- test_float_converter_non_finite_allowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 178.45596265792847s cumulative, 0.004542827606201172s individual

F
current test FAILED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 178.53204798698425s cumulative, 0.07608532905578613s individual

F
current test FAILED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 178.61291551589966s cumulative, 0.08086752891540527s individual

F
current test FAILED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 178.69198274612427s cumulative, 0.07906723022460938s individual

F
current test FAILED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 178.76847648620605s cumulative, 0.07649374008178711s individual

.
current test PASSED/SKIPPED -- test_empty_path_component in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 178.77293348312378s cumulative, 0.004456996917724609s individual

.
current test PASSED/SKIPPED -- test_int_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 178.77806615829468s cumulative, 0.0051326751708984375s individual

F
current test FAILED -- test_uuid_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 178.85563325881958s cumulative, 0.07756710052490234s individual

.
current test PASSED/SKIPPED -- test_datetime_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 178.8623824119568s cumulative, 0.006749153137207031s individual

.
current test PASSED/SKIPPED -- test_empty_path_component in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 178.86596488952637s cumulative, 0.003582477569580078s individual

.
current test PASSED/SKIPPED -- test_int_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 178.87023448944092s cumulative, 0.004269599914550781s individual

.
current test PASSED/SKIPPED -- test_int_converter_rejections in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 178.8754279613495s cumulative, 0.005193471908569336s individual

F
current test FAILED -- test_datetime_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 178.95286989212036s cumulative, 0.07744193077087402s individual

.
current test PASSED/SKIPPED -- test_converter_custom in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 178.9599597454071s cumulative, 0.007089853286743164s individual

.
current test PASSED/SKIPPED -- test_custom_error_on_suffix_route_not_found in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 178.96319317817688s cumulative, 0.0032334327697753906s individual

F
current test FAILED -- test_uuid_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 180.5794768333435s cumulative, 1.616283655166626s individual

.
current test PASSED/SKIPPED -- test_uuid_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 180.58683443069458s cumulative, 0.007357597351074219s individual

.
current test PASSED/SKIPPED -- test_empty_path_component in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 180.59050941467285s cumulative, 0.0036749839782714844s individual

F
current test FAILED -- test_with_and_without_trailing_slash in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 180.67034339904785s cumulative, 0.079833984375s individual

.
current test PASSED/SKIPPED -- test_empty_path_component in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 180.6745023727417s cumulative, 0.004158973693847656s individual


tests/test_httperror.py E
current test FAILED -- test_custom_serializer_no_representation in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 180.76783394813538s cumulative, 0.09333157539367676s individual

.
current test PASSED/SKIPPED -- test_temporary_413_integer_retry_after in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 180.77435755729675s cumulative, 0.006523609161376953s individual

E
current test FAILED -- test_title_default_message_if_none in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 180.8661825656891s cumulative, 0.09182500839233398s individual

.
current test PASSED/SKIPPED -- test_404_with_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 180.87220358848572s cumulative, 0.006021022796630859s individual

.
current test PASSED/SKIPPED -- test_405_with_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 180.87678742408752s cumulative, 0.004583835601806641s individual

E
current test FAILED -- test_forbidden in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 180.9673569202423s cumulative, 0.09056949615478516s individual

.
current test PASSED/SKIPPED -- test_413 in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 180.9734170436859s cumulative, 0.006060123443603516s individual

.
current test PASSED/SKIPPED -- test_404_without_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 180.97792220115662s cumulative, 0.004505157470703125s individual

.
current test PASSED/SKIPPED -- test_503_datetime_retry_after in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 180.9826855659485s cumulative, 0.004763364791870117s individual

.
current test PASSED/SKIPPED -- test_custom_error_serializer in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 180.99032473564148s cumulative, 0.007639169692993164s individual

.
current test PASSED/SKIPPED -- test_503_integer_retry_after in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 180.99476718902588s cumulative, 0.004442453384399414s individual

.
current test PASSED/SKIPPED -- test_client_does_not_accept_json_or_xml in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 180.99890899658203s cumulative, 0.004141807556152344s individual

E
current test FAILED -- test_missing_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 181.09313368797302s cumulative, 0.09422469139099121s individual

.
current test PASSED/SKIPPED -- test_title_default_message_if_none in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 181.09936094284058s cumulative, 0.006227254867553711s individual

.
current test PASSED/SKIPPED -- test_invalid_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 181.10394549369812s cumulative, 0.004584550857543945s individual

E
current test FAILED -- test_429 in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 181.19800925254822s cumulative, 0.09406375885009766s individual

.
current test PASSED/SKIPPED -- test_414_with_custom_kwargs in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 181.2080910205841s cumulative, 0.010081768035888672s individual

E
current test FAILED -- test_epic_fail_xml in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 181.29946398735046s cumulative, 0.09137296676635742s individual

E
current test FAILED -- test_416 in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 181.3894374370575s cumulative, 0.08997344970703125s individual

E
current test FAILED -- test_503_integer_retry_after in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 183.01202201843262s cumulative, 1.622584581375122s individual

.
current test PASSED/SKIPPED -- test_epic_fail_xml in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 183.01918053627014s cumulative, 0.007158517837524414s individual

.
current test PASSED/SKIPPED -- test_epic_fail_xml in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 183.02382683753967s cumulative, 0.00464630126953125s individual

E
current test FAILED -- test_503_datetime_retry_after in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 183.12337827682495s cumulative, 0.09955143928527832s individual

.
current test PASSED/SKIPPED -- test_custom_error_serializer_optional_representation in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 183.13021731376648s cumulative, 0.00683903694152832s individual

E
current test FAILED -- test_title_default_message_if_none in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 183.22479057312012s cumulative, 0.0945732593536377s individual

E
current test FAILED -- test_custom_error_serializer in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 183.315007686615s cumulative, 0.09021711349487305s individual

.
current test PASSED/SKIPPED -- test_forbidden in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 183.32140636444092s cumulative, 0.006398677825927734s individual

E
current test FAILED -- test_405_with_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 183.41604733467102s cumulative, 0.09464097023010254s individual

.
current test PASSED/SKIPPED -- test_epic_fail_xml in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 183.42299962043762s cumulative, 0.0069522857666015625s individual

.
current test PASSED/SKIPPED -- test_414_with_title in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 183.42771744728088s cumulative, 0.004717826843261719s individual

.
current test PASSED/SKIPPED -- test_401 in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 183.43301796913147s cumulative, 0.0053005218505859375s individual

E
current test FAILED -- test_unicode_json in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 183.52346849441528s cumulative, 0.09045052528381348s individual

.
current test PASSED/SKIPPED -- test_custom_serializer_no_representation in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 183.52944350242615s cumulative, 0.005975008010864258s individual

.
current test PASSED/SKIPPED -- test_title_default_message_if_none in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 183.53415155410767s cumulative, 0.004708051681518555s individual

E
current test FAILED -- test_414_with_custom_kwargs in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 183.62439727783203s cumulative, 0.09024572372436523s individual

.
current test PASSED/SKIPPED -- test_title_default_message_if_none in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 183.63055682182312s cumulative, 0.006159543991088867s individual

E
current test FAILED -- test_429_no_retry_after in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 183.72014784812927s cumulative, 0.08959102630615234s individual

E
current test FAILED -- test_401 in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 185.3431830406189s cumulative, 1.623035192489624s individual

E
current test FAILED -- test_no_description_xml in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 185.43614625930786s cumulative, 0.09296321868896484s individual

.
current test PASSED/SKIPPED -- test_missing_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 185.44276809692383s cumulative, 0.006621837615966797s individual

E
current test FAILED -- test_base_class in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 185.53412652015686s cumulative, 0.09135842323303223s individual

E
current test FAILED -- test_410_with_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 185.62226390838623s cumulative, 0.08813738822937012s individual

.
current test PASSED/SKIPPED -- test_title_default_message_if_none in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 185.62850880622864s cumulative, 0.0062448978424072266s individual

.
current test PASSED/SKIPPED -- test_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 185.63111758232117s cumulative, 0.002608776092529297s individual

E
current test FAILED -- test_custom_error_serializer_optional_representation in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 185.72090864181519s cumulative, 0.08979105949401855s individual

E
current test FAILED -- test_temporary_413_integer_retry_after in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 185.81236004829407s cumulative, 0.09145140647888184s individual

E
current test FAILED -- test_epic_fail_xml in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 185.90160751342773s cumulative, 0.08924746513366699s individual

E
current test FAILED -- test_414_with_description in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 185.9925982952118s cumulative, 0.09099078178405762s individual

.
current test PASSED/SKIPPED -- test_no_description_xml in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 185.99891543388367s cumulative, 0.006317138671875s individual

.
current test PASSED/SKIPPED -- test_411 in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 186.0034008026123s cumulative, 0.004485368728637695s individual

E
current test FAILED -- test_forbidden in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 187.65382862091064s cumulative, 1.6504278182983398s individual

E
current test FAILED -- test_custom_error_serializer_optional_representation in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 187.74650359153748s cumulative, 0.09267497062683105s individual

.
current test PASSED/SKIPPED -- test_414_with_description in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 187.75341773033142s cumulative, 0.0069141387939453125s individual

E
current test FAILED -- test_custom_error_serializer_optional_representation in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 187.84470987319946s cumulative, 0.09129214286804199s individual

.
current test PASSED/SKIPPED -- test_405_without_body_with_extra_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 187.85066437721252s cumulative, 0.0059545040130615234s individual

.
current test PASSED/SKIPPED -- test_unicode_json in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 187.85532426834106s cumulative, 0.004659891128540039s individual

E
current test FAILED -- test_invalid_param in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 187.946941614151s cumulative, 0.09161734580993652s individual

.
current test PASSED/SKIPPED -- test_410_without_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 187.95327353477478s cumulative, 0.006331920623779297s individual

.
current test PASSED/SKIPPED -- test_forbidden in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 187.95811462402344s cumulative, 0.0048410892486572266s individual

.
current test PASSED/SKIPPED -- test_forbidden in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 187.96252393722534s cumulative, 0.004409313201904297s individual

.
current test PASSED/SKIPPED -- test_epic_fail_xml in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 187.96792936325073s cumulative, 0.005405426025390625s individual

.
current test PASSED/SKIPPED -- test_missing_param in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 187.97236108779907s cumulative, 0.004431724548339844s individual

E
current test FAILED -- test_405_without_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 188.06477451324463s cumulative, 0.09241342544555664s individual

E
current test FAILED -- test_epic_fail_json in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 188.15374326705933s cumulative, 0.08896875381469727s individual

E
current test FAILED -- test_413 in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 188.24383282661438s cumulative, 0.09008955955505371s individual

E
current test FAILED -- test_unicode_xml in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 188.33205389976501s cumulative, 0.08822107315063477s individual

.
current test PASSED/SKIPPED -- test_405_without_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 188.33852076530457s cumulative, 0.006466865539550781s individual

.
current test PASSED/SKIPPED -- test_410_with_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 188.34296369552612s cumulative, 0.004442930221557617s individual

E
current test FAILED -- test_custom_error_serializer_optional_representation in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 189.99432849884033s cumulative, 1.651364803314209s individual

E
current test FAILED -- test_missing_param in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 190.08874559402466s cumulative, 0.09441709518432617s individual

E
current test FAILED -- test_414_with_title in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 190.1791434288025s cumulative, 0.09039783477783203s individual

E
current test FAILED -- test_misc in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 190.26893711090088s cumulative, 0.08979368209838867s individual

.
current test PASSED/SKIPPED -- test_414 in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 190.27617716789246s cumulative, 0.0072400569915771484s individual

.
current test PASSED/SKIPPED -- test_misc in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 190.28745579719543s cumulative, 0.011278629302978516s individual

.
current test PASSED/SKIPPED -- test_title_default_message_if_none in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 190.29202365875244s cumulative, 0.004567861557006836s individual

E
current test FAILED -- test_410_without_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 190.38328671455383s cumulative, 0.0912630558013916s individual

E
current test FAILED -- test_no_description_json in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 190.48079538345337s cumulative, 0.09750866889953613s individual

E
current test FAILED -- test_title_default_message_if_none in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 190.5706992149353s cumulative, 0.0899038314819336s individual

E
current test FAILED -- test_title_default_message_if_none in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 190.65889620780945s cumulative, 0.08819699287414551s individual

.
current test PASSED/SKIPPED -- test_no_description_json in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 190.66510200500488s cumulative, 0.00620579719543457s individual

E
current test FAILED -- test_epic_fail_xml in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 190.75518417358398s cumulative, 0.09008216857910156s individual

.
current test PASSED/SKIPPED -- test_429_no_retry_after in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 190.76123595237732s cumulative, 0.006051778793334961s individual

.
current test PASSED/SKIPPED -- test_MediaMalformedError in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 190.7637279033661s cumulative, 0.0024919509887695312s individual

E
current test FAILED -- test_429_datetime in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 192.40115427970886s cumulative, 1.6374263763427734s individual

.
current test PASSED/SKIPPED -- test_custom_error_serializer_optional_representation in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 192.4090383052826s cumulative, 0.007884025573730469s individual

E
current test FAILED -- test_404_without_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 192.50169014930725s cumulative, 0.0926518440246582s individual

.
current test PASSED/SKIPPED -- test_429_datetime in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 192.50821042060852s cumulative, 0.006520271301269531s individual

.
current test PASSED/SKIPPED -- test_title_default_message_if_none in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 192.51303625106812s cumulative, 0.0048258304595947266s individual

E
current test FAILED -- test_client_does_not_accept_json_or_xml in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 192.60548377037048s cumulative, 0.09244751930236816s individual

E
current test FAILED -- test_client_does_not_accept_anything in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 192.69672846794128s cumulative, 0.09124469757080078s individual

E
current test FAILED -- test_serialize_no_json_media_handler in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 192.78656363487244s cumulative, 0.08983516693115234s individual

.
current test PASSED/SKIPPED -- test_base_class in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 192.79332447052002s cumulative, 0.006760835647583008s individual

E
current test FAILED -- test_epic_fail_xml in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 192.88544988632202s cumulative, 0.09212541580200195s individual

E
current test FAILED -- test_414 in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 192.9766755104065s cumulative, 0.09122562408447266s individual

E
current test FAILED -- test_invalid_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 193.06980228424072s cumulative, 0.09312677383422852s individual

.
current test PASSED/SKIPPED -- test_429 in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 193.07722210884094s cumulative, 0.0074198246002197266s individual

.
current test PASSED/SKIPPED -- test_epic_fail_json in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 193.08165454864502s cumulative, 0.0044324398040771484s individual

.
current test PASSED/SKIPPED -- test_client_does_not_accept_anything in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 193.08579015731812s cumulative, 0.004135608673095703s individual

E
current test FAILED -- test_forbidden in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 194.76202058792114s cumulative, 1.6762304306030273s individual

E
current test FAILED -- test_411 in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 194.85461688041687s cumulative, 0.09259629249572754s individual

.
current test PASSED/SKIPPED -- test_405_without_body_with_extra_headers_double_check in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 194.86129713058472s cumulative, 0.00668025016784668s individual

.
current test PASSED/SKIPPED -- test_temporary_413_datetime_retry_after in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 194.8662703037262s cumulative, 0.004973173141479492s individual

.
current test PASSED/SKIPPED -- test_416 in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 194.87215638160706s cumulative, 0.005886077880859375s individual

E
current test FAILED -- test_405_without_body_with_extra_headers_double_check in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 194.96453666687012s cumulative, 0.09238028526306152s individual

E
current test FAILED -- test_title_default_message_if_none in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 195.0547513961792s cumulative, 0.09021472930908203s individual

.
current test PASSED/SKIPPED -- test_invalid_param in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 195.06102681159973s cumulative, 0.0062754154205322266s individual

.
current test PASSED/SKIPPED -- test_serialize_no_json_media_handler in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 195.06612944602966s cumulative, 0.005102634429931641s individual

.
current test PASSED/SKIPPED -- test_serialize_error_uses_media_handler in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 195.07063364982605s cumulative, 0.004504203796386719s individual

.
current test PASSED/SKIPPED -- test_unicode_xml in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 195.07564854621887s cumulative, 0.005014896392822266s individual

E
current test FAILED -- test_serialize_error_uses_media_handler in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 195.1670639514923s cumulative, 0.0914154052734375s individual

E
current test FAILED -- test_404_with_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 195.25845384597778s cumulative, 0.09138989448547363s individual

.
current test PASSED/SKIPPED -- test_custom_error_serializer_optional_representation in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 195.265070438385s cumulative, 0.0066165924072265625s individual

.
current test PASSED/SKIPPED -- test_custom_error_serializer_optional_representation in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 195.2702293395996s cumulative, 0.005158901214599609s individual

E
current test FAILED -- test_title_default_message_if_none in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 195.36331486701965s cumulative, 0.09308552742004395s individual

E
current test FAILED -- test_temporary_413_datetime_retry_after in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 195.45302867889404s cumulative, 0.08971381187438965s individual

E
current test FAILED -- test_405_without_body_with_extra_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 197.09906268119812s cumulative, 1.6460340023040771s individual

.
current test PASSED/SKIPPED -- test_to_json_dumps in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 197.10186791419983s cumulative, 0.0028052330017089844s individual


tests/asgi/test_buffered_reader.py .
current test PASSED/SKIPPED -- test_small_reads in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 197.29513669013977s cumulative, 0.1932687759399414s individual


tests/asgi/test_asgi_servers.py INFO:     127.0.0.1:52022 - "GET / HTTP/1.1" 200 OK
INFO:     127.0.0.1:52034 - "POST /forms HTTP/1.1" 200 OK

[Starting server process...]
.
[Sending SIGTERM to server process...]

current test PASSED/SKIPPED -- test_post_multipart_form in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 198.61642289161682s cumulative, 1.3212862014770508s individual



==================================== ERRORS ====================================
_______________________ ERROR at setup of test_foo[asgi] _______________________

asgi = True
request = <SubRequest 'custom_http_client' for <Function test_foo[asgi]>>
cleanup_constants = None
resource_things = <test_http_custom_method_routing.ThingsResource object at 0x7f942b28dae0>

    @pytest.fixture
    def custom_http_client(asgi, request, cleanup_constants, resource_things):
        falcon.constants.COMBINED_METHODS += FALCON_CUSTOM_HTTP_METHODS
    
        app = create_app(asgi)
>       app.add_route('/things', resource_things)

tests/test_http_custom_method_routing.py:41: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f95697ea490>
method_map = {'BAR': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a9cb400>, 'CHECKIN':...0>, 'CONNECT': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a9cb400>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method ThingsResource.on_foo of <test_http_custom_method_routing.ThingsResource object at 0x7f942b28dae0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_______________________ ERROR at setup of test_bar[asgi] _______________________

asgi = True
request = <SubRequest 'custom_http_client' for <Function test_bar[asgi]>>
cleanup_constants = None
resource_things = <test_http_custom_method_routing.ThingsResource object at 0x7f95694de320>

    @pytest.fixture
    def custom_http_client(asgi, request, cleanup_constants, resource_things):
        falcon.constants.COMBINED_METHODS += FALCON_CUSTOM_HTTP_METHODS
    
        app = create_app(asgi)
>       app.add_route('/things', resource_things)

tests/test_http_custom_method_routing.py:41: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f9569640d60>
method_map = {'BAR': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f952db2ff40>, 'CHECKIN':...0>, 'CONNECT': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f952db2ff40>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method ThingsResource.on_foo of <test_http_custom_method_routing.ThingsResource object at 0x7f95694de320>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
________________ ERROR at setup of test_map_http_methods[asgi] _________________

asgi = True
request = <SubRequest 'custom_http_client' for <Function test_map_http_methods[asgi]>>
cleanup_constants = None
resource_things = <test_http_custom_method_routing.ThingsResource object at 0x7f942afec4c0>

    @pytest.fixture
    def custom_http_client(asgi, request, cleanup_constants, resource_things):
        falcon.constants.COMBINED_METHODS += FALCON_CUSTOM_HTTP_METHODS
    
        app = create_app(asgi)
>       app.add_route('/things', resource_things)

tests/test_http_custom_method_routing.py:41: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f9569640f90>
method_map = {'BAR': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f94164dd990>, 'CHECKIN':...0>, 'CONNECT': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f94164dd990>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method ThingsResource.on_foo of <test_http_custom_method_routing.ThingsResource object at 0x7f942afec4c0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ ERROR at setup of TestRedirects.test_redirect[asgi-GET-301 Moved Permanently-/moved/perm] _

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
    
        resource = RedirectingResource()
>       app.add_route('/', resource)

tests/test_redirects.py:14: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f956984f3e0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92f6d0>, 'CHECK...f6d0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92f6d0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method RedirectingResource.on_delete of <test_redirects.RedirectingResource object at 0x7f95695c8b20>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
__ ERROR at setup of TestRedirects.test_redirect[asgi-POST-302 Found-/found] ___

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
    
        resource = RedirectingResource()
>       app.add_route('/', resource)

tests/test_redirects.py:14: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f956a908350>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92f2e0>, 'CHECK...f2e0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92f2e0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method RedirectingResource.on_delete of <test_redirects.RedirectingResource object at 0x7f95696365c0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ ERROR at setup of TestRedirects.test_redirect[asgi-DELETE-307 Temporary Redirect-/tmp/redirect] _

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
    
        resource = RedirectingResource()
>       app.add_route('/', resource)

tests/test_redirects.py:14: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f956a964ac0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92ec20>, 'CHECK...ec20>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92ec20>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method RedirectingResource.on_delete of <test_redirects.RedirectingResource object at 0x7f95695c8c70>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ ERROR at setup of TestRedirects.test_redirect_with_headers[asgi-HEAD-308 Permanent Redirect-/perm/redirect] _

asgi = True

    @pytest.fixture
    def client_exercising_headers(asgi):
        app = create_app(asgi)
    
        resource = RedirectingResourceWithHeaders()
>       app.add_route('/', resource)

tests/test_redirects.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f9569612340>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569705fc0>, 'CHECK...5fc0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569705fc0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method RedirectingResourceWithHeaders.on_delete of <test_redirects.RedirectingResourceWithHeaders object at 0x7f9569869f30>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ ERROR at setup of TestRedirects.test_redirect[asgi-PUT-303 See Other-/see/other] _

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
    
        resource = RedirectingResource()
>       app.add_route('/', resource)

tests/test_redirects.py:14: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f95696103c0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92f0a0>, 'CHECK...f0a0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92f0a0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method RedirectingResource.on_delete of <test_redirects.RedirectingResource object at 0x7f95695c8790>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ ERROR at setup of TestRedirects.test_redirect_with_headers[asgi-POST-302 Found-/found] _

asgi = True

    @pytest.fixture
    def client_exercising_headers(asgi):
        app = create_app(asgi)
    
        resource = RedirectingResourceWithHeaders()
>       app.add_route('/', resource)

tests/test_redirects.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f95696123b0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92cdc0>, 'CHECK...cdc0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92cdc0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method RedirectingResourceWithHeaders.on_delete of <test_redirects.RedirectingResourceWithHeaders object at 0x7f9569869ff0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ ERROR at setup of TestRedirects.test_redirect_with_headers[asgi-GET-301 Moved Permanently-/moved/perm] _

asgi = True

    @pytest.fixture
    def client_exercising_headers(asgi):
        app = create_app(asgi)
    
        resource = RedirectingResourceWithHeaders()
>       app.add_route('/', resource)

tests/test_redirects.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f9569612e30>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a956560>, 'CHECK...6560>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a956560>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method RedirectingResourceWithHeaders.on_delete of <test_redirects.RedirectingResourceWithHeaders object at 0x7f9569457790>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ ERROR at setup of TestRedirects.test_redirect[asgi-HEAD-308 Permanent Redirect-/perm/redirect] _

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
    
        resource = RedirectingResource()
>       app.add_route('/', resource)

tests/test_redirects.py:14: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f9569613ca0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a954310>, 'CHECK...4310>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a954310>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method RedirectingResource.on_delete of <test_redirects.RedirectingResource object at 0x7f956986b280>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ ERROR at setup of TestRedirects.test_redirect_with_headers[asgi-PUT-303 See Other-/see/other] _

asgi = True

    @pytest.fixture
    def client_exercising_headers(asgi):
        app = create_app(asgi)
    
        resource = RedirectingResourceWithHeaders()
>       app.add_route('/', resource)

tests/test_redirects.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f9569611310>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a955870>, 'CHECK...5870>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a955870>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method RedirectingResourceWithHeaders.on_delete of <test_redirects.RedirectingResourceWithHeaders object at 0x7f941543e350>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ ERROR at setup of TestRedirects.test_redirect_with_headers[asgi-DELETE-307 Temporary Redirect-/tmp/redirect] _

asgi = True

    @pytest.fixture
    def client_exercising_headers(asgi):
        app = create_app(asgi)
    
        resource = RedirectingResourceWithHeaders()
>       app.add_route('/', resource)

tests/test_redirects.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f956a90ba00>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92c0d0>, 'CHECK...c0d0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92c0d0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method RedirectingResourceWithHeaders.on_delete of <test_redirects.RedirectingResourceWithHeaders object at 0x7f9569869c00>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_____________ ERROR at setup of test_same_site_empty_string[asgi] ______________

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
>       app.add_route('/', CookieResource())

tests/test_cookies.py:103: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f9569281fc0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b05e0>, 'CHECK...05e0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b05e0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method CookieResource.on_get of <test_cookies.CookieResource object at 0x7f956941e920>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_______________ ERROR at setup of test_lax_same_site_value[asgi] _______________

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
>       app.add_route('/', CookieResource())

tests/test_cookies.py:103: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f95692692a0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f941579e8c0>, 'CHECK...e8c0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f941579e8c0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method CookieResource.on_get of <test_cookies.CookieResource object at 0x7f9569230fa0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
__________________ ERROR at setup of test_unset_cookies[asgi] __________________

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
>       app.add_route('/', CookieResource())

tests/test_cookies.py:103: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f956926b290>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692227a0>, 'CHECK...27a0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692227a0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method CookieResource.on_get of <test_cookies.CookieResource object at 0x7f95696c0040>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_________________ ERROR at setup of test_cookies_setable[asgi] _________________

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
>       app.add_route('/', CookieResource())

tests/test_cookies.py:103: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f956926bdf0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569223910>, 'CHECK...3910>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569223910>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method CookieResource.on_get of <test_cookies.CookieResource object at 0x7f956a92b7c0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_________________ ERROR at setup of test_cookie_timezone[asgi] _________________

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
>       app.add_route('/', CookieResource())

tests/test_cookies.py:103: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f956926a3b0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b3880>, 'CHECK...3880>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b3880>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method CookieResource.on_get of <test_cookies.CookieResource object at 0x7f941543d900>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
____ ERROR at setup of test_cookie_max_age_float_and_string[asgi-foostring] ____

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
>       app.add_route('/', CookieResource())

tests/test_cookies.py:103: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f94645bc580>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f941579eef0>, 'CHECK...eef0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f941579eef0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method CookieResource.on_get of <test_cookies.CookieResource object at 0x7f95696a1360>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
________ ERROR at setup of test_response_disable_secure_globally[asgi] _________

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
>       app.add_route('/', CookieResource())

tests/test_cookies.py:103: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f94645bdaf0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95697060e0>, 'CHECK...60e0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95697060e0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method CookieResource.on_get of <test_cookies.CookieResource object at 0x7f9569517490>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
______________ ERROR at setup of test_cookie_expires_aware[asgi] _______________

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
>       app.add_route('/', CookieResource())

tests/test_cookies.py:103: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f94645bea40>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569704ee0>, 'CHECK...4ee0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569704ee0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method CookieResource.on_get of <test_cookies.CookieResource object at 0x7f946457b460>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
______________ ERROR at setup of test_response_complex_case[asgi] ______________

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
>       app.add_route('/', CookieResource())

tests/test_cookies.py:103: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f94645bf920>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b2560>, 'CHECK...2560>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b2560>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method CookieResource.on_get of <test_cookies.CookieResource object at 0x7f956a99f970>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
______________ ERROR at setup of test_none_same_site_value[asgi] _______________

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
>       app.add_route('/', CookieResource())

tests/test_cookies.py:103: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f94645bd3f0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b13f0>, 'CHECK...13f0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b13f0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method CookieResource.on_get of <test_cookies.CookieResource object at 0x7f956980a470>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
______________ ERROR at setup of test_cookie_expires_naive[asgi] _______________

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
>       app.add_route('/', CookieResource())

tests/test_cookies.py:103: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f94645be490>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b2950>, 'CHECK...2950>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b2950>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method CookieResource.on_get of <test_cookies.CookieResource object at 0x7f9415508040>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_____________ ERROR at setup of test_unset_cookies_samesite[asgi] ______________

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
>       app.add_route('/', CookieResource())

tests/test_cookies.py:103: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f956926a180>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b1bd0>, 'CHECK...1bd0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b1bd0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method CookieResource.on_get of <test_cookies.CookieResource object at 0x7f956941c6a0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_____________ ERROR at setup of test_strict_same_site_value[asgi] ______________

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
>       app.add_route('/', CookieResource())

tests/test_cookies.py:103: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f9569610660>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b0ee0>, 'CHECK...0ee0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b0ee0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method CookieResource.on_get of <test_cookies.CookieResource object at 0x7f9569323d90>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_______________ ERROR at setup of test_response_base_case[asgi] ________________

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
>       app.add_route('/', CookieResource())

tests/test_cookies.py:103: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f9569640e40>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b20e0>, 'CHECK...20e0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b20e0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method CookieResource.on_get of <test_cookies.CookieResource object at 0x7f9569516320>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
______________ ERROR at setup of test_response_unset_cookie[asgi] ______________

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
>       app.add_route('/', CookieResource())

tests/test_cookies.py:103: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f956926a9d0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b1000>, 'CHECK...1000>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b1000>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method CookieResource.on_get of <test_cookies.CookieResource object at 0x7f94645955d0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
____ ERROR at setup of test_cookie_max_age_float_and_string[asgi-foofloat] _____

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
>       app.add_route('/', CookieResource())

tests/test_cookies.py:103: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f9569280e40>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b03a0>, 'CHECK...03a0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b03a0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method CookieResource.on_get of <test_cookies.CookieResource object at 0x7f9417b8e9e0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ ERROR at setup of TestHTTPError.test_custom_serializer_no_representation[asgi] _

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
    
        resource = FaultyResource()
>       app.add_route('/fail', resource)

tests/test_httperror.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f94150ceff0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95696adb40>, 'CHECK...db40>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95696adb40>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method FaultyResource.on_get of <test_httperror.FaultyResource object at 0x7f942a841300>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ ERROR at setup of TestHTTPError.test_title_default_message_if_none[asgi-503 Service Unavailable-str] _

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
    
        resource = FaultyResource()
>       app.add_route('/fail', resource)

tests/test_httperror.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f95692a77d0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b15a0>, 'CHECK...15a0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b15a0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method FaultyResource.on_get of <test_httperror.FaultyResource object at 0x7f9569305960>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ ERROR at setup of TestHTTPError.test_forbidden[asgi-application/vnd.company.system.project.resource+json;v=1.1] _

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
    
        resource = FaultyResource()
>       app.add_route('/fail', resource)

tests/test_httperror.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f95692a6490>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b0700>, 'CHECK...0700>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b0700>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method FaultyResource.on_get of <test_httperror.FaultyResource object at 0x7f95695ca950>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
__________ ERROR at setup of TestHTTPError.test_missing_header[asgi] ___________

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
    
        resource = FaultyResource()
>       app.add_route('/fail', resource)

tests/test_httperror.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f94150f9af0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b00d0>, 'CHECK...00d0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b00d0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method FaultyResource.on_get of <test_httperror.FaultyResource object at 0x7f9415609ea0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
________________ ERROR at setup of TestHTTPError.test_429[asgi] ________________

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
    
        resource = FaultyResource()
>       app.add_route('/fail', resource)

tests/test_httperror.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f94150f9e70>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569221d80>, 'CHECK...1d80>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569221d80>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method FaultyResource.on_get of <test_httperror.FaultyResource object at 0x7f941543fe20>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ ERROR at setup of TestHTTPError.test_epic_fail_xml[asgi-application/vnd.company.system.project.resource+xml;v=1.1] _

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
    
        resource = FaultyResource()
>       app.add_route('/fail', resource)

tests/test_httperror.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f94150fa2d0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569222e60>, 'CHECK...2e60>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569222e60>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method FaultyResource.on_get of <test_httperror.FaultyResource object at 0x7f956a9b7670>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
________________ ERROR at setup of TestHTTPError.test_416[asgi] ________________

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
    
        resource = FaultyResource()
>       app.add_route('/fail', resource)

tests/test_httperror.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f94150fa110>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b3880>, 'CHECK...3880>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b3880>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method FaultyResource.on_get of <test_httperror.FaultyResource object at 0x7f9569514070>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
______ ERROR at setup of TestHTTPError.test_503_integer_retry_after[asgi] ______

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
    
        resource = FaultyResource()
>       app.add_route('/fail', resource)

tests/test_httperror.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f94150f9310>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569223eb0>, 'CHECK...3eb0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569223eb0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method FaultyResource.on_get of <test_httperror.FaultyResource object at 0x7f95694dc1c0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_____ ERROR at setup of TestHTTPError.test_503_datetime_retry_after[asgi] ______

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
    
        resource = FaultyResource()
>       app.add_route('/fail', resource)

tests/test_httperror.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f94150fa810>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b0160>, 'CHECK...0160>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b0160>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method FaultyResource.on_get of <test_httperror.FaultyResource object at 0x7f95696a3cd0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ ERROR at setup of TestHTTPError.test_title_default_message_if_none[asgi-503-str] _

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
    
        resource = FaultyResource()
>       app.add_route('/fail', resource)

tests/test_httperror.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f941507ece0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b1000>, 'CHECK...1000>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b1000>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method FaultyResource.on_get of <test_httperror.FaultyResource object at 0x7f9569844280>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
______ ERROR at setup of TestHTTPError.test_custom_error_serializer[asgi] ______

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
    
        resource = FaultyResource()
>       app.add_route('/fail', resource)

tests/test_httperror.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f94150cccf0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b2710>, 'CHECK...2710>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b2710>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method FaultyResource.on_get of <test_httperror.FaultyResource object at 0x7f94645973a0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
___________ ERROR at setup of TestHTTPError.test_405_with_body[asgi] ___________

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
    
        resource = FaultyResource()
>       app.add_route('/fail', resource)

tests/test_httperror.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f94150d38b0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b3b50>, 'CHECK...3b50>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b3b50>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method FaultyResource.on_get of <test_httperror.FaultyResource object at 0x7f95694552d0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
___________ ERROR at setup of TestHTTPError.test_unicode_json[asgi] ____________

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
    
        resource = FaultyResource()
>       app.add_route('/fail', resource)

tests/test_httperror.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f94150f9070>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569220f70>, 'CHECK...0f70>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569220f70>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method FaultyResource.on_get of <test_httperror.FaultyResource object at 0x7f946455e800>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
______ ERROR at setup of TestHTTPError.test_414_with_custom_kwargs[asgi] _______

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
    
        resource = FaultyResource()
>       app.add_route('/fail', resource)

tests/test_httperror.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f94150fb4c0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569221090>, 'CHECK...1090>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569221090>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method FaultyResource.on_get of <test_httperror.FaultyResource object at 0x7f956989d240>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
________ ERROR at setup of TestHTTPError.test_429_no_retry_after[asgi] _________

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
    
        resource = FaultyResource()
>       app.add_route('/fail', resource)

tests/test_httperror.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f94150fbed0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569223760>, 'CHECK...3760>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569223760>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method FaultyResource.on_get of <test_httperror.FaultyResource object at 0x7f941543d300>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
________________ ERROR at setup of TestHTTPError.test_401[asgi] ________________

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
    
        resource = FaultyResource()
>       app.add_route('/fail', resource)

tests/test_httperror.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f94150fab20>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569223a30>, 'CHECK...3a30>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569223a30>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method FaultyResource.on_get of <test_httperror.FaultyResource object at 0x7f95696370d0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
________ ERROR at setup of TestHTTPError.test_no_description_xml[asgi] _________

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
    
        resource = FaultyResource()
>       app.add_route('/fail', resource)

tests/test_httperror.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f94645a0430>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b1480>, 'CHECK...1480>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b1480>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method FaultyResource.on_get of <test_httperror.FaultyResource object at 0x7f956935ebc0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
____________ ERROR at setup of TestHTTPError.test_base_class[asgi] _____________

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
    
        resource = FaultyResource()
>       app.add_route('/fail', resource)

tests/test_httperror.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f94645a0900>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92fd00>, 'CHECK...fd00>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92fd00>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method FaultyResource.on_get of <test_httperror.FaultyResource object at 0x7f956977e800>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
___________ ERROR at setup of TestHTTPError.test_410_with_body[asgi] ___________

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
    
        resource = FaultyResource()
>       app.add_route('/fail', resource)

tests/test_httperror.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f94150cf4c0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b2710>, 'CHECK...2710>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b2710>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method FaultyResource.on_get of <test_httperror.FaultyResource object at 0x7f95694dcc70>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ ERROR at setup of TestHTTPError.test_custom_error_serializer_optional_representation[asgi-GET-/notfound-404] _

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
    
        resource = FaultyResource()
>       app.add_route('/fail', resource)

tests/test_httperror.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f95692a7b50>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692239a0>, 'CHECK...39a0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692239a0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method FaultyResource.on_get of <test_httperror.FaultyResource object at 0x7f956958ab90>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ ERROR at setup of TestHTTPError.test_temporary_413_integer_retry_after[asgi] _

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
    
        resource = FaultyResource()
>       app.add_route('/fail', resource)

tests/test_httperror.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f94150fb920>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569220e50>, 'CHECK...0e50>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569220e50>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method FaultyResource.on_get of <test_httperror.FaultyResource object at 0x7f9569321ff0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
______ ERROR at setup of TestHTTPError.test_epic_fail_xml[asgi-text/xml] _______

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
    
        resource = FaultyResource()
>       app.add_route('/fail', resource)

tests/test_httperror.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f94150fa490>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569220820>, 'CHECK...0820>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569220820>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method FaultyResource.on_get of <test_httperror.FaultyResource object at 0x7f95697bbee0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_______ ERROR at setup of TestHTTPError.test_414_with_description[asgi] ________

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
    
        resource = FaultyResource()
>       app.add_route('/fail', resource)

tests/test_httperror.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f94150fa260>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569220700>, 'CHECK...0700>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569220700>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method FaultyResource.on_get of <test_httperror.FaultyResource object at 0x7f95695c9ab0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ ERROR at setup of TestHTTPError.test_forbidden[asgi-application/json-patch+json] _

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
    
        resource = FaultyResource()
>       app.add_route('/fail', resource)

tests/test_httperror.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f94645a02e0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692660e0>, 'CHECK...60e0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692660e0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method FaultyResource.on_get of <test_httperror.FaultyResource object at 0x7f946453be20>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ ERROR at setup of TestHTTPError.test_custom_error_serializer_optional_representation[asgi-GET-/404-404] _

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
    
        resource = FaultyResource()
>       app.add_route('/fail', resource)

tests/test_httperror.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f94150cc6d0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569222830>, 'CHECK...2830>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569222830>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method FaultyResource.on_get of <test_httperror.FaultyResource object at 0x7f9569821870>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ ERROR at setup of TestHTTPError.test_custom_error_serializer_optional_representation[asgi-BREW-/notfound-400] _

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
    
        resource = FaultyResource()
>       app.add_route('/fail', resource)

tests/test_httperror.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f94645a37d0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569222d40>, 'CHECK...2d40>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569222d40>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method FaultyResource.on_get of <test_httperror.FaultyResource object at 0x7f956a928310>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
___________ ERROR at setup of TestHTTPError.test_invalid_param[asgi] ___________

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
    
        resource = FaultyResource()
>       app.add_route('/fail', resource)

tests/test_httperror.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f94150faf10>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b3be0>, 'CHECK...3be0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b3be0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method FaultyResource.on_get of <test_httperror.FaultyResource object at 0x7f95696c39a0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_________ ERROR at setup of TestHTTPError.test_405_without_body[asgi] __________

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
    
        resource = FaultyResource()
>       app.add_route('/fail', resource)

tests/test_httperror.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f94645a3a70>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b2710>, 'CHECK...2710>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b2710>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method FaultyResource.on_get of <test_httperror.FaultyResource object at 0x7f9569823790>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
__________ ERROR at setup of TestHTTPError.test_epic_fail_json[asgi] ___________

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
    
        resource = FaultyResource()
>       app.add_route('/fail', resource)

tests/test_httperror.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f94150fb5a0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569221cf0>, 'CHECK...1cf0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569221cf0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method FaultyResource.on_get of <test_httperror.FaultyResource object at 0x7f9569869210>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
________________ ERROR at setup of TestHTTPError.test_413[asgi] ________________

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
    
        resource = FaultyResource()
>       app.add_route('/fail', resource)

tests/test_httperror.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f94645a2500>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692237f0>, 'CHECK...37f0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692237f0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method FaultyResource.on_get of <test_httperror.FaultyResource object at 0x7f95694c81c0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
____________ ERROR at setup of TestHTTPError.test_unicode_xml[asgi] ____________

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
    
        resource = FaultyResource()
>       app.add_route('/fail', resource)

tests/test_httperror.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f94645a0820>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569222f80>, 'CHECK...2f80>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569222f80>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method FaultyResource.on_get of <test_httperror.FaultyResource object at 0x7f956a929b70>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ ERROR at setup of TestHTTPError.test_custom_error_serializer_optional_representation[asgi-REPORT-/404-405] _

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
    
        resource = FaultyResource()
>       app.add_route('/fail', resource)

tests/test_httperror.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f94645a3c30>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692663b0>, 'CHECK...63b0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692663b0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method FaultyResource.on_get of <test_httperror.FaultyResource object at 0x7f9569744ac0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
___________ ERROR at setup of TestHTTPError.test_missing_param[asgi] ___________

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
    
        resource = FaultyResource()
>       app.add_route('/fail', resource)

tests/test_httperror.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f94645659a0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692208b0>, 'CHECK...08b0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692208b0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method FaultyResource.on_get of <test_httperror.FaultyResource object at 0x7f956962f8b0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
__________ ERROR at setup of TestHTTPError.test_414_with_title[asgi] ___________

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
    
        resource = FaultyResource()
>       app.add_route('/fail', resource)

tests/test_httperror.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f9464564190>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569220280>, 'CHECK...0280>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569220280>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method FaultyResource.on_get of <test_httperror.FaultyResource object at 0x7f9569403e80>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_______________ ERROR at setup of TestHTTPError.test_misc[asgi] ________________

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
    
        resource = FaultyResource()
>       app.add_route('/fail', resource)

tests/test_httperror.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f9464566d50>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569222e60>, 'CHECK...2e60>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569222e60>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method FaultyResource.on_get of <test_httperror.FaultyResource object at 0x7f956948df60>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_________ ERROR at setup of TestHTTPError.test_410_without_body[asgi] __________

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
    
        resource = FaultyResource()
>       app.add_route('/fail', resource)

tests/test_httperror.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f9464567610>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569264700>, 'CHECK...4700>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569264700>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method FaultyResource.on_get of <test_httperror.FaultyResource object at 0x7f956935e1a0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
________ ERROR at setup of TestHTTPError.test_no_description_json[asgi] ________

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
    
        resource = FaultyResource()
>       app.add_route('/fail', resource)

tests/test_httperror.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f95692a7530>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692205e0>, 'CHECK...05e0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692205e0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method FaultyResource.on_get of <test_httperror.FaultyResource object at 0x7f9569232470>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ ERROR at setup of TestHTTPError.test_title_default_message_if_none[asgi-503 Service Unavailable-bytes] _

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
    
        resource = FaultyResource()
>       app.add_route('/fail', resource)

tests/test_httperror.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f94645a09e0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569266290>, 'CHECK...6290>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569266290>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method FaultyResource.on_get of <test_httperror.FaultyResource object at 0x7f956a99ce20>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ ERROR at setup of TestHTTPError.test_title_default_message_if_none[asgi-503-bytes] _

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
    
        resource = FaultyResource()
>       app.add_route('/fail', resource)

tests/test_httperror.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f94645a21f0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569264550>, 'CHECK...4550>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569264550>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method FaultyResource.on_get of <test_httperror.FaultyResource object at 0x7f942a8420e0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ ERROR at setup of TestHTTPError.test_epic_fail_xml[asgi-application/atom+xml] _

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
    
        resource = FaultyResource()
>       app.add_route('/fail', resource)

tests/test_httperror.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f94645a2dc0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692669e0>, 'CHECK...69e0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692669e0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method FaultyResource.on_get of <test_httperror.FaultyResource object at 0x7f94645960b0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
___________ ERROR at setup of TestHTTPError.test_429_datetime[asgi] ____________

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
    
        resource = FaultyResource()
>       app.add_route('/fail', resource)

tests/test_httperror.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f94150fa0a0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569267370>, 'CHECK...7370>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569267370>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method FaultyResource.on_get of <test_httperror.FaultyResource object at 0x7f94645fa020>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_________ ERROR at setup of TestHTTPError.test_404_without_body[asgi] __________

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
    
        resource = FaultyResource()
>       app.add_route('/fail', resource)

tests/test_httperror.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f9464567e60>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692204c0>, 'CHECK...04c0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692204c0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method FaultyResource.on_get of <test_httperror.FaultyResource object at 0x7f9415508130>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ ERROR at setup of TestHTTPError.test_client_does_not_accept_json_or_xml[asgi] _

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
    
        resource = FaultyResource()
>       app.add_route('/fail', resource)

tests/test_httperror.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f94645a2ff0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569265000>, 'CHECK...5000>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569265000>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method FaultyResource.on_get of <test_httperror.FaultyResource object at 0x7f94645e4fd0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
__ ERROR at setup of TestHTTPError.test_client_does_not_accept_anything[asgi] __

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
    
        resource = FaultyResource()
>       app.add_route('/fail', resource)

tests/test_httperror.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f9464565a80>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569223490>, 'CHECK...3490>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569223490>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method FaultyResource.on_get of <test_httperror.FaultyResource object at 0x7f956a92a080>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
__ ERROR at setup of TestHTTPError.test_serialize_no_json_media_handler[asgi] __

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
    
        resource = FaultyResource()
>       app.add_route('/fail', resource)

tests/test_httperror.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f94645669d0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569265360>, 'CHECK...5360>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569265360>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method FaultyResource.on_get of <test_httperror.FaultyResource object at 0x7f95694c92d0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
___ ERROR at setup of TestHTTPError.test_epic_fail_xml[asgi-application/xml] ___

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
    
        resource = FaultyResource()
>       app.add_route('/fail', resource)

tests/test_httperror.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f9464567920>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569264ee0>, 'CHECK...4ee0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569264ee0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method FaultyResource.on_get of <test_httperror.FaultyResource object at 0x7f95692d2200>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
________________ ERROR at setup of TestHTTPError.test_414[asgi] ________________

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
    
        resource = FaultyResource()
>       app.add_route('/fail', resource)

tests/test_httperror.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f94645a2260>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569266290>, 'CHECK...6290>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569266290>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method FaultyResource.on_get of <test_httperror.FaultyResource object at 0x7f95695c8eb0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
__________ ERROR at setup of TestHTTPError.test_invalid_header[asgi] ___________

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
    
        resource = FaultyResource()
>       app.add_route('/fail', resource)

tests/test_httperror.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f94645a3bc0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692665f0>, 'CHECK...65f0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692665f0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method FaultyResource.on_get of <test_httperror.FaultyResource object at 0x7f94645aed10>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
____ ERROR at setup of TestHTTPError.test_forbidden[asgi-application/json] _____

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
    
        resource = FaultyResource()
>       app.add_route('/fail', resource)

tests/test_httperror.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f9464566ce0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569266cb0>, 'CHECK...6cb0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569266cb0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method FaultyResource.on_get of <test_httperror.FaultyResource object at 0x7f9569457f40>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
________________ ERROR at setup of TestHTTPError.test_411[asgi] ________________

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
    
        resource = FaultyResource()
>       app.add_route('/fail', resource)

tests/test_httperror.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f94645a0900>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569222e60>, 'CHECK...2e60>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569222e60>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method FaultyResource.on_get of <test_httperror.FaultyResource object at 0x7f95696a25f0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ ERROR at setup of TestHTTPError.test_405_without_body_with_extra_headers_double_check[asgi] _

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
    
        resource = FaultyResource()
>       app.add_route('/fail', resource)

tests/test_httperror.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f9464564cf0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569264820>, 'CHECK...4820>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569264820>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method FaultyResource.on_get of <test_httperror.FaultyResource object at 0x7f9415509c30>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ ERROR at setup of TestHTTPError.test_title_default_message_if_none[asgi-503-HTTPStatus] _

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
    
        resource = FaultyResource()
>       app.add_route('/fail', resource)

tests/test_httperror.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f94150f8900>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569265a20>, 'CHECK...5a20>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569265a20>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method FaultyResource.on_get of <test_httperror.FaultyResource object at 0x7f956a99ce20>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ ERROR at setup of TestHTTPError.test_serialize_error_uses_media_handler[asgi] _

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
    
        resource = FaultyResource()
>       app.add_route('/fail', resource)

tests/test_httperror.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f9464564510>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569264e50>, 'CHECK...4e50>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569264e50>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method FaultyResource.on_get of <test_httperror.FaultyResource object at 0x7f9569880cd0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
___________ ERROR at setup of TestHTTPError.test_404_with_body[asgi] ___________

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
    
        resource = FaultyResource()
>       app.add_route('/fail', resource)

tests/test_httperror.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f94646143c0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692641f0>, 'CHECK...41f0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692641f0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method FaultyResource.on_get of <test_httperror.FaultyResource object at 0x7f9415509d50>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ ERROR at setup of TestHTTPError.test_title_default_message_if_none[asgi-503-int] _

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
    
        resource = FaultyResource()
>       app.add_route('/fail', resource)

tests/test_httperror.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f9464616180>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a956950>, 'CHECK...6950>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a956950>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method FaultyResource.on_get of <test_httperror.FaultyResource object at 0x7f941543c580>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ ERROR at setup of TestHTTPError.test_temporary_413_datetime_retry_after[asgi] _

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
    
        resource = FaultyResource()
>       app.add_route('/fail', resource)

tests/test_httperror.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f94645642e0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569266290>, 'CHECK...6290>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569266290>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method FaultyResource.on_get of <test_httperror.FaultyResource object at 0x7f95698817b0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ ERROR at setup of TestHTTPError.test_405_without_body_with_extra_headers[asgi] _

asgi = True

    @pytest.fixture
    def client(asgi):
        app = create_app(asgi)
    
        resource = FaultyResource()
>       app.add_route('/fail', resource)

tests/test_httperror.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f9464565e00>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569265fc0>, 'CHECK...5fc0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569265fc0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method FaultyResource.on_get of <test_httperror.FaultyResource object at 0x7f9569635300>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
=================================== FAILURES ===================================
_________________ TestCythonized.test_imported_from_c_modules __________________

self = <test_cython.TestCythonized object at 0x7f942b1f1120>

    @pytest.mark.skipif(not has_cython, reason='Cython not installed')
    def test_imported_from_c_modules(self):
>       assert 'falcon/app.py' not in str(falcon.app)
E       assert 'falcon/app.py' not in "<module 'fa...con/app.py'>"
E         'falcon/app.py' is contained here:
E           ts/falcon/falcon/app.py'>

tests/test_cython.py:14: AssertionError
_________________ TestCythonized.test_stream_has_private_read __________________

self = <test_cython.TestCythonized object at 0x7f942b1f12a0>

    def test_stream_has_private_read(self):
        stream = falcon.util.BufferedReader(io.BytesIO().read, 8)
    
        if has_cython and falcon.util.IS_64_BITS:
>           assert not hasattr(stream, '_read')
E           AssertionError: assert not True
E            +  where True = hasattr(<falcon.util.reader.BufferedReader object at 0x7f9415583430>, '_read')

tests/test_cython.py:20: AssertionError
_______________ TestMain.test_routes_only[not-internal-verbose] ________________

self = <test_cmd_inspect_app.TestMain object at 0x7f942b2f75e0>, verbose = True
internal = False
monkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x7f9415894dc0>

    def test_routes_only(self, verbose, internal, monkeypatch):
        args = ['some-file.py', '{}:{}'.format(_MODULE, '_APP'), '-r']
        if verbose:
            args.append('-v')
        if internal:
            args.append('-i')
        monkeypatch.setattr('sys.argv', args)
        output = io.StringIO()
        with redirected(stdout=output):
>           inspect_app.main()

tests/test_cmd_inspect_app.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/cmd/inspect_app.py:100: in main
    app = load_app(parser, args)
falcon/cmd/inspect_app.py:70: in load_app
    app = getattr(importlib.import_module(module), instance)
/usr/lib/python3.10/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
<frozen importlib._bootstrap>:1050: in _gcd_import
    ???
<frozen importlib._bootstrap>:1027: in _find_and_load
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

name = 'tests.test_cmd_inspect_app'
import_ = <function _gcd_import at 0x7f956ecb7400>

>   ???
E   ModuleNotFoundError: No module named 'tests.test_cmd_inspect_app'

<frozen importlib._bootstrap>:1004: ModuleNotFoundError
___________________ TestMain.test_inspect[internal-verbose] ____________________

self = <test_cmd_inspect_app.TestMain object at 0x7f942b2f78b0>, verbose = True
internal = True
monkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x7f9415966a70>

    def test_inspect(self, verbose, internal, monkeypatch):
        args = ['some-file.py', '{}:{}'.format(_MODULE, '_APP')]
        if verbose:
            args.append('-v')
        if internal:
            args.append('-i')
        monkeypatch.setattr('sys.argv', args)
        output = io.StringIO()
        with redirected(stdout=output):
>           inspect_app.main()

tests/test_cmd_inspect_app.py:178: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/cmd/inspect_app.py:100: in main
    app = load_app(parser, args)
falcon/cmd/inspect_app.py:70: in load_app
    app = getattr(importlib.import_module(module), instance)
/usr/lib/python3.10/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
<frozen importlib._bootstrap>:1050: in _gcd_import
    ???
<frozen importlib._bootstrap>:1027: in _find_and_load
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

name = 'tests.test_cmd_inspect_app'
import_ = <function _gcd_import at 0x7f956ecb7400>

>   ???
E   ModuleNotFoundError: No module named 'tests.test_cmd_inspect_app'

<frozen importlib._bootstrap>:1004: ModuleNotFoundError
_________________ TestMain.test_inspect[not-internal-verbose] __________________

self = <test_cmd_inspect_app.TestMain object at 0x7f942b2f79d0>, verbose = True
internal = False
monkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x7f941579aec0>

    def test_inspect(self, verbose, internal, monkeypatch):
        args = ['some-file.py', '{}:{}'.format(_MODULE, '_APP')]
        if verbose:
            args.append('-v')
        if internal:
            args.append('-i')
        monkeypatch.setattr('sys.argv', args)
        output = io.StringIO()
        with redirected(stdout=output):
>           inspect_app.main()

tests/test_cmd_inspect_app.py:178: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/cmd/inspect_app.py:100: in main
    app = load_app(parser, args)
falcon/cmd/inspect_app.py:70: in load_app
    app = getattr(importlib.import_module(module), instance)
/usr/lib/python3.10/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
<frozen importlib._bootstrap>:1050: in _gcd_import
    ???
<frozen importlib._bootstrap>:1027: in _find_and_load
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

name = 'tests.test_cmd_inspect_app'
import_ = <function _gcd_import at 0x7f956ecb7400>

>   ???
E   ModuleNotFoundError: No module named 'tests.test_cmd_inspect_app'

<frozen importlib._bootstrap>:1004: ModuleNotFoundError
_________________ TestMain.test_routes_only[internal-verbose] __________________

self = <test_cmd_inspect_app.TestMain object at 0x7f942b2f74c0>, verbose = True
internal = True
monkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x7f941575d030>

    def test_routes_only(self, verbose, internal, monkeypatch):
        args = ['some-file.py', '{}:{}'.format(_MODULE, '_APP'), '-r']
        if verbose:
            args.append('-v')
        if internal:
            args.append('-i')
        monkeypatch.setattr('sys.argv', args)
        output = io.StringIO()
        with redirected(stdout=output):
>           inspect_app.main()

tests/test_cmd_inspect_app.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/cmd/inspect_app.py:100: in main
    app = load_app(parser, args)
falcon/cmd/inspect_app.py:70: in load_app
    app = getattr(importlib.import_module(module), instance)
/usr/lib/python3.10/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
<frozen importlib._bootstrap>:1050: in _gcd_import
    ???
<frozen importlib._bootstrap>:1027: in _find_and_load
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

name = 'tests.test_cmd_inspect_app'
import_ = <function _gcd_import at 0x7f956ecb7400>

>   ???
E   ModuleNotFoundError: No module named 'tests.test_cmd_inspect_app'

<frozen importlib._bootstrap>:1004: ModuleNotFoundError
_______________ TestMain.test_inspect[not-internal-not-verbose] ________________

self = <test_cmd_inspect_app.TestMain object at 0x7f942b2f7a60>, verbose = False
internal = False
monkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x7f942aad6a70>

    def test_inspect(self, verbose, internal, monkeypatch):
        args = ['some-file.py', '{}:{}'.format(_MODULE, '_APP')]
        if verbose:
            args.append('-v')
        if internal:
            args.append('-i')
        monkeypatch.setattr('sys.argv', args)
        output = io.StringIO()
        with redirected(stdout=output):
>           inspect_app.main()

tests/test_cmd_inspect_app.py:178: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/cmd/inspect_app.py:100: in main
    app = load_app(parser, args)
falcon/cmd/inspect_app.py:70: in load_app
    app = getattr(importlib.import_module(module), instance)
/usr/lib/python3.10/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
<frozen importlib._bootstrap>:1050: in _gcd_import
    ???
<frozen importlib._bootstrap>:1027: in _find_and_load
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

name = 'tests.test_cmd_inspect_app'
import_ = <function _gcd_import at 0x7f956ecb7400>

>   ???
E   ModuleNotFoundError: No module named 'tests.test_cmd_inspect_app'

<frozen importlib._bootstrap>:1004: ModuleNotFoundError
_________________ TestMain.test_inspect[internal-not-verbose] __________________

self = <test_cmd_inspect_app.TestMain object at 0x7f942b2f7940>, verbose = False
internal = True
monkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x7f9415a43820>

    def test_inspect(self, verbose, internal, monkeypatch):
        args = ['some-file.py', '{}:{}'.format(_MODULE, '_APP')]
        if verbose:
            args.append('-v')
        if internal:
            args.append('-i')
        monkeypatch.setattr('sys.argv', args)
        output = io.StringIO()
        with redirected(stdout=output):
>           inspect_app.main()

tests/test_cmd_inspect_app.py:178: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/cmd/inspect_app.py:100: in main
    app = load_app(parser, args)
falcon/cmd/inspect_app.py:70: in load_app
    app = getattr(importlib.import_module(module), instance)
/usr/lib/python3.10/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
<frozen importlib._bootstrap>:1050: in _gcd_import
    ???
<frozen importlib._bootstrap>:1027: in _find_and_load
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

name = 'tests.test_cmd_inspect_app'
import_ = <function _gcd_import at 0x7f956ecb7400>

>   ???
E   ModuleNotFoundError: No module named 'tests.test_cmd_inspect_app'

<frozen importlib._bootstrap>:1004: ModuleNotFoundError
_______________ TestMain.test_routes_only[internal-not-verbose] ________________

self = <test_cmd_inspect_app.TestMain object at 0x7f942b2f7550>, verbose = False
internal = True
monkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x7f9416476260>

    def test_routes_only(self, verbose, internal, monkeypatch):
        args = ['some-file.py', '{}:{}'.format(_MODULE, '_APP'), '-r']
        if verbose:
            args.append('-v')
        if internal:
            args.append('-i')
        monkeypatch.setattr('sys.argv', args)
        output = io.StringIO()
        with redirected(stdout=output):
>           inspect_app.main()

tests/test_cmd_inspect_app.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/cmd/inspect_app.py:100: in main
    app = load_app(parser, args)
falcon/cmd/inspect_app.py:70: in load_app
    app = getattr(importlib.import_module(module), instance)
/usr/lib/python3.10/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
<frozen importlib._bootstrap>:1050: in _gcd_import
    ???
<frozen importlib._bootstrap>:1027: in _find_and_load
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

name = 'tests.test_cmd_inspect_app'
import_ = <function _gcd_import at 0x7f956ecb7400>

>   ???
E   ModuleNotFoundError: No module named 'tests.test_cmd_inspect_app'

<frozen importlib._bootstrap>:1004: ModuleNotFoundError
_____________ TestMain.test_routes_only[not-internal-not-verbose] ______________

self = <test_cmd_inspect_app.TestMain object at 0x7f942b2f7670>, verbose = False
internal = False
monkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x7f941575f160>

    def test_routes_only(self, verbose, internal, monkeypatch):
        args = ['some-file.py', '{}:{}'.format(_MODULE, '_APP'), '-r']
        if verbose:
            args.append('-v')
        if internal:
            args.append('-i')
        monkeypatch.setattr('sys.argv', args)
        output = io.StringIO()
        with redirected(stdout=output):
>           inspect_app.main()

tests/test_cmd_inspect_app.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/cmd/inspect_app.py:100: in main
    app = load_app(parser, args)
falcon/cmd/inspect_app.py:70: in load_app
    app = getattr(importlib.import_module(module), instance)
/usr/lib/python3.10/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
<frozen importlib._bootstrap>:1050: in _gcd_import
    ???
<frozen importlib._bootstrap>:1027: in _find_and_load
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

name = 'tests.test_cmd_inspect_app'
import_ = <function _gcd_import at 0x7f956ecb7400>

>   ???
E   ModuleNotFoundError: No module named 'tests.test_cmd_inspect_app'

<frozen importlib._bootstrap>:1004: ModuleNotFoundError
___________________ TestLoadApp.test_load_app_error[_MODULE] ___________________

self = <test_cmd_inspect_app.TestLoadApp object at 0x7f942b2f64a0>
name = '_MODULE'

    @pytest.mark.parametrize(
        'name',
        (
            'foo',  # not exists
            '_MODULE',  # not callable and not app
            'DummyResource',  # callable and not app
        ),
    )
    def test_load_app_error(self, name):
        parser = inspect_app.make_parser()
        args = Namespace(
            app_module='{}:{}'.format(_MODULE, name), route_only=False, verbose=False
        )
        with pytest.raises(SystemExit):
>           inspect_app.load_app(parser, args)

tests/test_cmd_inspect_app.py:134: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/cmd/inspect_app.py:70: in load_app
    app = getattr(importlib.import_module(module), instance)
/usr/lib/python3.10/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
<frozen importlib._bootstrap>:1050: in _gcd_import
    ???
<frozen importlib._bootstrap>:1027: in _find_and_load
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

name = 'tests.test_cmd_inspect_app'
import_ = <function _gcd_import at 0x7f956ecb7400>

>   ???
E   ModuleNotFoundError: No module named 'tests.test_cmd_inspect_app'

<frozen importlib._bootstrap>:1004: ModuleNotFoundError
_____________________ TestLoadApp.test_load_app_error[foo] _____________________

self = <test_cmd_inspect_app.TestLoadApp object at 0x7f942b2f6d40>, name = 'foo'

    @pytest.mark.parametrize(
        'name',
        (
            'foo',  # not exists
            '_MODULE',  # not callable and not app
            'DummyResource',  # callable and not app
        ),
    )
    def test_load_app_error(self, name):
        parser = inspect_app.make_parser()
        args = Namespace(
            app_module='{}:{}'.format(_MODULE, name), route_only=False, verbose=False
        )
        with pytest.raises(SystemExit):
>           inspect_app.load_app(parser, args)

tests/test_cmd_inspect_app.py:134: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/cmd/inspect_app.py:70: in load_app
    app = getattr(importlib.import_module(module), instance)
/usr/lib/python3.10/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
<frozen importlib._bootstrap>:1050: in _gcd_import
    ???
<frozen importlib._bootstrap>:1027: in _find_and_load
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

name = 'tests.test_cmd_inspect_app'
import_ = <function _gcd_import at 0x7f956ecb7400>

>   ???
E   ModuleNotFoundError: No module named 'tests.test_cmd_inspect_app'

<frozen importlib._bootstrap>:1004: ModuleNotFoundError
_____________________ TestLoadApp.test_load_app[make_app] ______________________

self = <test_cmd_inspect_app.TestLoadApp object at 0x7f942b2f70a0>
name = 'make_app'

    @pytest.mark.parametrize('name', ('_APP', 'make_app'))
    def test_load_app(self, name):
        parser = inspect_app.make_parser()
        args = Namespace(
            app_module='{}:{}'.format(_MODULE, name), route_only=False, verbose=False
        )
>       app = inspect_app.load_app(parser, args)

tests/test_cmd_inspect_app.py:116: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/cmd/inspect_app.py:70: in load_app
    app = getattr(importlib.import_module(module), instance)
/usr/lib/python3.10/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
<frozen importlib._bootstrap>:1050: in _gcd_import
    ???
<frozen importlib._bootstrap>:1027: in _find_and_load
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

name = 'tests.test_cmd_inspect_app'
import_ = <function _gcd_import at 0x7f956ecb7400>

>   ???
E   ModuleNotFoundError: No module named 'tests.test_cmd_inspect_app'

<frozen importlib._bootstrap>:1004: ModuleNotFoundError
________________ TestLoadApp.test_load_app_error[DummyResource] ________________

self = <test_cmd_inspect_app.TestLoadApp object at 0x7f942b2f5ae0>
name = 'DummyResource'

    @pytest.mark.parametrize(
        'name',
        (
            'foo',  # not exists
            '_MODULE',  # not callable and not app
            'DummyResource',  # callable and not app
        ),
    )
    def test_load_app_error(self, name):
        parser = inspect_app.make_parser()
        args = Namespace(
            app_module='{}:{}'.format(_MODULE, name), route_only=False, verbose=False
        )
        with pytest.raises(SystemExit):
>           inspect_app.load_app(parser, args)

tests/test_cmd_inspect_app.py:134: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/cmd/inspect_app.py:70: in load_app
    app = getattr(importlib.import_module(module), instance)
/usr/lib/python3.10/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
<frozen importlib._bootstrap>:1050: in _gcd_import
    ???
<frozen importlib._bootstrap>:1027: in _find_and_load
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

name = 'tests.test_cmd_inspect_app'
import_ = <function _gcd_import at 0x7f956ecb7400>

>   ???
E   ModuleNotFoundError: No module named 'tests.test_cmd_inspect_app'

<frozen importlib._bootstrap>:1004: ModuleNotFoundError
_______________________ TestLoadApp.test_load_app[_APP] ________________________

self = <test_cmd_inspect_app.TestLoadApp object at 0x7f942b2f7010>
name = '_APP'

    @pytest.mark.parametrize('name', ('_APP', 'make_app'))
    def test_load_app(self, name):
        parser = inspect_app.make_parser()
        args = Namespace(
            app_module='{}:{}'.format(_MODULE, name), route_only=False, verbose=False
        )
>       app = inspect_app.load_app(parser, args)

tests/test_cmd_inspect_app.py:116: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/cmd/inspect_app.py:70: in load_app
    app = getattr(importlib.import_module(module), instance)
/usr/lib/python3.10/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
<frozen importlib._bootstrap>:1050: in _gcd_import
    ???
<frozen importlib._bootstrap>:1027: in _find_and_load
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

name = 'tests.test_cmd_inspect_app'
import_ = <function _gcd_import at 0x7f956ecb7400>

>   ???
E   ModuleNotFoundError: No module named 'tests.test_cmd_inspect_app'

<frozen importlib._bootstrap>:1004: ModuleNotFoundError
___________________________ test_jsonchema_validator ___________________________

client = <falcon.testing.client.TestClient object at 0x7f946449b520>

    @pytest.mark.skipif(not pyximport, reason='Cython not installed')
    def test_jsonchema_validator(client):
        with disable_asgi_non_coroutine_wrapping():
            if CYTHON_COROUTINE_HINT:
>               client.app.add_route('/', _cythonized.TestResourceWithValidationNoHint())

tests/asgi/test_cythonized_asgi.py:89: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f941504bbc0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a9cb400>, 'CHECK...b400>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a9cb400>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method TestResourceWithValidationNoHint.on_get of <asgi._cythonized.TestResourceWithValidationNoHint object at 0x7f946449bbb0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
__________________________________ test_hooks __________________________________

client = <falcon.testing.client.TestClient object at 0x7f9569635120>

    @pytest.mark.skipif(not pyximport, reason='Cython not installed')
    def test_hooks(client):
        with disable_asgi_non_coroutine_wrapping():
            if CYTHON_COROUTINE_HINT:
>               client.app.add_route('/', _cythonized.TestResourceWithHooksNoHint())

tests/asgi/test_cythonized_asgi.py:132: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f956a935070>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a9c9b40>, 'CHECK...9b40>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a9c9b40>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method TestResourceWithHooksNoHint.on_get of <asgi._cythonized.TestResourceWithHooksNoHint object at 0x7f95696353f0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_____________________ test_json_err_no_handler[asgi-True] ______________________

asgi = True, monkeypatch_resolver = True

    @pytest.mark.parametrize('monkeypatch_resolver', [True, False])
    def test_json_err_no_handler(asgi, monkeypatch_resolver):
        app = create_app(asgi)
    
        handlers = media.Handlers({falcon.MEDIA_URLENCODED: media.URLEncodedFormHandler()})
    
        # NOTE(kgriffs): Test the pre-3.0 method. Although undocumented, it was
        #   technically a public method, and so we make sure it still works here.
        if monkeypatch_resolver:
    
            def _resolve(media_type, default, raise_not_found=True):
                with pytest.warns(DeprecatedWarning, match='This undocumented method'):
                    h = handlers.find_by_media_type(
                        media_type, default, raise_not_found=raise_not_found
                    )
                return h, None, None
    
            handlers._resolve = _resolve
    
        app.req_options.media_handlers = handlers
        app.resp_options.media_handlers = handlers
    
        class Resource:
            def on_get(self, req, resp):
                raise falcon.HTTPForbidden()
    
>       app.add_route('/', Resource())

tests/test_media_handlers.py:349: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f9569834820>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95696adb40>, 'CHECK...db40>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95696adb40>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method test_json_err_no_handler.<locals>.Resource.on_get of <test_media_handlers.test_json_err_no_handler.<locals>.Resource object at 0x7f94645ade70>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_____________________ test_json_err_no_handler[asgi-False] _____________________

asgi = True, monkeypatch_resolver = False

    @pytest.mark.parametrize('monkeypatch_resolver', [True, False])
    def test_json_err_no_handler(asgi, monkeypatch_resolver):
        app = create_app(asgi)
    
        handlers = media.Handlers({falcon.MEDIA_URLENCODED: media.URLEncodedFormHandler()})
    
        # NOTE(kgriffs): Test the pre-3.0 method. Although undocumented, it was
        #   technically a public method, and so we make sure it still works here.
        if monkeypatch_resolver:
    
            def _resolve(media_type, default, raise_not_found=True):
                with pytest.warns(DeprecatedWarning, match='This undocumented method'):
                    h = handlers.find_by_media_type(
                        media_type, default, raise_not_found=raise_not_found
                    )
                return h, None, None
    
            handlers._resolve = _resolve
    
        app.req_options.media_handlers = handlers
        app.resp_options.media_handlers = handlers
    
        class Resource:
            def on_get(self, req, resp):
                raise falcon.HTTPForbidden()
    
>       app.add_route('/', Resource())

tests/test_media_handlers.py:349: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f956a934ba0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95696aee60>, 'CHECK...ee60>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95696aee60>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method test_json_err_no_handler.<locals>.Resource.on_get of <test_media_handlers.test_json_err_no_handler.<locals>.Resource object at 0x7f95697bb5b0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
__________________ TestHeaders.test_custom_content_type[asgi] __________________

self = <test_headers.TestHeaders object at 0x7f942afee170>
client = <falcon.testing.client.TestClient object at 0x7f9569322ef0>

    def test_custom_content_type(self, client):
        content_type = 'application/xml; charset=utf-8'
        resource = XmlResource(content_type)
>       self._check_header(client, resource, 'Content-Type', content_type)

tests/test_headers.py:850: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_headers.py:1063: in _check_header
    client.app.add_route('/', resource)
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f95696be1f0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95696e28c0>, 'CHECK...28c0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95696e28c0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method XmlResource.on_get of <test_headers.XmlResource object at 0x7f9569322020>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_____________ TestHeaders.test_set_headers_with_custom_class[asgi] _____________

self = <test_headers.TestHeaders object at 0x7f942b034790>
client = <falcon.testing.client.TestClient object at 0x7f95698816c0>

    def test_set_headers_with_custom_class(self, client):
>       client.app.add_route('/', CustomHeadersResource())

tests/test_headers.py:1023: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f95697e8190>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95696af760>, 'CHECK...f760>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95696af760>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method CustomHeadersResource.on_get of <test_headers.CustomHeadersResource object at 0x7f94156ec640>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
__________________ TestHeaders.test_default_media_type[asgi] ___________________

self = <test_headers.TestHeaders object at 0x7f942b1aa200>
client = <falcon.testing.client.TestClient object at 0x7f94644995a0>

    def test_default_media_type(self, client):
        resource = testing.SimpleTestResource(body='Hello world!')
>       self._check_header(client, resource, 'Content-Type', falcon.DEFAULT_MEDIA_TYPE)

tests/test_headers.py:495: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_headers.py:1063: in _check_header
    client.app.add_route('/', resource)
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f95697ea810>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569705ab0>, 'CHECK...5ab0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569705ab0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method SimpleTestResource.on_get of <falcon.testing.resource.SimpleTestResource object at 0x7f9464499090>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
______________ TestHeaders.test_append_link_with_type_hint[asgi] _______________

self = <test_headers.TestHeaders object at 0x7f942afef1c0>
client = <falcon.testing.client.TestClient object at 0x7f956958a530>

    def test_append_link_with_type_hint(self, client):
        expected_value = (
            '</related/thing>; rel=alternate; type="video/mp4; codecs=avc1.640028"'
        )
    
        resource = LinkHeaderResource()
        resource.append_link(
            '/related/thing', 'alternate', type_hint='video/mp4; codecs=avc1.640028'
        )
    
>       self._check_link_header(client, resource, expected_value)

tests/test_headers.py:943: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_headers.py:1060: in _check_link_header
    self._check_header(client, resource, 'Link', expected_value)
tests/test_headers.py:1063: in _check_header
    client.app.add_route('/', resource)
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f95697ea6c0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569705900>, 'CHECK...5900>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569705900>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method LinkHeaderResource.on_get of <test_headers.LinkHeaderResource object at 0x7f9569589c30>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
____________________ TestHeaders.test_content_length[asgi] _____________________

self = <test_headers.TestHeaders object at 0x7f942b1a8430>
client = <falcon.testing.client.TestClient object at 0x7f9569868670>

    def test_content_length(self, client):
        resource = testing.SimpleTestResource(body=SAMPLE_BODY)
>       client.app.add_route('/', resource)

tests/test_headers.py:329: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f95697e8d60>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569705c60>, 'CHECK...5c60>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569705c60>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method SimpleTestResource.on_get of <falcon.testing.resource.SimpleTestResource object at 0x7f9569868ca0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestHeaders.test_append_link_crossorigin[asgi-None-</related/thing>; rel=alternate] _

self = <test_headers.TestHeaders object at 0x7f942afefac0>
client = <falcon.testing.client.TestClient object at 0x7f9415685d50>
crossorigin = None, expected_value = '</related/thing>; rel=alternate'

    @pytest.mark.parametrize(
        'crossorigin,expected_value',
        [
            (None, '</related/thing>; rel=alternate'),
            ('anonymous', '</related/thing>; rel=alternate; crossorigin'),
            ('Anonymous', '</related/thing>; rel=alternate; crossorigin'),
            ('AnOnYmOUs', '</related/thing>; rel=alternate; crossorigin'),
            (
                'Use-Credentials',
                '</related/thing>; rel=alternate; crossorigin="use-credentials"',
            ),
            (
                'use-credentials',
                '</related/thing>; rel=alternate; crossorigin="use-credentials"',
            ),
        ],
    )
    def test_append_link_crossorigin(self, client, crossorigin, expected_value):
        resource = LinkHeaderResource()
        resource.append_link('/related/thing', 'alternate', crossorigin=crossorigin)
    
>       self._check_link_header(client, resource, expected_value)

tests/test_headers.py:987: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_headers.py:1060: in _check_link_header
    self._check_header(client, resource, 'Link', expected_value)
tests/test_headers.py:1063: in _check_header
    client.app.add_route('/', resource)
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f95697e9d90>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95697040d0>, 'CHECK...40d0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95697040d0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method LinkHeaderResource.on_get of <test_headers.LinkHeaderResource object at 0x7f94156852d0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
___________ TestHeaders.test_vary_header[asgi-vary0-accept-encoding] ___________

self = <test_headers.TestHeaders object at 0x7f942afedae0>
client = <falcon.testing.client.TestClient object at 0x7f956a92bee0>
vary = ['accept-encoding'], expected_value = 'accept-encoding'

    @pytest.mark.parametrize(
        'vary,expected_value',
        [
            (['accept-encoding'], 'accept-encoding'),
            (('accept-encoding', 'x-auth-token'), 'accept-encoding, x-auth-token'),
        ],
    )
    def test_vary_header(self, client, vary, expected_value):
        resource = VaryHeaderResource(vary)
>       self._check_header(client, resource, 'Vary', expected_value)

tests/test_headers.py:829: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_headers.py:1063: in _check_header
    client.app.add_route('/', resource)
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f95697e8d60>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95696e2710>, 'CHECK...2710>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95696e2710>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method VaryHeaderResource.on_get of <test_headers.VaryHeaderResource object at 0x7f956a9281f0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_________________ TestHeaders.test_append_link_multiple[asgi] __________________

self = <test_headers.TestHeaders object at 0x7f942afee5c0>
client = <falcon.testing.client.TestClient object at 0x7f94645e58d0>

    def test_append_link_multiple(self, client):
        expected_value = (
            '</things/2842>; rel=next, '
            + '<http://%C3%A7runchy/bacon>; rel=contents, '
            + '<ab%C3%A7>; rel="http://example.com/ext-type", '
            + '<ab%C3%A7>; rel="http://example.com/%C3%A7runchy", '
            + '<ab%C3%A7>; rel="https://example.com/too-%C3%A7runchy", '
            + '</alt-thing>; rel="alternate http://example.com/%C3%A7runchy"'
        )
    
        uri = 'ab\u00e7'
    
        resource = LinkHeaderResource()
        resource.add_link('/things/2842', 'next')
        resource.append_link('http://\u00e7runchy/bacon', 'contents')
        resource.append_link(uri, 'http://example.com/ext-type')
        resource.add_link(uri, 'http://example.com/\u00e7runchy')
        resource.append_link(uri, 'https://example.com/too-\u00e7runchy')
        resource.add_link('/alt-thing', 'alternate http://example.com/\u00e7runchy')
    
>       self._check_link_header(client, resource, expected_value)

tests/test_headers.py:880: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_headers.py:1060: in _check_link_header
    self._check_header(client, resource, 'Link', expected_value)
tests/test_headers.py:1063: in _check_header
    client.app.add_route('/', resource)
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f95697e8430>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f952a95ca60>, 'CHECK...ca60>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f952a95ca60>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method LinkHeaderResource.on_get of <test_headers.LinkHeaderResource object at 0x7f94645e74c0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_____ TestHeaders.test_declared_content_length_overridden_by_no_body[asgi] _____

self = <test_headers.TestHeaders object at 0x7f942b1a8610>
client = <falcon.testing.client.TestClient object at 0x7f95696a26b0>

    def test_declared_content_length_overridden_by_no_body(self, client):
>       client.app.add_route('/', ContentLengthHeaderResource(42))

tests/test_headers.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f95696bcc10>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a9c9a20>, 'CHECK...9a20>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a9c9a20>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method ContentLengthHeaderResource.on_get of <test_headers.ContentLengthHeaderResource object at 0x7f95696a3fa0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
________________ TestHeaders.test_append_link_with_anchor[asgi] ________________

self = <test_headers.TestHeaders object at 0x7f942afeed10>
client = <falcon.testing.client.TestClient object at 0x7f94645ade40>

    def test_append_link_with_anchor(self, client):
        expected_value = '</related/thing>; rel=item; anchor="/some%20thing/or-other"'
    
        resource = LinkHeaderResource()
        resource.append_link('/related/thing', 'item', anchor='/some thing/or-other')
    
>       self._check_link_header(client, resource, expected_value)

tests/test_headers.py:915: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_headers.py:1060: in _check_link_header
    self._check_header(client, resource, 'Link', expected_value)
tests/test_headers.py:1063: in _check_header
    client.app.add_route('/', resource)
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f9569834970>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a9c9b40>, 'CHECK...9b40>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a9c9b40>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method LinkHeaderResource.on_get of <test_headers.LinkHeaderResource object at 0x7f94645aec80>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_________ TestHeaders.test_unicode_headers_contain_non_ascii[asgi-PUT] _________

self = <test_headers.TestHeaders object at 0x7f942afec0a0>, method = 'PUT'
client = <falcon.testing.client.TestClient object at 0x7f95696f5600>

    @pytest.mark.parametrize('method', ['CONNECT', 'PATCH', 'POST', 'PUT'])
    def test_unicode_headers_contain_non_ascii(self, method, client):
        app = client.app
>       app.add_route('/', UnicodeHeaderResource())

tests/test_headers.py:709: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f956a9373e0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569706560>, 'CHECK...320>>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569706560>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method UnicodeHeaderResource.on_connect of <test_headers.UnicodeHeaderResource object at 0x7f95696f6320>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestHeaders.test_append_link_crossorigin[asgi-Anonymous-</related/thing>; rel=alternate; crossorigin] _

self = <test_headers.TestHeaders object at 0x7f942afefbe0>
client = <falcon.testing.client.TestClient object at 0x7f94645af760>
crossorigin = 'Anonymous'
expected_value = '</related/thing>; rel=alternate; crossorigin'

    @pytest.mark.parametrize(
        'crossorigin,expected_value',
        [
            (None, '</related/thing>; rel=alternate'),
            ('anonymous', '</related/thing>; rel=alternate; crossorigin'),
            ('Anonymous', '</related/thing>; rel=alternate; crossorigin'),
            ('AnOnYmOUs', '</related/thing>; rel=alternate; crossorigin'),
            (
                'Use-Credentials',
                '</related/thing>; rel=alternate; crossorigin="use-credentials"',
            ),
            (
                'use-credentials',
                '</related/thing>; rel=alternate; crossorigin="use-credentials"',
            ),
        ],
    )
    def test_append_link_crossorigin(self, client, crossorigin, expected_value):
        resource = LinkHeaderResource()
        resource.append_link('/related/thing', 'alternate', crossorigin=crossorigin)
    
>       self._check_link_header(client, resource, expected_value)

tests/test_headers.py:987: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_headers.py:1060: in _check_link_header
    self._check_header(client, resource, 'Link', expected_value)
tests/test_headers.py:1063: in _check_header
    client.app.add_route('/', resource)
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f941504b7d0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95696aecb0>, 'CHECK...ecb0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95696aecb0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method LinkHeaderResource.on_get of <test_headers.LinkHeaderResource object at 0x7f946449aef0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestHeaders.test_content_disposition_attachment_header[asgi-Hello World.txt-attachment; filename="Hello World.txt"] _

self = <test_headers.TestHeaders object at 0x7f942b1aab90>
client = <falcon.testing.client.TestClient object at 0x7f941568c0d0>
filename = 'Hello World.txt'
expected = 'attachment; filename="Hello World.txt"'

    @pytest.mark.parametrize(
        'filename,expected',
        [
            ('report.csv', 'attachment; filename="report.csv"'),
            ('Hello World.txt', 'attachment; filename="Hello World.txt"'),
            (
                'Bold Digit 𝟏.txt',
                'attachment; filename=Bold_Digit_1.txt; '
                "filename*=UTF-8''Bold%20Digit%20%F0%9D%9F%8F.txt",
            ),
            (
                'Ångström unit.txt',
                'attachment; filename=A_ngstro_m_unit.txt; '
                "filename*=UTF-8''%C3%85ngstr%C3%B6m%20unit.txt",
            ),
            ('one,two.txt', 'attachment; filename="one,two.txt"'),
            (
                '½,²⁄₂.txt',
                'attachment; filename=1_2_2_2.txt; '
                "filename*=UTF-8''%C2%BD%2C%C2%B2%E2%81%84%E2%82%82.txt",
            ),
            ('[foo] @ bar.txt', 'attachment; filename="[foo] @ bar.txt"'),
            (
                '[fòó]@bàr,bäz.txt',
                'attachment; filename=_fo_o___ba_r_ba_z.txt; '
                "filename*=UTF-8''%5Bf%C3%B2%C3%B3%5D%40b%C3%A0r%2Cb%C3%A4z.txt",
            ),
        ],
    )
    def test_content_disposition_attachment_header(self, client, filename, expected):
        resource = DownloadableResource(filename)
>       client.app.add_route('/', resource)

tests/test_headers.py:622: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f95696d9770>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569704ee0>, 'CHECK...4ee0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569704ee0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method DownloadableResource.on_get of <test_headers.DownloadableResource object at 0x7f941568f2e0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestHeaders.test_content_disposition_attachment_header[asgi-report.csv-attachment; filename="report.csv"] _

self = <test_headers.TestHeaders object at 0x7f942b1ab1c0>
client = <falcon.testing.client.TestClient object at 0x7f95696c3850>
filename = 'report.csv', expected = 'attachment; filename="report.csv"'

    @pytest.mark.parametrize(
        'filename,expected',
        [
            ('report.csv', 'attachment; filename="report.csv"'),
            ('Hello World.txt', 'attachment; filename="Hello World.txt"'),
            (
                'Bold Digit 𝟏.txt',
                'attachment; filename=Bold_Digit_1.txt; '
                "filename*=UTF-8''Bold%20Digit%20%F0%9D%9F%8F.txt",
            ),
            (
                'Ångström unit.txt',
                'attachment; filename=A_ngstro_m_unit.txt; '
                "filename*=UTF-8''%C3%85ngstr%C3%B6m%20unit.txt",
            ),
            ('one,two.txt', 'attachment; filename="one,two.txt"'),
            (
                '½,²⁄₂.txt',
                'attachment; filename=1_2_2_2.txt; '
                "filename*=UTF-8''%C2%BD%2C%C2%B2%E2%81%84%E2%82%82.txt",
            ),
            ('[foo] @ bar.txt', 'attachment; filename="[foo] @ bar.txt"'),
            (
                '[fòó]@bàr,bäz.txt',
                'attachment; filename=_fo_o___ba_r_ba_z.txt; '
                "filename*=UTF-8''%5Bf%C3%B2%C3%B3%5D%40b%C3%A0r%2Cb%C3%A4z.txt",
            ),
        ],
    )
    def test_content_disposition_attachment_header(self, client, filename, expected):
        resource = DownloadableResource(filename)
>       client.app.add_route('/', resource)

tests/test_headers.py:622: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f95696d8430>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95697052d0>, 'CHECK...52d0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95697052d0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method DownloadableResource.on_get of <test_headers.DownloadableResource object at 0x7f95696c37f0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_________________ TestHeaders.test_content_type_no_body[asgi] __________________

self = <test_headers.TestHeaders object at 0x7f942afeca90>
client = <falcon.testing.client.TestClient object at 0x7f956941de70>

    def test_content_type_no_body(self, client):
>       client.app.add_route('/', testing.SimpleTestResource())

tests/test_headers.py:832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f95698378b0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95696e2440>, 'CHECK...2440>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95696e2440>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method SimpleTestResource.on_get of <falcon.testing.resource.SimpleTestResource object at 0x7f956941cd60>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
________ TestHeaders.test_unicode_headers_contain_non_ascii[asgi-PATCH] ________

self = <test_headers.TestHeaders object at 0x7f942afec340>, method = 'PATCH'
client = <falcon.testing.client.TestClient object at 0x7f95698204f0>

    @pytest.mark.parametrize('method', ['CONNECT', 'PATCH', 'POST', 'PUT'])
    def test_unicode_headers_contain_non_ascii(self, method, client):
        app = client.app
>       app.add_route('/', UnicodeHeaderResource())

tests/test_headers.py:709: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f95697e9d20>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95696e3d90>, 'CHECK...fd0>>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95696e3d90>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method UnicodeHeaderResource.on_connect of <test_headers.UnicodeHeaderResource object at 0x7f9569823fd0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_______________________ TestHeaders.test_vary_star[asgi] _______________________

self = <test_headers.TestHeaders object at 0x7f942afed120>
client = <falcon.testing.client.TestClient object at 0x7f956941f3a0>

    def test_vary_star(self, client):
>       client.app.add_route('/', VaryHeaderResource(['*']))

tests/test_headers.py:816: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f95697e8510>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9416422e60>, 'CHECK...2e60>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9416422e60>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method VaryHeaderResource.on_get of <test_headers.VaryHeaderResource object at 0x7f956941d390>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
__________ TestHeaders.test_unicode_headers_contain_only_ascii[asgi] ___________

self = <test_headers.TestHeaders object at 0x7f942afec100>
client = <falcon.testing.client.TestClient object at 0x7f9415a1a950>

    def test_unicode_headers_contain_only_ascii(self, client):
>       client.app.add_route('/', UnicodeHeaderResource())

tests/test_headers.py:698: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f95697eb140>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569707640>, 'CHECK...ad0>>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569707640>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method UnicodeHeaderResource.on_connect of <test_headers.UnicodeHeaderResource object at 0x7f9415a1aad0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestHeaders.test_content_disposition_attachment_header[asgi-[f\xf2\xf3]@b\xe0r,b\xe4z.txt-attachment; filename=_fo_o___ba_r_ba_z.txt; filename*=UTF-8''%5Bf%C3%B2%C3%B3%5D%40b%C3%A0r%2Cb%C3%A4z.txt] _

self = <test_headers.TestHeaders object at 0x7f942b1ab3a0>
client = <falcon.testing.client.TestClient object at 0x7f95695e5690>
filename = '[fòó]@bàr,bäz.txt'
expected = "attachment; filename=_fo_o___ba_r_ba_z.txt; filename*=UTF-8''%5Bf%C3%B2%C3%B3%5D%40b%C3%A0r%2Cb%C3%A4z.txt"

    @pytest.mark.parametrize(
        'filename,expected',
        [
            ('report.csv', 'attachment; filename="report.csv"'),
            ('Hello World.txt', 'attachment; filename="Hello World.txt"'),
            (
                'Bold Digit 𝟏.txt',
                'attachment; filename=Bold_Digit_1.txt; '
                "filename*=UTF-8''Bold%20Digit%20%F0%9D%9F%8F.txt",
            ),
            (
                'Ångström unit.txt',
                'attachment; filename=A_ngstro_m_unit.txt; '
                "filename*=UTF-8''%C3%85ngstr%C3%B6m%20unit.txt",
            ),
            ('one,two.txt', 'attachment; filename="one,two.txt"'),
            (
                '½,²⁄₂.txt',
                'attachment; filename=1_2_2_2.txt; '
                "filename*=UTF-8''%C2%BD%2C%C2%B2%E2%81%84%E2%82%82.txt",
            ),
            ('[foo] @ bar.txt', 'attachment; filename="[foo] @ bar.txt"'),
            (
                '[fòó]@bàr,bäz.txt',
                'attachment; filename=_fo_o___ba_r_ba_z.txt; '
                "filename*=UTF-8''%5Bf%C3%B2%C3%B3%5D%40b%C3%A0r%2Cb%C3%A4z.txt",
            ),
        ],
    )
    def test_content_disposition_attachment_header(self, client, filename, expected):
        resource = DownloadableResource(filename)
>       client.app.add_route('/', resource)

tests/test_headers.py:622: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f95696d8eb0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95697064d0>, 'CHECK...64d0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95697064d0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method DownloadableResource.on_get of <test_headers.DownloadableResource object at 0x7f95695e4f70>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
___________ TestHeaders.test_no_content_length[asgi-204 No Content] ____________

self = <test_headers.TestHeaders object at 0x7f942b1a9d50>
client = <falcon.testing.client.TestClient object at 0x7f956935ed10>
status = '204 No Content'

    @pytest.mark.parametrize('status', (falcon.HTTP_204, falcon.HTTP_304))
    def test_no_content_length(self, client, status):
>       client.app.add_route('/xxx', testing.SimpleTestResource(status=status))

tests/test_headers.py:437: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f95696d92a0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569706950>, 'CHECK...6950>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569706950>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method SimpleTestResource.on_get of <falcon.testing.resource.SimpleTestResource object at 0x7f956935e5f0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
___________ TestHeaders.test_no_content_type[asgi-304 Not Modified] ____________

self = <test_headers.TestHeaders object at 0x7f942afee1a0>
client = <falcon.testing.client.TestClient object at 0x7f9414e97fd0>
status = '304 Not Modified'

    @pytest.mark.parametrize('status', (falcon.HTTP_204, falcon.HTTP_304))
    def test_no_content_type(self, client, status):
>       client.app.add_route('/', testing.SimpleTestResource(status=status))

tests/test_headers.py:842: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f9569834970>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569707010>, 'CHECK...7010>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569707010>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method SimpleTestResource.on_get of <falcon.testing.resource.SimpleTestResource object at 0x7f9414e96740>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
____________ TestHeaders.test_response_header_helpers_on_get[asgi] _____________

self = <test_headers.TestHeaders object at 0x7f942b1aacb0>
client = <falcon.testing.client.TestClient object at 0x7f956a99e800>

    def test_response_header_helpers_on_get(self, client):
        last_modified = datetime(2013, 1, 1, 10, 30, 30)
        resource = HeaderHelpersResource(last_modified)
>       client.app.add_route('/', resource)

tests/test_headers.py:531: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f956a9083c0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f941579f0a0>, 'CHECK...f0a0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f941579f0a0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method HeaderHelpersResource.on_get of <test_headers.HeaderHelpersResource object at 0x7f956a99fd00>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_____ TestHeaders.test_override_default_media_type_missing_encoding[True] ______

self = <test_headers.TestHeaders object at 0x7f942b1aac80>, asgi = True
client = <falcon.testing.client.TestClient object at 0x7f94644bda20>

    @pytest.mark.parametrize('asgi', [True, False])
    def test_override_default_media_type_missing_encoding(self, asgi, client):
        body = '{"msg": "Hello Unicode! \U0001F638"}'
    
        client.app = create_app(asgi=asgi, media_type='application/json')
>       client.app.add_route('/', testing.SimpleTestResource(body=body))

tests/test_headers.py:520: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f956a90ae30>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95697072e0>, 'CHECK...72e0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95697072e0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method SimpleTestResource.on_get of <falcon.testing.resource.SimpleTestResource object at 0x7f94644be200>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
___________________ TestHeaders.test_unset_header[asgi-True] ___________________

self = <test_headers.TestHeaders object at 0x7f942b1a9720>
client = <falcon.testing.client.TestClient object at 0x7f9414e957b0>
with_double_quotes = True

    @pytest.mark.parametrize('with_double_quotes', [True, False])
    def test_unset_header(self, client, with_double_quotes):
>       client.app.add_route('/', RemoveHeaderResource(with_double_quotes))

tests/test_headers.py:414: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f95697eb680>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569707e20>, 'CHECK...7e20>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569707e20>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method RemoveHeaderResource.on_get of <test_headers.RemoveHeaderResource object at 0x7f9414e96a40>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestHeaders.test_content_disposition_inline_header[asgi-report.csv-inline; filename="report.csv"] _

self = <test_headers.TestHeaders object at 0x7f942b1aba90>
client = <falcon.testing.client.TestClient object at 0x7f94644bf820>
filename = 'report.csv', expected = 'inline; filename="report.csv"'

    @pytest.mark.parametrize(
        'filename,expected',
        [
            ('report.csv', 'inline; filename="report.csv"'),
            ('Hello World.txt', 'inline; filename="Hello World.txt"'),
            (
                'Bold Digit 𝟏.txt',
                'inline; filename=Bold_Digit_1.txt; '
                "filename*=UTF-8''Bold%20Digit%20%F0%9D%9F%8F.txt",
            ),
        ],
    )
    def test_content_disposition_inline_header(self, client, filename, expected):
        resource = ViewableResource(filename)
>       client.app.add_route('/', resource)

tests/test_headers.py:642: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f9569837e60>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95697055a0>, 'CHECK...55a0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95697055a0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method ViewableResource.on_get of <test_headers.ViewableResource object at 0x7f94644bf460>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
____________________ TestHeaders.test_expires_header[asgi] _____________________

self = <test_headers.TestHeaders object at 0x7f942b1a8c10>
client = <falcon.testing.client.TestClient object at 0x7f94645e6140>

    def test_expires_header(self, client):
        expires = datetime(2013, 1, 1, 10, 30, 30)
>       client.app.add_route('/', ExpiresHeaderResource(expires))

tests/test_headers.py:363: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f956a90b610>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569707490>, 'CHECK...7490>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569707490>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method ExpiresHeaderResource.on_get of <test_headers.ExpiresHeaderResource object at 0x7f94645e4c70>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
___________________ TestHeaders.test_get_header_as_int[asgi] ___________________

self = <test_headers.TestHeaders object at 0x7f942b1a8e80>
client = <falcon.testing.client.TestClient object at 0x7f941552cb80>

    def test_get_header_as_int(self, client):
        resource = testing.SimpleTestResource(body=SAMPLE_BODY)
>       client.app.add_route('/', resource)

tests/test_headers.py:370: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f95696d8ac0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569706950>, 'CHECK...6950>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569706950>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method SimpleTestResource.on_get of <falcon.testing.resource.SimpleTestResource object at 0x7f941552db10>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
________________ TestHeaders.test_append_link_with_title[asgi] _________________

self = <test_headers.TestHeaders object at 0x7f942afee830>
client = <falcon.testing.client.TestClient object at 0x7f9569323c70>

    def test_append_link_with_title(self, client):
        expected_value = '</related/thing>; rel=item; title="A related thing"'
    
        resource = LinkHeaderResource()
        resource.append_link('/related/thing', 'item', title='A related thing')
    
>       self._check_link_header(client, resource, expected_value)

tests/test_headers.py:888: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_headers.py:1060: in _check_link_header
    self._check_header(client, resource, 'Link', expected_value)
tests/test_headers.py:1063: in _check_header
    client.app.add_route('/', resource)
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f95696db7d0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569705480>, 'CHECK...5480>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569705480>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method LinkHeaderResource.on_get of <test_headers.LinkHeaderResource object at 0x7f95693206a0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
__________________ TestHeaders.test_unset_header[asgi-False] ___________________

self = <test_headers.TestHeaders object at 0x7f942b1a97e0>
client = <falcon.testing.client.TestClient object at 0x7f95695e7a90>
with_double_quotes = False

    @pytest.mark.parametrize('with_double_quotes', [True, False])
    def test_unset_header(self, client, with_double_quotes):
>       client.app.add_route('/', RemoveHeaderResource(with_double_quotes))

tests/test_headers.py:414: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f956a9090e0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92ca60>, 'CHECK...ca60>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92ca60>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method RemoveHeaderResource.on_get of <test_headers.RemoveHeaderResource object at 0x7f95695e7250>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
__________________ TestHeaders.test_append_link_complex[asgi] __________________

self = <test_headers.TestHeaders object at 0x7f942afef430>
client = <falcon.testing.client.TestClient object at 0x7f95693225f0>

    def test_append_link_complex(self, client):
        expected_value = (
            '</related/thing>; rel=alternate; '
            'title="A related thing"; '
            "title*=UTF-8'en'A%20%C3%A7runchy%20thing; "
            'type="application/json"; '
            'hreflang=en-GB; hreflang=de'
        )
    
        resource = LinkHeaderResource()
        resource.append_link(
            '/related/thing',
            'alternate',
            title='A related thing',
            hreflang=('en-GB', 'de'),
            type_hint='application/json',
            title_star=('en', 'A \u00e7runchy thing'),
        )
    
>       self._check_link_header(client, resource, expected_value)

tests/test_headers.py:964: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_headers.py:1060: in _check_link_header
    self._check_header(client, resource, 'Link', expected_value)
tests/test_headers.py:1063: in _check_header
    client.app.add_route('/', resource)
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f956a90c890>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569704430>, 'CHECK...4430>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569704430>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method LinkHeaderResource.on_get of <test_headers.LinkHeaderResource object at 0x7f9569321db0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestHeaders.test_override_default_media_type[text/plain; charset=UTF-8-Hello Unicode! \U0001f638-True] _

self = <test_headers.TestHeaders object at 0x7f942b1aa8f0>, asgi = True
client = <falcon.testing.client.TestClient object at 0x7f941560bf40>
content_type = 'text/plain; charset=UTF-8', body = 'Hello Unicode! 😸'

    @pytest.mark.parametrize('asgi', [True, False])
    @pytest.mark.parametrize(
        'content_type,body',
        [
            ('text/plain; charset=UTF-8', 'Hello Unicode! \U0001F638'),
            # NOTE(kgriffs): This only works because the client defaults to
            # ISO-8859-1 IFF the media type is 'text'.
            ('text/plain', 'Hello ISO-8859-1!'),
        ],
    )
    def test_override_default_media_type(self, asgi, client, content_type, body):
        client.app = create_app(asgi=asgi, media_type=content_type)
>       client.app.add_route('/', testing.SimpleTestResource(body=body))

tests/test_headers.py:509: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f956a90edc0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569705480>, 'CHECK...5480>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569705480>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method SimpleTestResource.on_get of <falcon.testing.resource.SimpleTestResource object at 0x7f9415609480>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
____________________ TestHeaders.test_headers_as_list[asgi] ____________________

self = <test_headers.TestHeaders object at 0x7f942b1a8eb0>
client = <falcon.testing.client.TestClient object at 0x7f9569347700>

    def test_headers_as_list(self, client):
        headers = [
            ('Client-ID', '692ba466-74bb-11e3-bf3f-7567c531c7ca'),
            ('Accept', 'audio/*; q=0.2, audio/basic'),
        ]
    
        # Unit test
        environ = testing.create_environ(headers=headers)
        req = falcon.Request(environ)
    
        for name, value in headers:
            assert (name.upper(), value) in req.headers.items()
            assert (name.lower(), value) in req.headers_lower.items()
    
        # Functional test
>       client.app.add_route('/', testing.SimpleTestResource(headers=headers))

tests/test_headers.py:487: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f95697e8430>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95697053f0>, 'CHECK...53f0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95697053f0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method SimpleTestResource.on_get of <falcon.testing.resource.SimpleTestResource object at 0x7f9569347520>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
______________ TestHeaders.test_passthrough_request_headers[asgi] ______________

self = <test_headers.TestHeaders object at 0x7f942b1a9ff0>
client = <falcon.testing.client.TestClient object at 0x7f9415608610>

    def test_passthrough_request_headers(self, client):
        resource = testing.SimpleTestResource(body=SAMPLE_BODY)
>       client.app.add_route('/', resource)

tests/test_headers.py:451: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f956a90e730>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569704a60>, 'CHECK...4a60>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569704a60>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method SimpleTestResource.on_get of <falcon.testing.resource.SimpleTestResource object at 0x7f941560b1f0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestHeaders.test_append_link_crossorigin[asgi-anonymous-</related/thing>; rel=alternate; crossorigin] _

self = <test_headers.TestHeaders object at 0x7f942afefb50>
client = <falcon.testing.client.TestClient object at 0x7f956977f160>
crossorigin = 'anonymous'
expected_value = '</related/thing>; rel=alternate; crossorigin'

    @pytest.mark.parametrize(
        'crossorigin,expected_value',
        [
            (None, '</related/thing>; rel=alternate'),
            ('anonymous', '</related/thing>; rel=alternate; crossorigin'),
            ('Anonymous', '</related/thing>; rel=alternate; crossorigin'),
            ('AnOnYmOUs', '</related/thing>; rel=alternate; crossorigin'),
            (
                'Use-Credentials',
                '</related/thing>; rel=alternate; crossorigin="use-credentials"',
            ),
            (
                'use-credentials',
                '</related/thing>; rel=alternate; crossorigin="use-credentials"',
            ),
        ],
    )
    def test_append_link_crossorigin(self, client, crossorigin, expected_value):
        resource = LinkHeaderResource()
        resource.append_link('/related/thing', 'alternate', crossorigin=crossorigin)
    
>       self._check_link_header(client, resource, expected_value)

tests/test_headers.py:987: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_headers.py:1060: in _check_link_header
    self._check_header(client, resource, 'Link', expected_value)
tests/test_headers.py:1063: in _check_header
    client.app.add_route('/', resource)
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f956a90fc30>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92cc10>, 'CHECK...cc10>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92cc10>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method LinkHeaderResource.on_get of <test_headers.LinkHeaderResource object at 0x7f956977ee90>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
___ TestHeaders.test_declared_content_length_overriden_by_body_length[asgi] ____

self = <test_headers.TestHeaders object at 0x7f942b1a8850>
client = <falcon.testing.client.TestClient object at 0x7f95696346d0>

    def test_declared_content_length_overriden_by_body_length(self, client):
        resource = ContentLengthHeaderResource(42, body=SAMPLE_BODY)
>       client.app.add_route('/', resource)

tests/test_headers.py:347: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f956a90ec00>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92cca0>, 'CHECK...cca0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92cca0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method ContentLengthHeaderResource.on_get of <test_headers.ContentLengthHeaderResource object at 0x7f9569635ae0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
________________ TestHeaders.test_response_append_header[asgi] _________________

self = <test_headers.TestHeaders object at 0x7f942afecaf0>
client = <falcon.testing.client.TestClient object at 0x7f95694af2b0>

    def test_response_append_header(self, client):
>       client.app.add_route('/', AppendHeaderResource())

tests/test_headers.py:781: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f956a90ad50>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92d5a0>, 'CHECK...d5a0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92d5a0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method AppendHeaderResource.on_get of <test_headers.AppendHeaderResource object at 0x7f95694af220>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestHeaders.test_append_link_crossorigin[asgi-AnOnYmOUs-</related/thing>; rel=alternate; crossorigin] _

self = <test_headers.TestHeaders object at 0x7f942afefc70>
client = <falcon.testing.client.TestClient object at 0x7f9569454cd0>
crossorigin = 'AnOnYmOUs'
expected_value = '</related/thing>; rel=alternate; crossorigin'

    @pytest.mark.parametrize(
        'crossorigin,expected_value',
        [
            (None, '</related/thing>; rel=alternate'),
            ('anonymous', '</related/thing>; rel=alternate; crossorigin'),
            ('Anonymous', '</related/thing>; rel=alternate; crossorigin'),
            ('AnOnYmOUs', '</related/thing>; rel=alternate; crossorigin'),
            (
                'Use-Credentials',
                '</related/thing>; rel=alternate; crossorigin="use-credentials"',
            ),
            (
                'use-credentials',
                '</related/thing>; rel=alternate; crossorigin="use-credentials"',
            ),
        ],
    )
    def test_append_link_crossorigin(self, client, crossorigin, expected_value):
        resource = LinkHeaderResource()
        resource.append_link('/related/thing', 'alternate', crossorigin=crossorigin)
    
>       self._check_link_header(client, resource, expected_value)

tests/test_headers.py:987: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_headers.py:1060: in _check_link_header
    self._check_header(client, resource, 'Link', expected_value)
tests/test_headers.py:1063: in _check_header
    client.app.add_route('/', resource)
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f956a90d7e0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569704790>, 'CHECK...4790>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569704790>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method LinkHeaderResource.on_get of <test_headers.LinkHeaderResource object at 0x7f9569455d50>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_______________ TestHeaders.test_unicode_location_headers[asgi] ________________

self = <test_headers.TestHeaders object at 0x7f942afec0d0>
client = <falcon.testing.client.TestClient object at 0x7f95698222f0>

    def test_unicode_location_headers(self, client):
>       client.app.add_route('/', LocationHeaderUnicodeResource())

tests/test_headers.py:686: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f956a90fed0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92d120>, 'CHECK...d120>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92d120>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method LocationHeaderUnicodeResource.on_get of <test_headers.LocationHeaderUnicodeResource object at 0x7f9569822ef0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
____________ TestHeaders.test_append_link_with_hreflang_multi[asgi] ____________

self = <test_headers.TestHeaders object at 0x7f942afeef50>
client = <falcon.testing.client.TestClient object at 0x7f956a9efa90>

    def test_append_link_with_hreflang_multi(self, client):
        expected_value = '</related/thing>; rel=about; hreflang=en-GB; hreflang=de'
    
        resource = LinkHeaderResource()
        resource.append_link('/related/thing', 'about', hreflang=('en-GB', 'de'))
    
>       self._check_link_header(client, resource, expected_value)

tests/test_headers.py:931: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_headers.py:1060: in _check_link_header
    self._check_header(client, resource, 'Link', expected_value)
tests/test_headers.py:1063: in _check_header
    client.app.add_route('/', resource)
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f956a90e5e0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92e050>, 'CHECK...e050>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92e050>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method LinkHeaderResource.on_get of <test_headers.LinkHeaderResource object at 0x7f956a9eeda0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
____________ TestHeaders.test_no_content_type[asgi-204 No Content] _____________

self = <test_headers.TestHeaders object at 0x7f942afee0e0>
client = <falcon.testing.client.TestClient object at 0x7f95695e70a0>
status = '204 No Content'

    @pytest.mark.parametrize('status', (falcon.HTTP_204, falcon.HTTP_304))
    def test_no_content_type(self, client, status):
>       client.app.add_route('/', testing.SimpleTestResource(status=status))

tests/test_headers.py:842: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f956a90a340>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92e4d0>, 'CHECK...e4d0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92e4d0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method SimpleTestResource.on_get of <falcon.testing.resource.SimpleTestResource object at 0x7f95695e5bd0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestHeaders.test_append_link_crossorigin[asgi-use-credentials-</related/thing>; rel=alternate; crossorigin="use-credentials"] _

self = <test_headers.TestHeaders object at 0x7f942afefd90>
client = <falcon.testing.client.TestClient object at 0x7f956a9ef730>
crossorigin = 'use-credentials'
expected_value = '</related/thing>; rel=alternate; crossorigin="use-credentials"'

    @pytest.mark.parametrize(
        'crossorigin,expected_value',
        [
            (None, '</related/thing>; rel=alternate'),
            ('anonymous', '</related/thing>; rel=alternate; crossorigin'),
            ('Anonymous', '</related/thing>; rel=alternate; crossorigin'),
            ('AnOnYmOUs', '</related/thing>; rel=alternate; crossorigin'),
            (
                'Use-Credentials',
                '</related/thing>; rel=alternate; crossorigin="use-credentials"',
            ),
            (
                'use-credentials',
                '</related/thing>; rel=alternate; crossorigin="use-credentials"',
            ),
        ],
    )
    def test_append_link_crossorigin(self, client, crossorigin, expected_value):
        resource = LinkHeaderResource()
        resource.append_link('/related/thing', 'alternate', crossorigin=crossorigin)
    
>       self._check_link_header(client, resource, expected_value)

tests/test_headers.py:987: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_headers.py:1060: in _check_link_header
    self._check_header(client, resource, 'Link', expected_value)
tests/test_headers.py:1063: in _check_header
    client.app.add_route('/', resource)
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f95696daea0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92ec20>, 'CHECK...ec20>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92ec20>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method LinkHeaderResource.on_get of <test_headers.LinkHeaderResource object at 0x7f956a9eded0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_____________________ TestHeaders.test_default_value[asgi] _____________________

self = <test_headers.TestHeaders object at 0x7f942b1a90f0>
client = <falcon.testing.client.TestClient object at 0x7f95695e4d60>

    def test_default_value(self, client):
        resource = testing.SimpleTestResource(body=SAMPLE_BODY)
>       client.app.add_route('/', resource)

tests/test_headers.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f956a90c350>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92ecb0>, 'CHECK...ecb0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92ecb0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method SimpleTestResource.on_get of <falcon.testing.resource.SimpleTestResource object at 0x7f95695e5d80>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
________ TestHeaders.test_unicode_headers_contain_non_ascii[asgi-POST] _________

self = <test_headers.TestHeaders object at 0x7f942afec730>, method = 'POST'
client = <falcon.testing.client.TestClient object at 0x7f941579bee0>

    @pytest.mark.parametrize('method', ['CONNECT', 'PATCH', 'POST', 'PUT'])
    def test_unicode_headers_contain_non_ascii(self, method, client):
        app = client.app
>       app.add_route('/', UnicodeHeaderResource())

tests/test_headers.py:709: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f956a90e810>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92dcf0>, 'CHECK...be0>>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92dcf0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method UnicodeHeaderResource.on_connect of <test_headers.UnicodeHeaderResource object at 0x7f942b28fbe0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestHeaders.test_content_disposition_attachment_header[asgi-one,two.txt-attachment; filename="one,two.txt"] _

self = <test_headers.TestHeaders object at 0x7f942b1a90c0>
client = <falcon.testing.client.TestClient object at 0x7f95696a0dc0>
filename = 'one,two.txt', expected = 'attachment; filename="one,two.txt"'

    @pytest.mark.parametrize(
        'filename,expected',
        [
            ('report.csv', 'attachment; filename="report.csv"'),
            ('Hello World.txt', 'attachment; filename="Hello World.txt"'),
            (
                'Bold Digit 𝟏.txt',
                'attachment; filename=Bold_Digit_1.txt; '
                "filename*=UTF-8''Bold%20Digit%20%F0%9D%9F%8F.txt",
            ),
            (
                'Ångström unit.txt',
                'attachment; filename=A_ngstro_m_unit.txt; '
                "filename*=UTF-8''%C3%85ngstr%C3%B6m%20unit.txt",
            ),
            ('one,two.txt', 'attachment; filename="one,two.txt"'),
            (
                '½,²⁄₂.txt',
                'attachment; filename=1_2_2_2.txt; '
                "filename*=UTF-8''%C2%BD%2C%C2%B2%E2%81%84%E2%82%82.txt",
            ),
            ('[foo] @ bar.txt', 'attachment; filename="[foo] @ bar.txt"'),
            (
                '[fòó]@bàr,bäz.txt',
                'attachment; filename=_fo_o___ba_r_ba_z.txt; '
                "filename*=UTF-8''%5Bf%C3%B2%C3%B3%5D%40b%C3%A0r%2Cb%C3%A4z.txt",
            ),
        ],
    )
    def test_content_disposition_attachment_header(self, client, filename, expected):
        resource = DownloadableResource(filename)
>       client.app.add_route('/', resource)

tests/test_headers.py:622: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f956a90b220>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92c4c0>, 'CHECK...c4c0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92c4c0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method DownloadableResource.on_get of <test_headers.DownloadableResource object at 0x7f94156e7910>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
__________ TestHeaders.test_no_content_length[asgi-304 Not Modified] ___________

self = <test_headers.TestHeaders object at 0x7f942b1a9e10>
client = <falcon.testing.client.TestClient object at 0x7f95694df340>
status = '304 Not Modified'

    @pytest.mark.parametrize('status', (falcon.HTTP_204, falcon.HTTP_304))
    def test_no_content_length(self, client, status):
>       client.app.add_route('/xxx', testing.SimpleTestResource(status=status))

tests/test_headers.py:437: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f956a964190>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92f640>, 'CHECK...f640>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92f640>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method SimpleTestResource.on_get of <falcon.testing.resource.SimpleTestResource object at 0x7f95694dcc70>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
________ TestHeaders.test_headers_with_custom_class_not_callable[asgi] _________

self = <test_headers.TestHeaders object at 0x7f942b0349d0>
client = <falcon.testing.client.TestClient object at 0x7f95695ca590>

    def test_headers_with_custom_class_not_callable(self, client):
>       client.app.add_route('/', CustomHeadersResource())

tests/test_headers.py:1031: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f956a9668f0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92cee0>, 'CHECK...cee0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92cee0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method CustomHeadersResource.on_get of <test_headers.CustomHeadersResource object at 0x7f95695cacb0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
___ TestHeaders.test_declared_content_length_overriden_by_data_length[asgi] ____

self = <test_headers.TestHeaders object at 0x7f942b1a8880>
client = <falcon.testing.client.TestClient object at 0x7f95694de1a0>

    def test_declared_content_length_overriden_by_data_length(self, client):
        data = SAMPLE_BODY.encode()
    
        resource = ContentLengthHeaderResource(42, data=data)
>       client.app.add_route('/', resource)

tests/test_headers.py:356: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f956a9650e0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92c310>, 'CHECK...c310>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92c310>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method ContentLengthHeaderResource.on_get of <test_headers.ContentLengthHeaderResource object at 0x7f95694dc100>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestHeaders.test_content_disposition_inline_header[asgi-Hello World.txt-inline; filename="Hello World.txt"] _

self = <test_headers.TestHeaders object at 0x7f942b1abb20>
client = <falcon.testing.client.TestClient object at 0x7f9569400430>
filename = 'Hello World.txt', expected = 'inline; filename="Hello World.txt"'

    @pytest.mark.parametrize(
        'filename,expected',
        [
            ('report.csv', 'inline; filename="report.csv"'),
            ('Hello World.txt', 'inline; filename="Hello World.txt"'),
            (
                'Bold Digit 𝟏.txt',
                'inline; filename=Bold_Digit_1.txt; '
                "filename*=UTF-8''Bold%20Digit%20%F0%9D%9F%8F.txt",
            ),
        ],
    )
    def test_content_disposition_inline_header(self, client, filename, expected):
        resource = ViewableResource(filename)
>       client.app.add_route('/', resource)

tests/test_headers.py:642: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f956a965e00>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92e170>, 'CHECK...e170>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92e170>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method ViewableResource.on_get of <test_headers.ViewableResource object at 0x7f9569401c00>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
________________ TestHeaders.test_request_multiple_header[asgi] ________________

self = <test_headers.TestHeaders object at 0x7f942b034c10>
client = <falcon.testing.client.TestClient object at 0x7f956935ddb0>

    def test_request_multiple_header(self, client):
        resource = HeaderHelpersResource()
>       client.app.add_route('/', resource)

tests/test_headers.py:1039: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f95696da8f0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92dbd0>, 'CHECK...dbd0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92dbd0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method HeaderHelpersResource.on_get of <test_headers.HeaderHelpersResource object at 0x7f956935caf0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
______________ TestHeaders.test_response_set_and_get_header[asgi] ______________

self = <test_headers.TestHeaders object at 0x7f942afecac0>
client = <falcon.testing.client.TestClient object at 0x7f941550a4d0>

    def test_response_set_and_get_header(self, client):
        resource = HeaderHelpersResource()
>       client.app.add_route('/', resource)

tests/test_headers.py:745: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f956a90f060>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92c820>, 'CHECK...c820>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92c820>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method HeaderHelpersResource.on_get of <test_headers.HeaderHelpersResource object at 0x7f941550ace0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestHeaders.test_content_disposition_inline_header[asgi-Bold Digit \U0001d7cf.txt-inline; filename=Bold_Digit_1.txt; filename*=UTF-8''Bold%20Digit%20%F0%9D%9F%8F.txt] _

self = <test_headers.TestHeaders object at 0x7f942b1abbb0>
client = <falcon.testing.client.TestClient object at 0x7f956a9d20e0>
filename = 'Bold Digit 𝟏.txt'
expected = "inline; filename=Bold_Digit_1.txt; filename*=UTF-8''Bold%20Digit%20%F0%9D%9F%8F.txt"

    @pytest.mark.parametrize(
        'filename,expected',
        [
            ('report.csv', 'inline; filename="report.csv"'),
            ('Hello World.txt', 'inline; filename="Hello World.txt"'),
            (
                'Bold Digit 𝟏.txt',
                'inline; filename=Bold_Digit_1.txt; '
                "filename*=UTF-8''Bold%20Digit%20%F0%9D%9F%8F.txt",
            ),
        ],
    )
    def test_content_disposition_inline_header(self, client, filename, expected):
        resource = ViewableResource(filename)
>       client.app.add_route('/', resource)

tests/test_headers.py:642: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f956a90c5f0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92c0d0>, 'CHECK...c0d0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92c0d0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method ViewableResource.on_get of <test_headers.ViewableResource object at 0x7f956a9d01f0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
__________________ TestHeaders.test_append_link_single[asgi] ___________________

self = <test_headers.TestHeaders object at 0x7f942afee380>
client = <falcon.testing.client.TestClient object at 0x7f95696341c0>

    def test_append_link_single(self, client):
        expected_value = '</things/2842>; rel=next'
    
        resource = LinkHeaderResource()
        resource.append_link('/things/2842', 'next')
    
>       self._check_link_header(client, resource, expected_value)

tests/test_headers.py:858: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_headers.py:1060: in _check_link_header
    self._check_header(client, resource, 'Link', expected_value)
tests/test_headers.py:1063: in _check_header
    client.app.add_route('/', resource)
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f956a966340>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92cc10>, 'CHECK...cc10>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92cc10>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method LinkHeaderResource.on_get of <test_headers.LinkHeaderResource object at 0x7f9569635000>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestHeaders.test_content_disposition_attachment_header[asgi-[foo] @ bar.txt-attachment; filename="[foo] @ bar.txt"] _

self = <test_headers.TestHeaders object at 0x7f942b1ab310>
client = <falcon.testing.client.TestClient object at 0x7f941543e2c0>
filename = '[foo] @ bar.txt'
expected = 'attachment; filename="[foo] @ bar.txt"'

    @pytest.mark.parametrize(
        'filename,expected',
        [
            ('report.csv', 'attachment; filename="report.csv"'),
            ('Hello World.txt', 'attachment; filename="Hello World.txt"'),
            (
                'Bold Digit 𝟏.txt',
                'attachment; filename=Bold_Digit_1.txt; '
                "filename*=UTF-8''Bold%20Digit%20%F0%9D%9F%8F.txt",
            ),
            (
                'Ångström unit.txt',
                'attachment; filename=A_ngstro_m_unit.txt; '
                "filename*=UTF-8''%C3%85ngstr%C3%B6m%20unit.txt",
            ),
            ('one,two.txt', 'attachment; filename="one,two.txt"'),
            (
                '½,²⁄₂.txt',
                'attachment; filename=1_2_2_2.txt; '
                "filename*=UTF-8''%C2%BD%2C%C2%B2%E2%81%84%E2%82%82.txt",
            ),
            ('[foo] @ bar.txt', 'attachment; filename="[foo] @ bar.txt"'),
            (
                '[fòó]@bàr,bäz.txt',
                'attachment; filename=_fo_o___ba_r_ba_z.txt; '
                "filename*=UTF-8''%5Bf%C3%B2%C3%B3%5D%40b%C3%A0r%2Cb%C3%A4z.txt",
            ),
        ],
    )
    def test_content_disposition_attachment_header(self, client, filename, expected):
        resource = DownloadableResource(filename)
>       client.app.add_route('/', resource)

tests/test_headers.py:622: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f956a9647b0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92c550>, 'CHECK...c550>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92c550>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method DownloadableResource.on_get of <test_headers.DownloadableResource object at 0x7f941543d270>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestHeaders.test_content_disposition_attachment_header[asgi-\xc5ngstr\xf6m unit.txt-attachment; filename=A_ngstro_m_unit.txt; filename*=UTF-8''%C3%85ngstr%C3%B6m%20unit.txt] _

self = <test_headers.TestHeaders object at 0x7f942b1aa230>
client = <falcon.testing.client.TestClient object at 0x7f9569820340>
filename = 'Ångström unit.txt'
expected = "attachment; filename=A_ngstro_m_unit.txt; filename*=UTF-8''%C3%85ngstr%C3%B6m%20unit.txt"

    @pytest.mark.parametrize(
        'filename,expected',
        [
            ('report.csv', 'attachment; filename="report.csv"'),
            ('Hello World.txt', 'attachment; filename="Hello World.txt"'),
            (
                'Bold Digit 𝟏.txt',
                'attachment; filename=Bold_Digit_1.txt; '
                "filename*=UTF-8''Bold%20Digit%20%F0%9D%9F%8F.txt",
            ),
            (
                'Ångström unit.txt',
                'attachment; filename=A_ngstro_m_unit.txt; '
                "filename*=UTF-8''%C3%85ngstr%C3%B6m%20unit.txt",
            ),
            ('one,two.txt', 'attachment; filename="one,two.txt"'),
            (
                '½,²⁄₂.txt',
                'attachment; filename=1_2_2_2.txt; '
                "filename*=UTF-8''%C2%BD%2C%C2%B2%E2%81%84%E2%82%82.txt",
            ),
            ('[foo] @ bar.txt', 'attachment; filename="[foo] @ bar.txt"'),
            (
                '[fòó]@bàr,bäz.txt',
                'attachment; filename=_fo_o___ba_r_ba_z.txt; '
                "filename*=UTF-8''%5Bf%C3%B2%C3%B3%5D%40b%C3%A0r%2Cb%C3%A4z.txt",
            ),
        ],
    )
    def test_content_disposition_attachment_header(self, client, filename, expected):
        resource = DownloadableResource(filename)
>       client.app.add_route('/', resource)

tests/test_headers.py:622: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f956a967220>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92e9e0>, 'CHECK...e9e0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92e9e0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method DownloadableResource.on_get of <test_headers.DownloadableResource object at 0x7f9569820e80>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
____ TestHeaders.test_vary_header[asgi-vary1-accept-encoding, x-auth-token] ____

self = <test_headers.TestHeaders object at 0x7f942afedb70>
client = <falcon.testing.client.TestClient object at 0x7f95695c9900>
vary = ('accept-encoding', 'x-auth-token')
expected_value = 'accept-encoding, x-auth-token'

    @pytest.mark.parametrize(
        'vary,expected_value',
        [
            (['accept-encoding'], 'accept-encoding'),
            (('accept-encoding', 'x-auth-token'), 'accept-encoding, x-auth-token'),
        ],
    )
    def test_vary_header(self, client, vary, expected_value):
        resource = VaryHeaderResource(vary)
>       self._check_header(client, resource, 'Vary', expected_value)

tests/test_headers.py:829: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_headers.py:1063: in _check_header
    client.app.add_route('/', resource)
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f95696db7d0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92ca60>, 'CHECK...ca60>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92ca60>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method VaryHeaderResource.on_get of <test_headers.VaryHeaderResource object at 0x7f95695ca080>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestHeaders.test_content_disposition_attachment_header[asgi-\xbd,\xb2\u2044\u2082.txt-attachment; filename=1_2_2_2.txt; filename*=UTF-8''%C2%BD%2C%C2%B2%E2%81%84%E2%82%82.txt] _

self = <test_headers.TestHeaders object at 0x7f942b1ab250>
client = <falcon.testing.client.TestClient object at 0x7f94155d3ca0>
filename = '½,²⁄₂.txt'
expected = "attachment; filename=1_2_2_2.txt; filename*=UTF-8''%C2%BD%2C%C2%B2%E2%81%84%E2%82%82.txt"

    @pytest.mark.parametrize(
        'filename,expected',
        [
            ('report.csv', 'attachment; filename="report.csv"'),
            ('Hello World.txt', 'attachment; filename="Hello World.txt"'),
            (
                'Bold Digit 𝟏.txt',
                'attachment; filename=Bold_Digit_1.txt; '
                "filename*=UTF-8''Bold%20Digit%20%F0%9D%9F%8F.txt",
            ),
            (
                'Ångström unit.txt',
                'attachment; filename=A_ngstro_m_unit.txt; '
                "filename*=UTF-8''%C3%85ngstr%C3%B6m%20unit.txt",
            ),
            ('one,two.txt', 'attachment; filename="one,two.txt"'),
            (
                '½,²⁄₂.txt',
                'attachment; filename=1_2_2_2.txt; '
                "filename*=UTF-8''%C2%BD%2C%C2%B2%E2%81%84%E2%82%82.txt",
            ),
            ('[foo] @ bar.txt', 'attachment; filename="[foo] @ bar.txt"'),
            (
                '[fòó]@bàr,bäz.txt',
                'attachment; filename=_fo_o___ba_r_ba_z.txt; '
                "filename*=UTF-8''%5Bf%C3%B2%C3%B3%5D%40b%C3%A0r%2Cb%C3%A4z.txt",
            ),
        ],
    )
    def test_content_disposition_attachment_header(self, client, filename, expected):
        resource = DownloadableResource(filename)
>       client.app.add_route('/', resource)

tests/test_headers.py:622: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f956a90ed50>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92fb50>, 'CHECK...fb50>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92fb50>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method DownloadableResource.on_get of <test_headers.DownloadableResource object at 0x7f94155d0100>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestHeaders.test_content_disposition_attachment_header[asgi-Bold Digit \U0001d7cf.txt-attachment; filename=Bold_Digit_1.txt; filename*=UTF-8''Bold%20Digit%20%F0%9D%9F%8F.txt] _

self = <test_headers.TestHeaders object at 0x7f942b1aa6b0>
client = <falcon.testing.client.TestClient object at 0x7f95697ba6e0>
filename = 'Bold Digit 𝟏.txt'
expected = "attachment; filename=Bold_Digit_1.txt; filename*=UTF-8''Bold%20Digit%20%F0%9D%9F%8F.txt"

    @pytest.mark.parametrize(
        'filename,expected',
        [
            ('report.csv', 'attachment; filename="report.csv"'),
            ('Hello World.txt', 'attachment; filename="Hello World.txt"'),
            (
                'Bold Digit 𝟏.txt',
                'attachment; filename=Bold_Digit_1.txt; '
                "filename*=UTF-8''Bold%20Digit%20%F0%9D%9F%8F.txt",
            ),
            (
                'Ångström unit.txt',
                'attachment; filename=A_ngstro_m_unit.txt; '
                "filename*=UTF-8''%C3%85ngstr%C3%B6m%20unit.txt",
            ),
            ('one,two.txt', 'attachment; filename="one,two.txt"'),
            (
                '½,²⁄₂.txt',
                'attachment; filename=1_2_2_2.txt; '
                "filename*=UTF-8''%C2%BD%2C%C2%B2%E2%81%84%E2%82%82.txt",
            ),
            ('[foo] @ bar.txt', 'attachment; filename="[foo] @ bar.txt"'),
            (
                '[fòó]@bàr,bäz.txt',
                'attachment; filename=_fo_o___ba_r_ba_z.txt; '
                "filename*=UTF-8''%5Bf%C3%B2%C3%B3%5D%40b%C3%A0r%2Cb%C3%A4z.txt",
            ),
        ],
    )
    def test_content_disposition_attachment_header(self, client, filename, expected):
        resource = DownloadableResource(filename)
>       client.app.add_route('/', resource)

tests/test_headers.py:622: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f956a90b680>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a954550>, 'CHECK...4550>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a954550>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method DownloadableResource.on_get of <test_headers.DownloadableResource object at 0x7f95697ba950>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_______ TestHeaders.test_unicode_headers_contain_non_ascii[asgi-CONNECT] _______

self = <test_headers.TestHeaders object at 0x7f942b1ab910>, method = 'CONNECT'
client = <falcon.testing.client.TestClient object at 0x7f95694ae0e0>

    @pytest.mark.parametrize('method', ['CONNECT', 'PATCH', 'POST', 'PUT'])
    def test_unicode_headers_contain_non_ascii(self, method, client):
        app = client.app
>       app.add_route('/', UnicodeHeaderResource())

tests/test_headers.py:709: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f956a9080b0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92f250>, 'CHECK...f80>>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92f250>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method UnicodeHeaderResource.on_connect of <test_headers.UnicodeHeaderResource object at 0x7f95694aef80>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
________________ TestHeaders.test_request_latin1_headers[asgi] _________________

self = <test_headers.TestHeaders object at 0x7f942b1ab940>
client = <falcon.testing.client.TestClient object at 0x7f9569588ac0>

    def test_request_latin1_headers(self, client):
>       client.app.add_route('/headers', HeadersDebugResource())

tests/test_headers.py:649: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f956984cf90>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a955ab0>, 'CHECK...5ab0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a955ab0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method HeadersDebugResource.on_get of <test_headers.HeadersDebugResource object at 0x7f956958a560>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestHeaders.test_append_link_crossorigin[asgi-Use-Credentials-</related/thing>; rel=alternate; crossorigin="use-credentials"] _

self = <test_headers.TestHeaders object at 0x7f942afefd00>
client = <falcon.testing.client.TestClient object at 0x7f956989c760>
crossorigin = 'Use-Credentials'
expected_value = '</related/thing>; rel=alternate; crossorigin="use-credentials"'

    @pytest.mark.parametrize(
        'crossorigin,expected_value',
        [
            (None, '</related/thing>; rel=alternate'),
            ('anonymous', '</related/thing>; rel=alternate; crossorigin'),
            ('Anonymous', '</related/thing>; rel=alternate; crossorigin'),
            ('AnOnYmOUs', '</related/thing>; rel=alternate; crossorigin'),
            (
                'Use-Credentials',
                '</related/thing>; rel=alternate; crossorigin="use-credentials"',
            ),
            (
                'use-credentials',
                '</related/thing>; rel=alternate; crossorigin="use-credentials"',
            ),
        ],
    )
    def test_append_link_crossorigin(self, client, crossorigin, expected_value):
        resource = LinkHeaderResource()
        resource.append_link('/related/thing', 'alternate', crossorigin=crossorigin)
    
>       self._check_link_header(client, resource, expected_value)

tests/test_headers.py:987: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_headers.py:1060: in _check_link_header
    self._check_header(client, resource, 'Link', expected_value)
tests/test_headers.py:1063: in _check_header
    client.app.add_route('/', resource)
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f956984d230>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92c700>, 'CHECK...c700>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92c700>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method LinkHeaderResource.on_get of <test_headers.LinkHeaderResource object at 0x7f956989d6c0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestHeaders.test_override_default_media_type[text/plain-Hello ISO-8859-1!-True] _

self = <test_headers.TestHeaders object at 0x7f942b1aaa10>, asgi = True
client = <falcon.testing.client.TestClient object at 0x7f94155d23e0>
content_type = 'text/plain', body = 'Hello ISO-8859-1!'

    @pytest.mark.parametrize('asgi', [True, False])
    @pytest.mark.parametrize(
        'content_type,body',
        [
            ('text/plain; charset=UTF-8', 'Hello Unicode! \U0001F638'),
            # NOTE(kgriffs): This only works because the client defaults to
            # ISO-8859-1 IFF the media type is 'text'.
            ('text/plain', 'Hello ISO-8859-1!'),
        ],
    )
    def test_override_default_media_type(self, asgi, client, content_type, body):
        client.app = create_app(asgi=asgi, media_type=content_type)
>       client.app.add_route('/', testing.SimpleTestResource(body=body))

tests/test_headers.py:509: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f956984f220>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a955fc0>, 'CHECK...5fc0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a955fc0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method SimpleTestResource.on_get of <falcon.testing.resource.SimpleTestResource object at 0x7f94155d20e0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
____________ TestHeaders.test_declared_content_length_on_head[asgi] ____________

self = <test_headers.TestHeaders object at 0x7f942b1a83a0>
client = <falcon.testing.client.TestClient object at 0x7f9569322aa0>

    def test_declared_content_length_on_head(self, client):
>       client.app.add_route('/', ContentLengthHeaderResource(42))

tests/test_headers.py:336: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f956984cd60>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92c040>, 'CHECK...c040>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92c040>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method ContentLengthHeaderResource.on_get of <test_headers.ContentLengthHeaderResource object at 0x7f95693232e0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
____________ TestHeaders.test_append_link_with_link_extension[asgi] ____________

self = <test_headers.TestHeaders object at 0x7f942b034550>
client = <falcon.testing.client.TestClient object at 0x7f9569345c90>

    def test_append_link_with_link_extension(self, client):
        expected_value = '</related/thing>; rel=item; sizes=72x72'
    
        resource = LinkHeaderResource()
        resource.append_link(
            '/related/thing', 'item', link_extension=[('sizes', '72x72')]
        )
    
>       self._check_link_header(client, resource, expected_value)

tests/test_headers.py:1014: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_headers.py:1060: in _check_link_header
    self._check_header(client, resource, 'Link', expected_value)
tests/test_headers.py:1063: in _check_header
    client.app.add_route('/', resource)
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f956984db60>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a954790>, 'CHECK...4790>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a954790>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method LinkHeaderResource.on_get of <test_headers.LinkHeaderResource object at 0x7f9569346200>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
____________________ TestHeaders.test_required_header[asgi] ____________________

self = <test_headers.TestHeaders object at 0x7f942b1a97b0>
client = <falcon.testing.client.TestClient object at 0x7f95696c1d20>

    def test_required_header(self, client):
        resource = testing.SimpleTestResource(body=SAMPLE_BODY)
>       client.app.add_route('/', resource)

tests/test_headers.py:422: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f956a90bf40>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a9565f0>, 'CHECK...65f0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a9565f0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method SimpleTestResource.on_get of <falcon.testing.resource.SimpleTestResource object at 0x7f95696c10f0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
______________ TestHeaders.test_append_link_with_title_star[asgi] ______________

self = <test_headers.TestHeaders object at 0x7f942afeeaa0>
client = <falcon.testing.client.TestClient object at 0x7f956970fca0>

    def test_append_link_with_title_star(self, client):
        expected_value = (
            '</related/thing>; rel=item; '
            "title*=UTF-8''A%20related%20thing, "
            '</%C3%A7runchy/thing>; rel=item; '
            "title*=UTF-8'en'A%20%C3%A7runchy%20thing"
        )
    
        resource = LinkHeaderResource()
        resource.append_link(
            '/related/thing', 'item', title_star=('', 'A related thing')
        )
    
        resource.append_link(
            '/\u00e7runchy/thing', 'item', title_star=('en', 'A \u00e7runchy thing')
        )
    
>       self._check_link_header(client, resource, expected_value)

tests/test_headers.py:907: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_headers.py:1060: in _check_link_header
    self._check_header(client, resource, 'Link', expected_value)
tests/test_headers.py:1063: in _check_header
    client.app.add_route('/', resource)
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f95696da3b0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a955480>, 'CHECK...5480>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a955480>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method LinkHeaderResource.on_get of <test_headers.LinkHeaderResource object at 0x7f956970e1a0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_______________ TestHeaders.test_append_link_with_hreflang[asgi] _______________

self = <test_headers.TestHeaders object at 0x7f942afee5f0>
client = <falcon.testing.client.TestClient object at 0x7f95697bb820>

    def test_append_link_with_hreflang(self, client):
        expected_value = '</related/thing>; rel=about; hreflang=en'
    
        resource = LinkHeaderResource()
        resource.append_link('/related/thing', 'about', hreflang='en')
    
>       self._check_link_header(client, resource, expected_value)

tests/test_headers.py:923: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_headers.py:1060: in _check_link_header
    self._check_header(client, resource, 'Link', expected_value)
tests/test_headers.py:1063: in _check_header
    client.app.add_route('/', resource)
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f956a965000>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a954040>, 'CHECK...4040>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a954040>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method LinkHeaderResource.on_get of <test_headers.LinkHeaderResource object at 0x7f95697bacb0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
___________________ test_client_simulate_aliases[asgi-PATCH] ___________________

asgi = True, method = 'PATCH'

    @pytest.mark.parametrize(
        'method', ['DELETE', 'GET', 'HEAD', 'LOCK', 'OPTIONS', 'PATCH', 'POST', 'PUT']
    )
    def test_client_simulate_aliases(asgi, method):
        def capture_method(req, resp):
            resp.content_type = falcon.MEDIA_TEXT
            resp.text = req.method
    
        app = create_app(asgi)
>       app.add_sink(capture_method)

tests/test_testing.py:188: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.asgi.app.App object at 0x7f942aac7580>
sink = <function test_client_simulate_aliases.<locals>.capture_method at 0x7f9416422e60>
prefix = '/'

    def add_sink(self, sink: Callable, prefix: SinkPrefix = r'/'):
        if not iscoroutinefunction(sink) and is_python_func(sink):
            if _should_wrap_non_coroutines():
                sink = wrap_sync_to_async(sink)
            else:
>               raise CompatibilityError(
                    'The sink method must be an awaitable coroutine function '
                    'in order to be used safely with an ASGI app.'
                )
E               falcon.errors.CompatibilityError: The sink method must be an awaitable coroutine function in order to be used safely with an ASGI app.

falcon/asgi/app.py:740: CompatibilityError
__________________ test_client_simulate_aliases[asgi-OPTIONS] __________________

asgi = True, method = 'OPTIONS'

    @pytest.mark.parametrize(
        'method', ['DELETE', 'GET', 'HEAD', 'LOCK', 'OPTIONS', 'PATCH', 'POST', 'PUT']
    )
    def test_client_simulate_aliases(asgi, method):
        def capture_method(req, resp):
            resp.content_type = falcon.MEDIA_TEXT
            resp.text = req.method
    
        app = create_app(asgi)
>       app.add_sink(capture_method)

tests/test_testing.py:188: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.asgi.app.App object at 0x7f942aac6f80>
sink = <function test_client_simulate_aliases.<locals>.capture_method at 0x7f95697064d0>
prefix = '/'

    def add_sink(self, sink: Callable, prefix: SinkPrefix = r'/'):
        if not iscoroutinefunction(sink) and is_python_func(sink):
            if _should_wrap_non_coroutines():
                sink = wrap_sync_to_async(sink)
            else:
>               raise CompatibilityError(
                    'The sink method must be an awaitable coroutine function '
                    'in order to be used safely with an ASGI app.'
                )
E               falcon.errors.CompatibilityError: The sink method must be an awaitable coroutine function in order to be used safely with an ASGI app.

falcon/asgi/app.py:740: CompatibilityError
___________________ test_client_simulate_aliases[asgi-LOCK] ____________________

asgi = True, method = 'LOCK'

    @pytest.mark.parametrize(
        'method', ['DELETE', 'GET', 'HEAD', 'LOCK', 'OPTIONS', 'PATCH', 'POST', 'PUT']
    )
    def test_client_simulate_aliases(asgi, method):
        def capture_method(req, resp):
            resp.content_type = falcon.MEDIA_TEXT
            resp.text = req.method
    
        app = create_app(asgi)
>       app.add_sink(capture_method)

tests/test_testing.py:188: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.asgi.app.App object at 0x7f942aac6680>
sink = <function test_client_simulate_aliases.<locals>.capture_method at 0x7f9569707ac0>
prefix = '/'

    def add_sink(self, sink: Callable, prefix: SinkPrefix = r'/'):
        if not iscoroutinefunction(sink) and is_python_func(sink):
            if _should_wrap_non_coroutines():
                sink = wrap_sync_to_async(sink)
            else:
>               raise CompatibilityError(
                    'The sink method must be an awaitable coroutine function '
                    'in order to be used safely with an ASGI app.'
                )
E               falcon.errors.CompatibilityError: The sink method must be an awaitable coroutine function in order to be used safely with an ASGI app.

falcon/asgi/app.py:740: CompatibilityError
__________________ test_client_simulate_aliases[asgi-DELETE] ___________________

asgi = True, method = 'DELETE'

    @pytest.mark.parametrize(
        'method', ['DELETE', 'GET', 'HEAD', 'LOCK', 'OPTIONS', 'PATCH', 'POST', 'PUT']
    )
    def test_client_simulate_aliases(asgi, method):
        def capture_method(req, resp):
            resp.content_type = falcon.MEDIA_TEXT
            resp.text = req.method
    
        app = create_app(asgi)
>       app.add_sink(capture_method)

tests/test_testing.py:188: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.asgi.app.App object at 0x7f942aac6980>
sink = <function test_client_simulate_aliases.<locals>.capture_method at 0x7f9569707640>
prefix = '/'

    def add_sink(self, sink: Callable, prefix: SinkPrefix = r'/'):
        if not iscoroutinefunction(sink) and is_python_func(sink):
            if _should_wrap_non_coroutines():
                sink = wrap_sync_to_async(sink)
            else:
>               raise CompatibilityError(
                    'The sink method must be an awaitable coroutine function '
                    'in order to be used safely with an ASGI app.'
                )
E               falcon.errors.CompatibilityError: The sink method must be an awaitable coroutine function in order to be used safely with an ASGI app.

falcon/asgi/app.py:740: CompatibilityError
___________________ test_client_simulate_aliases[asgi-POST] ____________________

asgi = True, method = 'POST'

    @pytest.mark.parametrize(
        'method', ['DELETE', 'GET', 'HEAD', 'LOCK', 'OPTIONS', 'PATCH', 'POST', 'PUT']
    )
    def test_client_simulate_aliases(asgi, method):
        def capture_method(req, resp):
            resp.content_type = falcon.MEDIA_TEXT
            resp.text = req.method
    
        app = create_app(asgi)
>       app.add_sink(capture_method)

tests/test_testing.py:188: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.asgi.app.App object at 0x7f942aac5240>
sink = <function test_client_simulate_aliases.<locals>.capture_method at 0x7f95697040d0>
prefix = '/'

    def add_sink(self, sink: Callable, prefix: SinkPrefix = r'/'):
        if not iscoroutinefunction(sink) and is_python_func(sink):
            if _should_wrap_non_coroutines():
                sink = wrap_sync_to_async(sink)
            else:
>               raise CompatibilityError(
                    'The sink method must be an awaitable coroutine function '
                    'in order to be used safely with an ASGI app.'
                )
E               falcon.errors.CompatibilityError: The sink method must be an awaitable coroutine function in order to be used safely with an ASGI app.

falcon/asgi/app.py:740: CompatibilityError
___________________ test_client_simulate_aliases[asgi-HEAD] ____________________

asgi = True, method = 'HEAD'

    @pytest.mark.parametrize(
        'method', ['DELETE', 'GET', 'HEAD', 'LOCK', 'OPTIONS', 'PATCH', 'POST', 'PUT']
    )
    def test_client_simulate_aliases(asgi, method):
        def capture_method(req, resp):
            resp.content_type = falcon.MEDIA_TEXT
            resp.text = req.method
    
        app = create_app(asgi)
>       app.add_sink(capture_method)

tests/test_testing.py:188: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.asgi.app.App object at 0x7f942aac6d40>
sink = <function test_client_simulate_aliases.<locals>.capture_method at 0x7f9569707400>
prefix = '/'

    def add_sink(self, sink: Callable, prefix: SinkPrefix = r'/'):
        if not iscoroutinefunction(sink) and is_python_func(sink):
            if _should_wrap_non_coroutines():
                sink = wrap_sync_to_async(sink)
            else:
>               raise CompatibilityError(
                    'The sink method must be an awaitable coroutine function '
                    'in order to be used safely with an ASGI app.'
                )
E               falcon.errors.CompatibilityError: The sink method must be an awaitable coroutine function in order to be used safely with an ASGI app.

falcon/asgi/app.py:740: CompatibilityError
____________________ test_client_simulate_aliases[asgi-PUT] ____________________

asgi = True, method = 'PUT'

    @pytest.mark.parametrize(
        'method', ['DELETE', 'GET', 'HEAD', 'LOCK', 'OPTIONS', 'PATCH', 'POST', 'PUT']
    )
    def test_client_simulate_aliases(asgi, method):
        def capture_method(req, resp):
            resp.content_type = falcon.MEDIA_TEXT
            resp.text = req.method
    
        app = create_app(asgi)
>       app.add_sink(capture_method)

tests/test_testing.py:188: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.asgi.app.App object at 0x7f942aac44c0>
sink = <function test_client_simulate_aliases.<locals>.capture_method at 0x7f956a92e7a0>
prefix = '/'

    def add_sink(self, sink: Callable, prefix: SinkPrefix = r'/'):
        if not iscoroutinefunction(sink) and is_python_func(sink):
            if _should_wrap_non_coroutines():
                sink = wrap_sync_to_async(sink)
            else:
>               raise CompatibilityError(
                    'The sink method must be an awaitable coroutine function '
                    'in order to be used safely with an ASGI app.'
                )
E               falcon.errors.CompatibilityError: The sink method must be an awaitable coroutine function in order to be used safely with an ASGI app.

falcon/asgi/app.py:740: CompatibilityError
____________________ test_client_simulate_aliases[asgi-GET] ____________________

asgi = True, method = 'GET'

    @pytest.mark.parametrize(
        'method', ['DELETE', 'GET', 'HEAD', 'LOCK', 'OPTIONS', 'PATCH', 'POST', 'PUT']
    )
    def test_client_simulate_aliases(asgi, method):
        def capture_method(req, resp):
            resp.content_type = falcon.MEDIA_TEXT
            resp.text = req.method
    
        app = create_app(asgi)
>       app.add_sink(capture_method)

tests/test_testing.py:188: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.asgi.app.App object at 0x7f942aac6680>
sink = <function test_client_simulate_aliases.<locals>.capture_method at 0x7f9569704ee0>
prefix = '/'

    def add_sink(self, sink: Callable, prefix: SinkPrefix = r'/'):
        if not iscoroutinefunction(sink) and is_python_func(sink):
            if _should_wrap_non_coroutines():
                sink = wrap_sync_to_async(sink)
            else:
>               raise CompatibilityError(
                    'The sink method must be an awaitable coroutine function '
                    'in order to be used safely with an ASGI app.'
                )
E               falcon.errors.CompatibilityError: The sink method must be an awaitable coroutine function in order to be used safely with an ASGI app.

falcon/asgi/app.py:740: CompatibilityError
________________ test_resource_with_uri_fields[asgi-resource0] _________________

client = <falcon.testing.client.TestClient object at 0x7f942a69d6c0>
resource = <test_after_hooks.ClassResourceWithURIFields object at 0x7f943712d810>

    @pytest.mark.parametrize(
        'resource', [ClassResourceWithURIFields(), ClassResourceWithURIFieldsChild()]
    )
    def test_resource_with_uri_fields(client, resource):
>       client.app.add_route('/{field1}/{field2}', resource)

tests/test_after_hooks.py:255: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f9569642730>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569705fc0>, 'CHECK...5fc0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569705fc0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method ClassResourceWithURIFields.on_get of <test_after_hooks.ClassResourceWithURIFields object at 0x7f943712d810>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
___________ test_wrapped_resource_with_hooks_aware_of_resource[asgi] ___________

client = <falcon.testing.client.TestClient object at 0x7f956986b7f0>
wrapped_resource_aware = <test_after_hooks.ClassResourceWithAwareHooks object at 0x7f9569868910>

    def test_wrapped_resource_with_hooks_aware_of_resource(client, wrapped_resource_aware):
>       client.app.add_route('/wrapped_aware', wrapped_resource_aware)

tests/test_after_hooks.py:319: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f956a967290>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92ec20>, 'CHECK...ec20>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92ec20>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method ClassResourceWithAwareHooks.on_get of <test_after_hooks.ClassResourceWithAwareHooks object at 0x7f9569868910>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
________________ test_resource_with_uri_fields[asgi-resource1] _________________

client = <falcon.testing.client.TestClient object at 0x7f95695c9390>
resource = <test_after_hooks.ClassResourceWithURIFieldsChild object at 0x7f943712d720>

    @pytest.mark.parametrize(
        'resource', [ClassResourceWithURIFields(), ClassResourceWithURIFieldsChild()]
    )
    def test_resource_with_uri_fields(client, resource):
>       client.app.add_route('/{field1}/{field2}', resource)

tests/test_after_hooks.py:255: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f956984e7a0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95696adb40>, 'CHECK...db40>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95696adb40>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method ClassResourceWithURIFieldsChild.on_get of <test_after_hooks.ClassResourceWithURIFieldsChild object at 0x7f943712d720>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
____________________ test_wrapped_resource[asgi-resource0] _____________________

client = <falcon.testing.client.TestClient object at 0x7f95694cb760>
resource = <test_after_hooks.WrappedClassResource object at 0x7f943712cf40>

    @pytest.mark.parametrize(
        'resource', [WrappedClassResource(), WrappedClassResourceChild()]
    )
    def test_wrapped_resource(client, resource):
>       client.app.add_route('/wrapped', resource)

tests/test_after_hooks.py:293: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f9569612650>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92c700>, 'CHECK...c700>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92c700>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method WrappedClassResource.on_get of <test_after_hooks.WrappedClassResource object at 0x7f943712cf40>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
____________________ test_wrapped_resource[asgi-resource1] _____________________

client = <falcon.testing.client.TestClient object at 0x7f956a9d3760>
resource = <test_after_hooks.WrappedClassResourceChild object at 0x7f943712d840>

    @pytest.mark.parametrize(
        'resource', [WrappedClassResource(), WrappedClassResourceChild()]
    )
    def test_wrapped_resource(client, resource):
>       client.app.add_route('/wrapped', resource)

tests/test_after_hooks.py:293: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f95696117e0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95696adc60>, 'CHECK...dc60>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95696adc60>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method WrappedClassResource.on_get of <test_after_hooks.WrappedClassResourceChild object at 0x7f943712d840>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
___________________ TestInspectApp.test_error_handler[asgi] ____________________

self = <test_inspect.TestInspectApp object at 0x7f942af5a740>, asgi = True

    @pytest.mark.skipif(sys.version_info < (3, 6), reason='dict order is not stable')
    def test_error_handler(self, asgi):
        errors = inspect.inspect_error_handlers(
>           make_app_async() if asgi else make_app()
        )

tests/test_inspect.py:175: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_inspect.py:46: in make_app_async
    app.add_sink(i_f.sinkFn, '/sink_fn')
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.asgi.app.App object at 0x7f942aac44c0>
sink = <function sinkFn at 0x7f942af1b130>, prefix = '/sink_fn'

    def add_sink(self, sink: Callable, prefix: SinkPrefix = r'/'):
        if not iscoroutinefunction(sink) and is_python_func(sink):
            if _should_wrap_non_coroutines():
                sink = wrap_sync_to_async(sink)
            else:
>               raise CompatibilityError(
                    'The sink method must be an awaitable coroutine function '
                    'in order to be used safely with an ASGI app.'
                )
E               falcon.errors.CompatibilityError: The sink method must be an awaitable coroutine function in order to be used safely with an ASGI app.

falcon/asgi/app.py:740: CompatibilityError
________________________ TestInspectApp.test_app[asgi] _________________________

self = <test_inspect.TestInspectApp object at 0x7f942af59b70>, asgi = True

    def test_app(self, asgi):
>       ai = inspect.inspect_app(make_app_async() if asgi else make_app())

tests/test_inspect.py:83: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_inspect.py:46: in make_app_async
    app.add_sink(i_f.sinkFn, '/sink_fn')
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.asgi.app.App object at 0x7f942aac6680>
sink = <function sinkFn at 0x7f942af1b130>, prefix = '/sink_fn'

    def add_sink(self, sink: Callable, prefix: SinkPrefix = r'/'):
        if not iscoroutinefunction(sink) and is_python_func(sink):
            if _should_wrap_non_coroutines():
                sink = wrap_sync_to_async(sink)
            else:
>               raise CompatibilityError(
                    'The sink method must be an awaitable coroutine function '
                    'in order to be used safely with an ASGI app.'
                )
E               falcon.errors.CompatibilityError: The sink method must be an awaitable coroutine function in order to be used safely with an ASGI app.

falcon/asgi/app.py:740: CompatibilityError
__________________ TestInspectApp.test_middleware_tree[asgi] ___________________

self = <test_inspect.TestInspectApp object at 0x7f942af5abc0>, asgi = True

    def test_middleware_tree(self, asgi):
>       mi = inspect.inspect_middleware(make_app_async() if asgi else make_app())

tests/test_inspect.py:233: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_inspect.py:46: in make_app_async
    app.add_sink(i_f.sinkFn, '/sink_fn')
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.asgi.app.App object at 0x7f956963da80>
sink = <function sinkFn at 0x7f942af1b130>, prefix = '/sink_fn'

    def add_sink(self, sink: Callable, prefix: SinkPrefix = r'/'):
        if not iscoroutinefunction(sink) and is_python_func(sink):
            if _should_wrap_non_coroutines():
                sink = wrap_sync_to_async(sink)
            else:
>               raise CompatibilityError(
                    'The sink method must be an awaitable coroutine function '
                    'in order to be used safely with an ASGI app.'
                )
E               falcon.errors.CompatibilityError: The sink method must be an awaitable coroutine function in order to be used safely with an ASGI app.

falcon/asgi/app.py:740: CompatibilityError
_______________________ TestInspectApp.test_routes[asgi] _______________________

self = <test_inspect.TestInspectApp object at 0x7f942af59b10>, asgi = True

    def test_routes(self, asgi):
>       routes = inspect.inspect_routes(make_app_async() if asgi else make_app())

tests/test_inspect.py:113: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_inspect.py:46: in make_app_async
    app.add_sink(i_f.sinkFn, '/sink_fn')
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.asgi.app.App object at 0x7f956963e680>
sink = <function sinkFn at 0x7f942af1b130>, prefix = '/sink_fn'

    def add_sink(self, sink: Callable, prefix: SinkPrefix = r'/'):
        if not iscoroutinefunction(sink) and is_python_func(sink):
            if _should_wrap_non_coroutines():
                sink = wrap_sync_to_async(sink)
            else:
>               raise CompatibilityError(
                    'The sink method must be an awaitable coroutine function '
                    'in order to be used safely with an ASGI app.'
                )
E               falcon.errors.CompatibilityError: The sink method must be an awaitable coroutine function in order to be used safely with an ASGI app.

falcon/asgi/app.py:740: CompatibilityError
_____________________ TestInspectApp.test_middleware[asgi] _____________________

self = <test_inspect.TestInspectApp object at 0x7f942af5a980>, asgi = True

    def test_middleware(self, asgi):
>       mi = inspect.inspect_middleware(make_app_async() if asgi else make_app())

tests/test_inspect.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_inspect.py:46: in make_app_async
    app.add_sink(i_f.sinkFn, '/sink_fn')
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.asgi.app.App object at 0x7f956963e2c0>
sink = <function sinkFn at 0x7f942af1b130>, prefix = '/sink_fn'

    def add_sink(self, sink: Callable, prefix: SinkPrefix = r'/'):
        if not iscoroutinefunction(sink) and is_python_func(sink):
            if _should_wrap_non_coroutines():
                sink = wrap_sync_to_async(sink)
            else:
>               raise CompatibilityError(
                    'The sink method must be an awaitable coroutine function '
                    'in order to be used safely with an ASGI app.'
                )
E               falcon.errors.CompatibilityError: The sink method must be an awaitable coroutine function in order to be used safely with an ASGI app.

falcon/asgi/app.py:740: CompatibilityError
________________________ TestInspectApp.test_sink[asgi] ________________________

self = <test_inspect.TestInspectApp object at 0x7f942af5a500>, asgi = True

    def test_sink(self, asgi):
>       sinks = inspect.inspect_sinks(make_app_async() if asgi else make_app())

tests/test_inspect.py:160: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_inspect.py:46: in make_app_async
    app.add_sink(i_f.sinkFn, '/sink_fn')
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.asgi.app.App object at 0x7f956963dcc0>
sink = <function sinkFn at 0x7f942af1b130>, prefix = '/sink_fn'

    def add_sink(self, sink: Callable, prefix: SinkPrefix = r'/'):
        if not iscoroutinefunction(sink) and is_python_func(sink):
            if _should_wrap_non_coroutines():
                sink = wrap_sync_to_async(sink)
            else:
>               raise CompatibilityError(
                    'The sink method must be an awaitable coroutine function '
                    'in order to be used safely with an ASGI app.'
                )
E               falcon.errors.CompatibilityError: The sink method must be an awaitable coroutine function in order to be used safely with an ASGI app.

falcon/asgi/app.py:740: CompatibilityError
___________________ TestInspectApp.test_static_routes[asgi] ____________________

self = <test_inspect.TestInspectApp object at 0x7f942af5a2c0>, asgi = True

    def test_static_routes(self, asgi):
>       routes = inspect.inspect_static_routes(make_app_async() if asgi else make_app())

tests/test_inspect.py:149: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_inspect.py:46: in make_app_async
    app.add_sink(i_f.sinkFn, '/sink_fn')
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.asgi.app.App object at 0x7f956963e440>
sink = <function sinkFn at 0x7f942af1b130>, prefix = '/sink_fn'

    def add_sink(self, sink: Callable, prefix: SinkPrefix = r'/'):
        if not iscoroutinefunction(sink) and is_python_func(sink):
            if _should_wrap_non_coroutines():
                sink = wrap_sync_to_async(sink)
            else:
>               raise CompatibilityError(
                    'The sink method must be an awaitable coroutine function '
                    'in order to be used safely with an ASGI app.'
                )
E               falcon.errors.CompatibilityError: The sink method must be an awaitable coroutine function in order to be used safely with an ASGI app.

falcon/asgi/app.py:740: CompatibilityError
_ test_datetime_converter[asgi-/{start_year:int}-to-{timestamp:dt("%Y-%m")}-/1961-to-1969-07-21-None] _

client = <falcon.testing.client.TestClient object at 0x7f956948d180>
resource = <falcon.testing.resource.SimpleTestResource object at 0x7f956948ed40>
uri_template = '/{start_year:int}-to-{timestamp:dt("%Y-%m")}'
path = '/1961-to-1969-07-21', dt_expected = None

    @pytest.mark.parametrize(
        'uri_template, path, dt_expected',
        [
            (
                '/{start_year:int}-to-{timestamp:dt}',
                '/1961-to-1969-07-21T02:56:00Z',
                datetime(1969, 7, 21, 2, 56, 0),
            ),
            (
                '/{start_year:int}-to-{timestamp:dt("%Y-%m-%d")}',
                '/1961-to-1969-07-21',
                datetime(1969, 7, 21),
            ),
            (
                '/{start_year:int}/{timestamp:dt("%Y-%m-%d %H:%M")}',
                '/1961/1969-07-21 14:30',
                datetime(1969, 7, 21, 14, 30),
            ),
            ('/{start_year:int}-to-{timestamp:dt("%Y-%m")}', '/1961-to-1969-07-21', None),
        ],
    )
    def test_datetime_converter(client, resource, uri_template, path, dt_expected):
>       client.app.add_route(uri_template, resource)

tests/test_uri_templates.py:301: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f9569281230>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569705cf0>, 'CHECK...5cf0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569705cf0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method SimpleTestResource.on_get of <falcon.testing.resource.SimpleTestResource object at 0x7f956948ed40>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ test_converter_custom[asgi-/{food:spam(")")}:{food_too:spam("()")}-/bacon:eggs-expected1] _

client = <falcon.testing.client.TestClient object at 0x7f9569517490>
resource = <falcon.testing.resource.SimpleTestResource object at 0x7f9569515900>
uri_template = '/{food:spam(")")}:{food_too:spam("()")}', path = '/bacon:eggs'
expected = {'food': 'spam!', 'food_too': 'spam!'}

    @pytest.mark.parametrize(
        'uri_template, path, expected',
        [
            ('/{food:spam}', '/something', {'food': 'spam!'}),
            (
                '/{food:spam(")")}:{food_too:spam("()")}',
                '/bacon:eggs',
                {'food': 'spam!', 'food_too': 'spam!'},
            ),
            (
                '/({food:spam()}){food_too:spam("()")}',
                '/(bacon)eggs',
                {'food': 'spam!', 'food_too': 'spam!'},
            ),
        ],
    )
    def test_converter_custom(client, resource, uri_template, path, expected):
        class SpamConverter:
            def __init__(self, useless_text=None):
                pass
    
            def convert(self, fragment):
                return 'spam!'
    
        client.app.router_options.converters['spam'] = SpamConverter
>       client.app.add_route(uri_template, resource)

tests/test_uri_templates.py:413: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f94645be3b0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569707d90>, 'CHECK...7d90>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569707d90>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method SimpleTestResource.on_get of <falcon.testing.resource.SimpleTestResource object at 0x7f9569515900>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
__________________ test_uuid_converter[asgi-uuid_converter_6] __________________

client = <falcon.testing.client.TestClient object at 0x7f9415608820>
resource = <falcon.testing.resource.SimpleTestResource object at 0x7f941560bcd0>
uri_template = '/widgets/{widget_id:uuid}/orders'
path = '/widgets/eff787301b2e4268a491f08f348be08/orders', expected = None

    @pytest.mark.parametrize(
        'uri_template, path, expected',
        as_params(
            (
                '/widgets/{widget_id:uuid}',
                '/widgets/' + _TEST_UUID_STR,
                {'widget_id': _TEST_UUID},
            ),
            (
                '/widgets/{widget_id:uuid}/orders',
                '/widgets/' + _TEST_UUID_STR_SANS_HYPHENS + '/orders',
                {'widget_id': _TEST_UUID},
            ),
            (
                '/versions/diff/{left:uuid()}...{right:uuid()}',
                '/versions/diff/{}...{}'.format(_TEST_UUID_STR, _TEST_UUID_STR_2),
                {
                    'left': _TEST_UUID,
                    'right': _TEST_UUID_2,
                },
            ),
            (
                '/versions/diff/{left:uuid}...{right:uuid()}',
                '/versions/diff/{}...{}'.format(_TEST_UUID_STR, _TEST_UUID_STR_2),
                {
                    'left': _TEST_UUID,
                    'right': _TEST_UUID_2,
                },
            ),
            (
                '/versions/diff/{left:uuid()}...{right:uuid}',
                '/versions/diff/{}...{}'.format(_TEST_UUID_STR, _TEST_UUID_STR_2),
                {
                    'left': _TEST_UUID,
                    'right': _TEST_UUID_2,
                },
            ),
            (
                '/widgets/{widget_id:uuid}/orders',
                '/widgets/' + _TEST_UUID_STR_SANS_HYPHENS[:-1] + '/orders',
                None,
            ),
            prefix='uuid_converter',
        ),
    )
    def test_uuid_converter(client, resource, uri_template, path, expected):
>       client.app.add_route(uri_template, resource)

tests/test_uri_templates.py:361: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f94645bfbc0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b0e50>, 'CHECK...0e50>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b0e50>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method SimpleTestResource.on_get of <falcon.testing.resource.SimpleTestResource object at 0x7f941560bcd0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
__________________ test_uuid_converter_complex_segment[asgi] ___________________

client = <falcon.testing.client.TestClient object at 0x7f9569378dc0>
resource = <falcon.testing.resource.SimpleTestResource object at 0x7f95693782e0>

    def test_uuid_converter_complex_segment(client, resource):
>       client.app.add_route('/pages/{first:uuid}...{last:uuid}', resource)

tests/test_uri_templates.py:375: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f956926bca0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b0940>, 'CHECK...0940>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b0940>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method SimpleTestResource.on_get of <falcon.testing.resource.SimpleTestResource object at 0x7f95693782e0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
______________________________ test_no_vars[asgi] ______________________________

client = <falcon.testing.client.TestClient object at 0x7f9569636bc0>
resource = <falcon.testing.resource.SimpleTestResource object at 0x7f9569635030>

    def test_no_vars(client, resource):
>       client.app.add_route('/hello/world', resource)

tests/test_uri_templates.py:149: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f956926bbc0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b0dc0>, 'CHECK...0dc0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b0dc0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method SimpleTestResource.on_get of <falcon.testing.resource.SimpleTestResource object at 0x7f9569635030>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_______________ test_with_and_without_trailing_slash[asgi-False] _______________

client = <falcon.testing.client.TestClient object at 0x7f95697b9b10>
reverse = False

    @pytest.mark.parametrize('reverse', [True, False])
    def test_with_and_without_trailing_slash(client, reverse):
        routes = [
            ('/kitchen', KitchenSinkResource()),
            ('/kitchen/', KitchenSinkResource()),
            ('/kitchen/{item}', KitchenSinkResource()),
            ('/kitchen/{item}/', KitchenSinkResource()),
            ('/kitchen/sink', KitchenSinkResource()),
            ('/kitchen/sink/', KitchenSinkResource()),
        ]
        if reverse:
            routes.reverse()
    
        for route in routes:
>           client.app.add_route(*route)

tests/test_uri_templates.py:576: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f956926bd80>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b37f0>, 'CHECK...37f0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b37f0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method KitchenSinkResource.on_get of <test_uri_templates.KitchenSinkResource object at 0x7f95697bbe80>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_______________ test_int_converter_rejections[asgi-/{id:int(2)}] _______________

client = <falcon.testing.client.TestClient object at 0x7f956970e410>
uri_template = '/{id:int(2)}'

    @pytest.mark.parametrize(
        'uri_template,',
        [
            '/{id:int(2)}',
            '/{id:int(min=124)}',
            '/{id:int(num_digits=3, max=100)}',
        ],
    )
    def test_int_converter_rejections(client, uri_template):
        resource1 = IDResource()
>       client.app.add_route(uri_template, resource1)

tests/test_uri_templates.py:271: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f9569214dd0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b0160>, 'CHECK...0160>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b0160>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method IDResource.on_get of <test_uri_templates.IDResource object at 0x7f956970c9a0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_____________________________ test_single[asgi-id] _____________________________

client = <falcon.testing.client.TestClient object at 0x7f956948fb50>
resource = <falcon.testing.resource.SimpleTestResource object at 0x7f956948e860>
field_name = 'id'

    @pytest.mark.parametrize(
        'field_name',
        [
            'id',
            'id123',
            'widget_id',
        ],
    )
    def test_single(client, resource, field_name):
        template = '/widgets/{{{}}}'.format(field_name)
    
>       client.app.add_route(template, resource)

tests/test_uri_templates.py:182: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f9569214eb0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b15a0>, 'CHECK...15a0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b15a0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method SimpleTestResource.on_get of <falcon.testing.resource.SimpleTestResource object at 0x7f956948e860>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
____________________ test_same_level_complex_var[asgi-True] ____________________

client = <falcon.testing.client.TestClient object at 0x7f94645858a0>
reverse = True

    @pytest.mark.parametrize('reverse', [True, False])
    def test_same_level_complex_var(client, reverse):
        file_resource = FileResource()
        details_resource = FileDetailsResource()
    
        routes = [
            ('/files/{file_id}', file_resource),
            ('/files/{file_id}.{ext}', details_resource),
        ]
        if reverse:
            routes.reverse()
    
        for uri_template, resource in routes:
>           client.app.add_route(uri_template, resource)

tests/test_uri_templates.py:511: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f956984ceb0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b1240>, 'CHECK...1240>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b1240>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method FileDetailsResource.on_get of <test_uri_templates.FileDetailsResource object at 0x7f94645870d0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
___________________________ test_special_chars[asgi] ___________________________

client = <falcon.testing.client.TestClient object at 0x7f941543c8e0>
resource = <falcon.testing.resource.SimpleTestResource object at 0x7f941543fca0>

    def test_special_chars(client, resource):
>       client.app.add_route('/hello/world.json', resource)

tests/test_uri_templates.py:155: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f94645b3760>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95696adea0>, 'CHECK...dea0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95696adea0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method SimpleTestResource.on_get of <falcon.testing.resource.SimpleTestResource object at 0x7f941543fca0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
______________ test_float_converter_non_finite_allowed[asgi--inf] ______________

value = '-inf'
client = <falcon.testing.client.TestClient object at 0x7f94645b8ac0>

    @pytest.mark.parametrize('value', ['nan', '-inf', 'inf'])
    def test_float_converter_non_finite_allowed(value, client):
        resource1 = IDResource()
>       client.app.add_route('/{id:float(finite=False)}', resource1)

tests/test_uri_templates.py:243: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f9569217bc0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95696aee60>, 'CHECK...ee60>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95696aee60>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method IDResource.on_get of <test_uri_templates.IDResource object at 0x7f94645ba020>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
____________ test_int_converter_rejections[asgi-/{id:int(min=124)}] ____________

client = <falcon.testing.client.TestClient object at 0x7f956948ead0>
uri_template = '/{id:int(min=124)}'

    @pytest.mark.parametrize(
        'uri_template,',
        [
            '/{id:int(2)}',
            '/{id:int(min=124)}',
            '/{id:int(num_digits=3, max=100)}',
        ],
    )
    def test_int_converter_rejections(client, uri_template):
        resource1 = IDResource()
>       client.app.add_route(uri_template, resource1)

tests/test_uri_templates.py:271: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f94645b1f50>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b2b90>, 'CHECK...2b90>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b2b90>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method IDResource.on_get of <test_uri_templates.IDResource object at 0x7f956948f490>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
______________ test_float_converter_non_finite_allowed[asgi-inf] _______________

value = 'inf'
client = <falcon.testing.client.TestClient object at 0x7f956a99e3b0>

    @pytest.mark.parametrize('value', ['nan', '-inf', 'inf'])
    def test_float_converter_non_finite_allowed(value, client):
        resource1 = IDResource()
>       client.app.add_route('/{id:float(finite=False)}', resource1)

tests/test_uri_templates.py:243: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f94645bea40>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b2950>, 'CHECK...2950>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b2950>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method IDResource.on_get of <test_uri_templates.IDResource object at 0x7f956a99fca0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
________________________ test_single_path_segment[asgi] ________________________

client = <falcon.testing.client.TestClient object at 0x7f9464584c40>

    def test_single_path_segment(client):
        id_resource = IDResource()
    
>       client.app.add_route('/thing-{id}', id_resource)

tests/test_uri_templates.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f9569282810>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569221ea0>, 'CHECK...1ea0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569221ea0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method IDResource.on_get of <test_uri_templates.IDResource object at 0x7f9464587250>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_____________ test_float_converter[asgi-/{id:float(min=1.9)}-2.1] ______________

client = <falcon.testing.client.TestClient object at 0x7f956935cd90>
uri_template = '/{id:float(min=1.9)}', id_value = 2.1

    @pytest.mark.parametrize('id_value', [2, 2.1, 1.9])
    @pytest.mark.parametrize(
        'uri_template,',
        [
            '/{id:float}',
            '/{id:float(1)}',
            '/{id:float(min=1.9)}',
            '/{id:float(min=1.8, max=3)}',
        ],
    )
    def test_float_converter(client, uri_template, id_value):
        resource1 = IDResource()
>       client.app.add_route(uri_template, resource1)

tests/test_uri_templates.py:230: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f94645bc120>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b04c0>, 'CHECK...04c0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b04c0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method IDResource.on_get of <test_uri_templates.IDResource object at 0x7f956935ec50>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
__________________ test_float_converter[asgi-/{id:float}-2.1] __________________

client = <falcon.testing.client.TestClient object at 0x7f956980b430>
uri_template = '/{id:float}', id_value = 2.1

    @pytest.mark.parametrize('id_value', [2, 2.1, 1.9])
    @pytest.mark.parametrize(
        'uri_template,',
        [
            '/{id:float}',
            '/{id:float(1)}',
            '/{id:float(min=1.9)}',
            '/{id:float(min=1.8, max=3)}',
        ],
    )
    def test_float_converter(client, uri_template, id_value):
        resource1 = IDResource()
>       client.app.add_route(uri_template, resource1)

tests/test_uri_templates.py:230: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f9569269770>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b2830>, 'CHECK...2830>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b2830>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method IDResource.on_get of <test_uri_templates.IDResource object at 0x7f9569809180>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
___________________ test_same_level_complex_var[asgi-False] ____________________

client = <falcon.testing.client.TestClient object at 0x7f9415509750>
reverse = False

    @pytest.mark.parametrize('reverse', [True, False])
    def test_same_level_complex_var(client, reverse):
        file_resource = FileResource()
        details_resource = FileDetailsResource()
    
        routes = [
            ('/files/{file_id}', file_resource),
            ('/files/{file_id}.{ext}', details_resource),
        ]
        if reverse:
            routes.reverse()
    
        for uri_template, resource in routes:
>           client.app.add_route(uri_template, resource)

tests/test_uri_templates.py:511: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f956926a180>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692217e0>, 'CHECK...17e0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692217e0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method FileResource.on_get of <test_uri_templates.FileResource object at 0x7f941550aa70>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_________________________ test_single[asgi-widget_id] __________________________

client = <falcon.testing.client.TestClient object at 0x7f95694ae1d0>
resource = <falcon.testing.resource.SimpleTestResource object at 0x7f95694acc70>
field_name = 'widget_id'

    @pytest.mark.parametrize(
        'field_name',
        [
            'id',
            'id123',
            'widget_id',
        ],
    )
    def test_single(client, resource, field_name):
        template = '/widgets/{{{}}}'.format(field_name)
    
>       client.app.add_route(template, resource)

tests/test_uri_templates.py:182: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f95692a42e0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569223490>, 'CHECK...3490>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569223490>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method SimpleTestResource.on_get of <falcon.testing.resource.SimpleTestResource object at 0x7f95694acc70>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
__________________ test_float_converter[asgi-/{id:float}-1.9] __________________

client = <falcon.testing.client.TestClient object at 0x7f9464587b80>
uri_template = '/{id:float}', id_value = 1.9

    @pytest.mark.parametrize('id_value', [2, 2.1, 1.9])
    @pytest.mark.parametrize(
        'uri_template,',
        [
            '/{id:float}',
            '/{id:float(1)}',
            '/{id:float(min=1.9)}',
            '/{id:float(min=1.8, max=3)}',
        ],
    )
    def test_float_converter(client, uri_template, id_value):
        resource1 = IDResource()
>       client.app.add_route(uri_template, resource1)

tests/test_uri_templates.py:230: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f95692a4890>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569223250>, 'CHECK...3250>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569223250>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method IDResource.on_get of <test_uri_templates.IDResource object at 0x7f9464587d30>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
__________________ test_uuid_converter[asgi-uuid_converter_1] __________________

client = <falcon.testing.client.TestClient object at 0x7f946455cac0>
resource = <falcon.testing.resource.SimpleTestResource object at 0x7f946455c370>
uri_template = '/widgets/{widget_id:uuid}'
path = '/widgets/eff78730-1b2e-4268-a491-f08f348be086'
expected = {'widget_id': UUID('eff78730-1b2e-4268-a491-f08f348be086')}

    @pytest.mark.parametrize(
        'uri_template, path, expected',
        as_params(
            (
                '/widgets/{widget_id:uuid}',
                '/widgets/' + _TEST_UUID_STR,
                {'widget_id': _TEST_UUID},
            ),
            (
                '/widgets/{widget_id:uuid}/orders',
                '/widgets/' + _TEST_UUID_STR_SANS_HYPHENS + '/orders',
                {'widget_id': _TEST_UUID},
            ),
            (
                '/versions/diff/{left:uuid()}...{right:uuid()}',
                '/versions/diff/{}...{}'.format(_TEST_UUID_STR, _TEST_UUID_STR_2),
                {
                    'left': _TEST_UUID,
                    'right': _TEST_UUID_2,
                },
            ),
            (
                '/versions/diff/{left:uuid}...{right:uuid()}',
                '/versions/diff/{}...{}'.format(_TEST_UUID_STR, _TEST_UUID_STR_2),
                {
                    'left': _TEST_UUID,
                    'right': _TEST_UUID_2,
                },
            ),
            (
                '/versions/diff/{left:uuid()}...{right:uuid}',
                '/versions/diff/{}...{}'.format(_TEST_UUID_STR, _TEST_UUID_STR_2),
                {
                    'left': _TEST_UUID,
                    'right': _TEST_UUID_2,
                },
            ),
            (
                '/widgets/{widget_id:uuid}/orders',
                '/widgets/' + _TEST_UUID_STR_SANS_HYPHENS[:-1] + '/orders',
                None,
            ),
            prefix='uuid_converter',
        ),
    )
    def test_uuid_converter(client, resource, uri_template, path, expected):
>       client.app.add_route(uri_template, resource)

tests/test_uri_templates.py:361: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f95692a50e0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569222830>, 'CHECK...2830>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569222830>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method SimpleTestResource.on_get of <falcon.testing.resource.SimpleTestResource object at 0x7f946455c370>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
______________________ test_int_converter[asgi-/{id:int}] ______________________

client = <falcon.testing.client.TestClient object at 0x7f956935d1e0>
uri_template = '/{id:int}'

    @pytest.mark.parametrize(
        'uri_template,',
        [
            '/{id:int}',
            '/{id:int(3)}',
            '/{id:int(min=123)}',
            '/{id:int(min=123, max=123)}',
        ],
    )
    def test_int_converter(client, uri_template):
        resource1 = IDResource()
>       client.app.add_route(uri_template, resource1)

tests/test_uri_templates.py:208: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f95692837d0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b0160>, 'CHECK...0160>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b0160>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method IDResource.on_get of <test_uri_templates.IDResource object at 0x7f956935d270>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_________________ test_int_converter[asgi-/{id:int(min=123)}] __________________

client = <falcon.testing.client.TestClient object at 0x7f956937a440>
uri_template = '/{id:int(min=123)}'

    @pytest.mark.parametrize(
        'uri_template,',
        [
            '/{id:int}',
            '/{id:int(3)}',
            '/{id:int(min=123)}',
            '/{id:int(min=123, max=123)}',
        ],
    )
    def test_int_converter(client, uri_template):
        resource1 = IDResource()
>       client.app.add_route(uri_template, resource1)

tests/test_uri_templates.py:208: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f94645bd310>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b08b0>, 'CHECK...08b0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b08b0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method IDResource.on_get of <test_uri_templates.IDResource object at 0x7f95693798a0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
___________ test_float_converter[asgi-/{id:float(min=1.8, max=3)}-2] ___________

client = <falcon.testing.client.TestClient object at 0x7f9464587790>
uri_template = '/{id:float(min=1.8, max=3)}', id_value = 2

    @pytest.mark.parametrize('id_value', [2, 2.1, 1.9])
    @pytest.mark.parametrize(
        'uri_template,',
        [
            '/{id:float}',
            '/{id:float(1)}',
            '/{id:float(min=1.9)}',
            '/{id:float(min=1.8, max=3)}',
        ],
    )
    def test_float_converter(client, uri_template, id_value):
        resource1 = IDResource()
>       client.app.add_route(uri_template, resource1)

tests/test_uri_templates.py:230: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f94645bd700>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b3c70>, 'CHECK...3c70>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b3c70>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method IDResource.on_get of <test_uri_templates.IDResource object at 0x7f94645861a0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_____________________________ test_multiple[asgi] ______________________________

client = <falcon.testing.client.TestClient object at 0x7f956a9b7a60>

    def test_multiple(client):
        resource = NameResource()
>       client.app.add_route('/messages/{id}/names/{name}', resource)

tests/test_uri_templates.py:459: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f956984d070>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b3910>, 'CHECK...3910>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b3910>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method NameResource.on_get of <test_uri_templates.NameResource object at 0x7f956a9b46d0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
__________ test_float_converter[asgi-/{id:float(min=1.8, max=3)}-2.1] __________

client = <falcon.testing.client.TestClient object at 0x7f956977e680>
uri_template = '/{id:float(min=1.8, max=3)}', id_value = 2.1

    @pytest.mark.parametrize('id_value', [2, 2.1, 1.9])
    @pytest.mark.parametrize(
        'uri_template,',
        [
            '/{id:float}',
            '/{id:float(1)}',
            '/{id:float(min=1.9)}',
            '/{id:float(min=1.8, max=3)}',
        ],
    )
    def test_float_converter(client, uri_template, id_value):
        resource1 = IDResource()
>       client.app.add_route(uri_template, resource1)

tests/test_uri_templates.py:230: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f9569217060>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692236d0>, 'CHECK...36d0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692236d0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method IDResource.on_get of <test_uri_templates.IDResource object at 0x7f956977f250>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_____ test_int_converter_rejections[asgi-/{id:int(num_digits=3, max=100)}] _____

client = <falcon.testing.client.TestClient object at 0x7f9569321780>
uri_template = '/{id:int(num_digits=3, max=100)}'

    @pytest.mark.parametrize(
        'uri_template,',
        [
            '/{id:int(2)}',
            '/{id:int(min=124)}',
            '/{id:int(num_digits=3, max=100)}',
        ],
    )
    def test_int_converter_rejections(client, uri_template):
        resource1 = IDResource()
>       client.app.add_route(uri_template, resource1)

tests/test_uri_templates.py:271: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f95692a5540>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569220790>, 'CHECK...0790>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569220790>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method IDResource.on_get of <test_uri_templates.IDResource object at 0x7f95693216c0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
___________________________ test_single[asgi-id123] ____________________________

client = <falcon.testing.client.TestClient object at 0x7f95694af250>
resource = <falcon.testing.resource.SimpleTestResource object at 0x7f95694adea0>
field_name = 'id123'

    @pytest.mark.parametrize(
        'field_name',
        [
            'id',
            'id123',
            'widget_id',
        ],
    )
    def test_single(client, resource, field_name):
        template = '/widgets/{{{}}}'.format(field_name)
    
>       client.app.add_route(template, resource)

tests/test_uri_templates.py:182: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f95692a7b50>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692216c0>, 'CHECK...16c0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692216c0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method SimpleTestResource.on_get of <falcon.testing.resource.SimpleTestResource object at 0x7f95694adea0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ test_datetime_converter[asgi-/{start_year:int}-to-{timestamp:dt}-/1961-to-1969-07-21T02:56:00Z-dt_expected0] _

client = <falcon.testing.client.TestClient object at 0x7f956962f8b0>
resource = <falcon.testing.resource.SimpleTestResource object at 0x7f956962d780>
uri_template = '/{start_year:int}-to-{timestamp:dt}'
path = '/1961-to-1969-07-21T02:56:00Z'
dt_expected = datetime.datetime(1969, 7, 21, 2, 56)

    @pytest.mark.parametrize(
        'uri_template, path, dt_expected',
        [
            (
                '/{start_year:int}-to-{timestamp:dt}',
                '/1961-to-1969-07-21T02:56:00Z',
                datetime(1969, 7, 21, 2, 56, 0),
            ),
            (
                '/{start_year:int}-to-{timestamp:dt("%Y-%m-%d")}',
                '/1961-to-1969-07-21',
                datetime(1969, 7, 21),
            ),
            (
                '/{start_year:int}/{timestamp:dt("%Y-%m-%d %H:%M")}',
                '/1961/1969-07-21 14:30',
                datetime(1969, 7, 21, 14, 30),
            ),
            ('/{start_year:int}-to-{timestamp:dt("%Y-%m")}', '/1961-to-1969-07-21', None),
        ],
    )
    def test_datetime_converter(client, resource, uri_template, path, dt_expected):
>       client.app.add_route(uri_template, resource)

tests/test_uri_templates.py:301: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f95692a45f0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569223f40>, 'CHECK...3f40>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569223f40>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method SimpleTestResource.on_get of <falcon.testing.resource.SimpleTestResource object at 0x7f956962d780>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_____________________________ test_root_path[asgi] _____________________________

client = <falcon.testing.client.TestClient object at 0x7f941550a4a0>
resource = <falcon.testing.resource.SimpleTestResource object at 0x7f9415509d50>

    def test_root_path(client, resource):
>       client.app.add_route('/', resource)

tests/test_uri_templates.py:143: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f95692a4d60>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569222170>, 'CHECK...2170>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569222170>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method SimpleTestResource.on_get of <falcon.testing.resource.SimpleTestResource object at 0x7f9415509d50>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_________________ test_float_converter[asgi-/{id:float(1)}-2] __________________

client = <falcon.testing.client.TestClient object at 0x7f9569307250>
uri_template = '/{id:float(1)}', id_value = 2

    @pytest.mark.parametrize('id_value', [2, 2.1, 1.9])
    @pytest.mark.parametrize(
        'uri_template,',
        [
            '/{id:float}',
            '/{id:float(1)}',
            '/{id:float(min=1.9)}',
            '/{id:float(min=1.8, max=3)}',
        ],
    )
    def test_float_converter(client, uri_template, id_value):
        resource1 = IDResource()
>       client.app.add_route(uri_template, resource1)

tests/test_uri_templates.py:230: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f94150d04a0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b3910>, 'CHECK...3910>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b3910>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method IDResource.on_get of <test_uri_templates.IDResource object at 0x7f9569305570>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
________ test_converter_custom[asgi-/{food:spam}-/something-expected0] _________

client = <falcon.testing.client.TestClient object at 0x7f946455c370>
resource = <falcon.testing.resource.SimpleTestResource object at 0x7f946455ee00>
uri_template = '/{food:spam}', path = '/something', expected = {'food': 'spam!'}

    @pytest.mark.parametrize(
        'uri_template, path, expected',
        [
            ('/{food:spam}', '/something', {'food': 'spam!'}),
            (
                '/{food:spam(")")}:{food_too:spam("()")}',
                '/bacon:eggs',
                {'food': 'spam!', 'food_too': 'spam!'},
            ),
            (
                '/({food:spam()}){food_too:spam("()")}',
                '/(bacon)eggs',
                {'food': 'spam!', 'food_too': 'spam!'},
            ),
        ],
    )
    def test_converter_custom(client, resource, uri_template, path, expected):
        class SpamConverter:
            def __init__(self, useless_text=None):
                pass
    
            def convert(self, fragment):
                return 'spam!'
    
        client.app.router_options.converters['spam'] = SpamConverter
>       client.app.add_route(uri_template, resource)

tests/test_uri_templates.py:413: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f94150d0d60>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b2cb0>, 'CHECK...2cb0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b2cb0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method SimpleTestResource.on_get of <falcon.testing.resource.SimpleTestResource object at 0x7f946455ee00>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
________________ test_float_converter[asgi-/{id:float(1)}-1.9] _________________

client = <falcon.testing.client.TestClient object at 0x7f956a9b63b0>
uri_template = '/{id:float(1)}', id_value = 1.9

    @pytest.mark.parametrize('id_value', [2, 2.1, 1.9])
    @pytest.mark.parametrize(
        'uri_template,',
        [
            '/{id:float}',
            '/{id:float(1)}',
            '/{id:float(min=1.9)}',
            '/{id:float(min=1.8, max=3)}',
        ],
    )
    def test_float_converter(client, uri_template, id_value):
        resource1 = IDResource()
>       client.app.add_route(uri_template, resource1)

tests/test_uri_templates.py:230: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f94150d33e0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569222e60>, 'CHECK...2e60>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569222e60>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method IDResource.on_get of <test_uri_templates.IDResource object at 0x7f956a9b42e0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ test_datetime_converter[asgi-/{start_year:int}/{timestamp:dt("%Y-%m-%d %H:%M")}-/1961/1969-07-21 14:30-dt_expected2] _

client = <falcon.testing.client.TestClient object at 0x7f94645786a0>
resource = <falcon.testing.resource.SimpleTestResource object at 0x7f9464579480>
uri_template = '/{start_year:int}/{timestamp:dt("%Y-%m-%d %H:%M")}'
path = '/1961/1969-07-21 14:30'
dt_expected = datetime.datetime(1969, 7, 21, 14, 30)

    @pytest.mark.parametrize(
        'uri_template, path, dt_expected',
        [
            (
                '/{start_year:int}-to-{timestamp:dt}',
                '/1961-to-1969-07-21T02:56:00Z',
                datetime(1969, 7, 21, 2, 56, 0),
            ),
            (
                '/{start_year:int}-to-{timestamp:dt("%Y-%m-%d")}',
                '/1961-to-1969-07-21',
                datetime(1969, 7, 21),
            ),
            (
                '/{start_year:int}/{timestamp:dt("%Y-%m-%d %H:%M")}',
                '/1961/1969-07-21 14:30',
                datetime(1969, 7, 21, 14, 30),
            ),
            ('/{start_year:int}-to-{timestamp:dt("%Y-%m")}', '/1961-to-1969-07-21', None),
        ],
    )
    def test_datetime_converter(client, resource, uri_template, path, dt_expected):
>       client.app.add_route(uri_template, resource)

tests/test_uri_templates.py:301: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f94150d3300>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569222a70>, 'CHECK...2a70>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569222a70>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method SimpleTestResource.on_get of <falcon.testing.resource.SimpleTestResource object at 0x7f9464579480>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
________________ test_float_converter[asgi-/{id:float(1)}-2.1] _________________

client = <falcon.testing.client.TestClient object at 0x7f956948e170>
uri_template = '/{id:float(1)}', id_value = 2.1

    @pytest.mark.parametrize('id_value', [2, 2.1, 1.9])
    @pytest.mark.parametrize(
        'uri_template,',
        [
            '/{id:float}',
            '/{id:float(1)}',
            '/{id:float(min=1.9)}',
            '/{id:float(min=1.8, max=3)}',
        ],
    )
    def test_float_converter(client, uri_template, id_value):
        resource1 = IDResource()
>       client.app.add_route(uri_template, resource1)

tests/test_uri_templates.py:230: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f94150d18c0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569221ea0>, 'CHECK...1ea0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569221ea0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method IDResource.on_get of <test_uri_templates.IDResource object at 0x7f956948fc10>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_______________________ test_single_trailing_slash[asgi] _______________________

client = <falcon.testing.client.TestClient object at 0x7f95694de830>

    def test_single_trailing_slash(client):
        resource1 = IDResource()
>       client.app.add_route('/1/{id}/', resource1)

tests/test_uri_templates.py:424: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f94150d38b0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692229e0>, 'CHECK...29e0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692229e0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method IDResource.on_get of <test_uri_templates.IDResource object at 0x7f94645941c0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
__________________ test_uuid_converter[asgi-uuid_converter_2] __________________

client = <falcon.testing.client.TestClient object at 0x7f941560b1f0>
resource = <falcon.testing.resource.SimpleTestResource object at 0x7f941560be80>
uri_template = '/widgets/{widget_id:uuid}/orders'
path = '/widgets/eff787301b2e4268a491f08f348be086/orders'
expected = {'widget_id': UUID('eff78730-1b2e-4268-a491-f08f348be086')}

    @pytest.mark.parametrize(
        'uri_template, path, expected',
        as_params(
            (
                '/widgets/{widget_id:uuid}',
                '/widgets/' + _TEST_UUID_STR,
                {'widget_id': _TEST_UUID},
            ),
            (
                '/widgets/{widget_id:uuid}/orders',
                '/widgets/' + _TEST_UUID_STR_SANS_HYPHENS + '/orders',
                {'widget_id': _TEST_UUID},
            ),
            (
                '/versions/diff/{left:uuid()}...{right:uuid()}',
                '/versions/diff/{}...{}'.format(_TEST_UUID_STR, _TEST_UUID_STR_2),
                {
                    'left': _TEST_UUID,
                    'right': _TEST_UUID_2,
                },
            ),
            (
                '/versions/diff/{left:uuid}...{right:uuid()}',
                '/versions/diff/{}...{}'.format(_TEST_UUID_STR, _TEST_UUID_STR_2),
                {
                    'left': _TEST_UUID,
                    'right': _TEST_UUID_2,
                },
            ),
            (
                '/versions/diff/{left:uuid()}...{right:uuid}',
                '/versions/diff/{}...{}'.format(_TEST_UUID_STR, _TEST_UUID_STR_2),
                {
                    'left': _TEST_UUID,
                    'right': _TEST_UUID_2,
                },
            ),
            (
                '/widgets/{widget_id:uuid}/orders',
                '/widgets/' + _TEST_UUID_STR_SANS_HYPHENS[:-1] + '/orders',
                None,
            ),
            prefix='uuid_converter',
        ),
    )
    def test_uuid_converter(client, resource, uri_template, path, expected):
>       client.app.add_route(uri_template, resource)

tests/test_uri_templates.py:361: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f956a90b530>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692228c0>, 'CHECK...28c0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692228c0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method SimpleTestResource.on_get of <falcon.testing.resource.SimpleTestResource object at 0x7f941560be80>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
____________________ test_int_converter[asgi-/{id:int(3)}] _____________________

client = <falcon.testing.client.TestClient object at 0x7f95697b8640>
uri_template = '/{id:int(3)}'

    @pytest.mark.parametrize(
        'uri_template,',
        [
            '/{id:int}',
            '/{id:int(3)}',
            '/{id:int(min=123)}',
            '/{id:int(min=123, max=123)}',
        ],
    )
    def test_int_converter(client, uri_template):
        resource1 = IDResource()
>       client.app.add_route(uri_template, resource1)

tests/test_uri_templates.py:208: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f95692a4200>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569223130>, 'CHECK...3130>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569223130>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method IDResource.on_get of <test_uri_templates.IDResource object at 0x7f95697b9750>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_______________________ test_adding_suffix_routes[asgi] ________________________

client = <falcon.testing.client.TestClient object at 0x7f95695e6080>

    def test_adding_suffix_routes(client):
        resource_with_suffix_routes = ResourceWithSuffixRoutes()
>       client.app.add_route(
            '/collections/{collection_id}/items/{item_id}', resource_with_suffix_routes
        )

tests/test_uri_templates.py:531: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f95692a4740>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692205e0>, 'CHECK...05e0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692205e0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method ResourceWithSuffixRoutes.on_get of <test_uri_templates.ResourceWithSuffixRoutes object at 0x7f95695e62c0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
______________ test_float_converter_non_finite_allowed[asgi-nan] _______________

value = 'nan'
client = <falcon.testing.client.TestClient object at 0x7f9569345150>

    @pytest.mark.parametrize('value', ['nan', '-inf', 'inf'])
    def test_float_converter_non_finite_allowed(value, client):
        resource1 = IDResource()
>       client.app.add_route('/{id:float(finite=False)}', resource1)

tests/test_uri_templates.py:243: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f95692a6b90>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92f520>, 'CHECK...f520>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92f520>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method IDResource.on_get of <test_uri_templates.IDResource object at 0x7f95693445b0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_______________ test_float_converter_non_finite_disallowed[asgi] _______________

client = <falcon.testing.client.TestClient object at 0x7f95692d3310>

    def test_float_converter_non_finite_disallowed(client):
        resource1 = IDResource()
>       client.app.add_route('/{id:float}', resource1)

tests/test_uri_templates.py:254: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f941507c740>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92f1c0>, 'CHECK...f1c0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92f1c0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method IDResource.on_get of <test_uri_templates.IDResource object at 0x7f95692d2860>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_____________ test_int_converter[asgi-/{id:int(min=123, max=123)}] _____________

client = <falcon.testing.client.TestClient object at 0x7f94155d0700>
uri_template = '/{id:int(min=123, max=123)}'

    @pytest.mark.parametrize(
        'uri_template,',
        [
            '/{id:int}',
            '/{id:int(3)}',
            '/{id:int(min=123)}',
            '/{id:int(min=123, max=123)}',
        ],
    )
    def test_int_converter(client, uri_template):
        resource1 = IDResource()
>       client.app.add_route(uri_template, resource1)

tests/test_uri_templates.py:208: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f941507db60>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569223130>, 'CHECK...3130>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569223130>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method IDResource.on_get of <test_uri_templates.IDResource object at 0x7f94155d2200>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
__________________ test_uuid_converter[asgi-uuid_converter_4] __________________

client = <falcon.testing.client.TestClient object at 0x7f956977e050>
resource = <falcon.testing.resource.SimpleTestResource object at 0x7f956977cbb0>
uri_template = '/versions/diff/{left:uuid}...{right:uuid()}'
path = '/versions/diff/eff78730-1b2e-4268-a491-f08f348be086...5c160231-d3f2-450f-bbc9-07498c1918fe'
expected = {'left': UUID('eff78730-1b2e-4268-a491-f08f348be086'), 'right': UUID('5c160231-d3f2-450f-bbc9-07498c1918fe')}

    @pytest.mark.parametrize(
        'uri_template, path, expected',
        as_params(
            (
                '/widgets/{widget_id:uuid}',
                '/widgets/' + _TEST_UUID_STR,
                {'widget_id': _TEST_UUID},
            ),
            (
                '/widgets/{widget_id:uuid}/orders',
                '/widgets/' + _TEST_UUID_STR_SANS_HYPHENS + '/orders',
                {'widget_id': _TEST_UUID},
            ),
            (
                '/versions/diff/{left:uuid()}...{right:uuid()}',
                '/versions/diff/{}...{}'.format(_TEST_UUID_STR, _TEST_UUID_STR_2),
                {
                    'left': _TEST_UUID,
                    'right': _TEST_UUID_2,
                },
            ),
            (
                '/versions/diff/{left:uuid}...{right:uuid()}',
                '/versions/diff/{}...{}'.format(_TEST_UUID_STR, _TEST_UUID_STR_2),
                {
                    'left': _TEST_UUID,
                    'right': _TEST_UUID_2,
                },
            ),
            (
                '/versions/diff/{left:uuid()}...{right:uuid}',
                '/versions/diff/{}...{}'.format(_TEST_UUID_STR, _TEST_UUID_STR_2),
                {
                    'left': _TEST_UUID,
                    'right': _TEST_UUID_2,
                },
            ),
            (
                '/widgets/{widget_id:uuid}/orders',
                '/widgets/' + _TEST_UUID_STR_SANS_HYPHENS[:-1] + '/orders',
                None,
            ),
            prefix='uuid_converter',
        ),
    )
    def test_uuid_converter(client, resource, uri_template, path, expected):
>       client.app.add_route(uri_template, resource)

tests/test_uri_templates.py:361: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f941507cd60>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692236d0>, 'CHECK...36d0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692236d0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method SimpleTestResource.on_get of <falcon.testing.resource.SimpleTestResource object at 0x7f956977cbb0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ test_converter_custom[asgi-/({food:spam()}){food_too:spam("()")}-/(bacon)eggs-expected2] _

client = <falcon.testing.client.TestClient object at 0x7f956a99f3d0>
resource = <falcon.testing.resource.SimpleTestResource object at 0x7f956a99f250>
uri_template = '/({food:spam()}){food_too:spam("()")}', path = '/(bacon)eggs'
expected = {'food': 'spam!', 'food_too': 'spam!'}

    @pytest.mark.parametrize(
        'uri_template, path, expected',
        [
            ('/{food:spam}', '/something', {'food': 'spam!'}),
            (
                '/{food:spam(")")}:{food_too:spam("()")}',
                '/bacon:eggs',
                {'food': 'spam!', 'food_too': 'spam!'},
            ),
            (
                '/({food:spam()}){food_too:spam("()")}',
                '/(bacon)eggs',
                {'food': 'spam!', 'food_too': 'spam!'},
            ),
        ],
    )
    def test_converter_custom(client, resource, uri_template, path, expected):
        class SpamConverter:
            def __init__(self, useless_text=None):
                pass
    
            def convert(self, fragment):
                return 'spam!'
    
        client.app.router_options.converters['spam'] = SpamConverter
>       client.app.add_route(uri_template, resource)

tests/test_uri_templates.py:413: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f941507ccf0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569222170>, 'CHECK...2170>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569222170>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method SimpleTestResource.on_get of <falcon.testing.resource.SimpleTestResource object at 0x7f956a99f250>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
______________ test_float_converter[asgi-/{id:float(min=1.9)}-2] _______________

client = <falcon.testing.client.TestClient object at 0x7f95692305b0>
uri_template = '/{id:float(min=1.9)}', id_value = 2

    @pytest.mark.parametrize('id_value', [2, 2.1, 1.9])
    @pytest.mark.parametrize(
        'uri_template,',
        [
            '/{id:float}',
            '/{id:float(1)}',
            '/{id:float(min=1.9)}',
            '/{id:float(min=1.8, max=3)}',
        ],
    )
    def test_float_converter(client, uri_template, id_value):
        resource1 = IDResource()
>       client.app.add_route(uri_template, resource1)

tests/test_uri_templates.py:230: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f941507f4c0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b2710>, 'CHECK...2710>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b2710>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method IDResource.on_get of <test_uri_templates.IDResource object at 0x7f9569231d80>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_____________ test_float_converter[asgi-/{id:float(min=1.9)}-1.9] ______________

client = <falcon.testing.client.TestClient object at 0x7f9569400790>
uri_template = '/{id:float(min=1.9)}', id_value = 1.9

    @pytest.mark.parametrize('id_value', [2, 2.1, 1.9])
    @pytest.mark.parametrize(
        'uri_template,',
        [
            '/{id:float}',
            '/{id:float(1)}',
            '/{id:float(min=1.9)}',
            '/{id:float(min=1.8, max=3)}',
        ],
    )
    def test_float_converter(client, uri_template, id_value):
        resource1 = IDResource()
>       client.app.add_route(uri_template, resource1)

tests/test_uri_templates.py:230: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f941507fed0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569222ef0>, 'CHECK...2ef0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569222ef0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method IDResource.on_get of <test_uri_templates.IDResource object at 0x7f9569401e10>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
___________________ test_float_converter[asgi-/{id:float}-2] ___________________

client = <falcon.testing.client.TestClient object at 0x7f94155d0ac0>
uri_template = '/{id:float}', id_value = 2

    @pytest.mark.parametrize('id_value', [2, 2.1, 1.9])
    @pytest.mark.parametrize(
        'uri_template,',
        [
            '/{id:float}',
            '/{id:float(1)}',
            '/{id:float(min=1.9)}',
            '/{id:float(min=1.8, max=3)}',
        ],
    )
    def test_float_converter(client, uri_template, id_value):
        resource1 = IDResource()
>       client.app.add_route(uri_template, resource1)

tests/test_uri_templates.py:230: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f941507ef10>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92fb50>, 'CHECK...fb50>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92fb50>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method IDResource.on_get of <test_uri_templates.IDResource object at 0x7f95694acb80>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
__________ test_float_converter[asgi-/{id:float(min=1.8, max=3)}-1.9] __________

client = <falcon.testing.client.TestClient object at 0x7f9569637b20>
uri_template = '/{id:float(min=1.8, max=3)}', id_value = 1.9

    @pytest.mark.parametrize('id_value', [2, 2.1, 1.9])
    @pytest.mark.parametrize(
        'uri_template,',
        [
            '/{id:float}',
            '/{id:float(1)}',
            '/{id:float(min=1.9)}',
            '/{id:float(min=1.8, max=3)}',
        ],
    )
    def test_float_converter(client, uri_template, id_value):
        resource1 = IDResource()
>       client.app.add_route(uri_template, resource1)

tests/test_uri_templates.py:230: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f94150d3ed0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92e560>, 'CHECK...e560>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f956a92e560>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method IDResource.on_get of <test_uri_templates.IDResource object at 0x7f9569637130>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
__________________ test_uuid_converter[asgi-uuid_converter_3] __________________

client = <falcon.testing.client.TestClient object at 0x7f95697bb730>
resource = <falcon.testing.resource.SimpleTestResource object at 0x7f95697bbf10>
uri_template = '/versions/diff/{left:uuid()}...{right:uuid()}'
path = '/versions/diff/eff78730-1b2e-4268-a491-f08f348be086...5c160231-d3f2-450f-bbc9-07498c1918fe'
expected = {'left': UUID('eff78730-1b2e-4268-a491-f08f348be086'), 'right': UUID('5c160231-d3f2-450f-bbc9-07498c1918fe')}

    @pytest.mark.parametrize(
        'uri_template, path, expected',
        as_params(
            (
                '/widgets/{widget_id:uuid}',
                '/widgets/' + _TEST_UUID_STR,
                {'widget_id': _TEST_UUID},
            ),
            (
                '/widgets/{widget_id:uuid}/orders',
                '/widgets/' + _TEST_UUID_STR_SANS_HYPHENS + '/orders',
                {'widget_id': _TEST_UUID},
            ),
            (
                '/versions/diff/{left:uuid()}...{right:uuid()}',
                '/versions/diff/{}...{}'.format(_TEST_UUID_STR, _TEST_UUID_STR_2),
                {
                    'left': _TEST_UUID,
                    'right': _TEST_UUID_2,
                },
            ),
            (
                '/versions/diff/{left:uuid}...{right:uuid()}',
                '/versions/diff/{}...{}'.format(_TEST_UUID_STR, _TEST_UUID_STR_2),
                {
                    'left': _TEST_UUID,
                    'right': _TEST_UUID_2,
                },
            ),
            (
                '/versions/diff/{left:uuid()}...{right:uuid}',
                '/versions/diff/{}...{}'.format(_TEST_UUID_STR, _TEST_UUID_STR_2),
                {
                    'left': _TEST_UUID,
                    'right': _TEST_UUID_2,
                },
            ),
            (
                '/widgets/{widget_id:uuid}/orders',
                '/widgets/' + _TEST_UUID_STR_SANS_HYPHENS[:-1] + '/orders',
                None,
            ),
            prefix='uuid_converter',
        ),
    )
    def test_uuid_converter(client, resource, uri_template, path, expected):
>       client.app.add_route(uri_template, resource)

tests/test_uri_templates.py:361: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f94150d0350>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b2680>, 'CHECK...2680>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b2680>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method SimpleTestResource.on_get of <falcon.testing.resource.SimpleTestResource object at 0x7f95697bbf10>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ test_datetime_converter[asgi-/{start_year:int}-to-{timestamp:dt("%Y-%m-%d")}-/1961-to-1969-07-21-dt_expected1] _

client = <falcon.testing.client.TestClient object at 0x7f946455c070>
resource = <falcon.testing.resource.SimpleTestResource object at 0x7f946455f400>
uri_template = '/{start_year:int}-to-{timestamp:dt("%Y-%m-%d")}'
path = '/1961-to-1969-07-21', dt_expected = datetime.datetime(1969, 7, 21, 0, 0)

    @pytest.mark.parametrize(
        'uri_template, path, dt_expected',
        [
            (
                '/{start_year:int}-to-{timestamp:dt}',
                '/1961-to-1969-07-21T02:56:00Z',
                datetime(1969, 7, 21, 2, 56, 0),
            ),
            (
                '/{start_year:int}-to-{timestamp:dt("%Y-%m-%d")}',
                '/1961-to-1969-07-21',
                datetime(1969, 7, 21),
            ),
            (
                '/{start_year:int}/{timestamp:dt("%Y-%m-%d %H:%M")}',
                '/1961/1969-07-21 14:30',
                datetime(1969, 7, 21, 14, 30),
            ),
            ('/{start_year:int}-to-{timestamp:dt("%Y-%m")}', '/1961-to-1969-07-21', None),
        ],
    )
    def test_datetime_converter(client, resource, uri_template, path, dt_expected):
>       client.app.add_route(uri_template, resource)

tests/test_uri_templates.py:301: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f95692a6dc0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569265ea0>, 'CHECK...5ea0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f9569265ea0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method SimpleTestResource.on_get of <falcon.testing.resource.SimpleTestResource object at 0x7f946455f400>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
__________________ test_uuid_converter[asgi-uuid_converter_5] __________________

client = <falcon.testing.client.TestClient object at 0x7f956977e620>
resource = <falcon.testing.resource.SimpleTestResource object at 0x7f956977ea10>
uri_template = '/versions/diff/{left:uuid()}...{right:uuid}'
path = '/versions/diff/eff78730-1b2e-4268-a491-f08f348be086...5c160231-d3f2-450f-bbc9-07498c1918fe'
expected = {'left': UUID('eff78730-1b2e-4268-a491-f08f348be086'), 'right': UUID('5c160231-d3f2-450f-bbc9-07498c1918fe')}

    @pytest.mark.parametrize(
        'uri_template, path, expected',
        as_params(
            (
                '/widgets/{widget_id:uuid}',
                '/widgets/' + _TEST_UUID_STR,
                {'widget_id': _TEST_UUID},
            ),
            (
                '/widgets/{widget_id:uuid}/orders',
                '/widgets/' + _TEST_UUID_STR_SANS_HYPHENS + '/orders',
                {'widget_id': _TEST_UUID},
            ),
            (
                '/versions/diff/{left:uuid()}...{right:uuid()}',
                '/versions/diff/{}...{}'.format(_TEST_UUID_STR, _TEST_UUID_STR_2),
                {
                    'left': _TEST_UUID,
                    'right': _TEST_UUID_2,
                },
            ),
            (
                '/versions/diff/{left:uuid}...{right:uuid()}',
                '/versions/diff/{}...{}'.format(_TEST_UUID_STR, _TEST_UUID_STR_2),
                {
                    'left': _TEST_UUID,
                    'right': _TEST_UUID_2,
                },
            ),
            (
                '/versions/diff/{left:uuid()}...{right:uuid}',
                '/versions/diff/{}...{}'.format(_TEST_UUID_STR, _TEST_UUID_STR_2),
                {
                    'left': _TEST_UUID,
                    'right': _TEST_UUID_2,
                },
            ),
            (
                '/widgets/{widget_id:uuid}/orders',
                '/widgets/' + _TEST_UUID_STR_SANS_HYPHENS[:-1] + '/orders',
                None,
            ),
            prefix='uuid_converter',
        ),
    )
    def test_uuid_converter(client, resource, uri_template, path, expected):
>       client.app.add_route(uri_template, resource)

tests/test_uri_templates.py:361: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f94150d1690>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692660e0>, 'CHECK...60e0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692660e0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method SimpleTestResource.on_get of <falcon.testing.resource.SimpleTestResource object at 0x7f956977ea10>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_______________ test_with_and_without_trailing_slash[asgi-True] ________________

client = <falcon.testing.client.TestClient object at 0x7f95694550f0>
reverse = True

    @pytest.mark.parametrize('reverse', [True, False])
    def test_with_and_without_trailing_slash(client, reverse):
        routes = [
            ('/kitchen', KitchenSinkResource()),
            ('/kitchen/', KitchenSinkResource()),
            ('/kitchen/{item}', KitchenSinkResource()),
            ('/kitchen/{item}/', KitchenSinkResource()),
            ('/kitchen/sink', KitchenSinkResource()),
            ('/kitchen/sink/', KitchenSinkResource()),
        ]
        if reverse:
            routes.reverse()
    
        for route in routes:
>           client.app.add_route(*route)

tests/test_uri_templates.py:576: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:581: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f94150cc510>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b04c0>, 'CHECK...04c0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f95692b04c0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method KitchenSinkResource.on_get of <test_uri_templates.KitchenSinkResource object at 0x7f9569455510>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
=============================== warnings summary ===============================
../../.local/lib/python3.10/site-packages/pyximport/pyximport.py:51
  /home/kaiyaok2/.local/lib/python3.10/site-packages/pyximport/pyximport.py:51: DeprecationWarning: the imp module is deprecated in favour of importlib and slated for removal in Python 3.12; see the module's documentation for alternative uses
    import imp

../../.local/lib/python3.10/site-packages/Cython/Distutils/old_build_ext.py:15
../../.local/lib/python3.10/site-packages/Cython/Distutils/old_build_ext.py:15
  /home/kaiyaok2/.local/lib/python3.10/site-packages/Cython/Distutils/old_build_ext.py:15: DeprecationWarning: dep_util is Deprecated. Use functions from setuptools instead.
    from distutils.dep_util import newer, newer_group

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED tests/test_cython.py::TestCythonized::test_imported_from_c_modules - a...
FAILED tests/test_cython.py::TestCythonized::test_stream_has_private_read - A...
FAILED tests/test_cmd_inspect_app.py::TestMain::test_routes_only[not-internal-verbose]
FAILED tests/test_cmd_inspect_app.py::TestMain::test_inspect[internal-verbose]
FAILED tests/test_cmd_inspect_app.py::TestMain::test_inspect[not-internal-verbose]
FAILED tests/test_cmd_inspect_app.py::TestMain::test_routes_only[internal-verbose]
FAILED tests/test_cmd_inspect_app.py::TestMain::test_inspect[not-internal-not-verbose]
FAILED tests/test_cmd_inspect_app.py::TestMain::test_inspect[internal-not-verbose]
FAILED tests/test_cmd_inspect_app.py::TestMain::test_routes_only[internal-not-verbose]
FAILED tests/test_cmd_inspect_app.py::TestMain::test_routes_only[not-internal-not-verbose]
FAILED tests/test_cmd_inspect_app.py::TestLoadApp::test_load_app_error[_MODULE]
FAILED tests/test_cmd_inspect_app.py::TestLoadApp::test_load_app_error[foo]
FAILED tests/test_cmd_inspect_app.py::TestLoadApp::test_load_app[make_app] - ...
FAILED tests/test_cmd_inspect_app.py::TestLoadApp::test_load_app_error[DummyResource]
FAILED tests/test_cmd_inspect_app.py::TestLoadApp::test_load_app[_APP] - Modu...
FAILED tests/asgi/test_cythonized_asgi.py::test_jsonchema_validator - TypeErr...
FAILED tests/asgi/test_cythonized_asgi.py::test_hooks - TypeError: The <bound...
FAILED tests/test_media_handlers.py::test_json_err_no_handler[asgi-True] - Ty...
FAILED tests/test_media_handlers.py::test_json_err_no_handler[asgi-False] - T...
FAILED tests/test_headers.py::TestHeaders::test_custom_content_type[asgi] - T...
FAILED tests/test_headers.py::TestHeaders::test_set_headers_with_custom_class[asgi]
FAILED tests/test_headers.py::TestHeaders::test_default_media_type[asgi] - Ty...
FAILED tests/test_headers.py::TestHeaders::test_append_link_with_type_hint[asgi]
FAILED tests/test_headers.py::TestHeaders::test_content_length[asgi] - TypeEr...
FAILED tests/test_headers.py::TestHeaders::test_append_link_crossorigin[asgi-None-</related/thing>; rel=alternate]
FAILED tests/test_headers.py::TestHeaders::test_vary_header[asgi-vary0-accept-encoding]
FAILED tests/test_headers.py::TestHeaders::test_append_link_multiple[asgi] - ...
FAILED tests/test_headers.py::TestHeaders::test_declared_content_length_overridden_by_no_body[asgi]
FAILED tests/test_headers.py::TestHeaders::test_append_link_with_anchor[asgi]
FAILED tests/test_headers.py::TestHeaders::test_unicode_headers_contain_non_ascii[asgi-PUT]
FAILED tests/test_headers.py::TestHeaders::test_append_link_crossorigin[asgi-Anonymous-</related/thing>; rel=alternate; crossorigin]
FAILED tests/test_headers.py::TestHeaders::test_content_disposition_attachment_header[asgi-Hello World.txt-attachment; filename="Hello World.txt"]
FAILED tests/test_headers.py::TestHeaders::test_content_disposition_attachment_header[asgi-report.csv-attachment; filename="report.csv"]
FAILED tests/test_headers.py::TestHeaders::test_content_type_no_body[asgi] - ...
FAILED tests/test_headers.py::TestHeaders::test_unicode_headers_contain_non_ascii[asgi-PATCH]
FAILED tests/test_headers.py::TestHeaders::test_vary_star[asgi] - TypeError: ...
FAILED tests/test_headers.py::TestHeaders::test_unicode_headers_contain_only_ascii[asgi]
FAILED tests/test_headers.py::TestHeaders::test_content_disposition_attachment_header[asgi-[f\xf2\xf3]@b\xe0r,b\xe4z.txt-attachment; filename=_fo_o___ba_r_ba_z.txt; filename*=UTF-8''%5Bf%C3%B2%C3%B3%5D%40b%C3%A0r%2Cb%C3%A4z.txt]
FAILED tests/test_headers.py::TestHeaders::test_no_content_length[asgi-204 No Content]
FAILED tests/test_headers.py::TestHeaders::test_no_content_type[asgi-304 Not Modified]
FAILED tests/test_headers.py::TestHeaders::test_response_header_helpers_on_get[asgi]
FAILED tests/test_headers.py::TestHeaders::test_override_default_media_type_missing_encoding[True]
FAILED tests/test_headers.py::TestHeaders::test_unset_header[asgi-True] - Typ...
FAILED tests/test_headers.py::TestHeaders::test_content_disposition_inline_header[asgi-report.csv-inline; filename="report.csv"]
FAILED tests/test_headers.py::TestHeaders::test_expires_header[asgi] - TypeEr...
FAILED tests/test_headers.py::TestHeaders::test_get_header_as_int[asgi] - Typ...
FAILED tests/test_headers.py::TestHeaders::test_append_link_with_title[asgi]
FAILED tests/test_headers.py::TestHeaders::test_unset_header[asgi-False] - Ty...
FAILED tests/test_headers.py::TestHeaders::test_append_link_complex[asgi] - T...
FAILED tests/test_headers.py::TestHeaders::test_override_default_media_type[text/plain; charset=UTF-8-Hello Unicode! \U0001f638-True]
FAILED tests/test_headers.py::TestHeaders::test_headers_as_list[asgi] - TypeE...
FAILED tests/test_headers.py::TestHeaders::test_passthrough_request_headers[asgi]
FAILED tests/test_headers.py::TestHeaders::test_append_link_crossorigin[asgi-anonymous-</related/thing>; rel=alternate; crossorigin]
FAILED tests/test_headers.py::TestHeaders::test_declared_content_length_overriden_by_body_length[asgi]
FAILED tests/test_headers.py::TestHeaders::test_response_append_header[asgi]
FAILED tests/test_headers.py::TestHeaders::test_append_link_crossorigin[asgi-AnOnYmOUs-</related/thing>; rel=alternate; crossorigin]
FAILED tests/test_headers.py::TestHeaders::test_unicode_location_headers[asgi]
FAILED tests/test_headers.py::TestHeaders::test_append_link_with_hreflang_multi[asgi]
FAILED tests/test_headers.py::TestHeaders::test_no_content_type[asgi-204 No Content]
FAILED tests/test_headers.py::TestHeaders::test_append_link_crossorigin[asgi-use-credentials-</related/thing>; rel=alternate; crossorigin="use-credentials"]
FAILED tests/test_headers.py::TestHeaders::test_default_value[asgi] - TypeErr...
FAILED tests/test_headers.py::TestHeaders::test_unicode_headers_contain_non_ascii[asgi-POST]
FAILED tests/test_headers.py::TestHeaders::test_content_disposition_attachment_header[asgi-one,two.txt-attachment; filename="one,two.txt"]
FAILED tests/test_headers.py::TestHeaders::test_no_content_length[asgi-304 Not Modified]
FAILED tests/test_headers.py::TestHeaders::test_headers_with_custom_class_not_callable[asgi]
FAILED tests/test_headers.py::TestHeaders::test_declared_content_length_overriden_by_data_length[asgi]
FAILED tests/test_headers.py::TestHeaders::test_content_disposition_inline_header[asgi-Hello World.txt-inline; filename="Hello World.txt"]
FAILED tests/test_headers.py::TestHeaders::test_request_multiple_header[asgi]
FAILED tests/test_headers.py::TestHeaders::test_response_set_and_get_header[asgi]
FAILED tests/test_headers.py::TestHeaders::test_content_disposition_inline_header[asgi-Bold Digit \U0001d7cf.txt-inline; filename=Bold_Digit_1.txt; filename*=UTF-8''Bold%20Digit%20%F0%9D%9F%8F.txt]
FAILED tests/test_headers.py::TestHeaders::test_append_link_single[asgi] - Ty...
FAILED tests/test_headers.py::TestHeaders::test_content_disposition_attachment_header[asgi-[foo] @ bar.txt-attachment; filename="[foo] @ bar.txt"]
FAILED tests/test_headers.py::TestHeaders::test_content_disposition_attachment_header[asgi-\xc5ngstr\xf6m unit.txt-attachment; filename=A_ngstro_m_unit.txt; filename*=UTF-8''%C3%85ngstr%C3%B6m%20unit.txt]
FAILED tests/test_headers.py::TestHeaders::test_vary_header[asgi-vary1-accept-encoding, x-auth-token]
FAILED tests/test_headers.py::TestHeaders::test_content_disposition_attachment_header[asgi-\xbd,\xb2\u2044\u2082.txt-attachment; filename=1_2_2_2.txt; filename*=UTF-8''%C2%BD%2C%C2%B2%E2%81%84%E2%82%82.txt]
FAILED tests/test_headers.py::TestHeaders::test_content_disposition_attachment_header[asgi-Bold Digit \U0001d7cf.txt-attachment; filename=Bold_Digit_1.txt; filename*=UTF-8''Bold%20Digit%20%F0%9D%9F%8F.txt]
FAILED tests/test_headers.py::TestHeaders::test_unicode_headers_contain_non_ascii[asgi-CONNECT]
FAILED tests/test_headers.py::TestHeaders::test_request_latin1_headers[asgi]
FAILED tests/test_headers.py::TestHeaders::test_append_link_crossorigin[asgi-Use-Credentials-</related/thing>; rel=alternate; crossorigin="use-credentials"]
FAILED tests/test_headers.py::TestHeaders::test_override_default_media_type[text/plain-Hello ISO-8859-1!-True]
FAILED tests/test_headers.py::TestHeaders::test_declared_content_length_on_head[asgi]
FAILED tests/test_headers.py::TestHeaders::test_append_link_with_link_extension[asgi]
FAILED tests/test_headers.py::TestHeaders::test_required_header[asgi] - TypeE...
FAILED tests/test_headers.py::TestHeaders::test_append_link_with_title_star[asgi]
FAILED tests/test_headers.py::TestHeaders::test_append_link_with_hreflang[asgi]
FAILED tests/test_testing.py::test_client_simulate_aliases[asgi-PATCH] - falc...
FAILED tests/test_testing.py::test_client_simulate_aliases[asgi-OPTIONS] - fa...
FAILED tests/test_testing.py::test_client_simulate_aliases[asgi-LOCK] - falco...
FAILED tests/test_testing.py::test_client_simulate_aliases[asgi-DELETE] - fal...
FAILED tests/test_testing.py::test_client_simulate_aliases[asgi-POST] - falco...
FAILED tests/test_testing.py::test_client_simulate_aliases[asgi-HEAD] - falco...
FAILED tests/test_testing.py::test_client_simulate_aliases[asgi-PUT] - falcon...
FAILED tests/test_testing.py::test_client_simulate_aliases[asgi-GET] - falcon...
FAILED tests/test_after_hooks.py::test_resource_with_uri_fields[asgi-resource0]
FAILED tests/test_after_hooks.py::test_wrapped_resource_with_hooks_aware_of_resource[asgi]
FAILED tests/test_after_hooks.py::test_resource_with_uri_fields[asgi-resource1]
FAILED tests/test_after_hooks.py::test_wrapped_resource[asgi-resource0] - Typ...
FAILED tests/test_after_hooks.py::test_wrapped_resource[asgi-resource1] - Typ...
FAILED tests/test_inspect.py::TestInspectApp::test_error_handler[asgi] - falc...
FAILED tests/test_inspect.py::TestInspectApp::test_app[asgi] - falcon.errors....
FAILED tests/test_inspect.py::TestInspectApp::test_middleware_tree[asgi] - fa...
FAILED tests/test_inspect.py::TestInspectApp::test_routes[asgi] - falcon.erro...
FAILED tests/test_inspect.py::TestInspectApp::test_middleware[asgi] - falcon....
FAILED tests/test_inspect.py::TestInspectApp::test_sink[asgi] - falcon.errors...
FAILED tests/test_inspect.py::TestInspectApp::test_static_routes[asgi] - falc...
FAILED tests/test_uri_templates.py::test_datetime_converter[asgi-/{start_year:int}-to-{timestamp:dt("%Y-%m")}-/1961-to-1969-07-21-None]
FAILED tests/test_uri_templates.py::test_converter_custom[asgi-/{food:spam(")")}:{food_too:spam("()")}-/bacon:eggs-expected1]
FAILED tests/test_uri_templates.py::test_uuid_converter[asgi-uuid_converter_6]
FAILED tests/test_uri_templates.py::test_uuid_converter_complex_segment[asgi]
FAILED tests/test_uri_templates.py::test_no_vars[asgi] - TypeError: The <boun...
FAILED tests/test_uri_templates.py::test_with_and_without_trailing_slash[asgi-False]
FAILED tests/test_uri_templates.py::test_int_converter_rejections[asgi-/{id:int(2)}]
FAILED tests/test_uri_templates.py::test_single[asgi-id] - TypeError: The <bo...
FAILED tests/test_uri_templates.py::test_same_level_complex_var[asgi-True] - ...
FAILED tests/test_uri_templates.py::test_special_chars[asgi] - TypeError: The...
FAILED tests/test_uri_templates.py::test_float_converter_non_finite_allowed[asgi--inf]
FAILED tests/test_uri_templates.py::test_int_converter_rejections[asgi-/{id:int(min=124)}]
FAILED tests/test_uri_templates.py::test_float_converter_non_finite_allowed[asgi-inf]
FAILED tests/test_uri_templates.py::test_single_path_segment[asgi] - TypeErro...
FAILED tests/test_uri_templates.py::test_float_converter[asgi-/{id:float(min=1.9)}-2.1]
FAILED tests/test_uri_templates.py::test_float_converter[asgi-/{id:float}-2.1]
FAILED tests/test_uri_templates.py::test_same_level_complex_var[asgi-False]
FAILED tests/test_uri_templates.py::test_single[asgi-widget_id] - TypeError: ...
FAILED tests/test_uri_templates.py::test_float_converter[asgi-/{id:float}-1.9]
FAILED tests/test_uri_templates.py::test_uuid_converter[asgi-uuid_converter_1]
FAILED tests/test_uri_templates.py::test_int_converter[asgi-/{id:int}] - Type...
FAILED tests/test_uri_templates.py::test_int_converter[asgi-/{id:int(min=123)}]
FAILED tests/test_uri_templates.py::test_float_converter[asgi-/{id:float(min=1.8, max=3)}-2]
FAILED tests/test_uri_templates.py::test_multiple[asgi] - TypeError: The <bou...
FAILED tests/test_uri_templates.py::test_float_converter[asgi-/{id:float(min=1.8, max=3)}-2.1]
FAILED tests/test_uri_templates.py::test_int_converter_rejections[asgi-/{id:int(num_digits=3, max=100)}]
FAILED tests/test_uri_templates.py::test_single[asgi-id123] - TypeError: The ...
FAILED tests/test_uri_templates.py::test_datetime_converter[asgi-/{start_year:int}-to-{timestamp:dt}-/1961-to-1969-07-21T02:56:00Z-dt_expected0]
FAILED tests/test_uri_templates.py::test_root_path[asgi] - TypeError: The <bo...
FAILED tests/test_uri_templates.py::test_float_converter[asgi-/{id:float(1)}-2]
FAILED tests/test_uri_templates.py::test_converter_custom[asgi-/{food:spam}-/something-expected0]
FAILED tests/test_uri_templates.py::test_float_converter[asgi-/{id:float(1)}-1.9]
FAILED tests/test_uri_templates.py::test_datetime_converter[asgi-/{start_year:int}/{timestamp:dt("%Y-%m-%d %H:%M")}-/1961/1969-07-21 14:30-dt_expected2]
FAILED tests/test_uri_templates.py::test_float_converter[asgi-/{id:float(1)}-2.1]
FAILED tests/test_uri_templates.py::test_single_trailing_slash[asgi] - TypeEr...
FAILED tests/test_uri_templates.py::test_uuid_converter[asgi-uuid_converter_2]
FAILED tests/test_uri_templates.py::test_int_converter[asgi-/{id:int(3)}] - T...
FAILED tests/test_uri_templates.py::test_adding_suffix_routes[asgi] - TypeErr...
FAILED tests/test_uri_templates.py::test_float_converter_non_finite_allowed[asgi-nan]
FAILED tests/test_uri_templates.py::test_float_converter_non_finite_disallowed[asgi]
FAILED tests/test_uri_templates.py::test_int_converter[asgi-/{id:int(min=123, max=123)}]
FAILED tests/test_uri_templates.py::test_uuid_converter[asgi-uuid_converter_4]
FAILED tests/test_uri_templates.py::test_converter_custom[asgi-/({food:spam()}){food_too:spam("()")}-/(bacon)eggs-expected2]
FAILED tests/test_uri_templates.py::test_float_converter[asgi-/{id:float(min=1.9)}-2]
FAILED tests/test_uri_templates.py::test_float_converter[asgi-/{id:float(min=1.9)}-1.9]
FAILED tests/test_uri_templates.py::test_float_converter[asgi-/{id:float}-2]
FAILED tests/test_uri_templates.py::test_float_converter[asgi-/{id:float(min=1.8, max=3)}-1.9]
FAILED tests/test_uri_templates.py::test_uuid_converter[asgi-uuid_converter_3]
FAILED tests/test_uri_templates.py::test_datetime_converter[asgi-/{start_year:int}-to-{timestamp:dt("%Y-%m-%d")}-/1961-to-1969-07-21-dt_expected1]
FAILED tests/test_uri_templates.py::test_uuid_converter[asgi-uuid_converter_5]
FAILED tests/test_uri_templates.py::test_with_and_without_trailing_slash[asgi-True]
ERROR tests/test_http_custom_method_routing.py::test_foo[asgi] - TypeError: T...
ERROR tests/test_http_custom_method_routing.py::test_bar[asgi] - TypeError: T...
ERROR tests/test_http_custom_method_routing.py::test_map_http_methods[asgi]
ERROR tests/test_redirects.py::TestRedirects::test_redirect[asgi-GET-301 Moved Permanently-/moved/perm]
ERROR tests/test_redirects.py::TestRedirects::test_redirect[asgi-POST-302 Found-/found]
ERROR tests/test_redirects.py::TestRedirects::test_redirect[asgi-DELETE-307 Temporary Redirect-/tmp/redirect]
ERROR tests/test_redirects.py::TestRedirects::test_redirect_with_headers[asgi-HEAD-308 Permanent Redirect-/perm/redirect]
ERROR tests/test_redirects.py::TestRedirects::test_redirect[asgi-PUT-303 See Other-/see/other]
ERROR tests/test_redirects.py::TestRedirects::test_redirect_with_headers[asgi-POST-302 Found-/found]
ERROR tests/test_redirects.py::TestRedirects::test_redirect_with_headers[asgi-GET-301 Moved Permanently-/moved/perm]
ERROR tests/test_redirects.py::TestRedirects::test_redirect[asgi-HEAD-308 Permanent Redirect-/perm/redirect]
ERROR tests/test_redirects.py::TestRedirects::test_redirect_with_headers[asgi-PUT-303 See Other-/see/other]
ERROR tests/test_redirects.py::TestRedirects::test_redirect_with_headers[asgi-DELETE-307 Temporary Redirect-/tmp/redirect]
ERROR tests/test_cookies.py::test_same_site_empty_string[asgi] - TypeError: T...
ERROR tests/test_cookies.py::test_lax_same_site_value[asgi] - TypeError: The ...
ERROR tests/test_cookies.py::test_unset_cookies[asgi] - TypeError: The <bound...
ERROR tests/test_cookies.py::test_cookies_setable[asgi] - TypeError: The <bou...
ERROR tests/test_cookies.py::test_cookie_timezone[asgi] - TypeError: The <bou...
ERROR tests/test_cookies.py::test_cookie_max_age_float_and_string[asgi-foostring]
ERROR tests/test_cookies.py::test_response_disable_secure_globally[asgi] - Ty...
ERROR tests/test_cookies.py::test_cookie_expires_aware[asgi] - TypeError: The...
ERROR tests/test_cookies.py::test_response_complex_case[asgi] - TypeError: Th...
ERROR tests/test_cookies.py::test_none_same_site_value[asgi] - TypeError: The...
ERROR tests/test_cookies.py::test_cookie_expires_naive[asgi] - TypeError: The...
ERROR tests/test_cookies.py::test_unset_cookies_samesite[asgi] - TypeError: T...
ERROR tests/test_cookies.py::test_strict_same_site_value[asgi] - TypeError: T...
ERROR tests/test_cookies.py::test_response_base_case[asgi] - TypeError: The <...
ERROR tests/test_cookies.py::test_response_unset_cookie[asgi] - TypeError: Th...
ERROR tests/test_cookies.py::test_cookie_max_age_float_and_string[asgi-foofloat]
ERROR tests/test_httperror.py::TestHTTPError::test_custom_serializer_no_representation[asgi]
ERROR tests/test_httperror.py::TestHTTPError::test_title_default_message_if_none[asgi-503 Service Unavailable-str]
ERROR tests/test_httperror.py::TestHTTPError::test_forbidden[asgi-application/vnd.company.system.project.resource+json;v=1.1]
ERROR tests/test_httperror.py::TestHTTPError::test_missing_header[asgi] - Typ...
ERROR tests/test_httperror.py::TestHTTPError::test_429[asgi] - TypeError: The...
ERROR tests/test_httperror.py::TestHTTPError::test_epic_fail_xml[asgi-application/vnd.company.system.project.resource+xml;v=1.1]
ERROR tests/test_httperror.py::TestHTTPError::test_416[asgi] - TypeError: The...
ERROR tests/test_httperror.py::TestHTTPError::test_503_integer_retry_after[asgi]
ERROR tests/test_httperror.py::TestHTTPError::test_503_datetime_retry_after[asgi]
ERROR tests/test_httperror.py::TestHTTPError::test_title_default_message_if_none[asgi-503-str]
ERROR tests/test_httperror.py::TestHTTPError::test_custom_error_serializer[asgi]
ERROR tests/test_httperror.py::TestHTTPError::test_405_with_body[asgi] - Type...
ERROR tests/test_httperror.py::TestHTTPError::test_unicode_json[asgi] - TypeE...
ERROR tests/test_httperror.py::TestHTTPError::test_414_with_custom_kwargs[asgi]
ERROR tests/test_httperror.py::TestHTTPError::test_429_no_retry_after[asgi]
ERROR tests/test_httperror.py::TestHTTPError::test_401[asgi] - TypeError: The...
ERROR tests/test_httperror.py::TestHTTPError::test_no_description_xml[asgi]
ERROR tests/test_httperror.py::TestHTTPError::test_base_class[asgi] - TypeErr...
ERROR tests/test_httperror.py::TestHTTPError::test_410_with_body[asgi] - Type...
ERROR tests/test_httperror.py::TestHTTPError::test_custom_error_serializer_optional_representation[asgi-GET-/notfound-404]
ERROR tests/test_httperror.py::TestHTTPError::test_temporary_413_integer_retry_after[asgi]
ERROR tests/test_httperror.py::TestHTTPError::test_epic_fail_xml[asgi-text/xml]
ERROR tests/test_httperror.py::TestHTTPError::test_414_with_description[asgi]
ERROR tests/test_httperror.py::TestHTTPError::test_forbidden[asgi-application/json-patch+json]
ERROR tests/test_httperror.py::TestHTTPError::test_custom_error_serializer_optional_representation[asgi-GET-/404-404]
ERROR tests/test_httperror.py::TestHTTPError::test_custom_error_serializer_optional_representation[asgi-BREW-/notfound-400]
ERROR tests/test_httperror.py::TestHTTPError::test_invalid_param[asgi] - Type...
ERROR tests/test_httperror.py::TestHTTPError::test_405_without_body[asgi] - T...
ERROR tests/test_httperror.py::TestHTTPError::test_epic_fail_json[asgi] - Typ...
ERROR tests/test_httperror.py::TestHTTPError::test_413[asgi] - TypeError: The...
ERROR tests/test_httperror.py::TestHTTPError::test_unicode_xml[asgi] - TypeEr...
ERROR tests/test_httperror.py::TestHTTPError::test_custom_error_serializer_optional_representation[asgi-REPORT-/404-405]
ERROR tests/test_httperror.py::TestHTTPError::test_missing_param[asgi] - Type...
ERROR tests/test_httperror.py::TestHTTPError::test_414_with_title[asgi] - Typ...
ERROR tests/test_httperror.py::TestHTTPError::test_misc[asgi] - TypeError: Th...
ERROR tests/test_httperror.py::TestHTTPError::test_410_without_body[asgi] - T...
ERROR tests/test_httperror.py::TestHTTPError::test_no_description_json[asgi]
ERROR tests/test_httperror.py::TestHTTPError::test_title_default_message_if_none[asgi-503 Service Unavailable-bytes]
ERROR tests/test_httperror.py::TestHTTPError::test_title_default_message_if_none[asgi-503-bytes]
ERROR tests/test_httperror.py::TestHTTPError::test_epic_fail_xml[asgi-application/atom+xml]
ERROR tests/test_httperror.py::TestHTTPError::test_429_datetime[asgi] - TypeE...
ERROR tests/test_httperror.py::TestHTTPError::test_404_without_body[asgi] - T...
ERROR tests/test_httperror.py::TestHTTPError::test_client_does_not_accept_json_or_xml[asgi]
ERROR tests/test_httperror.py::TestHTTPError::test_client_does_not_accept_anything[asgi]
ERROR tests/test_httperror.py::TestHTTPError::test_serialize_no_json_media_handler[asgi]
ERROR tests/test_httperror.py::TestHTTPError::test_epic_fail_xml[asgi-application/xml]
ERROR tests/test_httperror.py::TestHTTPError::test_414[asgi] - TypeError: The...
ERROR tests/test_httperror.py::TestHTTPError::test_invalid_header[asgi] - Typ...
ERROR tests/test_httperror.py::TestHTTPError::test_forbidden[asgi-application/json]
ERROR tests/test_httperror.py::TestHTTPError::test_411[asgi] - TypeError: The...
ERROR tests/test_httperror.py::TestHTTPError::test_405_without_body_with_extra_headers_double_check[asgi]
ERROR tests/test_httperror.py::TestHTTPError::test_title_default_message_if_none[asgi-503-HTTPStatus]
ERROR tests/test_httperror.py::TestHTTPError::test_serialize_error_uses_media_handler[asgi]
ERROR tests/test_httperror.py::TestHTTPError::test_404_with_body[asgi] - Type...
ERROR tests/test_httperror.py::TestHTTPError::test_title_default_message_if_none[asgi-503-int]
ERROR tests/test_httperror.py::TestHTTPError::test_temporary_413_datetime_retry_after[asgi]
ERROR tests/test_httperror.py::TestHTTPError::test_405_without_body_with_extra_headers[asgi]
= 156 failed, 3241 passed, 180 skipped, 3 warnings, 86 errors in 230.31s (0:03:50) =
