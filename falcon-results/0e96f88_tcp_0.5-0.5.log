============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-7.2.2, pluggy-1.3.0
Using --randomly-seed=1705914510
PyQt5 5.15.10 -- Qt runtime 5.15.2 -- Qt compiled 5.15.2
rootdir: /home/kaiyaok2/PythonProjects/falcon, configfile: pyproject.toml, testpaths: tests
plugins: hypothesis-6.81.1, cov-4.1.0, randomly-3.1.0, typeguard-4.1.5, timeout-1.4.2, qt-4.3.1, nbval-0.10.0, mock-3.12.0, tcp-0.1.1, textual-snapshot-0.4.0, asyncio-0.21.1, xdist-3.2.1, cookies-0.7.0, instafail-0.5.0, syrupy-4.6.0, anyio-3.7.1
asyncio: mode=strict
collected 3662 items
Using TCP weights 0.5-0.5
Collect TCP features took 0.2992575168609619s.
Compute TCP order took 0.17707133293151855s.

tests/asgi/test_misc.py .
current test PASSED/SKIPPED -- test_http_status_not_impl in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_misc.py: 0.05148005485534668s cumulative, 0.05148005485534668s individual

.
current test PASSED/SKIPPED -- test_python_error_not_impl in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_misc.py: 0.09498238563537598s cumulative, 0.0435023307800293s individual

.
current test PASSED/SKIPPED -- test_http_error_not_impl in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_misc.py: 0.1303560733795166s cumulative, 0.035373687744140625s individual


tests/test_wsgiref_inputwrapper_with_size.py .
current test PASSED/SKIPPED -- test_resources_can_read_request_stream_during_tests in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgiref_inputwrapper_with_size.py: 0.16814517974853516s cumulative, 0.037789106369018555s individual


tests/test_buffered_reader.py .
current test PASSED/SKIPPED -- test_irregular_large_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 5.313358545303345s cumulative, 5.14521336555481s individual

.
current test PASSED/SKIPPED -- test_irregular_large_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 10.281772375106812s cumulative, 4.968413829803467s individual


tests/test_http_method_routing.py .
current test PASSED/SKIPPED -- test_put in /home/kaiyaok2/PythonProjects/falcon/tests/test_http_method_routing.py: 10.320728302001953s cumulative, 0.0389559268951416s individual

.
current test PASSED/SKIPPED -- test_post_not_allowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_http_method_routing.py: 10.353579044342041s cumulative, 0.03285074234008789s individual

.
current test PASSED/SKIPPED -- test_methods_not_allowed_complex in /home/kaiyaok2/PythonProjects/falcon/tests/test_http_method_routing.py: 10.418253183364868s cumulative, 0.06467413902282715s individual

.
current test PASSED/SKIPPED -- test_on_options in /home/kaiyaok2/PythonProjects/falcon/tests/test_http_method_routing.py: 10.438799619674683s cumulative, 0.020546436309814453s individual

.
current test PASSED/SKIPPED -- test_get in /home/kaiyaok2/PythonProjects/falcon/tests/test_http_method_routing.py: 10.457665205001831s cumulative, 0.018865585327148438s individual

.
current test PASSED/SKIPPED -- test_misc in /home/kaiyaok2/PythonProjects/falcon/tests/test_http_method_routing.py: 10.47610092163086s cumulative, 0.01843571662902832s individual

.
current test PASSED/SKIPPED -- test_post_not_allowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_http_method_routing.py: 10.49561619758606s cumulative, 0.019515275955200195s individual

.
current test PASSED/SKIPPED -- test_default_on_options in /home/kaiyaok2/PythonProjects/falcon/tests/test_http_method_routing.py: 10.515308618545532s cumulative, 0.019692420959472656s individual

.
current test PASSED/SKIPPED -- test_report in /home/kaiyaok2/PythonProjects/falcon/tests/test_http_method_routing.py: 10.536873817443848s cumulative, 0.02156519889831543s individual

.
current test PASSED/SKIPPED -- test_method_not_allowed_with_param in /home/kaiyaok2/PythonProjects/falcon/tests/test_http_method_routing.py: 10.624076128005981s cumulative, 0.08720231056213379s individual

.
current test PASSED/SKIPPED -- test_method_not_allowed_with_param in /home/kaiyaok2/PythonProjects/falcon/tests/test_http_method_routing.py: 10.668556451797485s cumulative, 0.044480323791503906s individual

.
current test PASSED/SKIPPED -- test_on_options in /home/kaiyaok2/PythonProjects/falcon/tests/test_http_method_routing.py: 10.690592765808105s cumulative, 0.022036314010620117s individual

.
current test PASSED/SKIPPED -- test_methods_not_allowed_simple in /home/kaiyaok2/PythonProjects/falcon/tests/test_http_method_routing.py: 10.714391708374023s cumulative, 0.02379894256591797s individual

.
current test PASSED/SKIPPED -- test_methods_not_allowed_simple in /home/kaiyaok2/PythonProjects/falcon/tests/test_http_method_routing.py: 10.742209196090698s cumulative, 0.027817487716674805s individual

.
current test PASSED/SKIPPED -- test_meta_and_others_disallowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_http_method_routing.py: 10.776448726654053s cumulative, 0.03423953056335449s individual

.
current test PASSED/SKIPPED -- test_meta_and_others_disallowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_http_method_routing.py: 10.797441244125366s cumulative, 0.020992517471313477s individual

.
current test PASSED/SKIPPED -- test_misc in /home/kaiyaok2/PythonProjects/falcon/tests/test_http_method_routing.py: 10.824151992797852s cumulative, 0.02671074867248535s individual

.
current test PASSED/SKIPPED -- test_put in /home/kaiyaok2/PythonProjects/falcon/tests/test_http_method_routing.py: 10.848938465118408s cumulative, 0.02478647232055664s individual

.
current test PASSED/SKIPPED -- test_methods_not_allowed_complex in /home/kaiyaok2/PythonProjects/falcon/tests/test_http_method_routing.py: 10.967554807662964s cumulative, 0.11861634254455566s individual

.
current test PASSED/SKIPPED -- test_default_on_options in /home/kaiyaok2/PythonProjects/falcon/tests/test_http_method_routing.py: 11.011165380477905s cumulative, 0.043610572814941406s individual

.
current test PASSED/SKIPPED -- test_get in /home/kaiyaok2/PythonProjects/falcon/tests/test_http_method_routing.py: 11.052180528640747s cumulative, 0.0410151481628418s individual

.
current test PASSED/SKIPPED -- test_meta_and_others_disallowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_http_method_routing.py: 11.067209243774414s cumulative, 0.015028715133666992s individual

.
current test PASSED/SKIPPED -- test_meta_and_others_disallowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_http_method_routing.py: 11.093393325805664s cumulative, 0.02618408203125s individual

.
current test PASSED/SKIPPED -- test_report in /home/kaiyaok2/PythonProjects/falcon/tests/test_http_method_routing.py: 11.121458530426025s cumulative, 0.028065204620361328s individual


tests/test_after_hooks.py .
current test PASSED/SKIPPED -- test_after_hooks_on_suffixed_resource in /home/kaiyaok2/PythonProjects/falcon/tests/test_after_hooks.py: 11.14595079421997s cumulative, 0.024492263793945312s individual

.
current test PASSED/SKIPPED -- test_resource_with_uri_fields in /home/kaiyaok2/PythonProjects/falcon/tests/test_after_hooks.py: 11.16680097579956s cumulative, 0.020850181579589844s individual

.
current test PASSED/SKIPPED -- test_after_hooks_on_suffixed_resource in /home/kaiyaok2/PythonProjects/falcon/tests/test_after_hooks.py: 11.190680742263794s cumulative, 0.0238797664642334s individual

.
current test PASSED/SKIPPED -- test_wrapped_resource_with_hooks_aware_of_resource in /home/kaiyaok2/PythonProjects/falcon/tests/test_after_hooks.py: 11.220717906951904s cumulative, 0.03003716468811035s individual

.
current test PASSED/SKIPPED -- test_after_hooks_on_suffixed_resource in /home/kaiyaok2/PythonProjects/falcon/tests/test_after_hooks.py: 11.25686764717102s cumulative, 0.03614974021911621s individual

.
current test PASSED/SKIPPED -- test_hook_as_callable_class in /home/kaiyaok2/PythonProjects/falcon/tests/test_after_hooks.py: 11.281162023544312s cumulative, 0.024294376373291016s individual

.
current test PASSED/SKIPPED -- test_serializer in /home/kaiyaok2/PythonProjects/falcon/tests/test_after_hooks.py: 11.301371812820435s cumulative, 0.020209789276123047s individual

.
current test PASSED/SKIPPED -- test_wrapped_resource in /home/kaiyaok2/PythonProjects/falcon/tests/test_after_hooks.py: 11.330477476119995s cumulative, 0.029105663299560547s individual

.
current test PASSED/SKIPPED -- test_resource_with_uri_fields_async in /home/kaiyaok2/PythonProjects/falcon/tests/test_after_hooks.py: 11.353155851364136s cumulative, 0.022678375244140625s individual

.
current test PASSED/SKIPPED -- test_after_hooks_on_suffixed_resource in /home/kaiyaok2/PythonProjects/falcon/tests/test_after_hooks.py: 11.37755799293518s cumulative, 0.024402141571044922s individual

.
current test PASSED/SKIPPED -- test_output_validator in /home/kaiyaok2/PythonProjects/falcon/tests/test_after_hooks.py: 11.395289182662964s cumulative, 0.017731189727783203s individual

.
current test PASSED/SKIPPED -- test_output_validator in /home/kaiyaok2/PythonProjects/falcon/tests/test_after_hooks.py: 11.40891695022583s cumulative, 0.013627767562866211s individual

.
current test PASSED/SKIPPED -- test_wrapped_resource in /home/kaiyaok2/PythonProjects/falcon/tests/test_after_hooks.py: 11.426141023635864s cumulative, 0.01722407341003418s individual

.
current test PASSED/SKIPPED -- test_serializer in /home/kaiyaok2/PythonProjects/falcon/tests/test_after_hooks.py: 11.43952465057373s cumulative, 0.013383626937866211s individual

.
current test PASSED/SKIPPED -- test_hook_as_callable_class in /home/kaiyaok2/PythonProjects/falcon/tests/test_after_hooks.py: 11.44922947883606s cumulative, 0.009704828262329102s individual

.
current test PASSED/SKIPPED -- test_resource_with_uri_fields in /home/kaiyaok2/PythonProjects/falcon/tests/test_after_hooks.py: 11.459460020065308s cumulative, 0.010230541229248047s individual


tests/asgi/test_testing_asgi.py .
current test PASSED/SKIPPED -- test_asgi_request_event_emitter_hang in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_testing_asgi.py: 12.476915121078491s cumulative, 1.0174551010131836s individual


tests/test_slots.py .
current test PASSED/SKIPPED -- test_slots_request in /home/kaiyaok2/PythonProjects/falcon/tests/test_slots.py: 12.497388362884521s cumulative, 0.020473241806030273s individual

.
current test PASSED/SKIPPED -- test_slots_request in /home/kaiyaok2/PythonProjects/falcon/tests/test_slots.py: 12.509985446929932s cumulative, 0.012597084045410156s individual

.
current test PASSED/SKIPPED -- test_slots_response in /home/kaiyaok2/PythonProjects/falcon/tests/test_slots.py: 12.531699657440186s cumulative, 0.021714210510253906s individual

.
current test PASSED/SKIPPED -- test_slots_response in /home/kaiyaok2/PythonProjects/falcon/tests/test_slots.py: 12.546945095062256s cumulative, 0.015245437622070312s individual


tests/asgi/test_buffered_reader.py .
current test PASSED/SKIPPED -- test_irregular_large_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 18.363004684448242s cumulative, 5.816059589385986s individual

.
current test PASSED/SKIPPED -- test_irregular_large_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 23.567214727401733s cumulative, 5.204210042953491s individual


tests/test_request_context.py .
current test PASSED/SKIPPED -- test_custom_request_context in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_context.py: 23.58939266204834s cumulative, 0.022177934646606445s individual

.
current test PASSED/SKIPPED -- test_custom_request_context_request_access in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_context.py: 23.623721599578857s cumulative, 0.03432893753051758s individual

.
current test PASSED/SKIPPED -- test_custom_request_context_failure in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_context.py: 23.645679712295532s cumulative, 0.021958112716674805s individual

.
current test PASSED/SKIPPED -- test_default_request_context in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_context.py: 23.66234254837036s cumulative, 0.0166628360748291s individual


tests/test_inspect.py .
current test PASSED/SKIPPED -- test_app in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 23.82928967475891s cumulative, 0.1669471263885498s individual

.
current test PASSED/SKIPPED -- test_static_routes in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 23.86016821861267s cumulative, 0.030878543853759766s individual

.
current test PASSED/SKIPPED -- test_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 23.89471983909607s cumulative, 0.03455162048339844s individual

.
current test PASSED/SKIPPED -- test_middleware in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 24.005164861679077s cumulative, 0.11044502258300781s individual

.
current test PASSED/SKIPPED -- test_routes in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 24.056804656982422s cumulative, 0.05163979530334473s individual

.
current test PASSED/SKIPPED -- test_sink in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 24.092671871185303s cumulative, 0.03586721420288086s individual

.
current test PASSED/SKIPPED -- test_middleware_tree in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 24.14448308944702s cumulative, 0.05181121826171875s individual


tests/asgi/test_buffered_reader.py .
current test PASSED/SKIPPED -- test_invalid_delimiter_length in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.15220069885254s cumulative, 0.007717609405517578s individual

.
current test PASSED/SKIPPED -- test_peek in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.160321950912476s cumulative, 0.008121252059936523s individual

.
current test PASSED/SKIPPED -- test_read_until_shared_boundary in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.168740272521973s cumulative, 0.00841832160949707s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.175231218338013s cumulative, 0.006490945816040039s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.180577516555786s cumulative, 0.0053462982177734375s individual

.
current test PASSED/SKIPPED -- test_read in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.185610055923462s cumulative, 0.005032539367675781s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.190231323242188s cumulative, 0.004621267318725586s individual

.
current test PASSED/SKIPPED -- test_pipe in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.193977117538452s cumulative, 0.0037457942962646484s individual

.
current test PASSED/SKIPPED -- test_peek in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.197633743286133s cumulative, 0.003656625747680664s individual

.
current test PASSED/SKIPPED -- test_peek in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.20164704322815s cumulative, 0.0040132999420166016s individual

.
current test PASSED/SKIPPED -- test_iteration_started in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.20632767677307s cumulative, 0.004680633544921875s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.21100687980652s cumulative, 0.004679203033447266s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.215502977371216s cumulative, 0.004496097564697266s individual

.
current test PASSED/SKIPPED -- test_read_until_shared_boundary in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.219125747680664s cumulative, 0.003622770309448242s individual

.
current test PASSED/SKIPPED -- test_read_until_shared_boundary in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.222574472427368s cumulative, 0.0034487247467041016s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.23309898376465s cumulative, 0.010524511337280273s individual

.
current test PASSED/SKIPPED -- test_delimit in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.24046492576599s cumulative, 0.0073659420013427734s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.257420301437378s cumulative, 0.01695537567138672s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.270787239074707s cumulative, 0.013366937637329102s individual

.
current test PASSED/SKIPPED -- test_read_until_shared_boundary in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.278008460998535s cumulative, 0.007221221923828125s individual

.
current test PASSED/SKIPPED -- test_read_until_shared_boundary in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.284085035324097s cumulative, 0.0060765743255615234s individual

.
current test PASSED/SKIPPED -- test_delimit in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.298129081726074s cumulative, 0.014044046401977539s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.303742170333862s cumulative, 0.005613088607788086s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.311766147613525s cumulative, 0.008023977279663086s individual

.
current test PASSED/SKIPPED -- test_delimit in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.32586908340454s cumulative, 0.014102935791015625s individual

.
current test PASSED/SKIPPED -- test_pipe_until_delimiter_not_found in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.338324785232544s cumulative, 0.01245570182800293s individual

.
current test PASSED/SKIPPED -- test_basic_aiter in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.34955096244812s cumulative, 0.011226177215576172s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.365694046020508s cumulative, 0.016143083572387695s individual

.
current test PASSED/SKIPPED -- test_delimit in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.38014817237854s cumulative, 0.014454126358032227s individual

.
current test PASSED/SKIPPED -- test_read in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.39529585838318s cumulative, 0.015147686004638672s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.412858963012695s cumulative, 0.0175631046295166s individual

.
current test PASSED/SKIPPED -- test_read_until_shared_boundary in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.432968616485596s cumulative, 0.02010965347290039s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.454337120056152s cumulative, 0.02136850357055664s individual

.
current test PASSED/SKIPPED -- test_read_until_shared_boundary in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.469801664352417s cumulative, 0.015464544296264648s individual

.
current test PASSED/SKIPPED -- test_readall in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.48210906982422s cumulative, 0.012307405471801758s individual

.
current test PASSED/SKIPPED -- test_read_until_shared_boundary in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.49168562889099s cumulative, 0.009576559066772461s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.506916999816895s cumulative, 0.01523137092590332s individual

.
current test PASSED/SKIPPED -- test_exhaust in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.51744318008423s cumulative, 0.010526180267333984s individual

.
current test PASSED/SKIPPED -- test_peek in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.530899047851562s cumulative, 0.013455867767333984s individual

.
current test PASSED/SKIPPED -- test_readall in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.545031309127808s cumulative, 0.014132261276245117s individual

.
current test PASSED/SKIPPED -- test_placeholder_methods in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.55985426902771s cumulative, 0.014822959899902344s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.579867601394653s cumulative, 0.02001333236694336s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.600860118865967s cumulative, 0.020992517471313477s individual

.
current test PASSED/SKIPPED -- test_read_until_shared_boundary in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.612654209136963s cumulative, 0.011794090270996094s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.63334369659424s cumulative, 0.02068948745727539s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.656494855880737s cumulative, 0.023151159286499023s individual

.
current test PASSED/SKIPPED -- test_read_until_shared_boundary in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.66715097427368s cumulative, 0.010656118392944336s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.676084518432617s cumulative, 0.008933544158935547s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.68467140197754s cumulative, 0.008586883544921875s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.69229292869568s cumulative, 0.0076215267181396484s individual

.
current test PASSED/SKIPPED -- test_read_until_shared_boundary in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.69829773902893s cumulative, 0.006004810333251953s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.705737352371216s cumulative, 0.007439613342285156s individual

.
current test PASSED/SKIPPED -- test_aiter_from_buffer in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.71256160736084s cumulative, 0.0068242549896240234s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.72552728652954s cumulative, 0.012965679168701172s individual

.
current test PASSED/SKIPPED -- test_read in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.737366437911987s cumulative, 0.011839151382446289s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.752755165100098s cumulative, 0.015388727188110352s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.765373468399048s cumulative, 0.012618303298950195s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.77034592628479s cumulative, 0.0049724578857421875s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.775554418563843s cumulative, 0.005208492279052734s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.78268265724182s cumulative, 0.007128238677978516s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.789140224456787s cumulative, 0.00645756721496582s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.807852029800415s cumulative, 0.01871180534362793s individual

.
current test PASSED/SKIPPED -- test_read_until_shared_boundary in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.811445236206055s cumulative, 0.0035932064056396484s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.816617012023926s cumulative, 0.005171775817871094s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.82177758216858s cumulative, 0.00516057014465332s individual

.
current test PASSED/SKIPPED -- test_delimit in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.82589077949524s cumulative, 0.004113197326660156s individual

.
current test PASSED/SKIPPED -- test_read_until_shared_boundary in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.832842588424683s cumulative, 0.006951808929443359s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.83731460571289s cumulative, 0.004472017288208008s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.841800451278687s cumulative, 0.0044858455657958984s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.851069688796997s cumulative, 0.009269237518310547s individual

.
current test PASSED/SKIPPED -- test_read_until_shared_boundary in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.854969263076782s cumulative, 0.0038995742797851562s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.859934329986572s cumulative, 0.004965066909790039s individual

.
current test PASSED/SKIPPED -- test_peek in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.86505389213562s cumulative, 0.0051195621490478516s individual

.
current test PASSED/SKIPPED -- test_readall in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.868650197982788s cumulative, 0.0035963058471679688s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.873034477233887s cumulative, 0.004384279251098633s individual

.
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.87818479537964s cumulative, 0.005150318145751953s individual

.
current test PASSED/SKIPPED -- test_read_until_shared_boundary in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.883747100830078s cumulative, 0.005562305450439453s individual

.
current test PASSED/SKIPPED -- test_peek in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.89123511314392s cumulative, 0.0074880123138427734s individual

.
current test PASSED/SKIPPED -- test_read in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.89656662940979s cumulative, 0.005331516265869141s individual

.
current test PASSED/SKIPPED -- test_read_until_shared_boundary in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.89997935295105s cumulative, 0.0034127235412597656s individual

.
current test PASSED/SKIPPED -- test_read_until_with_buffer_edge_case in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.903939485549927s cumulative, 0.003960132598876953s individual

.
current test PASSED/SKIPPED -- test_peek_at_eof in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.907817125320435s cumulative, 0.0038776397705078125s individual

.
current test PASSED/SKIPPED -- test_read_until_shared_boundary in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 24.912148237228394s cumulative, 0.004331111907958984s individual


tests/test_http_custom_method_routing.py .
current test PASSED/SKIPPED -- test_map_http_methods in /home/kaiyaok2/PythonProjects/falcon/tests/test_http_custom_method_routing.py: 24.92786979675293s cumulative, 0.015721559524536133s individual

.
current test PASSED/SKIPPED -- test_bar in /home/kaiyaok2/PythonProjects/falcon/tests/test_http_custom_method_routing.py: 24.94677233695984s cumulative, 0.01890254020690918s individual

.
current test PASSED/SKIPPED -- test_bar in /home/kaiyaok2/PythonProjects/falcon/tests/test_http_custom_method_routing.py: 24.971464157104492s cumulative, 0.02469182014465332s individual

.
current test PASSED/SKIPPED -- test_foo in /home/kaiyaok2/PythonProjects/falcon/tests/test_http_custom_method_routing.py: 25.000333070755005s cumulative, 0.028868913650512695s individual

.
current test PASSED/SKIPPED -- test_foo in /home/kaiyaok2/PythonProjects/falcon/tests/test_http_custom_method_routing.py: 25.017668962478638s cumulative, 0.017335891723632812s individual

.
current test PASSED/SKIPPED -- test_map_http_methods in /home/kaiyaok2/PythonProjects/falcon/tests/test_http_custom_method_routing.py: 25.028387308120728s cumulative, 0.010718345642089844s individual


tests/test_python_version_requirements.py .
current test PASSED/SKIPPED -- test_asgi in /home/kaiyaok2/PythonProjects/falcon/tests/test_python_version_requirements.py: 25.03478693962097s cumulative, 0.006399631500244141s individual


tests/test_media_multipart.py .
current test PASSED/SKIPPED -- test_random_form in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 25.84338068962097s cumulative, 0.80859375s individual


tests/test_http_custom_method_routing.py ssssss
tests/asgi/test_request_asgi.py .
current test PASSED/SKIPPED -- test_log_error_not_supported in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_request_asgi.py: 25.85916495323181s cumulative, 0.015784263610839844s individual

.
current test PASSED/SKIPPED -- test_missing_server_in_scope in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_request_asgi.py: 25.867116451263428s cumulative, 0.007951498031616211s individual


tests/test_request_access_route.py .
current test PASSED/SKIPPED -- test_remote_addr_default in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_access_route.py: 25.88011407852173s cumulative, 0.012997627258300781s individual

.
current test PASSED/SKIPPED -- test_rfc_forwarded in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_access_route.py: 25.889176607131958s cumulative, 0.009062528610229492s individual

.
current test PASSED/SKIPPED -- test_x_real_ip in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_access_route.py: 25.89410138130188s cumulative, 0.004924774169921875s individual

.
current test PASSED/SKIPPED -- test_malformed_rfc_forwarded in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_access_route.py: 25.901630878448486s cumulative, 0.007529497146606445s individual

.
current test PASSED/SKIPPED -- test_remote_addr in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_access_route.py: 25.91721749305725s cumulative, 0.015586614608764648s individual

.
current test PASSED/SKIPPED -- test_remote_addr_non_default in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_access_route.py: 25.92460012435913s cumulative, 0.007382631301879883s individual

.
current test PASSED/SKIPPED -- test_remote_addr in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_access_route.py: 25.932525873184204s cumulative, 0.007925748825073242s individual

.
current test PASSED/SKIPPED -- test_remote_addr_non_default in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_access_route.py: 25.940827131271362s cumulative, 0.008301258087158203s individual

.
current test PASSED/SKIPPED -- test_x_forwarded_for in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_access_route.py: 25.95200252532959s cumulative, 0.011175394058227539s individual

.
current test PASSED/SKIPPED -- test_malformed_rfc_forwarded in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_access_route.py: 25.962031364440918s cumulative, 0.010028839111328125s individual

.
current test PASSED/SKIPPED -- test_remote_addr in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_access_route.py: 25.97151017189026s cumulative, 0.00947880744934082s individual

.
current test PASSED/SKIPPED -- test_remote_addr_missing in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_access_route.py: 25.978978633880615s cumulative, 0.007468461990356445s individual

.
current test PASSED/SKIPPED -- test_x_forwarded_for in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_access_route.py: 25.986782789230347s cumulative, 0.007804155349731445s individual

.
current test PASSED/SKIPPED -- test_remote_addr_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_access_route.py: 25.99396848678589s cumulative, 0.007185697555541992s individual

.
current test PASSED/SKIPPED -- test_remote_addr_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_access_route.py: 25.99906277656555s cumulative, 0.005094289779663086s individual

.
current test PASSED/SKIPPED -- test_remote_addr in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_access_route.py: 26.00473141670227s cumulative, 0.00566864013671875s individual

.
current test PASSED/SKIPPED -- test_x_real_ip in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_access_route.py: 26.009990692138672s cumulative, 0.005259275436401367s individual

.
current test PASSED/SKIPPED -- test_x_forwarded_for in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_access_route.py: 26.01920485496521s cumulative, 0.009214162826538086s individual

.
current test PASSED/SKIPPED -- test_remote_addr_default in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_access_route.py: 26.025543928146362s cumulative, 0.006339073181152344s individual

.
current test PASSED/SKIPPED -- test_rfc_forwarded in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_access_route.py: 26.03220772743225s cumulative, 0.006663799285888672s individual

.
current test PASSED/SKIPPED -- test_x_forwarded_for in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_access_route.py: 26.036897659301758s cumulative, 0.004689931869506836s individual


tests/asgi/test_response_media_asgi.py .
current test PASSED/SKIPPED -- test_non_ascii_json_serialization in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_response_media_asgi.py: 26.057435989379883s cumulative, 0.020538330078125s individual

.
current test PASSED/SKIPPED -- test_mimeparse_edgecases in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_response_media_asgi.py: 26.075559377670288s cumulative, 0.018123388290405273s individual

.
current test PASSED/SKIPPED -- test_custom_render_body in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_response_media_asgi.py: 26.092462062835693s cumulative, 0.016902685165405273s individual

.
current test PASSED/SKIPPED -- test_default_media_type in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_response_media_asgi.py: 26.108964204788208s cumulative, 0.01650214195251465s individual

.
current test PASSED/SKIPPED -- test_text in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_response_media_asgi.py: 26.134519577026367s cumulative, 0.02555537223815918s individual

.
current test PASSED/SKIPPED -- test_msgpack in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_response_media_asgi.py: 26.146950483322144s cumulative, 0.012430906295776367s individual

.
current test PASSED/SKIPPED -- test_unknown_media_type in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_response_media_asgi.py: 26.157139778137207s cumulative, 0.010189294815063477s individual

.
current test PASSED/SKIPPED -- test_media in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_response_media_asgi.py: 26.165942907333374s cumulative, 0.008803129196166992s individual

.
current test PASSED/SKIPPED -- test_mimeparse_edgecases in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_response_media_asgi.py: 26.186174154281616s cumulative, 0.020231246948242188s individual

.
current test PASSED/SKIPPED -- test_custom_media_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_response_media_asgi.py: 26.20951509475708s cumulative, 0.023340940475463867s individual

.
current test PASSED/SKIPPED -- test_non_ascii_json_serialization in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_response_media_asgi.py: 26.227069854736328s cumulative, 0.017554759979248047s individual

.
current test PASSED/SKIPPED -- test_data_masquerading_as_text in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_response_media_asgi.py: 26.244441509246826s cumulative, 0.017371654510498047s individual

.
current test PASSED/SKIPPED -- test_non_ascii_json_serialization in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_response_media_asgi.py: 26.268561124801636s cumulative, 0.02411961555480957s individual

.
current test PASSED/SKIPPED -- test_json in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_response_media_asgi.py: 26.295743227005005s cumulative, 0.02718210220336914s individual

.
current test PASSED/SKIPPED -- test_msgpack in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_response_media_asgi.py: 26.324232816696167s cumulative, 0.02848958969116211s individual

.
current test PASSED/SKIPPED -- test_msgpack in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_response_media_asgi.py: 26.363186359405518s cumulative, 0.038953542709350586s individual

.
current test PASSED/SKIPPED -- test_json in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_response_media_asgi.py: 26.40181565284729s cumulative, 0.03862929344177246s individual

.
current test PASSED/SKIPPED -- test_data in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_response_media_asgi.py: 26.433470726013184s cumulative, 0.031655073165893555s individual

.
current test PASSED/SKIPPED -- test_json in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_response_media_asgi.py: 26.46822428703308s cumulative, 0.03475356101989746s individual

.
current test PASSED/SKIPPED -- test_non_ascii_json_serialization in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_response_media_asgi.py: 26.51205086708069s cumulative, 0.04382658004760742s individual

.
current test PASSED/SKIPPED -- test_non_ascii_json_serialization in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_response_media_asgi.py: 26.570703983306885s cumulative, 0.05865311622619629s individual

.
current test PASSED/SKIPPED -- test_media_rendered_cached in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_response_media_asgi.py: 26.613144397735596s cumulative, 0.04244041442871094s individual


tests/test_cookies.py .
current test PASSED/SKIPPED -- test_response_unset_cookie in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 26.656619787216187s cumulative, 0.04347538948059082s individual

.
current test PASSED/SKIPPED -- test_cookie_timezone in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 26.691094160079956s cumulative, 0.03447437286376953s individual

.
current test PASSED/SKIPPED -- test_response_unset_cookie in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 26.75089716911316s cumulative, 0.059803009033203125s individual

.
current test PASSED/SKIPPED -- test_cookie_expires_naive in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 26.79654312133789s cumulative, 0.045645952224731445s individual

.
current test PASSED/SKIPPED -- test_invalid_cookies_are_ignored in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 26.89970850944519s cumulative, 0.1031653881072998s individual

.
current test PASSED/SKIPPED -- test_cookie_expires_naive in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 26.946799755096436s cumulative, 0.04709124565124512s individual

.
current test PASSED/SKIPPED -- test_non_ascii_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 26.967123985290527s cumulative, 0.020324230194091797s individual

.
current test PASSED/SKIPPED -- test_cookie_expires_aware in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 27.007787466049194s cumulative, 0.04066348075866699s individual

.
current test PASSED/SKIPPED -- test_invalid_same_site_value in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 27.017780780792236s cumulative, 0.009993314743041992s individual

.
current test PASSED/SKIPPED -- test_cookie_expires_aware in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 27.038973808288574s cumulative, 0.02119302749633789s individual

.
current test PASSED/SKIPPED -- test_strict_same_site_value in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 27.126473665237427s cumulative, 0.08749985694885254s individual

.
current test PASSED/SKIPPED -- test_response_disable_secure_globally in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 27.163377285003662s cumulative, 0.03690361976623535s individual

.
current test PASSED/SKIPPED -- test_none_same_site_value in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 27.18257188796997s cumulative, 0.019194602966308594s individual

.
current test PASSED/SKIPPED -- test_same_site_empty_string in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 27.20465874671936s cumulative, 0.02208685874938965s individual

.
current test PASSED/SKIPPED -- test_same_site_value_case_insensitive in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 27.216559648513794s cumulative, 0.011900901794433594s individual

.
current test PASSED/SKIPPED -- test_same_site_value_case_insensitive in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 27.22308897972107s cumulative, 0.006529331207275391s individual

.
current test PASSED/SKIPPED -- test_response_disable_secure_globally in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 27.242494821548462s cumulative, 0.019405841827392578s individual

.
current test PASSED/SKIPPED -- test_cookie_max_age_float_and_string in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 27.261458158493042s cumulative, 0.018963336944580078s individual

.
current test PASSED/SKIPPED -- test_none_same_site_value in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 27.277750492095947s cumulative, 0.016292333602905273s individual

.
current test PASSED/SKIPPED -- test_same_site_value_case_insensitive in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 27.28217363357544s cumulative, 0.0044231414794921875s individual

.
current test PASSED/SKIPPED -- test_same_site_empty_string in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 27.29444646835327s cumulative, 0.012272834777832031s individual

.
current test PASSED/SKIPPED -- test_non_ascii_value in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 27.299948692321777s cumulative, 0.005502223968505859s individual

.
current test PASSED/SKIPPED -- test_cookie_max_age_float_and_string in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 27.315929889678955s cumulative, 0.015981197357177734s individual

.
current test PASSED/SKIPPED -- test_cookies_setable in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 27.32803440093994s cumulative, 0.012104511260986328s individual

.
current test PASSED/SKIPPED -- test_unset_cookies in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 27.353283882141113s cumulative, 0.025249481201171875s individual

.
current test PASSED/SKIPPED -- test_cookie_timezone in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 27.366628885269165s cumulative, 0.013345003128051758s individual

.
current test PASSED/SKIPPED -- test_unset_cookies in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 27.386409521102905s cumulative, 0.019780635833740234s individual

.
current test PASSED/SKIPPED -- test_response_base_case in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 27.399628400802612s cumulative, 0.013218879699707031s individual

.
current test PASSED/SKIPPED -- test_unicode_inside_ascii_range in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 27.40799856185913s cumulative, 0.008370161056518555s individual

.
current test PASSED/SKIPPED -- test_response_complex_case in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 27.43997311592102s cumulative, 0.03197455406188965s individual

.
current test PASSED/SKIPPED -- test_strict_same_site_value in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 27.466166257858276s cumulative, 0.02619314193725586s individual

.
current test PASSED/SKIPPED -- test_unset_cookies_samesite in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 27.503594160079956s cumulative, 0.03742790222167969s individual

.
current test PASSED/SKIPPED -- test_cookies_setable in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 27.52757978439331s cumulative, 0.023985624313354492s individual

.
current test PASSED/SKIPPED -- test_cookie_header_is_missing in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 27.542139530181885s cumulative, 0.014559745788574219s individual

.
current test PASSED/SKIPPED -- test_non_ascii_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 27.558767557144165s cumulative, 0.016628026962280273s individual

.
current test PASSED/SKIPPED -- test_non_ascii_value in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 27.57279109954834s cumulative, 0.014023542404174805s individual

.
current test PASSED/SKIPPED -- test_non_ascii_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 27.58774185180664s cumulative, 0.014950752258300781s individual

.
current test PASSED/SKIPPED -- test_duplicate_cookie in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 27.60311985015869s cumulative, 0.015377998352050781s individual

.
current test PASSED/SKIPPED -- test_invalid_same_site_value in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 27.621540069580078s cumulative, 0.01842021942138672s individual

.
current test PASSED/SKIPPED -- test_lax_same_site_value in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 27.669017791748047s cumulative, 0.04747772216796875s individual

.
current test PASSED/SKIPPED -- test_unset_cookies_samesite in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 27.748419284820557s cumulative, 0.07940149307250977s individual

.
current test PASSED/SKIPPED -- test_lax_same_site_value in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 27.784259557724s cumulative, 0.03584027290344238s individual

.
current test PASSED/SKIPPED -- test_invalid_same_site_value in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 27.801920413970947s cumulative, 0.017660856246948242s individual

.
current test PASSED/SKIPPED -- test_response_complex_case in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 27.841646909713745s cumulative, 0.03972649574279785s individual

.
current test PASSED/SKIPPED -- test_non_ascii_value in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 27.860230445861816s cumulative, 0.01858353614807129s individual

.
current test PASSED/SKIPPED -- test_response_base_case in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 27.90107750892639s cumulative, 0.040847063064575195s individual

.
current test PASSED/SKIPPED -- test_same_site_value_case_insensitive in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 27.927761793136597s cumulative, 0.026684284210205078s individual

.
current test PASSED/SKIPPED -- test_same_site_value_case_insensitive in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 27.943035125732422s cumulative, 0.015273332595825195s individual

.
current test PASSED/SKIPPED -- test_same_site_value_case_insensitive in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 27.961559057235718s cumulative, 0.0185239315032959s individual

.
current test PASSED/SKIPPED -- test_cookie_max_age_float_and_string in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 28.00150442123413s cumulative, 0.039945363998413086s individual

.
current test PASSED/SKIPPED -- test_cookie_max_age_float_and_string in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 28.032869338989258s cumulative, 0.03136491775512695s individual

.
current test PASSED/SKIPPED -- test_request_cookie_parsing in /home/kaiyaok2/PythonProjects/falcon/tests/test_cookies.py: 28.042392015457153s cumulative, 0.009522676467895508s individual


tests/test_inspect.py .
current test PASSED/SKIPPED -- test_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 28.068889617919922s cumulative, 0.026497602462768555s individual

.
current test PASSED/SKIPPED -- test_middleware in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 28.12209939956665s cumulative, 0.053209781646728516s individual

.
current test PASSED/SKIPPED -- test_empty_app in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 28.134211540222168s cumulative, 0.012112140655517578s individual

.
current test PASSED/SKIPPED -- test_routes in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 28.165339946746826s cumulative, 0.031128406524658203s individual

.
current test PASSED/SKIPPED -- test_app in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 28.21319031715393s cumulative, 0.04785037040710449s individual

.
current test PASSED/SKIPPED -- test_static_routes in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 28.227187871932983s cumulative, 0.013997554779052734s individual

.
current test PASSED/SKIPPED -- test_dependent_middleware in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 28.23766827583313s cumulative, 0.010480403900146484s individual

.
current test PASSED/SKIPPED -- test_middleware_tree in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 28.278836250305176s cumulative, 0.0411679744720459s individual

.
current test PASSED/SKIPPED -- test_empty_app in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 28.2896671295166s cumulative, 0.010830879211425781s individual

.
current test PASSED/SKIPPED -- test_dependent_middleware in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 28.301836490631104s cumulative, 0.012169361114501953s individual

.
current test PASSED/SKIPPED -- test_routes_empty_paths in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 28.332172632217407s cumulative, 0.03033614158630371s individual

.
current test PASSED/SKIPPED -- test_sink in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 28.366254568099976s cumulative, 0.03408193588256836s individual

.
current test PASSED/SKIPPED -- test_routes_empty_paths in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 28.412634134292603s cumulative, 0.04637956619262695s individual

.
current test PASSED/SKIPPED -- test_register_router_not_found in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 28.439640045166016s cumulative, 0.027005910873413086s individual

.
current test PASSED/SKIPPED -- test_register_router_multiple_time in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 28.453887701034546s cumulative, 0.014247655868530273s individual

.
current test PASSED/SKIPPED -- test_compiled_no_method_map in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 28.479105710983276s cumulative, 0.02521800994873047s individual

.
current test PASSED/SKIPPED -- test_register_other_router in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 28.49554753303528s cumulative, 0.016441822052001953s individual

.
current test PASSED/SKIPPED -- test_compiled_partial in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 28.517067432403564s cumulative, 0.021519899368286133s individual

.
current test PASSED/SKIPPED -- test_route_method_verbose in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 28.562283515930176s cumulative, 0.04521608352661133s individual

.
current test PASSED/SKIPPED -- test_route_method in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 28.59226942062378s cumulative, 0.029985904693603516s individual

.
current test PASSED/SKIPPED -- test_sink in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 28.60387372970581s cumulative, 0.01160430908203125s individual

.
current test PASSED/SKIPPED -- test_route_no_methods in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 28.629136323928833s cumulative, 0.02526259422302246s individual

.
current test PASSED/SKIPPED -- test_static_route in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 28.653472661972046s cumulative, 0.02433633804321289s individual

.
current test PASSED/SKIPPED -- test_app_no_sink in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 28.72571039199829s cumulative, 0.07223773002624512s individual

.
current test PASSED/SKIPPED -- test_middleware_tree_item in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 28.792075395584106s cumulative, 0.06636500358581543s individual

.
current test PASSED/SKIPPED -- test_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 28.810222148895264s cumulative, 0.018146753311157227s individual

.
current test PASSED/SKIPPED -- test_middleware_class_no_methods in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 28.867037773132324s cumulative, 0.05681562423706055s individual

.
current test PASSED/SKIPPED -- test_middleware_tree in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 28.912750482559204s cumulative, 0.04571270942687988s individual

.
current test PASSED/SKIPPED -- test_middleware_verbose in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 28.967819690704346s cumulative, 0.0550692081451416s individual

.
current test PASSED/SKIPPED -- test_app in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 29.060402154922485s cumulative, 0.09258246421813965s individual

.
current test PASSED/SKIPPED -- test_route in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 29.10698676109314s cumulative, 0.0465846061706543s individual

.
current test PASSED/SKIPPED -- test_middleware_class in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 29.17927598953247s cumulative, 0.07228922843933105s individual

.
current test PASSED/SKIPPED -- test_app_no_routes in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 29.24841070175171s cumulative, 0.06913471221923828s individual

.
current test PASSED/SKIPPED -- test_static_route in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 29.25677227973938s cumulative, 0.008361577987670898s individual

.
current test PASSED/SKIPPED -- test_middleware in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 29.291069746017456s cumulative, 0.03429746627807617s individual

.
current test PASSED/SKIPPED -- test_app_static_routes in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 29.345264196395874s cumulative, 0.05419445037841797s individual

.
current test PASSED/SKIPPED -- test_middleware_class in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 29.375811100006104s cumulative, 0.030546903610229492s individual

.
current test PASSED/SKIPPED -- test_sink_verbose in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 29.38907217979431s cumulative, 0.013261079788208008s individual

.
current test PASSED/SKIPPED -- test_route_no_methods in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 29.41487169265747s cumulative, 0.02579951286315918s individual

.
current test PASSED/SKIPPED -- test_app_no_sink in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 29.455493450164795s cumulative, 0.04062175750732422s individual

.
current test PASSED/SKIPPED -- test_sink in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 29.46849775314331s cumulative, 0.013004302978515625s individual

.
current test PASSED/SKIPPED -- test_app_no_middleware in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 29.517048358917236s cumulative, 0.04855060577392578s individual

.
current test PASSED/SKIPPED -- test_app_static_routes in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 29.54555892944336s cumulative, 0.028510570526123047s individual

.
current test PASSED/SKIPPED -- test_middleware_tree_no_resource in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 29.562211990356445s cumulative, 0.016653060913085938s individual

.
current test PASSED/SKIPPED -- test_middleware_tree_no_response in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 29.598048448562622s cumulative, 0.03583645820617676s individual

.
current test PASSED/SKIPPED -- test_app_no_sink in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 29.640042543411255s cumulative, 0.04199409484863281s individual

.
current test PASSED/SKIPPED -- test_middleware_class_verbose in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 29.66021227836609s cumulative, 0.020169734954833984s individual

.
current test PASSED/SKIPPED -- test_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 29.665579557418823s cumulative, 0.005367279052734375s individual

.
current test PASSED/SKIPPED -- test_app_no_routes in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 29.694865942001343s cumulative, 0.02928638458251953s individual

.
current test PASSED/SKIPPED -- test_app_no_middleware in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 29.730605363845825s cumulative, 0.03573942184448242s individual

.
current test PASSED/SKIPPED -- test_app_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 29.763925790786743s cumulative, 0.03332042694091797s individual

.
current test PASSED/SKIPPED -- test_middleware_class_verbose in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 29.79206347465515s cumulative, 0.028137683868408203s individual

.
current test PASSED/SKIPPED -- test_app_no_routes in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 29.831707239151s cumulative, 0.03964376449584961s individual

.
current test PASSED/SKIPPED -- test_middleware_tree_response_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 29.870275020599365s cumulative, 0.03856778144836426s individual

.
current test PASSED/SKIPPED -- test_middleware in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 29.904982328414917s cumulative, 0.03470730781555176s individual

.
current test PASSED/SKIPPED -- test_middleware_tree_item in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 29.942727088928223s cumulative, 0.037744760513305664s individual

.
current test PASSED/SKIPPED -- test_sink_verbose in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 29.95187497138977s cumulative, 0.009147882461547852s individual

.
current test PASSED/SKIPPED -- test_string_visitor_class in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 29.954787492752075s cumulative, 0.0029125213623046875s individual

.
current test PASSED/SKIPPED -- test_middleware_method_verbose in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 29.97274160385132s cumulative, 0.017954111099243164s individual

.
current test PASSED/SKIPPED -- test_route_method in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 29.985402822494507s cumulative, 0.012661218643188477s individual

.
current test PASSED/SKIPPED -- test_middleware_tree in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 30.004271984100342s cumulative, 0.01886916160583496s individual

.
current test PASSED/SKIPPED -- test_route_method_info_suffix in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 30.006838083267212s cumulative, 0.002566099166870117s individual

.
current test PASSED/SKIPPED -- test_is_internal in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 30.009699821472168s cumulative, 0.0028617382049560547s individual

.
current test PASSED/SKIPPED -- test_app in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 30.038572072982788s cumulative, 0.028872251510620117s individual

.
current test PASSED/SKIPPED -- test_middleware_tree_no_response in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 30.075032472610474s cumulative, 0.03646039962768555s individual

.
current test PASSED/SKIPPED -- test_route in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 30.09877920150757s cumulative, 0.023746728897094727s individual

.
current test PASSED/SKIPPED -- test_middleware_method in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 30.13543462753296s cumulative, 0.036655426025390625s individual

.
current test PASSED/SKIPPED -- test_app_no_sink in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 30.18992590904236s cumulative, 0.054491281509399414s individual

.
current test PASSED/SKIPPED -- test_route_method_verbose in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 30.219130277633667s cumulative, 0.029204368591308594s individual

.
current test PASSED/SKIPPED -- test_app_no_middleware in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 30.263476610183716s cumulative, 0.04434633255004883s individual

.
current test PASSED/SKIPPED -- test_middleware_method in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 30.287593603134155s cumulative, 0.024116992950439453s individual

.
current test PASSED/SKIPPED -- test_error_handler_verbose in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 30.294111251831055s cumulative, 0.006517648696899414s individual

.
current test PASSED/SKIPPED -- test_app_no_errors in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 30.331305980682373s cumulative, 0.03719472885131836s individual

.
current test PASSED/SKIPPED -- test_error_handler_verbose in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 30.339317321777344s cumulative, 0.008011341094970703s individual

.
current test PASSED/SKIPPED -- test_app_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 30.372589588165283s cumulative, 0.03327226638793945s individual

.
current test PASSED/SKIPPED -- test_app in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 30.413230895996094s cumulative, 0.04064130783081055s individual

.
current test PASSED/SKIPPED -- test_middleware_tree in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 30.458624124526978s cumulative, 0.04539322853088379s individual

.
current test PASSED/SKIPPED -- test_app_static_routes in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 30.52841329574585s cumulative, 0.06978917121887207s individual

.
current test PASSED/SKIPPED -- test_route_verbose in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 30.557116270065308s cumulative, 0.028702974319458008s individual

.
current test PASSED/SKIPPED -- test_app_no_routes in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 30.592833995819092s cumulative, 0.03571772575378418s individual

.
current test PASSED/SKIPPED -- test_middleware_tree in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 30.616799354553223s cumulative, 0.02396535873413086s individual

.
current test PASSED/SKIPPED -- test_middleware_tree_no_resource in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 30.63938331604004s cumulative, 0.022583961486816406s individual

.
current test PASSED/SKIPPED -- test_middleware_method_verbose in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 30.661372423171997s cumulative, 0.021989107131958008s individual

.
current test PASSED/SKIPPED -- test_info_class_repr_to_string in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 30.693702936172485s cumulative, 0.03233051300048828s individual

.
current test PASSED/SKIPPED -- test_middleware_tree_item in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 30.713868379592896s cumulative, 0.020165443420410156s individual

.
current test PASSED/SKIPPED -- test_app in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 30.74642539024353s cumulative, 0.032557010650634766s individual

.
current test PASSED/SKIPPED -- test_app_no_errors in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 30.782002210617065s cumulative, 0.035576820373535156s individual

.
current test PASSED/SKIPPED -- test_static_route in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 30.788394927978516s cumulative, 0.006392717361450195s individual

.
current test PASSED/SKIPPED -- test_app_no_errors in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 30.81865906715393s cumulative, 0.03026413917541504s individual

.
current test PASSED/SKIPPED -- test_app_no_errors in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 30.851052045822144s cumulative, 0.03239297866821289s individual

.
current test PASSED/SKIPPED -- test_middleware_tree_response_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 30.871755361557007s cumulative, 0.02070331573486328s individual

.
current test PASSED/SKIPPED -- test_route_verbose in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 30.885895252227783s cumulative, 0.014139890670776367s individual

.
current test PASSED/SKIPPED -- test_app_no_middleware in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 30.919825553894043s cumulative, 0.033930301666259766s individual

.
current test PASSED/SKIPPED -- test_middleware_tree_item in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 30.940860271453857s cumulative, 0.021034717559814453s individual

.
current test PASSED/SKIPPED -- test_middleware_class_no_methods in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 30.960487365722656s cumulative, 0.019627094268798828s individual

.
current test PASSED/SKIPPED -- test_static_route in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 30.965728759765625s cumulative, 0.00524139404296875s individual

.
current test PASSED/SKIPPED -- test_middleware_verbose in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 30.985366344451904s cumulative, 0.019637584686279297s individual

.
current test PASSED/SKIPPED -- test_app_static_routes in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 31.010152339935303s cumulative, 0.024785995483398438s individual

.
current test PASSED/SKIPPED -- test_process in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 31.013227701187134s cumulative, 0.0030753612518310547s individual

.
current test PASSED/SKIPPED -- test_inspect_visitor in /home/kaiyaok2/PythonProjects/falcon/tests/test_inspect.py: 31.016835927963257s cumulative, 0.003608226776123047s individual


tests/test_cors_middleware.py .
current test PASSED/SKIPPED -- test_enabled_cors_handles_preflighting in /home/kaiyaok2/PythonProjects/falcon/tests/test_cors_middleware.py: 31.026229858398438s cumulative, 0.009393930435180664s individual

.
current test PASSED/SKIPPED -- test_enabled_cors_should_add_extra_headers_on_response in /home/kaiyaok2/PythonProjects/falcon/tests/test_cors_middleware.py: 31.032411336898804s cumulative, 0.006181478500366211s individual

.
current test PASSED/SKIPPED -- test_enabled_cors_should_accept_all_origins_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_cors_middleware.py: 31.038973569869995s cumulative, 0.006562232971191406s individual

.
current test PASSED/SKIPPED -- test_enabled_cors_no_origin in /home/kaiyaok2/PythonProjects/falcon/tests/test_cors_middleware.py: 31.04477858543396s cumulative, 0.005805015563964844s individual

.
current test PASSED/SKIPPED -- test_disabled_cors_should_not_add_any_extra_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_cors_middleware.py: 31.050455808639526s cumulative, 0.005677223205566406s individual

.
current test PASSED/SKIPPED -- test_enabled_cors_handles_preflighting_no_headers_in_req in /home/kaiyaok2/PythonProjects/falcon/tests/test_cors_middleware.py: 31.05607557296753s cumulative, 0.00561976432800293s individual

.
current test PASSED/SKIPPED -- test_expose_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_cors_middleware.py: 31.06338858604431s cumulative, 0.0073130130767822266s individual

.
current test PASSED/SKIPPED -- test_allow_origin_allow_credential in /home/kaiyaok2/PythonProjects/falcon/tests/test_cors_middleware.py: 31.072025299072266s cumulative, 0.008636713027954102s individual

.
current test PASSED/SKIPPED -- test_allow_credential_list_or_str in /home/kaiyaok2/PythonProjects/falcon/tests/test_cors_middleware.py: 31.081183910369873s cumulative, 0.009158611297607422s individual

.
current test PASSED/SKIPPED -- test_allow_credential_wildcard in /home/kaiyaok2/PythonProjects/falcon/tests/test_cors_middleware.py: 31.086417198181152s cumulative, 0.005233287811279297s individual

.
current test PASSED/SKIPPED -- test_allow_origin in /home/kaiyaok2/PythonProjects/falcon/tests/test_cors_middleware.py: 31.097049713134766s cumulative, 0.010632514953613281s individual

.
current test PASSED/SKIPPED -- test_allow_credential_list_or_str in /home/kaiyaok2/PythonProjects/falcon/tests/test_cors_middleware.py: 31.108290433883667s cumulative, 0.011240720748901367s individual

.
current test PASSED/SKIPPED -- test_allow_credential_existing_origin in /home/kaiyaok2/PythonProjects/falcon/tests/test_cors_middleware.py: 31.113584995269775s cumulative, 0.0052945613861083984s individual

.
current test PASSED/SKIPPED -- test_expose_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_cors_middleware.py: 31.123015880584717s cumulative, 0.009430885314941406s individual

.
current test PASSED/SKIPPED -- test_expose_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_cors_middleware.py: 31.130858659744263s cumulative, 0.007842779159545898s individual

.
current test PASSED/SKIPPED -- test_allow_origin in /home/kaiyaok2/PythonProjects/falcon/tests/test_cors_middleware.py: 31.143688917160034s cumulative, 0.012830257415771484s individual

.
current test PASSED/SKIPPED -- test_allow_origin in /home/kaiyaok2/PythonProjects/falcon/tests/test_cors_middleware.py: 31.15562605857849s cumulative, 0.011937141418457031s individual


tests/test_sinks.py .
current test PASSED/SKIPPED -- test_add_sync_sink in /home/kaiyaok2/PythonProjects/falcon/tests/test_sinks.py: 31.159621477127075s cumulative, 0.003995418548583984s individual

.
current test PASSED/SKIPPED -- test_add_sync_sink_with_wrapping in /home/kaiyaok2/PythonProjects/falcon/tests/test_sinks.py: 31.165522813796997s cumulative, 0.005901336669921875s individual

.
current test PASSED/SKIPPED -- test_add_sync_sink in /home/kaiyaok2/PythonProjects/falcon/tests/test_sinks.py: 31.171602964401245s cumulative, 0.006080150604248047s individual

.
current test PASSED/SKIPPED -- test_add_async_sink in /home/kaiyaok2/PythonProjects/falcon/tests/test_sinks.py: 31.175965785980225s cumulative, 0.004362821578979492s individual

.
current test PASSED/SKIPPED -- test_add_async_sink in /home/kaiyaok2/PythonProjects/falcon/tests/test_sinks.py: 31.181080102920532s cumulative, 0.005114316940307617s individual

.
current test PASSED/SKIPPED -- test_multiple_patterns in /home/kaiyaok2/PythonProjects/falcon/tests/test_sinks.py: 31.18900990486145s cumulative, 0.007929801940917969s individual

.
current test PASSED/SKIPPED -- test_route_precedence_with_both_id in /home/kaiyaok2/PythonProjects/falcon/tests/test_sinks.py: 31.19595742225647s cumulative, 0.006947517395019531s individual

.
current test PASSED/SKIPPED -- test_single_simple_pattern in /home/kaiyaok2/PythonProjects/falcon/tests/test_sinks.py: 31.201001405715942s cumulative, 0.005043983459472656s individual

.
current test PASSED/SKIPPED -- test_route_precedence in /home/kaiyaok2/PythonProjects/falcon/tests/test_sinks.py: 31.206544160842896s cumulative, 0.005542755126953125s individual

.
current test PASSED/SKIPPED -- test_with_route in /home/kaiyaok2/PythonProjects/falcon/tests/test_sinks.py: 31.212831020355225s cumulative, 0.0062868595123291016s individual

.
current test PASSED/SKIPPED -- test_single_default_pattern in /home/kaiyaok2/PythonProjects/falcon/tests/test_sinks.py: 31.218873977661133s cumulative, 0.006042957305908203s individual

.
current test PASSED/SKIPPED -- test_single_simple_pattern in /home/kaiyaok2/PythonProjects/falcon/tests/test_sinks.py: 31.224151372909546s cumulative, 0.005277395248413086s individual

.
current test PASSED/SKIPPED -- test_named_groups in /home/kaiyaok2/PythonProjects/falcon/tests/test_sinks.py: 31.229985237121582s cumulative, 0.005833864212036133s individual

.
current test PASSED/SKIPPED -- test_multiple_patterns in /home/kaiyaok2/PythonProjects/falcon/tests/test_sinks.py: 31.235140800476074s cumulative, 0.0051555633544921875s individual

.
current test PASSED/SKIPPED -- test_single_default_pattern in /home/kaiyaok2/PythonProjects/falcon/tests/test_sinks.py: 31.240333080291748s cumulative, 0.005192279815673828s individual

.
current test PASSED/SKIPPED -- test_named_groups in /home/kaiyaok2/PythonProjects/falcon/tests/test_sinks.py: 31.2464542388916s cumulative, 0.006121158599853516s individual

.
current test PASSED/SKIPPED -- test_single_compiled_pattern in /home/kaiyaok2/PythonProjects/falcon/tests/test_sinks.py: 31.252866506576538s cumulative, 0.0064122676849365234s individual

.
current test PASSED/SKIPPED -- test_route_precedence_with_id in /home/kaiyaok2/PythonProjects/falcon/tests/test_sinks.py: 31.25863528251648s cumulative, 0.005768775939941406s individual

.
current test PASSED/SKIPPED -- test_single_compiled_pattern in /home/kaiyaok2/PythonProjects/falcon/tests/test_sinks.py: 31.264348030090332s cumulative, 0.005712747573852539s individual


tests/asgi/test_ws.py s
tests/asgi/test_asgi_helpers.py .
current test PASSED/SKIPPED -- test_intricate_app in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_helpers.py: 31.267146110534668s cumulative, 0.0027980804443359375s individual


tests/test_buffered_reader.py .
current test PASSED/SKIPPED -- test_pipe_until in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 32.02146816253662s cumulative, 0.7543220520019531s individual

.
current test PASSED/SKIPPED -- test_fragmented_reads in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 34.52571487426758s cumulative, 2.504246711730957s individual


tests/test_utils.py .
current test PASSED/SKIPPED -- test_something in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 34.55046224594116s cumulative, 0.024747371673583984s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 34.56200289726257s cumulative, 0.011540651321411133s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 34.57063102722168s cumulative, 0.008628129959106445s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 34.578697204589844s cumulative, 0.008066177368164062s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 34.58750867843628s cumulative, 0.008811473846435547s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 34.5932092666626s cumulative, 0.005700588226318359s individual

.
current test PASSED/SKIPPED -- test_json_deprecation in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 34.599231481552124s cumulative, 0.006022214889526367s individual

.
current test PASSED/SKIPPED -- test_simulate_free_functions in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 34.61073398590088s cumulative, 0.011502504348754883s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 34.61952996253967s cumulative, 0.008795976638793945s individual

.
current test PASSED/SKIPPED -- test_simulate_free_functions in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 34.63222122192383s cumulative, 0.012691259384155273s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 34.63973784446716s cumulative, 0.007516622543334961s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 34.64767932891846s cumulative, 0.007941484451293945s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 34.6572060585022s cumulative, 0.009526729583740234s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 34.665186643600464s cumulative, 0.007980585098266602s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 34.67527437210083s cumulative, 0.010087728500366211s individual

.
current test PASSED/SKIPPED -- test_simulate_free_functions in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 34.6941032409668s cumulative, 0.018828868865966797s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 34.71049928665161s cumulative, 0.016396045684814453s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 34.72908425331116s cumulative, 0.0185849666595459s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 34.74396014213562s cumulative, 0.01487588882446289s individual

.
current test PASSED/SKIPPED -- test_simulate_free_functions in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 34.759095668792725s cumulative, 0.015135526657104492s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 34.77073812484741s cumulative, 0.0116424560546875s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 34.77946329116821s cumulative, 0.008725166320800781s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 34.7903790473938s cumulative, 0.010915756225585938s individual

.
current test PASSED/SKIPPED -- test_simulate_free_functions in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 34.80724120140076s cumulative, 0.016862154006958008s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 34.81661009788513s cumulative, 0.009368896484375s individual

.
current test PASSED/SKIPPED -- test_simulate_free_functions in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 34.83152651786804s cumulative, 0.014916419982910156s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 34.83991098403931s cumulative, 0.008384466171264648s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 34.84860897064209s cumulative, 0.008697986602783203s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 34.89283847808838s cumulative, 0.04422950744628906s individual

.
current test PASSED/SKIPPED -- test_simulate_free_functions in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 34.9190411567688s cumulative, 0.026202678680419922s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 34.933167457580566s cumulative, 0.014126300811767578s individual

.
current test PASSED/SKIPPED -- test_simulate_free_functions in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 34.95051550865173s cumulative, 0.017348051071166992s individual

.
current test PASSED/SKIPPED -- test_simulate_free_functions in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 34.96614646911621s cumulative, 0.01563096046447754s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 34.980103492736816s cumulative, 0.013957023620605469s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 34.996248960494995s cumulative, 0.01614546775817871s individual

.
current test PASSED/SKIPPED -- test_simulate_free_functions in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.021177530288696s cumulative, 0.024928569793701172s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.03159523010254s cumulative, 0.010417699813842773s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.043445110321045s cumulative, 0.01184988021850586s individual

.
current test PASSED/SKIPPED -- test_simulate_free_functions in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.05780100822449s cumulative, 0.014355897903442383s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.07459759712219s cumulative, 0.016796588897705078s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.09068322181702s cumulative, 0.01608562469482422s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.10327887535095s cumulative, 0.012595653533935547s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.12018895149231s cumulative, 0.016910076141357422s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.1314582824707s cumulative, 0.011269330978393555s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.14034914970398s cumulative, 0.008890867233276367s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.150702238082886s cumulative, 0.01035308837890625s individual

.
current test PASSED/SKIPPED -- test_get_argnames in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.15891909599304s cumulative, 0.00821685791015625s individual

.
current test PASSED/SKIPPED -- test_simulate_free_functions in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.17328429222107s cumulative, 0.014365196228027344s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.183282136917114s cumulative, 0.009997844696044922s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.199028968811035s cumulative, 0.0157468318939209s individual

.
current test PASSED/SKIPPED -- test_simulate_free_functions in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.21490168571472s cumulative, 0.015872716903686523s individual

.
current test PASSED/SKIPPED -- test_simulate_request_protocol in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.22181510925293s cumulative, 0.006913423538208008s individual

.
current test PASSED/SKIPPED -- test_something in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.22751259803772s cumulative, 0.005697488784790039s individual

.
current test PASSED/SKIPPED -- test_attributes in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.23105430603027s cumulative, 0.003541707992553711s individual

.
current test PASSED/SKIPPED -- test_dict_interface in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.2350971698761s cumulative, 0.004042863845825195s individual

.
current test PASSED/SKIPPED -- test_dict_interface in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.23860573768616s cumulative, 0.0035085678100585938s individual

.
current test PASSED/SKIPPED -- test_attributes_from_items in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.241570711135864s cumulative, 0.0029649734497070312s individual

.
current test PASSED/SKIPPED -- test_attributes in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.24465203285217s cumulative, 0.0030813217163085938s individual

.
current test PASSED/SKIPPED -- test_attributes_from_items in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.24793195724487s cumulative, 0.0032799243927001953s individual

.
current test PASSED/SKIPPED -- test_keys_and_values in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.251221656799316s cumulative, 0.0032896995544433594s individual

.
current test PASSED/SKIPPED -- test_items_from_attributes in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.25508689880371s cumulative, 0.0038652420043945312s individual

.
current test PASSED/SKIPPED -- test_items_from_attributes in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.257973432540894s cumulative, 0.002886533737182617s individual

.
current test PASSED/SKIPPED -- test_keys_and_values in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.26096963882446s cumulative, 0.002996206283569336s individual

.
current test PASSED/SKIPPED -- test_uri_decode_unquote_plus in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.2651104927063s cumulative, 0.0041408538818359375s individual

.
current test PASSED/SKIPPED -- test_http_status_to_code_neg in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.2687554359436s cumulative, 0.0036449432373046875s individual

.
current test PASSED/SKIPPED -- test_uri_decode_bad_unicode in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.27418041229248s cumulative, 0.005424976348876953s individual

.
current test PASSED/SKIPPED -- test_code_to_http_status_value_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.27756643295288s cumulative, 0.0033860206604003906s individual

.
current test PASSED/SKIPPED -- test_misc_isascii in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.2809784412384s cumulative, 0.003412008285522461s individual

.
current test PASSED/SKIPPED -- test_http_date_to_dt in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.29352688789368s cumulative, 0.012548446655273438s individual

.
current test PASSED/SKIPPED -- test_code_to_http_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.297539949417114s cumulative, 0.0040130615234375s individual

.
current test PASSED/SKIPPED -- test_prop_uri_encode_value_models_stdlib_quote_safe_tilde in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.30955624580383s cumulative, 0.01201629638671875s individual

.
current test PASSED/SKIPPED -- test_code_to_http_status_value_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.31662917137146s cumulative, 0.007072925567626953s individual

.
current test PASSED/SKIPPED -- test_uri_encode_double in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.32549524307251s cumulative, 0.008866071701049805s individual

.
current test PASSED/SKIPPED -- test_code_to_http_status_value_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.333235025405884s cumulative, 0.0077397823333740234s individual

.
current test PASSED/SKIPPED -- test_http_status_to_code_neg in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.33946752548218s cumulative, 0.006232500076293945s individual

.
current test PASSED/SKIPPED -- test_parse_query_string_edge_cases in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.34669327735901s cumulative, 0.007225751876831055s individual

.
current test PASSED/SKIPPED -- test_parse_query_string_edge_cases in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.355324268341064s cumulative, 0.008630990982055664s individual

.
current test PASSED/SKIPPED -- test_uri_decode_bad_coding in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.36658072471619s cumulative, 0.01125645637512207s individual

.
current test PASSED/SKIPPED -- test_code_to_http_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.37323784828186s cumulative, 0.006657123565673828s individual

.
current test PASSED/SKIPPED -- test_unquote_string in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.378814935684204s cumulative, 0.00557708740234375s individual

.
current test PASSED/SKIPPED -- test_to_query_str_encoding in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.38690662384033s cumulative, 0.00809168815612793s individual

.
current test PASSED/SKIPPED -- test_to_query_str_encoding in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.3922233581543s cumulative, 0.005316734313964844s individual

.
current test PASSED/SKIPPED -- test_uri_decode in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.40089678764343s cumulative, 0.008673429489135742s individual

.
current test PASSED/SKIPPED -- test_secure_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.40942692756653s cumulative, 0.008530139923095703s individual

.
current test PASSED/SKIPPED -- test_http_status_to_code_neg in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.41608762741089s cumulative, 0.0066606998443603516s individual

.
current test PASSED/SKIPPED -- test_secure_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.423893213272095s cumulative, 0.007805585861206055s individual

.
current test PASSED/SKIPPED -- test_code_to_http_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.4313690662384s cumulative, 0.007475852966308594s individual

.
current test PASSED/SKIPPED -- test_parse_query_string_edge_cases in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.441460609436035s cumulative, 0.010091543197631836s individual

.
current test PASSED/SKIPPED -- test_http_status_to_code in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.449230670928955s cumulative, 0.007770061492919922s individual

.
current test PASSED/SKIPPED -- test_misc_isascii in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.45833992958069s cumulative, 0.009109258651733398s individual

.
current test PASSED/SKIPPED -- test_parse_query_string_edge_cases in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.46750020980835s cumulative, 0.009160280227661133s individual

.
current test PASSED/SKIPPED -- test_secure_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.474066972732544s cumulative, 0.006566762924194336s individual

.
current test PASSED/SKIPPED -- test_dt_to_http in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.48261618614197s cumulative, 0.008549213409423828s individual

.
current test PASSED/SKIPPED -- test_secure_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.490206718444824s cumulative, 0.007590532302856445s individual

.
current test PASSED/SKIPPED -- test_to_query_str_encoding in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.49868607521057s cumulative, 0.00847935676574707s individual

.
current test PASSED/SKIPPED -- test_code_to_http_status_value_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.50993490219116s cumulative, 0.01124882698059082s individual

.
current test PASSED/SKIPPED -- test_http_status_to_code_neg in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.51906108856201s cumulative, 0.00912618637084961s individual

.
current test PASSED/SKIPPED -- test_misc_isascii in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.526657819747925s cumulative, 0.007596731185913086s individual

.
current test PASSED/SKIPPED -- test_http_status_to_code_neg in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.5361385345459s cumulative, 0.009480714797973633s individual

.
current test PASSED/SKIPPED -- test_code_to_http_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.54571056365967s cumulative, 0.009572029113769531s individual

.
current test PASSED/SKIPPED -- test_to_query_str_encoding in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.55535674095154s cumulative, 0.009646177291870117s individual

.
current test PASSED/SKIPPED -- test_parse_host in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.56761813163757s cumulative, 0.012261390686035156s individual

.
current test PASSED/SKIPPED -- test_uri_decode_bad_unicode in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.579615354537964s cumulative, 0.011997222900390625s individual

.
current test PASSED/SKIPPED -- test_code_to_http_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.59089159965515s cumulative, 0.0112762451171875s individual

.
current test PASSED/SKIPPED -- test_secure_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.60090231895447s cumulative, 0.010010719299316406s individual

.
current test PASSED/SKIPPED -- test_to_query_str_encoding in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.61102056503296s cumulative, 0.010118246078491211s individual

.
current test PASSED/SKIPPED -- test_get_http_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.62146854400635s cumulative, 0.010447978973388672s individual

.
current test PASSED/SKIPPED -- test_secure_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.630767822265625s cumulative, 0.009299278259277344s individual

.
current test PASSED/SKIPPED -- test_misc_isascii in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.64942264556885s cumulative, 0.018654823303222656s individual

.
current test PASSED/SKIPPED -- test_to_query_str_encoding in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.65983033180237s cumulative, 0.010407686233520508s individual

.
current test PASSED/SKIPPED -- test_code_to_http_status_value_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.67219424247742s cumulative, 0.012363910675048828s individual

.
current test PASSED/SKIPPED -- test_uri_decode_bad_unicode in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.68585824966431s cumulative, 0.013664007186889648s individual

.
current test PASSED/SKIPPED -- test_misc_isascii in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.69543433189392s cumulative, 0.009576082229614258s individual

.
current test PASSED/SKIPPED -- test_code_to_http_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.711376905441284s cumulative, 0.01594257354736328s individual

.
current test PASSED/SKIPPED -- test_code_to_http_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.725421667099s cumulative, 0.014044761657714844s individual

.
current test PASSED/SKIPPED -- test_code_to_http_status_value_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.74019455909729s cumulative, 0.014772891998291016s individual

.
current test PASSED/SKIPPED -- test_uri_decode_bad_unicode in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.75480079650879s cumulative, 0.014606237411499023s individual

.
current test PASSED/SKIPPED -- test_etag_strong_vs_weak_comparison in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.76670980453491s cumulative, 0.011909008026123047s individual

.
current test PASSED/SKIPPED -- test_uri_encode_value in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.7874755859375s cumulative, 0.02076578140258789s individual

.
current test PASSED/SKIPPED -- test_get_http_status_warns in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.79968285560608s cumulative, 0.012207269668579102s individual

.
current test PASSED/SKIPPED -- test_misc_isascii in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.81247282028198s cumulative, 0.01278996467590332s individual

.
current test PASSED/SKIPPED -- test_to_query_str_encoding in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.823283433914185s cumulative, 0.010810613632202148s individual

.
current test PASSED/SKIPPED -- test_uri_decode_bad_unicode in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.838690519332886s cumulative, 0.015407085418701172s individual

.
current test PASSED/SKIPPED -- test_http_status_to_code in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.85034918785095s cumulative, 0.011658668518066406s individual

.
current test PASSED/SKIPPED -- test_to_query_str_encoding in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.859029054641724s cumulative, 0.008679866790771484s individual

.
current test PASSED/SKIPPED -- test_code_to_http_status_value_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.865753412246704s cumulative, 0.006724357604980469s individual

.
current test PASSED/SKIPPED -- test_to_query_str_encoding in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.877477407455444s cumulative, 0.011723995208740234s individual

.
current test PASSED/SKIPPED -- test_parse_query_string_edge_cases in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.89224624633789s cumulative, 0.014768838882446289s individual

.
current test PASSED/SKIPPED -- test_code_to_http_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.90807056427002s cumulative, 0.015824317932128906s individual

.
current test PASSED/SKIPPED -- test_misc_isascii in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.9218533039093s cumulative, 0.013782739639282227s individual

.
current test PASSED/SKIPPED -- test_http_status_to_code in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.936784744262695s cumulative, 0.014931440353393555s individual

.
current test PASSED/SKIPPED -- test_misc_isascii in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.95768117904663s cumulative, 0.020896434783935547s individual

.
current test PASSED/SKIPPED -- test_parse_query_string_edge_cases in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.977296113967896s cumulative, 0.01961493492126465s individual

.
current test PASSED/SKIPPED -- test_uri_decode_bad_coding in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 35.99732947349548s cumulative, 0.02003335952758789s individual

.
current test PASSED/SKIPPED -- test_pack_query_params_one in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 36.01956033706665s cumulative, 0.022230863571166992s individual

.
current test PASSED/SKIPPED -- test_http_status_to_code in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 36.041518449783325s cumulative, 0.021958112716674805s individual

.
current test PASSED/SKIPPED -- test_misc_isascii in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 36.06479835510254s cumulative, 0.023279905319213867s individual

.
current test PASSED/SKIPPED -- test_parse_query_string_edge_cases in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 36.08770298957825s cumulative, 0.022904634475708008s individual

.
current test PASSED/SKIPPED -- test_uri_decode_bad_coding in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 36.11531472206116s cumulative, 0.027611732482910156s individual

.
current test PASSED/SKIPPED -- test_uri_decode_bad_unicode in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 36.13409757614136s cumulative, 0.018782854080200195s individual

.
current test PASSED/SKIPPED -- test_http_status_to_code in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 36.151315450668335s cumulative, 0.01721787452697754s individual

.
current test PASSED/SKIPPED -- test_http_status_to_code in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 36.16774773597717s cumulative, 0.01643228530883789s individual

.
current test PASSED/SKIPPED -- test_uri_decode_unquote_plus in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 36.18679857254028s cumulative, 0.01905083656311035s individual

.
current test PASSED/SKIPPED -- test_secure_filename_empty_value in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 36.20556020736694s cumulative, 0.018761634826660156s individual

.
current test PASSED/SKIPPED -- test_uri_decode_bad_coding in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 36.225868463516235s cumulative, 0.020308256149291992s individual

.
current test PASSED/SKIPPED -- test_misc_isascii in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 36.2459979057312s cumulative, 0.02012944221496582s individual

.
current test PASSED/SKIPPED -- test_http_now in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 36.26602244377136s cumulative, 0.020024538040161133s individual

.
current test PASSED/SKIPPED -- test_code_to_http_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 36.27987790107727s cumulative, 0.013855457305908203s individual

.
current test PASSED/SKIPPED -- test_http_status_to_code in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 36.29889392852783s cumulative, 0.019016027450561523s individual

.
current test PASSED/SKIPPED -- test_code_to_http_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 36.32104277610779s cumulative, 0.022148847579956055s individual

.
current test PASSED/SKIPPED -- test_parse_query_string_edge_cases in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 36.34526562690735s cumulative, 0.024222850799560547s individual

.
current test PASSED/SKIPPED -- test_uri_decode in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 36.36711239814758s cumulative, 0.021846771240234375s individual

.
current test PASSED/SKIPPED -- test_uri_encode in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 36.382972240448s cumulative, 0.01585984230041504s individual

.
current test PASSED/SKIPPED -- test_secure_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 36.40543293952942s cumulative, 0.0224606990814209s individual

.
current test PASSED/SKIPPED -- test_to_query_str_encoding in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 36.42990040779114s cumulative, 0.02446746826171875s individual

.
current test PASSED/SKIPPED -- test_parse_query_string_edge_cases in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 36.44655394554138s cumulative, 0.01665353775024414s individual

.
current test PASSED/SKIPPED -- test_etag_dumps_to_header_format in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 36.461100816726685s cumulative, 0.014546871185302734s individual

.
current test PASSED/SKIPPED -- test_http_status_to_code in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 36.48287057876587s cumulative, 0.02176976203918457s individual

.
current test PASSED/SKIPPED -- test_uri_decode_bad_unicode in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 36.504706144332886s cumulative, 0.0218355655670166s individual

.
current test PASSED/SKIPPED -- test_misc_isascii in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 36.52607321739197s cumulative, 0.02136707305908203s individual

.
current test PASSED/SKIPPED -- test_parse_query_string_edge_cases in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 36.55253338813782s cumulative, 0.02646017074584961s individual

.
current test PASSED/SKIPPED -- test_deprecated_decorator in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 36.57592701911926s cumulative, 0.023393630981445312s individual

.
current test PASSED/SKIPPED -- test_code_to_http_status_value_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 36.60092568397522s cumulative, 0.02499866485595703s individual

.
current test PASSED/SKIPPED -- test_prop_uri_decode_models_stdlib_unquote_plus in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 36.65675473213196s cumulative, 0.05582904815673828s individual

.
current test PASSED/SKIPPED -- test_code_to_http_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 36.69276189804077s cumulative, 0.03600716590881348s individual

.
current test PASSED/SKIPPED -- test_code_to_http_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 36.72136402130127s cumulative, 0.028602123260498047s individual

.
current test PASSED/SKIPPED -- test_code_to_http_status_value_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 36.751996755599976s cumulative, 0.030632734298706055s individual

.
current test PASSED/SKIPPED -- test_parse_query_string_edge_cases in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 36.779207944869995s cumulative, 0.02721118927001953s individual

.
current test PASSED/SKIPPED -- test_code_to_http_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 36.813612937927246s cumulative, 0.03440499305725098s individual

.
current test PASSED/SKIPPED -- test_parse_query_string_edge_cases in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 36.84931945800781s cumulative, 0.035706520080566406s individual

.
current test PASSED/SKIPPED -- test_uri_decode_bad_coding in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 36.88477659225464s cumulative, 0.03545713424682617s individual

.
current test PASSED/SKIPPED -- test_prop_uri_encode_models_stdlib_quote in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 36.91759967803955s cumulative, 0.03282308578491211s individual

.
current test PASSED/SKIPPED -- test_uri_decode_bad_unicode in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 36.954087018966675s cumulative, 0.03648734092712402s individual

.
current test PASSED/SKIPPED -- test_http_status_to_code_neg in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 36.98533630371094s cumulative, 0.031249284744262695s individual

.
current test PASSED/SKIPPED -- test_misc_isascii in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 37.02113389968872s cumulative, 0.0357975959777832s individual

.
current test PASSED/SKIPPED -- test_code_to_http_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 37.05091452598572s cumulative, 0.02978062629699707s individual

.
current test PASSED/SKIPPED -- test_code_to_http_status_value_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 37.08277630805969s cumulative, 0.03186178207397461s individual

.
current test PASSED/SKIPPED -- test_code_to_http_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 37.1078405380249s cumulative, 0.02506422996520996s individual

.
current test PASSED/SKIPPED -- test_http_status_to_code in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 37.126946449279785s cumulative, 0.019105911254882812s individual

.
current test PASSED/SKIPPED -- test_code_to_http_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 37.14401960372925s cumulative, 0.01707315444946289s individual

.
current test PASSED/SKIPPED -- test_http_status_to_code_neg in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 37.16715121269226s cumulative, 0.023131608963012695s individual

.
current test PASSED/SKIPPED -- test_misc_isascii in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 37.1861367225647s cumulative, 0.018985509872436523s individual

.
current test PASSED/SKIPPED -- test_parse_query_string_edge_cases in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 37.20797610282898s cumulative, 0.021839380264282227s individual

.
current test PASSED/SKIPPED -- test_http_status_to_code_neg in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 37.229881048202515s cumulative, 0.021904945373535156s individual

.
current test PASSED/SKIPPED -- test_parse_query_string in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 37.251352071762085s cumulative, 0.021471023559570312s individual

.
current test PASSED/SKIPPED -- test_parse_query_string_edge_cases in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 37.28164720535278s cumulative, 0.030295133590698242s individual

.
current test PASSED/SKIPPED -- test_code_to_http_status_value_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 37.30831265449524s cumulative, 0.026665449142456055s individual

.
current test PASSED/SKIPPED -- test_uri_decode_bad_coding in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 37.32862067222595s cumulative, 0.02030801773071289s individual

.
current test PASSED/SKIPPED -- test_code_to_http_status_value_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 37.35378170013428s cumulative, 0.025161027908325195s individual

.
current test PASSED/SKIPPED -- test_pack_query_params_none in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 37.37185716629028s cumulative, 0.01807546615600586s individual

.
current test PASSED/SKIPPED -- test_parse_query_string_edge_cases in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 37.38956260681152s cumulative, 0.017705440521240234s individual

.
current test PASSED/SKIPPED -- test_misc_isascii in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 37.402087450027466s cumulative, 0.012524843215942383s individual

.
current test PASSED/SKIPPED -- test_pack_query_params_several in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 37.41930079460144s cumulative, 0.01721334457397461s individual

.
current test PASSED/SKIPPED -- test_simulate_json_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 37.479819536209106s cumulative, 0.060518741607666016s individual

.
current test PASSED/SKIPPED -- test_query_string_in_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 37.52669954299927s cumulative, 0.04688000679016113s individual

.
current test PASSED/SKIPPED -- test_httpnow_alias_for_backwards_compat in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 37.54328680038452s cumulative, 0.016587257385253906s individual

.
current test PASSED/SKIPPED -- test_simulate_json_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 37.583112478256226s cumulative, 0.0398256778717041s individual

.
current test PASSED/SKIPPED -- test_simulate_with_environ_extras in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 37.61333227157593s cumulative, 0.03021979331970215s individual

.
current test PASSED/SKIPPED -- test_simulate_content_type_extra_handler in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 37.66372323036194s cumulative, 0.05039095878601074s individual

.
current test PASSED/SKIPPED -- test_simulate_content_type_extra_handler in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 37.703774213790894s cumulative, 0.04005098342895508s individual

.
current test PASSED/SKIPPED -- test_simulate_json_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 37.75362753868103s cumulative, 0.04985332489013672s individual

.
current test PASSED/SKIPPED -- test_repr_result_when_body_varies in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 37.802905321121216s cumulative, 0.04927778244018555s individual

.
current test PASSED/SKIPPED -- test_repr_without_content_type_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 37.81963396072388s cumulative, 0.016728639602661133s individual

.
current test PASSED/SKIPPED -- test_simulate_content_type_extra_handler in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 37.878414154052734s cumulative, 0.05878019332885742s individual

.
current test PASSED/SKIPPED -- test_simulate_json_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 37.94167876243591s cumulative, 0.06326460838317871s individual

.
current test PASSED/SKIPPED -- test_simulate_content_type in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 37.98207712173462s cumulative, 0.040398359298706055s individual

.
current test PASSED/SKIPPED -- test_path_must_start_with_slash in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 38.01698040962219s cumulative, 0.03490328788757324s individual

.
current test PASSED/SKIPPED -- test_simulate_json_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 38.08754754066467s cumulative, 0.07056713104248047s individual

.
current test PASSED/SKIPPED -- test_default_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 38.135610580444336s cumulative, 0.048063039779663086s individual

.
current test PASSED/SKIPPED -- test_simulate_hostname in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 38.16863203048706s cumulative, 0.03302145004272461s individual

.
current test PASSED/SKIPPED -- test_simple_resource_body_json_xor in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 38.18117618560791s cumulative, 0.01254415512084961s individual

.
current test PASSED/SKIPPED -- test_simulate_content_type_extra_handler in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 38.211058139801025s cumulative, 0.029881954193115234s individual

.
current test PASSED/SKIPPED -- test_simulate_json_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 38.26449656486511s cumulative, 0.053438425064086914s individual

.
current test PASSED/SKIPPED -- test_path_escape_chars_in_create_environ in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 38.28309345245361s cumulative, 0.018596887588500977s individual

.
current test PASSED/SKIPPED -- test_query_string in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 38.3540563583374s cumulative, 0.07096290588378906s individual

.
current test PASSED/SKIPPED -- test_repr_result_when_body_varies in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 38.39238357543945s cumulative, 0.03832721710205078s individual

.
current test PASSED/SKIPPED -- test_simulate_json_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 38.42857813835144s cumulative, 0.036194562911987305s individual

.
current test PASSED/SKIPPED -- test_simulate_json_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 38.47371506690979s cumulative, 0.04513692855834961s individual

.
current test PASSED/SKIPPED -- test_repr_result_when_body_varies in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 38.512563943862915s cumulative, 0.038848876953125s individual

.
current test PASSED/SKIPPED -- test_simulate_content_type_extra_handler in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 38.53638410568237s cumulative, 0.023820161819458008s individual

.
current test PASSED/SKIPPED -- test_repr_result_when_body_varies in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 38.55699110031128s cumulative, 0.02060699462890625s individual

.
current test PASSED/SKIPPED -- test_repr_result_when_body_varies in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 38.57602643966675s cumulative, 0.01903533935546875s individual

.
current test PASSED/SKIPPED -- test_simulate_content_type in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 38.59379506111145s cumulative, 0.01776862144470215s individual

.
current test PASSED/SKIPPED -- test_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 38.62149143218994s cumulative, 0.02769637107849121s individual

.
current test PASSED/SKIPPED -- test_simulate_json_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 38.64693641662598s cumulative, 0.025444984436035156s individual

.
current test PASSED/SKIPPED -- test_simulate_remote_addr in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 38.66990518569946s cumulative, 0.022968769073486328s individual

.
current test PASSED/SKIPPED -- test_simulate_remote_addr in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 38.68813514709473s cumulative, 0.018229961395263672s individual

.
current test PASSED/SKIPPED -- test_repr_result_when_body_varies in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 38.71033024787903s cumulative, 0.022195100784301758s individual

.
current test PASSED/SKIPPED -- test_default_headers_with_override in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 38.74912452697754s cumulative, 0.03879427909851074s individual

.
current test PASSED/SKIPPED -- test_simulate_content_type_extra_handler in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 38.76715064048767s cumulative, 0.018026113510131836s individual

.
current test PASSED/SKIPPED -- test_simulate_remote_addr in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 38.78402018547058s cumulative, 0.016869544982910156s individual

.
current test PASSED/SKIPPED -- test_repr_result_when_body_varies in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 38.80169200897217s cumulative, 0.017671823501586914s individual

.
current test PASSED/SKIPPED -- test_plus_in_path_in_create_environ in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 38.80920457839966s cumulative, 0.007512569427490234s individual

.
current test PASSED/SKIPPED -- test_simulate_json_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 38.82781219482422s cumulative, 0.018607616424560547s individual

.
current test PASSED/SKIPPED -- test_no_prefix_allowed_for_query_strings_in_create_environ in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 38.83151698112488s cumulative, 0.0037047863006591797s individual

.
current test PASSED/SKIPPED -- test_repr_result_when_body_varies in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 38.84025597572327s cumulative, 0.008738994598388672s individual

.
current test PASSED/SKIPPED -- test_none_header_value_in_create_environ in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 38.84334206581116s cumulative, 0.003086090087890625s individual

.
current test PASSED/SKIPPED -- test_repr_result_when_body_varies in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 38.853277921676636s cumulative, 0.009935855865478516s individual

.
current test PASSED/SKIPPED -- test_decode_empty_result in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 38.861149311065674s cumulative, 0.007871389389038086s individual

.
current test PASSED/SKIPPED -- test_wsgi_iterable_not_closeable in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 38.86415481567383s cumulative, 0.003005504608154297s individual

.
current test PASSED/SKIPPED -- test_simulate_remote_addr in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 38.8767249584198s cumulative, 0.01257014274597168s individual

.
current test PASSED/SKIPPED -- test_repr_result_when_body_varies in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 38.88439989089966s cumulative, 0.0076749324798583984s individual

.
current test PASSED/SKIPPED -- test_repr_result_when_body_varies in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 38.89111113548279s cumulative, 0.006711244583129883s individual

.
current test PASSED/SKIPPED -- test_repr_result_when_body_varies in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 38.899840116500854s cumulative, 0.008728981018066406s individual

.
current test PASSED/SKIPPED -- test_simulate_content_type_extra_handler in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 38.91222667694092s cumulative, 0.012386560440063477s individual

.
current test PASSED/SKIPPED -- test_repr_result_when_body_varies in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 38.91948461532593s cumulative, 0.007257938385009766s individual

.
current test PASSED/SKIPPED -- test_decode_empty_result in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 38.925119161605835s cumulative, 0.0056345462799072266s individual

.
current test PASSED/SKIPPED -- test_override_method_with_extras in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 38.93093752861023s cumulative, 0.005818367004394531s individual

.
current test PASSED/SKIPPED -- test_repr_result_when_body_varies in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 38.93748950958252s cumulative, 0.006551980972290039s individual

.
current test PASSED/SKIPPED -- test_repr_result_when_body_varies in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 38.94435381889343s cumulative, 0.006864309310913086s individual

.
current test PASSED/SKIPPED -- test_repr_result_when_body_varies in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 38.95052933692932s cumulative, 0.006175518035888672s individual

.
current test PASSED/SKIPPED -- test_simulate_remote_addr in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 38.956509590148926s cumulative, 0.005980253219604492s individual

.
current test PASSED/SKIPPED -- test_repr_without_content_type_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 38.9598970413208s cumulative, 0.003387451171875s individual

.
current test PASSED/SKIPPED -- test_repr_result_when_body_varies in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 38.97793626785278s cumulative, 0.018039226531982422s individual

.
current test PASSED/SKIPPED -- test_simulate_json_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 38.99833631515503s cumulative, 0.020400047302246094s individual

.
current test PASSED/SKIPPED -- test_repr_result_when_body_varies in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 39.006096601486206s cumulative, 0.007760286331176758s individual

.
current test PASSED/SKIPPED -- test_repr_result_when_body_varies in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 39.02161169052124s cumulative, 0.01551508903503418s individual

.
current test PASSED/SKIPPED -- test_repr_result_when_body_varies in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 39.03466081619263s cumulative, 0.013049125671386719s individual

.
current test PASSED/SKIPPED -- test_simulate_json_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 39.044681549072266s cumulative, 0.010020732879638672s individual

.
current test PASSED/SKIPPED -- test_simulate_json_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 39.05125284194946s cumulative, 0.006571292877197266s individual

.
current test PASSED/SKIPPED -- test_simulate_content_type_extra_handler in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 39.058404207229614s cumulative, 0.007151365280151367s individual

.
current test PASSED/SKIPPED -- test_simulate_content_type_extra_handler in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 39.065903425216675s cumulative, 0.007499217987060547s individual

.
current test PASSED/SKIPPED -- test_query_string_no_question in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 39.07250356674194s cumulative, 0.006600141525268555s individual

.
current test PASSED/SKIPPED -- test_cached_text_in_result in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 39.07835555076599s cumulative, 0.0058519840240478516s individual

.
current test PASSED/SKIPPED -- test_repr_result_when_body_varies in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 39.0844452381134s cumulative, 0.006089687347412109s individual

.
current test PASSED/SKIPPED -- test_simulate_content_type_extra_handler in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 39.091575384140015s cumulative, 0.007130146026611328s individual

.
current test PASSED/SKIPPED -- test_repr_result_when_body_varies in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 39.09957933425903s cumulative, 0.008003950119018555s individual

.
current test PASSED/SKIPPED -- test_simulate_with_environ_extras in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 39.10524582862854s cumulative, 0.005666494369506836s individual

.
current test PASSED/SKIPPED -- test_repr_result_when_body_varies in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 39.111013412475586s cumulative, 0.0057675838470458984s individual

.
current test PASSED/SKIPPED -- test_simulate_content_type in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 39.11790084838867s cumulative, 0.0068874359130859375s individual

.
current test PASSED/SKIPPED -- test_simple_resource_body_json_xor in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 39.121429204940796s cumulative, 0.0035283565521240234s individual

.
current test PASSED/SKIPPED -- test_repr_result_when_body_varies in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 39.13522934913635s cumulative, 0.01380014419555664s individual

.
current test PASSED/SKIPPED -- test_simulate_json_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 39.14555644989014s cumulative, 0.01032710075378418s individual

.
current test PASSED/SKIPPED -- test_simulate_json_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 39.157785177230835s cumulative, 0.012228727340698242s individual

.
current test PASSED/SKIPPED -- test_simulate_json_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 39.1698842048645s cumulative, 0.012099027633666992s individual

.
current test PASSED/SKIPPED -- test_method in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 39.17724919319153s cumulative, 0.007364988327026367s individual

.
current test PASSED/SKIPPED -- test_function in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 39.183099031448364s cumulative, 0.0058498382568359375s individual


tests/asgi/test_cythonized_asgi.py .
current test PASSED/SKIPPED -- test_scheduled_jobs in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_cythonized_asgi.py: 39.71412658691406s cumulative, 0.5310275554656982s individual


tests/test_media_urlencoded.py .
current test PASSED/SKIPPED -- test_urlencoded_form in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_urlencoded.py: 39.749664306640625s cumulative, 0.0355377197265625s individual

.
current test PASSED/SKIPPED -- test_deserialize_invalid_unicode in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_urlencoded.py: 39.77049970626831s cumulative, 0.020835399627685547s individual

.
current test PASSED/SKIPPED -- test_empty_form in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_urlencoded.py: 39.81614065170288s cumulative, 0.04564094543457031s individual

.
current test PASSED/SKIPPED -- test_urlencoded_form in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_urlencoded.py: 39.847392559051514s cumulative, 0.03125190734863281s individual

.
current test PASSED/SKIPPED -- test_urlencoded_form in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_urlencoded.py: 39.87704348564148s cumulative, 0.02965092658996582s individual

.
current test PASSED/SKIPPED -- test_empty_form in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_urlencoded.py: 39.893627882003784s cumulative, 0.016584396362304688s individual

.
current test PASSED/SKIPPED -- test_deserialize_empty_form in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_urlencoded.py: 39.89711356163025s cumulative, 0.0034856796264648438s individual

.
current test PASSED/SKIPPED -- test_urlencoded_form in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_urlencoded.py: 39.90721344947815s cumulative, 0.01009988784790039s individual

.
current test PASSED/SKIPPED -- test_urlencoded_form_handler_serialize in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_urlencoded.py: 39.91234374046326s cumulative, 0.005130290985107422s individual

.
current test PASSED/SKIPPED -- test_urlencoded_form_handler_serialize in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_urlencoded.py: 39.916327238082886s cumulative, 0.003983497619628906s individual

.
current test PASSED/SKIPPED -- test_urlencoded_form in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_urlencoded.py: 39.92820072174072s cumulative, 0.011873483657836914s individual

.
current test PASSED/SKIPPED -- test_urlencoded_form in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_urlencoded.py: 39.93460178375244s cumulative, 0.00640106201171875s individual

.
current test PASSED/SKIPPED -- test_urlencoded_form in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_urlencoded.py: 39.94520616531372s cumulative, 0.010604381561279297s individual

.
current test PASSED/SKIPPED -- test_urlencoded_form in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_urlencoded.py: 39.9540057182312s cumulative, 0.008799552917480469s individual

.
current test PASSED/SKIPPED -- test_urlencoded_form in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_urlencoded.py: 39.963543176651s cumulative, 0.009537458419799805s individual

.
current test PASSED/SKIPPED -- test_urlencoded_form in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_urlencoded.py: 39.98296880722046s cumulative, 0.019425630569458008s individual


tests/test_before_hooks.py .
current test PASSED/SKIPPED -- test_param_validator in /home/kaiyaok2/PythonProjects/falcon/tests/test_before_hooks.py: 39.99631309509277s cumulative, 0.013344287872314453s individual

.
current test PASSED/SKIPPED -- test_input_validator in /home/kaiyaok2/PythonProjects/falcon/tests/test_before_hooks.py: 40.011719942092896s cumulative, 0.01540684700012207s individual

.
current test PASSED/SKIPPED -- test_input_validator_inherited in /home/kaiyaok2/PythonProjects/falcon/tests/test_before_hooks.py: 40.032912492752075s cumulative, 0.021192550659179688s individual

.
current test PASSED/SKIPPED -- test_parser_sync in /home/kaiyaok2/PythonProjects/falcon/tests/test_before_hooks.py: 40.041898012161255s cumulative, 0.008985519409179688s individual

.
current test PASSED/SKIPPED -- test_piggybacking_resource_post_item in /home/kaiyaok2/PythonProjects/falcon/tests/test_before_hooks.py: 40.064287185668945s cumulative, 0.02238917350769043s individual

.
current test PASSED/SKIPPED -- test_input_validator in /home/kaiyaok2/PythonProjects/falcon/tests/test_before_hooks.py: 40.075952768325806s cumulative, 0.011665582656860352s individual

.
current test PASSED/SKIPPED -- test_field_validator in /home/kaiyaok2/PythonProjects/falcon/tests/test_before_hooks.py: 40.1004798412323s cumulative, 0.02452707290649414s individual

.
current test PASSED/SKIPPED -- test_parser_async in /home/kaiyaok2/PythonProjects/falcon/tests/test_before_hooks.py: 40.1159942150116s cumulative, 0.015514373779296875s individual

.
current test PASSED/SKIPPED -- test_field_validator in /home/kaiyaok2/PythonProjects/falcon/tests/test_before_hooks.py: 40.127580642700195s cumulative, 0.011586427688598633s individual

.
current test PASSED/SKIPPED -- test_input_validator_inherited in /home/kaiyaok2/PythonProjects/falcon/tests/test_before_hooks.py: 40.137470960617065s cumulative, 0.009890317916870117s individual

.
current test PASSED/SKIPPED -- test_wrapped_resource in /home/kaiyaok2/PythonProjects/falcon/tests/test_before_hooks.py: 40.14759588241577s cumulative, 0.010124921798706055s individual

.
current test PASSED/SKIPPED -- test_parser_async in /home/kaiyaok2/PythonProjects/falcon/tests/test_before_hooks.py: 40.16567397117615s cumulative, 0.018078088760375977s individual

.
current test PASSED/SKIPPED -- test_parser_async in /home/kaiyaok2/PythonProjects/falcon/tests/test_before_hooks.py: 40.18472456932068s cumulative, 0.01905059814453125s individual

.
current test PASSED/SKIPPED -- test_multiple_resource_hooks in /home/kaiyaok2/PythonProjects/falcon/tests/test_before_hooks.py: 40.20099377632141s cumulative, 0.016269207000732422s individual

.
current test PASSED/SKIPPED -- test_param_validator in /home/kaiyaok2/PythonProjects/falcon/tests/test_before_hooks.py: 40.22877550125122s cumulative, 0.02778172492980957s individual

.
current test PASSED/SKIPPED -- test_parser_sync in /home/kaiyaok2/PythonProjects/falcon/tests/test_before_hooks.py: 40.244757890701294s cumulative, 0.015982389450073242s individual

.
current test PASSED/SKIPPED -- test_parser_async in /home/kaiyaok2/PythonProjects/falcon/tests/test_before_hooks.py: 40.26461625099182s cumulative, 0.019858360290527344s individual

.
current test PASSED/SKIPPED -- test_parser_sync in /home/kaiyaok2/PythonProjects/falcon/tests/test_before_hooks.py: 40.27707648277283s cumulative, 0.01246023178100586s individual

.
current test PASSED/SKIPPED -- test_piggybacking_resource_post_item in /home/kaiyaok2/PythonProjects/falcon/tests/test_before_hooks.py: 40.292619943618774s cumulative, 0.015543460845947266s individual

.
current test PASSED/SKIPPED -- test_multiple_resource_hooks in /home/kaiyaok2/PythonProjects/falcon/tests/test_before_hooks.py: 40.32848858833313s cumulative, 0.03586864471435547s individual

.
current test PASSED/SKIPPED -- test_field_validator in /home/kaiyaok2/PythonProjects/falcon/tests/test_before_hooks.py: 40.37309741973877s cumulative, 0.04460883140563965s individual

.
current test PASSED/SKIPPED -- test_field_validator in /home/kaiyaok2/PythonProjects/falcon/tests/test_before_hooks.py: 40.3909592628479s cumulative, 0.01786184310913086s individual

.
current test PASSED/SKIPPED -- test_wrapped_resource_with_hooks_aware_of_resource in /home/kaiyaok2/PythonProjects/falcon/tests/test_before_hooks.py: 40.434237003326416s cumulative, 0.043277740478515625s individual

.
current test PASSED/SKIPPED -- test_wrapped_resource in /home/kaiyaok2/PythonProjects/falcon/tests/test_before_hooks.py: 40.46708011627197s cumulative, 0.03284311294555664s individual

.
current test PASSED/SKIPPED -- test_piggybacking_resource_post_and_delete in /home/kaiyaok2/PythonProjects/falcon/tests/test_before_hooks.py: 40.51041030883789s cumulative, 0.04333019256591797s individual

.
current test PASSED/SKIPPED -- test_multiple_resource_hooks in /home/kaiyaok2/PythonProjects/falcon/tests/test_before_hooks.py: 40.546459674835205s cumulative, 0.03604936599731445s individual

.
current test PASSED/SKIPPED -- test_field_validator in /home/kaiyaok2/PythonProjects/falcon/tests/test_before_hooks.py: 40.57597780227661s cumulative, 0.02951812744140625s individual

.
current test PASSED/SKIPPED -- test_parser_sync in /home/kaiyaok2/PythonProjects/falcon/tests/test_before_hooks.py: 40.59306049346924s cumulative, 0.017082691192626953s individual

.
current test PASSED/SKIPPED -- test_multiple_resource_hooks in /home/kaiyaok2/PythonProjects/falcon/tests/test_before_hooks.py: 40.61142897605896s cumulative, 0.01836848258972168s individual

.
current test PASSED/SKIPPED -- test_wrapped_resource_with_hooks_aware_of_resource in /home/kaiyaok2/PythonProjects/falcon/tests/test_before_hooks.py: 40.632463693618774s cumulative, 0.021034717559814453s individual

.
current test PASSED/SKIPPED -- test_decorable_name_pattern in /home/kaiyaok2/PythonProjects/falcon/tests/test_before_hooks.py: 40.639477491378784s cumulative, 0.007013797760009766s individual

.
current test PASSED/SKIPPED -- test_field_validator in /home/kaiyaok2/PythonProjects/falcon/tests/test_before_hooks.py: 40.65977120399475s cumulative, 0.020293712615966797s individual


tests/test_error_handlers.py s
current test PASSED/SKIPPED -- test_caught_error_async in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 40.668476819992065s cumulative, 0.008705615997314453s individual

.
current test PASSED/SKIPPED -- test_catch_http_no_route_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 40.69717621803284s cumulative, 0.028699398040771484s individual

.
current test PASSED/SKIPPED -- test_caught_error_async in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 40.7260000705719s cumulative, 0.0288238525390625s individual


tests/test_testing.py .
current test PASSED/SKIPPED -- test_client_simulate_aliases in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 40.757500410079956s cumulative, 0.03150033950805664s individual

.
current test PASSED/SKIPPED -- test_client_simulate_aliases in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 40.781811237335205s cumulative, 0.024310827255249023s individual

.
current test PASSED/SKIPPED -- test_client_simulate_aliases in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 40.80897331237793s cumulative, 0.02716207504272461s individual

.
current test PASSED/SKIPPED -- test_client_simulate_aliases in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 40.829875469207764s cumulative, 0.020902156829833984s individual

.
current test PASSED/SKIPPED -- test_client_simulate_aliases in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 40.847137451171875s cumulative, 0.017261981964111328s individual

.
current test PASSED/SKIPPED -- test_client_simulate_aliases in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 40.874879121780396s cumulative, 0.027741670608520508s individual

.
current test PASSED/SKIPPED -- test_client_simulate_aliases in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 40.90047287940979s cumulative, 0.02559375762939453s individual

.
current test PASSED/SKIPPED -- test_client_simulate_aliases in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 40.92362999916077s cumulative, 0.023157119750976562s individual


tests/test_cython.py F
current test FAILED -- test_stream_has_private_read in /home/kaiyaok2/PythonProjects/falcon/tests/test_cython.py: 40.95905900001526s cumulative, 0.03542900085449219s individual

F
current test FAILED -- test_imported_from_c_modules in /home/kaiyaok2/PythonProjects/falcon/tests/test_cython.py: 40.98596239089966s cumulative, 0.026903390884399414s individual


tests/test_wsgi_errors.py .
current test PASSED/SKIPPED -- test_responder_logged_bytestring in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_errors.py: 41.00917315483093s cumulative, 0.023210763931274414s individual


tests/test_before_hooks.py .
current test PASSED/SKIPPED -- test_piggybacking_resource_post_and_delete in /home/kaiyaok2/PythonProjects/falcon/tests/test_before_hooks.py: 41.06775116920471s cumulative, 0.0585780143737793s individual


tests/asgi/test_ws.py .
current test PASSED/SKIPPED -- test_ws_context_timeout in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 46.114567041397095s cumulative, 5.046815872192383s individual


tests/test_boundedstream.py .
current test PASSED/SKIPPED -- test_not_writable in /home/kaiyaok2/PythonProjects/falcon/tests/test_boundedstream.py: 46.1320321559906s cumulative, 0.01746511459350586s individual


tests/test_wsgi.py .
current test PASSED/SKIPPED -- test_post_read_bounded_stream in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi.py: 46.31675696372986s cumulative, 0.1847248077392578s individual

.
current test PASSED/SKIPPED -- test_get in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi.py: 46.41069436073303s cumulative, 0.09393739700317383s individual

.
current test PASSED/SKIPPED -- test_head_405 in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi.py: 46.48946952819824s cumulative, 0.07877516746520996s individual

.
current test PASSED/SKIPPED -- test_post in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi.py: 46.656898498535156s cumulative, 0.16742897033691406s individual

.
current test PASSED/SKIPPED -- test_post_read_bounded_stream_no_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi.py: 46.77140283584595s cumulative, 0.11450433731079102s individual

.
current test PASSED/SKIPPED -- test_put in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi.py: 46.896923542022705s cumulative, 0.1255207061767578s individual

.
current test PASSED/SKIPPED -- test_post_invalid_content_length in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi.py: 46.99793791770935s cumulative, 0.10101437568664551s individual


tests/test_headers.py .
current test PASSED/SKIPPED -- test_override_default_media_type in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 47.05160474777222s cumulative, 0.05366683006286621s individual

.
current test PASSED/SKIPPED -- test_set_cookie_disallowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 47.08241653442383s cumulative, 0.030811786651611328s individual

.
current test PASSED/SKIPPED -- test_content_disposition_attachment_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 47.107231855392456s cumulative, 0.02481532096862793s individual

.
current test PASSED/SKIPPED -- test_append_link_invalid_crossorigin_value in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 47.12214517593384s cumulative, 0.014913320541381836s individual

.
current test PASSED/SKIPPED -- test_set_cookie_disallowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 47.153329610824585s cumulative, 0.03118443489074707s individual

.
current test PASSED/SKIPPED -- test_content_header_missing in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 47.172141551971436s cumulative, 0.018811941146850586s individual

.
current test PASSED/SKIPPED -- test_content_disposition_attachment_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 47.19122862815857s cumulative, 0.01908707618713379s individual

.
current test PASSED/SKIPPED -- test_append_link_crossorigin in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 47.20540642738342s cumulative, 0.014177799224853516s individual

.
current test PASSED/SKIPPED -- test_append_link_with_title_star in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 47.21460580825806s cumulative, 0.009199380874633789s individual

.
current test PASSED/SKIPPED -- test_response_header_helpers_on_get in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 47.22559905052185s cumulative, 0.010993242263793945s individual

.
current test PASSED/SKIPPED -- test_append_link_with_title in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 47.23293471336365s cumulative, 0.007335662841796875s individual

.
current test PASSED/SKIPPED -- test_append_link_crossorigin in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 47.24098181724548s cumulative, 0.008047103881835938s individual

.
current test PASSED/SKIPPED -- test_no_content_type in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 47.253793716430664s cumulative, 0.012811899185180664s individual

.
current test PASSED/SKIPPED -- test_required_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 47.26849865913391s cumulative, 0.01470494270324707s individual

.
current test PASSED/SKIPPED -- test_append_link_multiple in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 47.2814085483551s cumulative, 0.012909889221191406s individual

.
current test PASSED/SKIPPED -- test_unset_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 47.291823863983154s cumulative, 0.010415315628051758s individual

.
current test PASSED/SKIPPED -- test_declared_content_length_overridden_by_no_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 47.30587100982666s cumulative, 0.01404714584350586s individual

.
current test PASSED/SKIPPED -- test_set_cookie_disallowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 47.32008171081543s cumulative, 0.014210700988769531s individual

.
current test PASSED/SKIPPED -- test_content_disposition_attachment_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 47.32936358451843s cumulative, 0.00928187370300293s individual

.
current test PASSED/SKIPPED -- test_content_disposition_attachment_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 47.33692765235901s cumulative, 0.007564067840576172s individual

.
current test PASSED/SKIPPED -- test_set_cookie_disallowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 47.343058347702026s cumulative, 0.006130695343017578s individual

.
current test PASSED/SKIPPED -- test_set_cookie_disallowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 47.34971761703491s cumulative, 0.006659269332885742s individual

.
current test PASSED/SKIPPED -- test_append_link_invalid_crossorigin_value in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 47.35755133628845s cumulative, 0.007833719253540039s individual

.
current test PASSED/SKIPPED -- test_append_link_with_hreflang in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 47.38227367401123s cumulative, 0.02472233772277832s individual

.
current test PASSED/SKIPPED -- test_response_append_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 47.39840316772461s cumulative, 0.016129493713378906s individual

.
current test PASSED/SKIPPED -- test_default_media_type in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 47.4146409034729s cumulative, 0.016237735748291016s individual

.
current test PASSED/SKIPPED -- test_append_link_complex in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 47.432342529296875s cumulative, 0.01770162582397461s individual

.
current test PASSED/SKIPPED -- test_append_link_crossorigin in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 47.4601309299469s cumulative, 0.027788400650024414s individual

.
current test PASSED/SKIPPED -- test_append_link_crossorigin in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 47.48325777053833s cumulative, 0.023126840591430664s individual

.
current test PASSED/SKIPPED -- test_content_length_options in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 47.49601221084595s cumulative, 0.012754440307617188s individual

.
current test PASSED/SKIPPED -- test_declared_content_length_on_head in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 47.5129497051239s cumulative, 0.0169374942779541s individual

.
current test PASSED/SKIPPED -- test_expires_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 47.54062294960022s cumulative, 0.02767324447631836s individual

.
current test PASSED/SKIPPED -- test_append_link_invalid_crossorigin_value in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 47.55385613441467s cumulative, 0.013233184814453125s individual

.
current test PASSED/SKIPPED -- test_default_value in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 47.617114305496216s cumulative, 0.06325817108154297s individual

.
current test PASSED/SKIPPED -- test_content_disposition_inline_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 47.655125856399536s cumulative, 0.03801155090332031s individual

.
current test PASSED/SKIPPED -- test_set_cookie_disallowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 47.67737674713135s cumulative, 0.022250890731811523s individual

.
current test PASSED/SKIPPED -- test_append_link_crossorigin in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 47.71826457977295s cumulative, 0.04088783264160156s individual

.
current test PASSED/SKIPPED -- test_custom_content_type in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 47.74910092353821s cumulative, 0.03083634376525879s individual

.
current test PASSED/SKIPPED -- test_unicode_headers_contain_non_ascii in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 47.77371549606323s cumulative, 0.024614572525024414s individual

.
current test PASSED/SKIPPED -- test_set_cookie_disallowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 47.79991149902344s cumulative, 0.026196002960205078s individual

.
current test PASSED/SKIPPED -- test_content_disposition_attachment_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 47.823691844940186s cumulative, 0.023780345916748047s individual

.
current test PASSED/SKIPPED -- test_unicode_headers_contain_non_ascii in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 47.84194803237915s cumulative, 0.018256187438964844s individual

.
current test PASSED/SKIPPED -- test_set_cookie_disallowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 47.85635852813721s cumulative, 0.01441049575805664s individual

.
current test PASSED/SKIPPED -- test_content_disposition_attachment_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 47.87617206573486s cumulative, 0.01981353759765625s individual

.
current test PASSED/SKIPPED -- test_declared_content_length_overriden_by_data_length in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 47.90326762199402s cumulative, 0.027095556259155273s individual

.
current test PASSED/SKIPPED -- test_content_header_missing in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 47.91835427284241s cumulative, 0.015086650848388672s individual

.
current test PASSED/SKIPPED -- test_declared_content_length_overriden_by_body_length in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 47.94398021697998s cumulative, 0.025625944137573242s individual

.
current test PASSED/SKIPPED -- test_vary_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 47.96805214881897s cumulative, 0.024071931838989258s individual

.
current test PASSED/SKIPPED -- test_append_link_with_anchor in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 47.991700887680054s cumulative, 0.023648738861083984s individual

.
current test PASSED/SKIPPED -- test_override_default_media_type_missing_encoding in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 48.03278851509094s cumulative, 0.04108762741088867s individual

.
current test PASSED/SKIPPED -- test_get_header_as_int in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 48.058698892593384s cumulative, 0.025910377502441406s individual

.
current test PASSED/SKIPPED -- test_override_default_media_type in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 48.08406376838684s cumulative, 0.02536487579345703s individual

.
current test PASSED/SKIPPED -- test_content_length in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 48.10494875907898s cumulative, 0.020884990692138672s individual

.
current test PASSED/SKIPPED -- test_content_disposition_attachment_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 48.13766551017761s cumulative, 0.03271675109863281s individual

.
current test PASSED/SKIPPED -- test_vary_star in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 48.15669322013855s cumulative, 0.0190277099609375s individual

.
current test PASSED/SKIPPED -- test_headers_with_custom_class_not_callable in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 48.186614751815796s cumulative, 0.029921531677246094s individual

.
current test PASSED/SKIPPED -- test_append_link_crossorigin in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 48.20622682571411s cumulative, 0.01961207389831543s individual

.
current test PASSED/SKIPPED -- test_unicode_location_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 48.225708961486816s cumulative, 0.019482135772705078s individual

.
current test PASSED/SKIPPED -- test_append_link_invalid_crossorigin_value in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 48.23365926742554s cumulative, 0.007950305938720703s individual

.
current test PASSED/SKIPPED -- test_headers_as_list in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 48.25623297691345s cumulative, 0.02257370948791504s individual

.
current test PASSED/SKIPPED -- test_append_link_single in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 48.26960754394531s cumulative, 0.013374567031860352s individual

.
current test PASSED/SKIPPED -- test_unicode_headers_contain_non_ascii in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 48.29168343544006s cumulative, 0.022075891494750977s individual

.
current test PASSED/SKIPPED -- test_no_content_type in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 48.314072608947754s cumulative, 0.02238917350769043s individual

.
current test PASSED/SKIPPED -- test_set_cookie_disallowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 48.340914487838745s cumulative, 0.02684187889099121s individual

.
current test PASSED/SKIPPED -- test_set_cookie_disallowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 48.37566637992859s cumulative, 0.03475189208984375s individual

.
current test PASSED/SKIPPED -- test_set_cookie_disallowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 48.392254114151s cumulative, 0.01658773422241211s individual

.
current test PASSED/SKIPPED -- test_set_cookie_disallowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 48.41356062889099s cumulative, 0.021306514739990234s individual

.
current test PASSED/SKIPPED -- test_unicode_headers_contain_only_ascii in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 48.441768646240234s cumulative, 0.028208017349243164s individual

.
current test PASSED/SKIPPED -- test_no_content_length in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 48.469780921936035s cumulative, 0.02801227569580078s individual

.
current test PASSED/SKIPPED -- test_append_link_with_link_extension in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 48.504002809524536s cumulative, 0.03422188758850098s individual

.
current test PASSED/SKIPPED -- test_passthrough_request_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 48.54072189331055s cumulative, 0.03671908378601074s individual

.
current test PASSED/SKIPPED -- test_request_multiple_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 48.56553840637207s cumulative, 0.024816513061523438s individual

.
current test PASSED/SKIPPED -- test_set_headers_with_custom_class in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 48.58941960334778s cumulative, 0.023881196975708008s individual

.
current test PASSED/SKIPPED -- test_vary_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 48.635740518569946s cumulative, 0.04632091522216797s individual

.
current test PASSED/SKIPPED -- test_request_latin1_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 48.689149379730225s cumulative, 0.05340886116027832s individual

.
current test PASSED/SKIPPED -- test_response_set_and_get_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 48.723570346832275s cumulative, 0.03442096710205078s individual

.
current test PASSED/SKIPPED -- test_no_content_length in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 48.750025272369385s cumulative, 0.026454925537109375s individual

.
current test PASSED/SKIPPED -- test_content_type_no_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 48.78910779953003s cumulative, 0.03908252716064453s individual

.
current test PASSED/SKIPPED -- test_append_link_with_type_hint in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 48.81957745552063s cumulative, 0.030469655990600586s individual

.
current test PASSED/SKIPPED -- test_unset_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 48.86363124847412s cumulative, 0.04405379295349121s individual

.
current test PASSED/SKIPPED -- test_content_disposition_inline_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 48.900131702423096s cumulative, 0.03650045394897461s individual

.
current test PASSED/SKIPPED -- test_content_length_options in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 48.934240102767944s cumulative, 0.03410840034484863s individual

.
current test PASSED/SKIPPED -- test_content_disposition_inline_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 48.965418338775635s cumulative, 0.03117823600769043s individual

.
current test PASSED/SKIPPED -- test_append_link_invalid_crossorigin_value in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 48.982022285461426s cumulative, 0.016603946685791016s individual

.
current test PASSED/SKIPPED -- test_append_link_with_hreflang_multi in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 49.01382541656494s cumulative, 0.031803131103515625s individual

.
current test PASSED/SKIPPED -- test_append_link_invalid_crossorigin_value in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 49.02766966819763s cumulative, 0.01384425163269043s individual

.
current test PASSED/SKIPPED -- test_content_disposition_attachment_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 49.075186014175415s cumulative, 0.0475163459777832s individual


tests/test_cors_middleware.py .
current test PASSED/SKIPPED -- test_expose_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_cors_middleware.py: 49.10263419151306s cumulative, 0.027448177337646484s individual

.
current test PASSED/SKIPPED -- test_allow_credential_existing_origin in /home/kaiyaok2/PythonProjects/falcon/tests/test_cors_middleware.py: 49.12531065940857s cumulative, 0.022676467895507812s individual

.
current test PASSED/SKIPPED -- test_allow_origin_allow_credential in /home/kaiyaok2/PythonProjects/falcon/tests/test_cors_middleware.py: 49.154467821121216s cumulative, 0.029157161712646484s individual

.
current test PASSED/SKIPPED -- test_allow_credential_list_or_str in /home/kaiyaok2/PythonProjects/falcon/tests/test_cors_middleware.py: 49.191139936447144s cumulative, 0.036672115325927734s individual

.
current test PASSED/SKIPPED -- test_expose_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_cors_middleware.py: 49.21694827079773s cumulative, 0.025808334350585938s individual

.
current test PASSED/SKIPPED -- test_allow_origin in /home/kaiyaok2/PythonProjects/falcon/tests/test_cors_middleware.py: 49.25077843666077s cumulative, 0.03383016586303711s individual

.
current test PASSED/SKIPPED -- test_allow_origin in /home/kaiyaok2/PythonProjects/falcon/tests/test_cors_middleware.py: 49.28454899787903s cumulative, 0.03377056121826172s individual

.
current test PASSED/SKIPPED -- test_allow_origin in /home/kaiyaok2/PythonProjects/falcon/tests/test_cors_middleware.py: 49.309964179992676s cumulative, 0.02541518211364746s individual

.
current test PASSED/SKIPPED -- test_allow_credential_list_or_str in /home/kaiyaok2/PythonProjects/falcon/tests/test_cors_middleware.py: 49.33775758743286s cumulative, 0.027793407440185547s individual

.
current test PASSED/SKIPPED -- test_expose_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_cors_middleware.py: 49.363511085510254s cumulative, 0.025753498077392578s individual

.
current test PASSED/SKIPPED -- test_raises in /home/kaiyaok2/PythonProjects/falcon/tests/test_cors_middleware.py: 49.379143714904785s cumulative, 0.01563262939453125s individual

.
current test PASSED/SKIPPED -- test_allow_credential_wildcard in /home/kaiyaok2/PythonProjects/falcon/tests/test_cors_middleware.py: 49.40080714225769s cumulative, 0.021663427352905273s individual

.
current test PASSED/SKIPPED -- test_disabled_cors_should_not_add_any_extra_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_cors_middleware.py: 49.419042348861694s cumulative, 0.018235206604003906s individual

.
current test PASSED/SKIPPED -- test_enabled_cors_should_add_extra_headers_on_response in /home/kaiyaok2/PythonProjects/falcon/tests/test_cors_middleware.py: 49.449479818344116s cumulative, 0.030437469482421875s individual

.
current test PASSED/SKIPPED -- test_enabled_cors_handles_preflighting_no_headers_in_req in /home/kaiyaok2/PythonProjects/falcon/tests/test_cors_middleware.py: 49.4917938709259s cumulative, 0.04231405258178711s individual

.
current test PASSED/SKIPPED -- test_enabled_cors_should_accept_all_origins_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_cors_middleware.py: 49.55723190307617s cumulative, 0.06543803215026855s individual

.
current test PASSED/SKIPPED -- test_enabled_cors_no_origin in /home/kaiyaok2/PythonProjects/falcon/tests/test_cors_middleware.py: 49.59677052497864s cumulative, 0.03953862190246582s individual

.
current test PASSED/SKIPPED -- test_enabled_cors_handles_preflighting in /home/kaiyaok2/PythonProjects/falcon/tests/test_cors_middleware.py: 49.633628845214844s cumulative, 0.036858320236206055s individual


tests/asgi/test_boundedstream_asgi.py .
current test PASSED/SKIPPED -- test_read_all in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 75.89392852783203s cumulative, 26.260299682617188s individual

.
current test PASSED/SKIPPED -- test_read_all in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 99.17514753341675s cumulative, 23.281219005584717s individual

.
current test PASSED/SKIPPED -- test_read_all in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 117.38770937919617s cumulative, 18.21256184577942s individual


tests/asgi/test_asgi_conductor.py .
current test PASSED/SKIPPED -- test_responders in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_conductor.py: 117.41005373001099s cumulative, 0.022344350814819336s individual

.
current test PASSED/SKIPPED -- test_responders in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_conductor.py: 117.44142007827759s cumulative, 0.03136634826660156s individual

.
current test PASSED/SKIPPED -- test_responders in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_conductor.py: 117.47019052505493s cumulative, 0.02877044677734375s individual

.
current test PASSED/SKIPPED -- test_default_headers in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_conductor.py: 117.50025796890259s cumulative, 0.03006744384765625s individual

.
current test PASSED/SKIPPED -- test_responders in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_conductor.py: 117.53535509109497s cumulative, 0.03509712219238281s individual

.
current test PASSED/SKIPPED -- test_responders in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_conductor.py: 117.56662774085999s cumulative, 0.03127264976501465s individual

.
current test PASSED/SKIPPED -- test_responders in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_conductor.py: 117.59771513938904s cumulative, 0.031087398529052734s individual

.
current test PASSED/SKIPPED -- test_generic_request in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_conductor.py: 117.62707281112671s cumulative, 0.0293576717376709s individual

.
current test PASSED/SKIPPED -- test_responders in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_conductor.py: 117.67933416366577s cumulative, 0.0522613525390625s individual

.
current test PASSED/SKIPPED -- test_responders in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_conductor.py: 117.70806336402893s cumulative, 0.02872920036315918s individual

.
current test PASSED/SKIPPED -- test_responders in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_conductor.py: 117.741623878479s cumulative, 0.03356051445007324s individual

.
current test PASSED/SKIPPED -- test_generic_request in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_conductor.py: 117.77317953109741s cumulative, 0.0315556526184082s individual

.
current test PASSED/SKIPPED -- test_responders in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_conductor.py: 117.81634879112244s cumulative, 0.043169260025024414s individual

.
current test PASSED/SKIPPED -- test_responders in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_conductor.py: 117.85652422904968s cumulative, 0.040175437927246094s individual

.
current test PASSED/SKIPPED -- test_responders in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_conductor.py: 117.89685702323914s cumulative, 0.040332794189453125s individual

.
current test PASSED/SKIPPED -- test_responders in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_conductor.py: 117.92092037200928s cumulative, 0.0240633487701416s individual

.
current test PASSED/SKIPPED -- test_wsgi_not_supported in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_conductor.py: 117.94503664970398s cumulative, 0.02411627769470215s individual

.
current test PASSED/SKIPPED -- test_responders in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_conductor.py: 117.97811603546143s cumulative, 0.03307938575744629s individual


tests/test_cmd_inspect_app.py .
current test PASSED/SKIPPED -- test_make_parser in /home/kaiyaok2/PythonProjects/falcon/tests/test_cmd_inspect_app.py: 118.00659441947937s cumulative, 0.028478384017944336s individual

.
current test PASSED/SKIPPED -- test_make_parser in /home/kaiyaok2/PythonProjects/falcon/tests/test_cmd_inspect_app.py: 118.02895712852478s cumulative, 0.022362709045410156s individual

.
current test PASSED/SKIPPED -- test_make_parser in /home/kaiyaok2/PythonProjects/falcon/tests/test_cmd_inspect_app.py: 118.05511569976807s cumulative, 0.026158571243286133s individual

.
current test PASSED/SKIPPED -- test_route_main in /home/kaiyaok2/PythonProjects/falcon/tests/test_cmd_inspect_app.py: 118.07698702812195s cumulative, 0.021871328353881836s individual

.
current test PASSED/SKIPPED -- test_make_parser_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_cmd_inspect_app.py: 118.12149691581726s cumulative, 0.0445098876953125s individual

.
current test PASSED/SKIPPED -- test_make_parser in /home/kaiyaok2/PythonProjects/falcon/tests/test_cmd_inspect_app.py: 118.15265822410583s cumulative, 0.03116130828857422s individual

.
current test PASSED/SKIPPED -- test_make_parser in /home/kaiyaok2/PythonProjects/falcon/tests/test_cmd_inspect_app.py: 118.17389464378357s cumulative, 0.021236419677734375s individual

.
current test PASSED/SKIPPED -- test_make_parser in /home/kaiyaok2/PythonProjects/falcon/tests/test_cmd_inspect_app.py: 118.2022271156311s cumulative, 0.02833247184753418s individual

.
current test PASSED/SKIPPED -- test_make_parser in /home/kaiyaok2/PythonProjects/falcon/tests/test_cmd_inspect_app.py: 118.23165941238403s cumulative, 0.029432296752929688s individual

.
current test PASSED/SKIPPED -- test_make_parser in /home/kaiyaok2/PythonProjects/falcon/tests/test_cmd_inspect_app.py: 118.2630226612091s cumulative, 0.03136324882507324s individual

.
current test PASSED/SKIPPED -- test_load_app_module_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_cmd_inspect_app.py: 118.28212451934814s cumulative, 0.019101858139038086s individual


tests/test_options.py .
current test PASSED/SKIPPED -- test_options_toggle in /home/kaiyaok2/PythonProjects/falcon/tests/test_options.py: 118.29448533058167s cumulative, 0.012360811233520508s individual

.
current test PASSED/SKIPPED -- test_options_toggle in /home/kaiyaok2/PythonProjects/falcon/tests/test_options.py: 118.30736923217773s cumulative, 0.012883901596069336s individual

.
current test PASSED/SKIPPED -- test_option_defaults in /home/kaiyaok2/PythonProjects/falcon/tests/test_options.py: 118.32069158554077s cumulative, 0.01332235336303711s individual

.
current test PASSED/SKIPPED -- test_incorrect_options in /home/kaiyaok2/PythonProjects/falcon/tests/test_options.py: 118.33838295936584s cumulative, 0.017691373825073242s individual

.
current test PASSED/SKIPPED -- test_options_toggle in /home/kaiyaok2/PythonProjects/falcon/tests/test_options.py: 118.35873103141785s cumulative, 0.020348072052001953s individual

.
current test PASSED/SKIPPED -- test_options_toggle in /home/kaiyaok2/PythonProjects/falcon/tests/test_options.py: 118.37655973434448s cumulative, 0.017828702926635742s individual


tests/asgi/test_ws.py .
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 118.44322228431702s cumulative, 0.06666254997253418s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 118.5019965171814s cumulative, 0.05877423286437988s individual

.
current test PASSED/SKIPPED -- test_ws_not_accepted in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 118.5529477596283s cumulative, 0.050951242446899414s individual

.
current test PASSED/SKIPPED -- test_missing_http_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 118.59557890892029s cumulative, 0.04263114929199219s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_middleware in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 118.64288926124573s cumulative, 0.04731035232543945s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 118.6940405368805s cumulative, 0.051151275634765625s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 118.75145077705383s cumulative, 0.057410240173339844s individual

.
current test PASSED/SKIPPED -- test_responder_raises_unhandled_error in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 118.79887008666992s cumulative, 0.04741930961608887s individual

.
current test PASSED/SKIPPED -- test_bad_spec_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 118.82764887809753s cumulative, 0.028778791427612305s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 118.88227486610413s cumulative, 0.0546259880065918s individual

.
current test PASSED/SKIPPED -- test_send_receive_data in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 118.91063666343689s cumulative, 0.028361797332763672s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 118.93455982208252s cumulative, 0.023923158645629883s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 118.96628665924072s cumulative, 0.031726837158203125s individual

.
current test PASSED/SKIPPED -- test_client_disconnect_early in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 119.00588488578796s cumulative, 0.03959822654724121s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_middleware in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 119.02797722816467s cumulative, 0.022092342376708984s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 119.04277181625366s cumulative, 0.014794588088989258s individual

.
current test PASSED/SKIPPED -- test_accept_with_headers_not_supported in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 119.06478261947632s cumulative, 0.02201080322265625s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_middleware in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 119.08822226524353s cumulative, 0.023439645767211914s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 119.11306953430176s cumulative, 0.02484726905822754s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 119.15666890144348s cumulative, 0.04359936714172363s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 119.19441509246826s cumulative, 0.03774619102478027s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 119.2348701953888s cumulative, 0.04045510292053223s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 119.29962038993835s cumulative, 0.06475019454956055s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_response in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 119.33867025375366s cumulative, 0.03904986381530762s individual

.
current test PASSED/SKIPPED -- test_media in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 119.37442564964294s cumulative, 0.03575539588928223s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 119.41564416885376s cumulative, 0.04121851921081543s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 119.44036436080933s cumulative, 0.024720191955566406s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 119.46512722969055s cumulative, 0.024762868881225586s individual

.
current test PASSED/SKIPPED -- test_responder_raises_unhandled_error in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 119.48742985725403s cumulative, 0.022302627563476562s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 119.50790500640869s cumulative, 0.020475149154663086s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 119.5347318649292s cumulative, 0.026826858520507812s individual

.
current test PASSED/SKIPPED -- test_client_disconnect_uncaught_error in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 119.5684745311737s cumulative, 0.033742666244506836s individual

.
current test PASSED/SKIPPED -- test_subprotocol_bad_type in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 119.58948493003845s cumulative, 0.021010398864746094s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 119.60703945159912s cumulative, 0.017554521560668945s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_response in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 119.63007020950317s cumulative, 0.023030757904052734s individual

.
current test PASSED/SKIPPED -- test_client_disconnect_uncaught_error in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 119.6510603427887s cumulative, 0.02099013328552246s individual

.
current test PASSED/SKIPPED -- test_subprotocol_bad_type in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 119.67173385620117s cumulative, 0.020673513412475586s individual

.
current test PASSED/SKIPPED -- test_media in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 119.69249653816223s cumulative, 0.02076268196105957s individual

.
current test PASSED/SKIPPED -- test_client_disconnect_early in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 119.71267652511597s cumulative, 0.02017998695373535s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_middleware in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 119.72868919372559s cumulative, 0.01601266860961914s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 119.74803280830383s cumulative, 0.01934361457824707s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 119.7591860294342s cumulative, 0.011153221130371094s individual

.
current test PASSED/SKIPPED -- test_client_disconnect_uncaught_error in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 119.77442646026611s cumulative, 0.01524043083190918s individual

.
current test PASSED/SKIPPED -- test_subprotocol_bad_type in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 119.79793643951416s cumulative, 0.023509979248046875s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_response in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 119.81715774536133s cumulative, 0.01922130584716797s individual

.
current test PASSED/SKIPPED -- test_bad_http_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 119.82507395744324s cumulative, 0.00791621208190918s individual

.
current test PASSED/SKIPPED -- test_send_receive_data in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 119.84151363372803s cumulative, 0.01643967628479004s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 119.90375542640686s cumulative, 0.06224179267883301s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 119.93327617645264s cumulative, 0.029520750045776367s individual

.
current test PASSED/SKIPPED -- test_bad_spec_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 119.95173764228821s cumulative, 0.01846146583557129s individual

.
current test PASSED/SKIPPED -- test_ws_simulator_client_require_accepted in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 119.9743902683258s cumulative, 0.022652626037597656s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_middleware in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 120.01077890396118s cumulative, 0.03638863563537598s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_response in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 120.03084826469421s cumulative, 0.020069360733032227s individual

.
current test PASSED/SKIPPED -- test_client_disconnect_early in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 120.05161094665527s cumulative, 0.02076268196105957s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 120.07559514045715s cumulative, 0.023984193801879883s individual

.
current test PASSED/SKIPPED -- test_client_disconnect_uncaught_error in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 120.1043815612793s cumulative, 0.028786420822143555s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 120.12898755073547s cumulative, 0.024605989456176758s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 120.15583419799805s cumulative, 0.026846647262573242s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_response in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 120.17728900909424s cumulative, 0.021454811096191406s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_middleware in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 120.19265389442444s cumulative, 0.015364885330200195s individual

.
current test PASSED/SKIPPED -- test_client_disconnect_early in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 120.21704244613647s cumulative, 0.024388551712036133s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 120.23863816261292s cumulative, 0.02159571647644043s individual

.
current test PASSED/SKIPPED -- test_accept_with_headers in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 120.25732064247131s cumulative, 0.018682479858398438s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 120.27699828147888s cumulative, 0.01967763900756836s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_response in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 120.29628443717957s cumulative, 0.019286155700683594s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 120.32361626625061s cumulative, 0.027331829071044922s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_response in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 120.35206580162048s cumulative, 0.028449535369873047s individual

.
current test PASSED/SKIPPED -- test_client_disconnect_uncaught_error in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 120.37719297409058s cumulative, 0.025127172470092773s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_response in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 120.40261197090149s cumulative, 0.025418996810913086s individual

.
current test PASSED/SKIPPED -- test_send_receive_data in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 120.4320182800293s cumulative, 0.029406309127807617s individual

.
current test PASSED/SKIPPED -- test_bad_spec_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 120.45361065864563s cumulative, 0.021592378616333008s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 120.48186993598938s cumulative, 0.02825927734375s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 120.51038885116577s cumulative, 0.0285189151763916s individual

.
current test PASSED/SKIPPED -- test_ws_simulator_collect_edge_cases in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 120.52885007858276s cumulative, 0.018461227416992188s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 120.5508553981781s cumulative, 0.022005319595336914s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 120.57349610328674s cumulative, 0.022640705108642578s individual

.
current test PASSED/SKIPPED -- test_mw_methods_must_be_coroutines in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 120.5859375s cumulative, 0.012441396713256836s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 120.60755801200867s cumulative, 0.021620512008666992s individual

.
current test PASSED/SKIPPED -- test_accept_with_headers in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 120.62894940376282s cumulative, 0.02139139175415039s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_response in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 120.64545202255249s cumulative, 0.01650261878967285s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 120.66302800178528s cumulative, 0.017575979232788086s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 120.67605185508728s cumulative, 0.013023853302001953s individual

.
current test PASSED/SKIPPED -- test_media in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 120.69775032997131s cumulative, 0.021698474884033203s individual

.
current test PASSED/SKIPPED -- test_translate_webserver_error in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 120.71007871627808s cumulative, 0.012328386306762695s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_middleware in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 120.72416472434998s cumulative, 0.014086008071899414s individual

.
current test PASSED/SKIPPED -- test_subprotocol_bad_type in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 120.74311923980713s cumulative, 0.01895451545715332s individual

.
current test PASSED/SKIPPED -- test_accept_with_headers in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 120.75628995895386s cumulative, 0.013170719146728516s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 120.77172565460205s cumulative, 0.01543569564819336s individual

.
current test PASSED/SKIPPED -- test_media in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 120.8082799911499s cumulative, 0.03655433654785156s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 120.82951617240906s cumulative, 0.021236181259155273s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 120.84805822372437s cumulative, 0.018542051315307617s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_middleware in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 120.87122201919556s cumulative, 0.023163795471191406s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 120.88696098327637s cumulative, 0.015738964080810547s individual

.
current test PASSED/SKIPPED -- test_ws_not_accepted in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 120.90397572517395s cumulative, 0.017014741897583008s individual

.
current test PASSED/SKIPPED -- test_client_disconnect_early in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 120.92831492424011s cumulative, 0.02433919906616211s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_response in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 120.95101404190063s cumulative, 0.02269911766052246s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_middleware in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 120.97077488899231s cumulative, 0.019760847091674805s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_response in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 121.00144529342651s cumulative, 0.0306704044342041s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 121.02214789390564s cumulative, 0.020702600479125977s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 121.04783463478088s cumulative, 0.02568674087524414s individual

.
current test PASSED/SKIPPED -- test_client_disconnect_uncaught_error in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 121.07104110717773s cumulative, 0.023206472396850586s individual

.
current test PASSED/SKIPPED -- test_accept_with_bad_headers in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 121.09110617637634s cumulative, 0.0200650691986084s individual

.
current test PASSED/SKIPPED -- test_subprotocol in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 121.11237859725952s cumulative, 0.02127242088317871s individual

.
current test PASSED/SKIPPED -- test_ws_base_not_implemented in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 121.12034869194031s cumulative, 0.007970094680786133s individual

.
current test PASSED/SKIPPED -- test_client_disconnect_uncaught_error in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 121.15381193161011s cumulative, 0.033463239669799805s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 121.1803240776062s cumulative, 0.02651214599609375s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 121.20718097686768s cumulative, 0.02685689926147461s individual

.
current test PASSED/SKIPPED -- test_accept_with_headers in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 121.23117113113403s cumulative, 0.023990154266357422s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_middleware in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 121.24742150306702s cumulative, 0.0162503719329834s individual

.
current test PASSED/SKIPPED -- test_client_disconnect_uncaught_error in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 121.26273274421692s cumulative, 0.015311241149902344s individual

.
current test PASSED/SKIPPED -- test_subprotocol in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 121.27866196632385s cumulative, 0.015929222106933594s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 121.30128002166748s cumulative, 0.02261805534362793s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 121.31995439529419s cumulative, 0.018674373626708984s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_middleware in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 121.34825158119202s cumulative, 0.02829718589782715s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 121.37537121772766s cumulative, 0.02711963653564453s individual

.
current test PASSED/SKIPPED -- test_subprotocol in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 121.39780163764954s cumulative, 0.022430419921875s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 121.42080903053284s cumulative, 0.02300739288330078s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 121.44936990737915s cumulative, 0.028560876846313477s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 121.46612501144409s cumulative, 0.016755104064941406s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_middleware in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 121.47956418991089s cumulative, 0.013439178466796875s individual

.
current test PASSED/SKIPPED -- test_subprotocol in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 121.49700403213501s cumulative, 0.017439842224121094s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 121.51669049263s cumulative, 0.019686460494995117s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 121.53105902671814s cumulative, 0.014368534088134766s individual

.
current test PASSED/SKIPPED -- test_client_disconnect_early in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 121.55328679084778s cumulative, 0.022227764129638672s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_middleware in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 121.57577681541443s cumulative, 0.02249002456665039s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 121.59838342666626s cumulative, 0.022606611251831055s individual

.
current test PASSED/SKIPPED -- test_client_disconnect_uncaught_error in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 121.62764120101929s cumulative, 0.029257774353027344s individual

.
current test PASSED/SKIPPED -- test_accept_with_headers in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 121.64249563217163s cumulative, 0.01485443115234375s individual

.
current test PASSED/SKIPPED -- test_send_receive_wrong_type in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 121.65227222442627s cumulative, 0.009776592254638672s individual

.
current test PASSED/SKIPPED -- test_accept_with_bad_headers in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 121.66086339950562s cumulative, 0.008591175079345703s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 121.68599343299866s cumulative, 0.025130033493041992s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_middleware in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 121.71251082420349s cumulative, 0.026517391204833984s individual

.
current test PASSED/SKIPPED -- test_accept_with_headers in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 121.73488545417786s cumulative, 0.022374629974365234s individual

.
current test PASSED/SKIPPED -- test_accept_with_bad_headers in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 121.76040554046631s cumulative, 0.02552008628845215s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 121.78619122505188s cumulative, 0.02578568458557129s individual

.
current test PASSED/SKIPPED -- test_client_disconnect_uncaught_error in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 121.81666135787964s cumulative, 0.03047013282775879s individual

.
current test PASSED/SKIPPED -- test_send_receive_data in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 121.84789729118347s cumulative, 0.031235933303833008s individual

.
current test PASSED/SKIPPED -- test_missing_ws_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 121.87517189979553s cumulative, 0.027274608612060547s individual

.
current test PASSED/SKIPPED -- test_client_disconnect_uncaught_error in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 121.89223647117615s cumulative, 0.017064571380615234s individual

.
current test PASSED/SKIPPED -- test_unexpected_param in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 121.90486717224121s cumulative, 0.012630701065063477s individual

.
current test PASSED/SKIPPED -- test_missing_spec_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 121.92448353767395s cumulative, 0.019616365432739258s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 121.98601746559143s cumulative, 0.06153392791748047s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 122.01220345497131s cumulative, 0.026185989379882812s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_response in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 122.03736710548401s cumulative, 0.025163650512695312s individual

.
current test PASSED/SKIPPED -- test_bad_http_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 122.04899454116821s cumulative, 0.011627435684204102s individual

.
current test PASSED/SKIPPED -- test_client_disconnect_uncaught_error in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 122.0657525062561s cumulative, 0.016757965087890625s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 122.08122444152832s cumulative, 0.015471935272216797s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 122.10034203529358s cumulative, 0.01911759376525879s individual

.
current test PASSED/SKIPPED -- test_path_not_found in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 122.11927056312561s cumulative, 0.01892852783203125s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 122.14436149597168s cumulative, 0.025090932846069336s individual

.
current test PASSED/SKIPPED -- test_client_disconnect_early in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 122.16174817085266s cumulative, 0.017386674880981445s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_response in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 122.18005156517029s cumulative, 0.018303394317626953s individual

.
current test PASSED/SKIPPED -- test_subprotocol_bad_type in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 122.20036244392395s cumulative, 0.02031087875366211s individual

.
current test PASSED/SKIPPED -- test_bad_spec_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 122.21799874305725s cumulative, 0.01763629913330078s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 122.24581909179688s cumulative, 0.027820348739624023s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 122.27108526229858s cumulative, 0.025266170501708984s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_response in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 122.29392743110657s cumulative, 0.0228421688079834s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_response in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 122.33293628692627s cumulative, 0.03900885581970215s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 122.35962176322937s cumulative, 0.026685476303100586s individual

.
current test PASSED/SKIPPED -- test_client_disconnect_early in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 122.38441324234009s cumulative, 0.024791479110717773s individual

.
current test PASSED/SKIPPED -- test_bad_first_event in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 122.39545559883118s cumulative, 0.011042356491088867s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_middleware in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 122.41671466827393s cumulative, 0.021259069442749023s individual

.
current test PASSED/SKIPPED -- test_subprotocol_bad_type in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 122.43456172943115s cumulative, 0.017847061157226562s individual

.
current test PASSED/SKIPPED -- test_client_disconnect_uncaught_error in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 122.45373606681824s cumulative, 0.01917433738708496s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 122.47599053382874s cumulative, 0.022254467010498047s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_response in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 122.49754667282104s cumulative, 0.02155613899230957s individual

.
current test PASSED/SKIPPED -- test_accept_with_headers in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 122.51926350593567s cumulative, 0.021716833114624023s individual

.
current test PASSED/SKIPPED -- test_ws_http_error_or_status_middleware in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 122.5550606250763s cumulative, 0.035797119140625s individual


tests/asgi/test_hello_asgi.py .
current test PASSED/SKIPPED -- test_body in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_hello_asgi.py: 122.57980728149414s cumulative, 0.02474665641784668s individual

.
current test PASSED/SKIPPED -- test_filelike in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_hello_asgi.py: 122.59794354438782s cumulative, 0.018136262893676758s individual

.
current test PASSED/SKIPPED -- test_nongenfunc_error in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_hello_asgi.py: 122.61580491065979s cumulative, 0.017861366271972656s individual

.
current test PASSED/SKIPPED -- test_genfunc_error in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_hello_asgi.py: 122.64337635040283s cumulative, 0.027571439743041992s individual

.
current test PASSED/SKIPPED -- test_noncoroutine_required in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_hello_asgi.py: 122.65400981903076s cumulative, 0.010633468627929688s individual

.
current test PASSED/SKIPPED -- test_stream_chunked in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_hello_asgi.py: 122.67309379577637s cumulative, 0.01908397674560547s individual

.
current test PASSED/SKIPPED -- test_filelike_closing in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_hello_asgi.py: 122.70202302932739s cumulative, 0.02892923355102539s individual

.
current test PASSED/SKIPPED -- test_env_headers_list_of_tuples in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_hello_asgi.py: 122.71212553977966s cumulative, 0.010102510452270508s individual

.
current test PASSED/SKIPPED -- test_filelike_using_helper in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_hello_asgi.py: 122.73802375793457s cumulative, 0.025898218154907227s individual

.
current test PASSED/SKIPPED -- test_closing_stream in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_hello_asgi.py: 122.76302099227905s cumulative, 0.024997234344482422s individual

.
current test PASSED/SKIPPED -- test_closing_stream in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_hello_asgi.py: 122.78809022903442s cumulative, 0.025069236755371094s individual

.
current test PASSED/SKIPPED -- test_closing_stream in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_hello_asgi.py: 122.81607556343079s cumulative, 0.027985334396362305s individual

.
current test PASSED/SKIPPED -- test_status_not_set in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_hello_asgi.py: 122.83761501312256s cumulative, 0.02153944969177246s individual

.
current test PASSED/SKIPPED -- test_root_route in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_hello_asgi.py: 122.85974025726318s cumulative, 0.022125244140625s individual

.
current test PASSED/SKIPPED -- test_filelike_closing in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_hello_asgi.py: 122.88453102111816s cumulative, 0.02479076385498047s individual

.
current test PASSED/SKIPPED -- test_no_route in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_hello_asgi.py: 122.90638494491577s cumulative, 0.021853923797607422s individual

.
current test PASSED/SKIPPED -- test_coroutine_required in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_hello_asgi.py: 122.92704963684082s cumulative, 0.020664691925048828s individual

.
current test PASSED/SKIPPED -- test_no_body_on_head in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_hello_asgi.py: 122.95232129096985s cumulative, 0.02527165412902832s individual

.
current test PASSED/SKIPPED -- test_body in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_hello_asgi.py: 122.97797894477844s cumulative, 0.02565765380859375s individual

.
current test PASSED/SKIPPED -- test_closing_stream in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_hello_asgi.py: 123.00090265274048s cumulative, 0.022923707962036133s individual

.
current test PASSED/SKIPPED -- test_body in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_hello_asgi.py: 123.03209209442139s cumulative, 0.031189441680908203s individual

.
current test PASSED/SKIPPED -- test_stream_known_len in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_hello_asgi.py: 123.05631518363953s cumulative, 0.02422308921813965s individual


tests/test_httperror.py .
current test PASSED/SKIPPED -- test_custom_error_serializer_optional_representation in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 123.0913918018341s cumulative, 0.03507661819458008s individual

.
current test PASSED/SKIPPED -- test_invalid_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 123.11952471733093s cumulative, 0.028132915496826172s individual

.
current test PASSED/SKIPPED -- test_405_without_body_with_extra_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 123.25543212890625s cumulative, 0.13590741157531738s individual

.
current test PASSED/SKIPPED -- test_413 in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 123.30944514274597s cumulative, 0.05401301383972168s individual

.
current test PASSED/SKIPPED -- test_custom_error_serializer_optional_representation in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 123.3489077091217s cumulative, 0.03946256637573242s individual

.
current test PASSED/SKIPPED -- test_serialize_error_uses_media_handler in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 123.37708735466003s cumulative, 0.028179645538330078s individual

.
current test PASSED/SKIPPED -- test_serialize_error_uses_media_handler in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 123.410640001297s cumulative, 0.03355264663696289s individual

.
current test PASSED/SKIPPED -- test_414 in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 123.44065976142883s cumulative, 0.030019760131835938s individual

.
current test PASSED/SKIPPED -- test_missing_param in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 123.47169494628906s cumulative, 0.031035184860229492s individual

.
current test PASSED/SKIPPED -- test_client_does_not_accept_json_or_xml in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 123.49829483032227s cumulative, 0.026599884033203125s individual

.
current test PASSED/SKIPPED -- test_invalid_param in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 123.53633213043213s cumulative, 0.03803730010986328s individual

.
current test PASSED/SKIPPED -- test_MediaMalformedError in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 123.54738211631775s cumulative, 0.011049985885620117s individual

.
current test PASSED/SKIPPED -- test_401 in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 123.59917426109314s cumulative, 0.051792144775390625s individual

.
current test PASSED/SKIPPED -- test_forbidden in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 123.64285659790039s cumulative, 0.04368233680725098s individual

.
current test PASSED/SKIPPED -- test_404_without_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 123.68389654159546s cumulative, 0.04103994369506836s individual

.
current test PASSED/SKIPPED -- test_forbidden in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 123.71405935287476s cumulative, 0.030162811279296875s individual

.
current test PASSED/SKIPPED -- test_503_datetime_retry_after in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 123.75718283653259s cumulative, 0.043123483657836914s individual

.
current test PASSED/SKIPPED -- test_client_does_not_accept_anything in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 123.79505634307861s cumulative, 0.03787350654602051s individual

.
current test PASSED/SKIPPED -- test_401 in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 123.84055852890015s cumulative, 0.0455021858215332s individual

.
current test PASSED/SKIPPED -- test_411 in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 123.87590050697327s cumulative, 0.03534197807312012s individual

.
current test PASSED/SKIPPED -- test_title_default_message_if_none in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 123.90525770187378s cumulative, 0.029357194900512695s individual

.
current test PASSED/SKIPPED -- test_title_default_message_if_none in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 123.95162010192871s cumulative, 0.04636240005493164s individual

.
current test PASSED/SKIPPED -- test_414_with_custom_kwargs in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 123.99941086769104s cumulative, 0.0477907657623291s individual

.
current test PASSED/SKIPPED -- test_custom_serializer_no_representation in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 124.03912162780762s cumulative, 0.03971076011657715s individual

.
current test PASSED/SKIPPED -- test_title_default_message_if_none in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 124.07940316200256s cumulative, 0.04028153419494629s individual

.
current test PASSED/SKIPPED -- test_serialize_no_json_media_handler in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 124.12013459205627s cumulative, 0.04073143005371094s individual

.
current test PASSED/SKIPPED -- test_503_integer_retry_after in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 124.18264245986938s cumulative, 0.06250786781311035s individual

.
current test PASSED/SKIPPED -- test_414_with_title in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 124.21521973609924s cumulative, 0.0325772762298584s individual

.
current test PASSED/SKIPPED -- test_405_with_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 124.24323987960815s cumulative, 0.028020143508911133s individual

.
current test PASSED/SKIPPED -- test_custom_error_serializer_optional_representation in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 124.28071737289429s cumulative, 0.03747749328613281s individual

.
current test PASSED/SKIPPED -- test_forbidden in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 124.31701397895813s cumulative, 0.03629660606384277s individual

.
current test PASSED/SKIPPED -- test_413 in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 124.35360598564148s cumulative, 0.03659200668334961s individual

.
current test PASSED/SKIPPED -- test_414_with_description in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 124.39026141166687s cumulative, 0.036655426025390625s individual

.
current test PASSED/SKIPPED -- test_custom_error_serializer in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 124.45052790641785s cumulative, 0.06026649475097656s individual

.
current test PASSED/SKIPPED -- test_no_description_json in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 124.47897529602051s cumulative, 0.028447389602661133s individual

.
current test PASSED/SKIPPED -- test_title_default_message_if_none in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 124.51774525642395s cumulative, 0.03876996040344238s individual

.
current test PASSED/SKIPPED -- test_404_with_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 124.55672264099121s cumulative, 0.03897738456726074s individual

.
current test PASSED/SKIPPED -- test_missing_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 124.60202836990356s cumulative, 0.045305728912353516s individual

.
current test PASSED/SKIPPED -- test_title_default_message_if_none in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 124.6297562122345s cumulative, 0.027727842330932617s individual

.
current test PASSED/SKIPPED -- test_429_no_retry_after in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 124.6531765460968s cumulative, 0.023420333862304688s individual

.
current test PASSED/SKIPPED -- test_title_default_message_if_none in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 124.69201111793518s cumulative, 0.038834571838378906s individual

.
current test PASSED/SKIPPED -- test_429 in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 124.73776865005493s cumulative, 0.04575753211975098s individual

.
current test PASSED/SKIPPED -- test_invalid_param in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 124.77767872810364s cumulative, 0.039910078048706055s individual

.
current test PASSED/SKIPPED -- test_temporary_413_datetime_retry_after in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 124.8220579624176s cumulative, 0.044379234313964844s individual

.
current test PASSED/SKIPPED -- test_503_integer_retry_after in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 124.86581778526306s cumulative, 0.043759822845458984s individual

.
current test PASSED/SKIPPED -- test_405_with_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 124.92806100845337s cumulative, 0.06224322319030762s individual

.
current test PASSED/SKIPPED -- test_title_default_message_if_none in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 124.97278141975403s cumulative, 0.04472041130065918s individual

.
current test PASSED/SKIPPED -- test_414 in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 125.00831198692322s cumulative, 0.03553056716918945s individual

.
current test PASSED/SKIPPED -- test_serialize_no_json_media_handler in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 125.06319642066956s cumulative, 0.05488443374633789s individual

.
current test PASSED/SKIPPED -- test_no_description_xml in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 125.121102809906s cumulative, 0.057906389236450195s individual

.
current test PASSED/SKIPPED -- test_429 in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 125.19954657554626s cumulative, 0.07844376564025879s individual

.
current test PASSED/SKIPPED -- test_base_class in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 125.25344395637512s cumulative, 0.05389738082885742s individual

.
current test PASSED/SKIPPED -- test_missing_param in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 125.30237483978271s cumulative, 0.04893088340759277s individual

.
current test PASSED/SKIPPED -- test_temporary_413_datetime_retry_after in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 125.35553026199341s cumulative, 0.05315542221069336s individual

.
current test PASSED/SKIPPED -- test_429_datetime in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 125.39613890647888s cumulative, 0.04060864448547363s individual

.
current test PASSED/SKIPPED -- test_title_default_message_if_none in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 125.44723558425903s cumulative, 0.05109667778015137s individual

.
current test PASSED/SKIPPED -- test_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 125.46435236930847s cumulative, 0.017116785049438477s individual

.
current test PASSED/SKIPPED -- test_custom_error_serializer_optional_representation in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 125.5073037147522s cumulative, 0.042951345443725586s individual

.
current test PASSED/SKIPPED -- test_forbidden in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 125.55825328826904s cumulative, 0.0509495735168457s individual

.
current test PASSED/SKIPPED -- test_client_does_not_accept_anything in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 125.59880423545837s cumulative, 0.040550947189331055s individual

.
current test PASSED/SKIPPED -- test_title_default_message_if_none in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 125.64067435264587s cumulative, 0.0418701171875s individual

.
current test PASSED/SKIPPED -- test_429_no_retry_after in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 125.69973587989807s cumulative, 0.059061527252197266s individual

.
current test PASSED/SKIPPED -- test_epic_fail_json in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 125.75330853462219s cumulative, 0.053572654724121094s individual

.
current test PASSED/SKIPPED -- test_404_with_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 125.79195713996887s cumulative, 0.03864860534667969s individual

.
current test PASSED/SKIPPED -- test_temporary_413_integer_retry_after in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 125.83480644226074s cumulative, 0.04284930229187012s individual

.
current test PASSED/SKIPPED -- test_404_without_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 125.87258553504944s cumulative, 0.03777909278869629s individual

.
current test PASSED/SKIPPED -- test_base_class in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 125.9282603263855s cumulative, 0.05567479133605957s individual

.
current test PASSED/SKIPPED -- test_epic_fail_xml in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 125.99398112297058s cumulative, 0.06572079658508301s individual

.
current test PASSED/SKIPPED -- test_410_with_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 126.05157732963562s cumulative, 0.05759620666503906s individual

.
current test PASSED/SKIPPED -- test_epic_fail_xml in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 126.10141491889954s cumulative, 0.049837589263916016s individual

.
current test PASSED/SKIPPED -- test_misc in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 126.29748439788818s cumulative, 0.19606947898864746s individual

.
current test PASSED/SKIPPED -- test_custom_error_serializer_optional_representation in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 126.47840619087219s cumulative, 0.1809217929840088s individual

.
current test PASSED/SKIPPED -- test_410_without_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 126.57288146018982s cumulative, 0.09447526931762695s individual

.
current test PASSED/SKIPPED -- test_503_datetime_retry_after in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 126.64811491966248s cumulative, 0.07523345947265625s individual

.
current test PASSED/SKIPPED -- test_unicode_xml in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 126.7065806388855s cumulative, 0.05846571922302246s individual

.
current test PASSED/SKIPPED -- test_custom_error_serializer in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 126.76138949394226s cumulative, 0.054808855056762695s individual

.
current test PASSED/SKIPPED -- test_414_with_custom_kwargs in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 126.80505561828613s cumulative, 0.04366612434387207s individual

.
current test PASSED/SKIPPED -- test_405_without_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 130.59904503822327s cumulative, 3.793989419937134s individual

.
current test PASSED/SKIPPED -- test_epic_fail_xml in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 130.64940428733826s cumulative, 0.050359249114990234s individual

.
current test PASSED/SKIPPED -- test_title_default_message_if_none in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 130.69952940940857s cumulative, 0.0501251220703125s individual

.
current test PASSED/SKIPPED -- test_to_json_dumps in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 130.71669125556946s cumulative, 0.017161846160888672s individual

.
current test PASSED/SKIPPED -- test_unicode_json in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 130.7640552520752s cumulative, 0.047363996505737305s individual

.
current test PASSED/SKIPPED -- test_429_datetime in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 130.79548978805542s cumulative, 0.03143453598022461s individual

.
current test PASSED/SKIPPED -- test_epic_fail_xml in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 130.83033061027527s cumulative, 0.03484082221984863s individual

.
current test PASSED/SKIPPED -- test_forbidden in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 130.85572242736816s cumulative, 0.025391817092895508s individual

.
current test PASSED/SKIPPED -- test_410_without_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 130.89718461036682s cumulative, 0.04146218299865723s individual

.
current test PASSED/SKIPPED -- test_405_without_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 130.91860008239746s cumulative, 0.02141547203063965s individual

.
current test PASSED/SKIPPED -- test_414_with_description in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 130.95136094093323s cumulative, 0.0327608585357666s individual

.
current test PASSED/SKIPPED -- test_epic_fail_xml in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 130.97732257843018s cumulative, 0.025961637496948242s individual

.
current test PASSED/SKIPPED -- test_epic_fail_xml in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 131.006982088089s cumulative, 0.029659509658813477s individual

.
current test PASSED/SKIPPED -- test_405_without_body_with_extra_headers_double_check in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 131.03029561042786s cumulative, 0.023313522338867188s individual

.
current test PASSED/SKIPPED -- test_414_with_title in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 131.07779574394226s cumulative, 0.0475001335144043s individual

.
current test PASSED/SKIPPED -- test_epic_fail_json in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 131.11109614372253s cumulative, 0.03330039978027344s individual

.
current test PASSED/SKIPPED -- test_410_with_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 131.15214490890503s cumulative, 0.04104876518249512s individual

.
current test PASSED/SKIPPED -- test_client_does_not_accept_json_or_xml in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 131.18728280067444s cumulative, 0.03513789176940918s individual

.
current test PASSED/SKIPPED -- test_custom_error_serializer_optional_representation in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 131.22423720359802s cumulative, 0.036954402923583984s individual

.
current test PASSED/SKIPPED -- test_missing_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 131.26060819625854s cumulative, 0.03637099266052246s individual

.
current test PASSED/SKIPPED -- test_416 in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 131.30623269081116s cumulative, 0.045624494552612305s individual

.
current test PASSED/SKIPPED -- test_405_without_body_with_extra_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 131.33557748794556s cumulative, 0.029344797134399414s individual

.
current test PASSED/SKIPPED -- test_epic_fail_xml in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 131.36403369903564s cumulative, 0.02845621109008789s individual

.
current test PASSED/SKIPPED -- test_forbidden in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 131.3952567577362s cumulative, 0.031223058700561523s individual

.
current test PASSED/SKIPPED -- test_temporary_413_integer_retry_after in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 131.42973732948303s cumulative, 0.03448057174682617s individual

.
current test PASSED/SKIPPED -- test_custom_error_serializer_optional_representation in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 131.47013068199158s cumulative, 0.04039335250854492s individual

.
current test PASSED/SKIPPED -- test_epic_fail_xml in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 131.5035581588745s cumulative, 0.03342747688293457s individual

.
current test PASSED/SKIPPED -- test_unicode_json in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 131.53352165222168s cumulative, 0.02996349334716797s individual

.
current test PASSED/SKIPPED -- test_custom_error_serializer_optional_representation in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 131.58363556861877s cumulative, 0.05011391639709473s individual

.
current test PASSED/SKIPPED -- test_custom_serializer_no_representation in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 131.63061380386353s cumulative, 0.04697823524475098s individual

.
current test PASSED/SKIPPED -- test_no_description_json in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 131.66644144058228s cumulative, 0.03582763671875s individual

.
current test PASSED/SKIPPED -- test_invalid_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 131.7104470729828s cumulative, 0.044005632400512695s individual

.
current test PASSED/SKIPPED -- test_unicode_xml in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 131.76668167114258s cumulative, 0.05623459815979004s individual

.
current test PASSED/SKIPPED -- test_misc in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 131.8591492176056s cumulative, 0.0924675464630127s individual

.
current test PASSED/SKIPPED -- test_411 in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 131.90286588668823s cumulative, 0.0437166690826416s individual

.
current test PASSED/SKIPPED -- test_title_default_message_if_none in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 131.92507767677307s cumulative, 0.022211790084838867s individual

.
current test PASSED/SKIPPED -- test_416 in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 131.94605255126953s cumulative, 0.02097487449645996s individual

.
current test PASSED/SKIPPED -- test_no_description_xml in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 131.9577558040619s cumulative, 0.011703252792358398s individual

.
current test PASSED/SKIPPED -- test_405_without_body_with_extra_headers_double_check in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 131.97519540786743s cumulative, 0.017439603805541992s individual

.
current test PASSED/SKIPPED -- test_title_default_message_if_none in /home/kaiyaok2/PythonProjects/falcon/tests/test_httperror.py: 131.99314403533936s cumulative, 0.017948627471923828s individual


tests/test_validators.py .
current test PASSED/SKIPPED -- test_req_schema_validation_failure in /home/kaiyaok2/PythonProjects/falcon/tests/test_validators.py: 132.00587368011475s cumulative, 0.012729644775390625s individual

.
current test PASSED/SKIPPED -- test_resp_schema_validation_success in /home/kaiyaok2/PythonProjects/falcon/tests/test_validators.py: 132.01350045204163s cumulative, 0.007626771926879883s individual

.
current test PASSED/SKIPPED -- test_resp_schema_validation_failure in /home/kaiyaok2/PythonProjects/falcon/tests/test_validators.py: 132.02073001861572s cumulative, 0.00722956657409668s individual

.
current test PASSED/SKIPPED -- test_both_schemas_validation_failure in /home/kaiyaok2/PythonProjects/falcon/tests/test_validators.py: 132.04273343086243s cumulative, 0.0220034122467041s individual

.
current test PASSED/SKIPPED -- test_req_schema_validation_failure in /home/kaiyaok2/PythonProjects/falcon/tests/test_validators.py: 132.06348419189453s cumulative, 0.020750761032104492s individual

.
current test PASSED/SKIPPED -- test_both_schemas_validation_success in /home/kaiyaok2/PythonProjects/falcon/tests/test_validators.py: 132.10137033462524s cumulative, 0.03788614273071289s individual

.
current test PASSED/SKIPPED -- test_req_schema_validation_failure in /home/kaiyaok2/PythonProjects/falcon/tests/test_validators.py: 132.11816668510437s cumulative, 0.016796350479125977s individual

.
current test PASSED/SKIPPED -- test_resp_schema_validation_success in /home/kaiyaok2/PythonProjects/falcon/tests/test_validators.py: 132.12981843948364s cumulative, 0.011651754379272461s individual

.
current test PASSED/SKIPPED -- test_both_schemas_validation_failure in /home/kaiyaok2/PythonProjects/falcon/tests/test_validators.py: 132.17453742027283s cumulative, 0.04471898078918457s individual

.
current test PASSED/SKIPPED -- test_both_schemas_validation_success in /home/kaiyaok2/PythonProjects/falcon/tests/test_validators.py: 132.22346448898315s cumulative, 0.04892706871032715s individual

.
current test PASSED/SKIPPED -- test_req_schema_validation_failure in /home/kaiyaok2/PythonProjects/falcon/tests/test_validators.py: 132.24096536636353s cumulative, 0.017500877380371094s individual

.
current test PASSED/SKIPPED -- test_req_schema_validation_success in /home/kaiyaok2/PythonProjects/falcon/tests/test_validators.py: 132.2521207332611s cumulative, 0.011155366897583008s individual

.
current test PASSED/SKIPPED -- test_resp_schema_validation_failure in /home/kaiyaok2/PythonProjects/falcon/tests/test_validators.py: 132.26456022262573s cumulative, 0.012439489364624023s individual

.
current test PASSED/SKIPPED -- test_req_schema_validation_success in /home/kaiyaok2/PythonProjects/falcon/tests/test_validators.py: 132.28122115135193s cumulative, 0.01666092872619629s individual


tests/asgi/test_buffered_reader.py .
current test PASSED/SKIPPED -- test_small_reads_with_delimiter in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 133.96971082687378s cumulative, 1.6884896755218506s individual


tests/test_middleware.py .
current test PASSED/SKIPPED -- test_process_resource_cached in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 134.04563784599304s cumulative, 0.0759270191192627s individual

.
current test PASSED/SKIPPED -- test_process_request_not_cached in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 134.07887935638428s cumulative, 0.03324151039123535s individual

.
current test PASSED/SKIPPED -- test_process_resource_cached in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 134.09757947921753s cumulative, 0.018700122833251953s individual

.
current test PASSED/SKIPPED -- test_process_request_cached in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 134.115802526474s cumulative, 0.018223047256469727s individual

.
current test PASSED/SKIPPED -- test_process_request_cached in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 134.13379883766174s cumulative, 0.01799631118774414s individual

.
current test PASSED/SKIPPED -- test_dont_need_params_in_signature in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 134.1450834274292s cumulative, 0.011284589767456055s individual

.
current test PASSED/SKIPPED -- test_api_initialization_with_cors_enabled_and_middleware_param in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 134.16685247421265s cumulative, 0.021769046783447266s individual

.
current test PASSED/SKIPPED -- test_api_initialization_with_cors_enabled_and_middleware_param in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 134.18671417236328s cumulative, 0.019861698150634766s individual

.
current test PASSED/SKIPPED -- test_api_initialization_with_cors_enabled_and_middleware_param in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 134.19823694229126s cumulative, 0.011522769927978516s individual

.
current test PASSED/SKIPPED -- test_api_initialization_with_cors_enabled_and_middleware_param in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 134.20761466026306s cumulative, 0.009377717971801758s individual

.
current test PASSED/SKIPPED -- test_can_access_resource_params in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 134.22053408622742s cumulative, 0.012919425964355469s individual

.
current test PASSED/SKIPPED -- test_can_access_resource_params in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 134.2384750843048s cumulative, 0.017940998077392578s individual

.
current test PASSED/SKIPPED -- test_error_composed_before_resp_middleware_called in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 134.25797414779663s cumulative, 0.01949906349182129s individual

.
current test PASSED/SKIPPED -- test_http_status_raised_from_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 134.2754828929901s cumulative, 0.017508745193481445s individual

.
current test PASSED/SKIPPED -- test_inner_mw_throw_exception_while_processing_resp in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 134.294451713562s cumulative, 0.018968820571899414s individual

.
current test PASSED/SKIPPED -- test_order_independent_mw_executed_when_exception_in_resp in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 134.3103621006012s cumulative, 0.01591038703918457s individual

.
current test PASSED/SKIPPED -- test_outer_mw_with_ex_handler_throw_exception in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 134.32948637008667s cumulative, 0.019124269485473633s individual

.
current test PASSED/SKIPPED -- test_independent_middleware_execution_order in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 134.34561395645142s cumulative, 0.016127586364746094s individual

.
current test PASSED/SKIPPED -- test_order_independent_mw_executed_when_exception_in_req in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 134.3594934940338s cumulative, 0.013879537582397461s individual

.
current test PASSED/SKIPPED -- test_order_mw_executed_when_exception_in_rsrc in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 134.36977100372314s cumulative, 0.010277509689331055s individual

.
current test PASSED/SKIPPED -- test_middleware_execution_order in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 134.38198399543762s cumulative, 0.012212991714477539s individual

.
current test PASSED/SKIPPED -- test_order_independent_mw_executed_when_exception_in_rsrc in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 134.39228630065918s cumulative, 0.010302305221557617s individual

.
current test PASSED/SKIPPED -- test_multiple_response_mw_throw_exception in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 134.41042757034302s cumulative, 0.01814126968383789s individual

.
current test PASSED/SKIPPED -- test_generate_trans_id_and_time_with_request in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 134.42932891845703s cumulative, 0.018901348114013672s individual

.
current test PASSED/SKIPPED -- test_generate_trans_id_and_time_with_request in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 134.44610714912415s cumulative, 0.016778230667114258s individual

.
current test PASSED/SKIPPED -- test_order_mw_executed_when_exception_in_req in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 134.46088647842407s cumulative, 0.014779329299926758s individual

.
current test PASSED/SKIPPED -- test_legacy_middleware_called_with_correct_args in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 134.4754376411438s cumulative, 0.014551162719726562s individual

.
current test PASSED/SKIPPED -- test_inner_mw_throw_exception in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 134.50023198127747s cumulative, 0.024794340133666992s individual

.
current test PASSED/SKIPPED -- test_order_mw_executed_when_exception_in_resp in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 134.526221036911s cumulative, 0.025989055633544922s individual

.
current test PASSED/SKIPPED -- test_inner_mw_with_ex_handler_throw_exception in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 134.54405093193054s cumulative, 0.01782989501953125s individual

.
current test PASSED/SKIPPED -- test_generate_trans_id_with_request in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 134.5634548664093s cumulative, 0.019403934478759766s individual

s.
current test PASSED/SKIPPED -- test_log_get_request in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 134.58803629875183s cumulative, 0.024581432342529297s individual

.
current test PASSED/SKIPPED -- test_log_get_request in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 134.6098027229309s cumulative, 0.02176642417907715s individual

.
current test PASSED/SKIPPED -- test_response_middleware_raises_exception in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 134.63483572006226s cumulative, 0.025032997131347656s individual

.
current test PASSED/SKIPPED -- test_skip_process_resource in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 134.65285754203796s cumulative, 0.018021821975708008s individual

.
current test PASSED/SKIPPED -- test_base_path_is_removed_before_routing in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 134.67169284820557s cumulative, 0.01883530616760254s individual


tests/asgi/test_boundedstream_asgi.py .
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 134.68651008605957s cumulative, 0.014817237854003906s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 134.69795989990234s cumulative, 0.011449813842773438s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 134.70748472213745s cumulative, 0.009524822235107422s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 134.7222249507904s cumulative, 0.014740228652954102s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 134.73491430282593s cumulative, 0.012689352035522461s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 134.74642610549927s cumulative, 0.011511802673339844s individual

.
current test PASSED/SKIPPED -- test_exhaust in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 134.75760650634766s cumulative, 0.011180400848388672s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 134.77271699905396s cumulative, 0.015110492706298828s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 134.78384566307068s cumulative, 0.011128664016723633s individual

.
current test PASSED/SKIPPED -- test_read_all in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 134.79411244392395s cumulative, 0.010266780853271484s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 134.80533266067505s cumulative, 0.011220216751098633s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 134.81638360023499s cumulative, 0.011050939559936523s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 134.82727599143982s cumulative, 0.010892391204833984s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 134.83990216255188s cumulative, 0.012626171112060547s individual

.
current test PASSED/SKIPPED -- test_read_all in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 134.8548502922058s cumulative, 0.014948129653930664s individual

.
current test PASSED/SKIPPED -- test_exhaust_with_disconnect in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 134.8623604774475s cumulative, 0.007510185241699219s individual

.
current test PASSED/SKIPPED -- test_read_all in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 134.87534070014954s cumulative, 0.012980222702026367s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 134.88345098495483s cumulative, 0.008110284805297852s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 134.90678334236145s cumulative, 0.02333235740661621s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 134.92343592643738s cumulative, 0.016652584075927734s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 134.94005799293518s cumulative, 0.016622066497802734s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 134.95168113708496s cumulative, 0.011623144149780273s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 134.96973943710327s cumulative, 0.018058300018310547s individual

.
current test PASSED/SKIPPED -- test_read_all in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 134.99118399620056s cumulative, 0.02144455909729004s individual

.
current test PASSED/SKIPPED -- test_read_all in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 135.010968208313s cumulative, 0.019784212112426758s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 135.0348925590515s cumulative, 0.02392435073852539s individual

.
current test PASSED/SKIPPED -- test_read_all in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 135.05536603927612s cumulative, 0.020473480224609375s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 135.08192563056946s cumulative, 0.02655959129333496s individual

.
current test PASSED/SKIPPED -- test_read_all in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 135.10842871665955s cumulative, 0.02650308609008789s individual

.
current test PASSED/SKIPPED -- test_read_all in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 135.12708473205566s cumulative, 0.018656015396118164s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 135.14426136016846s cumulative, 0.01717662811279297s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 135.16220784187317s cumulative, 0.017946481704711914s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 135.18145895004272s cumulative, 0.019251108169555664s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 135.20223546028137s cumulative, 0.02077651023864746s individual

.
current test PASSED/SKIPPED -- test_iteration_already_started in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 135.22729015350342s cumulative, 0.0250546932220459s individual

.
current test PASSED/SKIPPED -- test_iterate_streaming_request in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 135.23982667922974s cumulative, 0.01253652572631836s individual

.
current test PASSED/SKIPPED -- test_read_all in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 135.26494479179382s cumulative, 0.025118112564086914s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 135.28308653831482s cumulative, 0.018141746520996094s individual

.
current test PASSED/SKIPPED -- test_filelike in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 135.2955083847046s cumulative, 0.012421846389770508s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 135.3250150680542s cumulative, 0.029506683349609375s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 135.3412799835205s cumulative, 0.016264915466308594s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 135.35817527770996s cumulative, 0.016895294189453125s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 135.3719232082367s cumulative, 0.013747930526733398s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 135.38969087600708s cumulative, 0.017767667770385742s individual

.
current test PASSED/SKIPPED -- test_read_all in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 135.41144680976868s cumulative, 0.02175593376159668s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 135.43821811676025s cumulative, 0.02677130699157715s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 135.45734333992004s cumulative, 0.01912522315979004s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 135.47539591789246s cumulative, 0.01805257797241211s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 135.50911450386047s cumulative, 0.03371858596801758s individual

.
current test PASSED/SKIPPED -- test_read_all in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 135.52487993240356s cumulative, 0.01576542854309082s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 135.54290962219238s cumulative, 0.01802968978881836s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 135.5754623413086s cumulative, 0.03255271911621094s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 135.59675478935242s cumulative, 0.021292448043823242s individual

.
current test PASSED/SKIPPED -- test_read_all in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 135.61904644966125s cumulative, 0.02229166030883789s individual

.
current test PASSED/SKIPPED -- test_read_all in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 135.641042470932s cumulative, 0.021996021270751953s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 135.66427612304688s cumulative, 0.023233652114868164s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 135.684636592865s cumulative, 0.020360469818115234s individual

.
current test PASSED/SKIPPED -- test_read_all in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 135.70046043395996s cumulative, 0.015823841094970703s individual

.
current test PASSED/SKIPPED -- test_read_all in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 135.71710681915283s cumulative, 0.016646385192871094s individual

.
current test PASSED/SKIPPED -- test_read_all in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 135.73412227630615s cumulative, 0.017015457153320312s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 135.7511818408966s cumulative, 0.0170595645904541s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 135.77182388305664s cumulative, 0.02064204216003418s individual

.
current test PASSED/SKIPPED -- test_read_all in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 135.7947437763214s cumulative, 0.022919893264770508s individual

.
current test PASSED/SKIPPED -- test_read_chunks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 135.8158950805664s cumulative, 0.021151304244995117s individual

.
current test PASSED/SKIPPED -- test_read_all in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 135.83191561698914s cumulative, 0.016020536422729492s individual


tests/test_buffered_reader.py .
current test PASSED/SKIPPED -- test_read_from_buffer in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 135.84347677230835s cumulative, 0.011561155319213867s individual

.
current test PASSED/SKIPPED -- test_read_until_with_size in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 135.85495400428772s cumulative, 0.011477231979370117s individual

.
current test PASSED/SKIPPED -- test_read_until_with_size in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 135.86786341667175s cumulative, 0.012909412384033203s individual

.
current test PASSED/SKIPPED -- test_read_from_buffer in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 135.87846159934998s cumulative, 0.010598182678222656s individual

.
current test PASSED/SKIPPED -- test_read_until_with_size in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 135.8913323879242s cumulative, 0.01287078857421875s individual

.
current test PASSED/SKIPPED -- test_read_until_from_buffer in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 135.91064858436584s cumulative, 0.01931619644165039s individual

.
current test PASSED/SKIPPED -- test_read_until_shared_boundary in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 135.9213478565216s cumulative, 0.010699272155761719s individual

.
current test PASSED/SKIPPED -- test_read_until_shared_boundary in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 135.93061566352844s cumulative, 0.009267807006835938s individual

.
current test PASSED/SKIPPED -- test_readline in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 135.94189071655273s cumulative, 0.011275053024291992s individual

.
current test PASSED/SKIPPED -- test_peek_eof in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 135.95357584953308s cumulative, 0.01168513298034668s individual

.
current test PASSED/SKIPPED -- test_read_until_missing_delimiter in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 135.96625566482544s cumulative, 0.012679815292358398s individual

.
current test PASSED/SKIPPED -- test_consume_delimiter in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 135.97795295715332s cumulative, 0.01169729232788086s individual

.
current test PASSED/SKIPPED -- test_read_until_shared_boundary in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 135.98697543144226s cumulative, 0.00902247428894043s individual

.
current test PASSED/SKIPPED -- test_readlines in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 135.998765707016s cumulative, 0.011790275573730469s individual

.
current test PASSED/SKIPPED -- test_read_until_shared_boundary in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 136.00756359100342s cumulative, 0.008797883987426758s individual

.
current test PASSED/SKIPPED -- test_read_until_with_size in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 136.01811242103577s cumulative, 0.010548830032348633s individual

.
current test PASSED/SKIPPED -- test_read_until_with_size in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 136.02845740318298s cumulative, 0.010344982147216797s individual

.
current test PASSED/SKIPPED -- test_read_from_buffer in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 136.03748154640198s cumulative, 0.00902414321899414s individual

.
current test PASSED/SKIPPED -- test_readlines_hint in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 136.04849123954773s cumulative, 0.011009693145751953s individual

.
current test PASSED/SKIPPED -- test_read_until_from_buffer in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 136.05708408355713s cumulative, 0.008592844009399414s individual

.
current test PASSED/SKIPPED -- test_read_until_shared_boundary in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 136.06586527824402s cumulative, 0.008781194686889648s individual

.
current test PASSED/SKIPPED -- test_exhaust in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 136.07355165481567s cumulative, 0.0076863765716552734s individual

.
current test PASSED/SKIPPED -- test_read_until_from_buffer in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 136.08475637435913s cumulative, 0.011204719543457031s individual

.
current test PASSED/SKIPPED -- test_read_until_with_size in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 136.0945544242859s cumulative, 0.009798049926757812s individual

.
current test PASSED/SKIPPED -- test_read_until_with_size in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 136.1097435951233s cumulative, 0.015189170837402344s individual

.
current test PASSED/SKIPPED -- test_read_until_with_size in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 136.11882209777832s cumulative, 0.009078502655029297s individual

.
current test PASSED/SKIPPED -- test_readlines_hint in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 136.12578988075256s cumulative, 0.006967782974243164s individual

.
current test PASSED/SKIPPED -- test_read_until_from_buffer in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 136.13598537445068s cumulative, 0.010195493698120117s individual

.
current test PASSED/SKIPPED -- test_read_until_shared_boundary in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 136.14812684059143s cumulative, 0.01214146614074707s individual

.
current test PASSED/SKIPPED -- test_read_from_buffer in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 136.16043710708618s cumulative, 0.012310266494750977s individual

.
current test PASSED/SKIPPED -- test_read_until_with_size in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 136.17065143585205s cumulative, 0.01021432876586914s individual

.
current test PASSED/SKIPPED -- test_read_until_from_buffer in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 136.1823046207428s cumulative, 0.01165318489074707s individual

.
current test PASSED/SKIPPED -- test_read_from_buffer in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 136.19057512283325s cumulative, 0.008270502090454102s individual

.
current test PASSED/SKIPPED -- test_peek in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 136.19773173332214s cumulative, 0.0071566104888916016s individual

.
current test PASSED/SKIPPED -- test_read_until_from_buffer in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 136.20236325263977s cumulative, 0.004631519317626953s individual

.
current test PASSED/SKIPPED -- test_read_until_delimiter_size_check in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 136.20625066757202s cumulative, 0.0038874149322509766s individual

.
current test PASSED/SKIPPED -- test_read_until_with_size in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 136.2105417251587s cumulative, 0.004291057586669922s individual

.
current test PASSED/SKIPPED -- test_read_until_shared_boundary in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 136.21402788162231s cumulative, 0.003486156463623047s individual

.
current test PASSED/SKIPPED -- test_readline_with_size in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 136.21757316589355s cumulative, 0.0035452842712402344s individual

.
current test PASSED/SKIPPED -- test_read_until_from_buffer in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 136.22166442871094s cumulative, 0.0040912628173828125s individual

.
current test PASSED/SKIPPED -- test_read_from_buffer in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 136.22554636001587s cumulative, 0.0038819313049316406s individual

.
current test PASSED/SKIPPED -- test_read_until_from_buffer in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 136.2350251674652s cumulative, 0.00947880744934082s individual

.
current test PASSED/SKIPPED -- test_read_until_from_buffer in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 136.24186396598816s cumulative, 0.006838798522949219s individual

.
current test PASSED/SKIPPED -- test_read_until_shared_boundary in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 136.24922585487366s cumulative, 0.007361888885498047s individual

.
current test PASSED/SKIPPED -- test_read_from_buffer in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 136.25559377670288s cumulative, 0.006367921829223633s individual

.
current test PASSED/SKIPPED -- test_read_until_from_buffer in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 136.26131963729858s cumulative, 0.005725860595703125s individual

.
current test PASSED/SKIPPED -- test_read_until_with_size in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 136.26748824119568s cumulative, 0.0061686038970947266s individual

.
current test PASSED/SKIPPED -- test_read_until_with_size in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 136.27725625038147s cumulative, 0.009768009185791016s individual

.
current test PASSED/SKIPPED -- test_read_until_from_buffer in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 136.28262495994568s cumulative, 0.005368709564208984s individual

.
current test PASSED/SKIPPED -- test_readlines_hint in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 136.29004645347595s cumulative, 0.0074214935302734375s individual

.
current test PASSED/SKIPPED -- test_read_until_shared_boundary in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 136.2964904308319s cumulative, 0.006443977355957031s individual

.
current test PASSED/SKIPPED -- test_readlines_hint in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 136.30747032165527s cumulative, 0.010979890823364258s individual

.
current test PASSED/SKIPPED -- test_read_from_buffer in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 136.3143389225006s cumulative, 0.006868600845336914s individual

.
current test PASSED/SKIPPED -- test_read_until_shared_boundary in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 136.32423639297485s cumulative, 0.009897470474243164s individual

.
current test PASSED/SKIPPED -- test_readlines_hint in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 136.33633828163147s cumulative, 0.012101888656616211s individual

.
current test PASSED/SKIPPED -- test_read_until_shared_boundary in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 136.34984493255615s cumulative, 0.013506650924682617s individual

.
current test PASSED/SKIPPED -- test_read_from_buffer in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 136.36200380325317s cumulative, 0.012158870697021484s individual

.
current test PASSED/SKIPPED -- test_bounded_read in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 136.37303566932678s cumulative, 0.011031866073608398s individual

.
current test PASSED/SKIPPED -- test_read_until_shared_boundary in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 136.38496041297913s cumulative, 0.01192474365234375s individual

.
current test PASSED/SKIPPED -- test_read_from_buffer in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 136.40103268623352s cumulative, 0.01607227325439453s individual

.
current test PASSED/SKIPPED -- test_read_until_shared_boundary in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 136.418203830719s cumulative, 0.017171144485473633s individual

.
current test PASSED/SKIPPED -- test_read_until_shared_boundary in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 136.43488669395447s cumulative, 0.016682863235473633s individual

.
current test PASSED/SKIPPED -- test_read_until_shared_boundary in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 136.44886183738708s cumulative, 0.013975143432617188s individual

.
current test PASSED/SKIPPED -- test_read_until_from_buffer in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 136.4712426662445s cumulative, 0.022380828857421875s individual

.
current test PASSED/SKIPPED -- test_read_from_buffer in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 136.49576091766357s cumulative, 0.024518251419067383s individual

.
current test PASSED/SKIPPED -- test_read_until_shared_boundary in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 136.51814031600952s cumulative, 0.022379398345947266s individual

.
current test PASSED/SKIPPED -- test_read_from_buffer in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 136.54435467720032s cumulative, 0.0262143611907959s individual

.
current test PASSED/SKIPPED -- test_pipe in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 136.56406140327454s cumulative, 0.01970672607421875s individual

.
current test PASSED/SKIPPED -- test_duck_compatibility_with_io_base in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 136.58394384384155s cumulative, 0.0198824405670166s individual

.
current test PASSED/SKIPPED -- test_read_from_buffer in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 136.60476541519165s cumulative, 0.020821571350097656s individual

.
current test PASSED/SKIPPED -- test_read_until_from_buffer in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 136.6276662349701s cumulative, 0.022900819778442383s individual

.
current test PASSED/SKIPPED -- test_read_until_with_size in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 136.65343761444092s cumulative, 0.025771379470825195s individual

.
current test PASSED/SKIPPED -- test_read_until_with_size in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 136.67454266548157s cumulative, 0.021105051040649414s individual

.
current test PASSED/SKIPPED -- test_read_until_shared_boundary in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 136.68489003181458s cumulative, 0.010347366333007812s individual

.
current test PASSED/SKIPPED -- test_read_from_buffer in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 136.6950991153717s cumulative, 0.010209083557128906s individual


tests/asgi/test_lifespan_handlers.py .
current test PASSED/SKIPPED -- test_multiple_handlers in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_lifespan_handlers.py: 136.7202377319336s cumulative, 0.02513861656188965s individual

.
current test PASSED/SKIPPED -- test_startup_raises in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_lifespan_handlers.py: 136.74447751045227s cumulative, 0.024239778518676758s individual

.
current test PASSED/SKIPPED -- test_shutdown_raises in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_lifespan_handlers.py: 136.77170372009277s cumulative, 0.02722620964050293s individual

.
current test PASSED/SKIPPED -- test_startup_only in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_lifespan_handlers.py: 136.79499435424805s cumulative, 0.023290634155273438s individual

.
current test PASSED/SKIPPED -- test_at_least_one_event_method_required in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_lifespan_handlers.py: 136.8113875389099s cumulative, 0.016393184661865234s individual

.
current test PASSED/SKIPPED -- test_asgi_conductor_raised_error_skips_shutdown in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_lifespan_handlers.py: 136.82930898666382s cumulative, 0.01792144775390625s individual

.
current test PASSED/SKIPPED -- test_shutdown_only in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_lifespan_handlers.py: 136.84964179992676s cumulative, 0.020332813262939453s individual


tests/test_uri_converters.py .
current test PASSED/SKIPPED -- test_uuid_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 136.86108255386353s cumulative, 0.011440753936767578s individual

.
current test PASSED/SKIPPED -- test_uuid_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 136.87649536132812s cumulative, 0.01541280746459961s individual

.
current test PASSED/SKIPPED -- test_uuid_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 136.89194464683533s cumulative, 0.015449285507202148s individual

.
current test PASSED/SKIPPED -- test_uuid_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 136.91494417190552s cumulative, 0.02299952507019043s individual

.
current test PASSED/SKIPPED -- test_uuid_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 136.92863082885742s cumulative, 0.013686656951904297s individual

.
current test PASSED/SKIPPED -- test_uuid_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 136.9394245147705s cumulative, 0.010793685913085938s individual

.
current test PASSED/SKIPPED -- test_uuid_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 136.94816994667053s cumulative, 0.008745431900024414s individual

.
current test PASSED/SKIPPED -- test_uuid_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 136.96206426620483s cumulative, 0.013894319534301758s individual

.
current test PASSED/SKIPPED -- test_uuid_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 136.9695119857788s cumulative, 0.007447719573974609s individual

.
current test PASSED/SKIPPED -- test_uuid_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 137.00307703018188s cumulative, 0.03356504440307617s individual


tests/test_testing.py .
current test PASSED/SKIPPED -- test_simulate_request_http_version in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 137.03396081924438s cumulative, 0.0308837890625s individual

.
current test PASSED/SKIPPED -- test_create_environ_preserve_raw_uri in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 137.05064725875854s cumulative, 0.016686439514160156s individual

.
current test PASSED/SKIPPED -- test_client_simulate_aliases in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 137.08605885505676s cumulative, 0.03541159629821777s individual

.
current test PASSED/SKIPPED -- test_simulate_request_http_version in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 137.10613322257996s cumulative, 0.02007436752319336s individual

.
current test PASSED/SKIPPED -- test_client_simulate_aliases in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 137.13393211364746s cumulative, 0.027798891067504883s individual

.
current test PASSED/SKIPPED -- test_simulate_request_http_version in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 137.15456342697144s cumulative, 0.02063131332397461s individual

.
current test PASSED/SKIPPED -- test_client_simulate_aliases in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 137.17526388168335s cumulative, 0.020700454711914062s individual

.
current test PASSED/SKIPPED -- test_client_simulate_aliases in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 137.20516228675842s cumulative, 0.029898405075073242s individual

.
current test PASSED/SKIPPED -- test_simulate_request_http_version in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 137.22158002853394s cumulative, 0.016417741775512695s individual

.
current test PASSED/SKIPPED -- test_simulate_request_http_version in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 137.24723863601685s cumulative, 0.025658607482910156s individual

.
current test PASSED/SKIPPED -- test_simulate_request_content_type in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 137.29309105873108s cumulative, 0.0458524227142334s individual

.
current test PASSED/SKIPPED -- test_simulate_request_http_version in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 137.31257581710815s cumulative, 0.019484758377075195s individual

.
current test PASSED/SKIPPED -- test_create_environ_cookies in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 137.32405376434326s cumulative, 0.011477947235107422s individual

.
current test PASSED/SKIPPED -- test_cookies_jar in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 137.35505628585815s cumulative, 0.031002521514892578s individual

.
current test PASSED/SKIPPED -- test_missing_header_is_none in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 137.37225079536438s cumulative, 0.017194509506225586s individual

.
current test PASSED/SKIPPED -- test_closed_wsgi_iterable in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 137.39218664169312s cumulative, 0.01993584632873535s individual

.
current test PASSED/SKIPPED -- test_create_environ_default_ua_override in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 137.40537977218628s cumulative, 0.013193130493164062s individual

.
current test PASSED/SKIPPED -- test_simulate_request_http_version in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 137.42753195762634s cumulative, 0.022152185440063477s individual

.
current test PASSED/SKIPPED -- test_closed_wsgi_iterable in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 137.4407603740692s cumulative, 0.013228416442871094s individual

.
current test PASSED/SKIPPED -- test_closed_wsgi_iterable in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 137.4513075351715s cumulative, 0.010547161102294922s individual

.
current test PASSED/SKIPPED -- test_create_environ_cookies in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 137.4636619091034s cumulative, 0.012354373931884766s individual

.
current test PASSED/SKIPPED -- test_simulate_request_http_version in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 137.48220086097717s cumulative, 0.018538951873779297s individual

.
current test PASSED/SKIPPED -- test_create_environ_cookies_options_method in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 137.49743151664734s cumulative, 0.015230655670166016s individual

.
current test PASSED/SKIPPED -- test_client_simulate_aliases in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 137.5239872932434s cumulative, 0.026555776596069336s individual

.
current test PASSED/SKIPPED -- test_simulate_request_http_version in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 137.54982471466064s cumulative, 0.025837421417236328s individual

.
current test PASSED/SKIPPED -- test_simulate_request_http_version in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 137.5791630744934s cumulative, 0.029338359832763672s individual

.
current test PASSED/SKIPPED -- test_client_simulate_aliases in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 137.60274291038513s cumulative, 0.023579835891723633s individual

.
current test PASSED/SKIPPED -- test_testing_client_handles_wsgi_generator_app in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 137.61853623390198s cumulative, 0.015793323516845703s individual

.
current test PASSED/SKIPPED -- test_client_simulate_aliases in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 137.64183616638184s cumulative, 0.0232999324798584s individual

.
current test PASSED/SKIPPED -- test_closed_wsgi_iterable in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 137.65240144729614s cumulative, 0.01056528091430664s individual

.
current test PASSED/SKIPPED -- test_client_simulate_aliases in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 137.67315220832825s cumulative, 0.020750761032104492s individual

.
current test PASSED/SKIPPED -- test_simulate_request_http_version in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 137.69841289520264s cumulative, 0.02526068687438965s individual

.
current test PASSED/SKIPPED -- test_create_environ_default_ua in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 137.71376156806946s cumulative, 0.015348672866821289s individual

.
current test PASSED/SKIPPED -- test_simulate_request_http_version in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 137.74069166183472s cumulative, 0.02693009376525879s individual

.
current test PASSED/SKIPPED -- test_simulate_request_http_version in /home/kaiyaok2/PythonProjects/falcon/tests/test_testing.py: 137.75976181030273s cumulative, 0.019070148468017578s individual


tests/asgi/test_ws.py .
current test PASSED/SKIPPED -- test_echo in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_ws.py: 148.3215913772583s cumulative, 10.561829566955566s individual


tests/test_headers.py .
current test PASSED/SKIPPED -- test_headers_with_custom_class_not_callable in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 148.3557825088501s cumulative, 0.034191131591796875s individual

.
current test PASSED/SKIPPED -- test_expires_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 148.3761990070343s cumulative, 0.0204164981842041s individual

.
current test PASSED/SKIPPED -- test_override_default_media_type_missing_encoding in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 148.41300535202026s cumulative, 0.036806344985961914s individual

.
current test PASSED/SKIPPED -- test_content_disposition_attachment_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 148.4367756843567s cumulative, 0.02377033233642578s individual

.
current test PASSED/SKIPPED -- test_append_link_crossorigin in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 148.46015453338623s cumulative, 0.023378849029541016s individual

.
current test PASSED/SKIPPED -- test_content_disposition_attachment_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 148.4844253063202s cumulative, 0.02427077293395996s individual

.
current test PASSED/SKIPPED -- test_response_set_and_get_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 148.529447555542s cumulative, 0.04502224922180176s individual

.
current test PASSED/SKIPPED -- test_append_link_crossorigin in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 148.56516098976135s cumulative, 0.03571343421936035s individual

.
current test PASSED/SKIPPED -- test_content_disposition_inline_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 148.6034951210022s cumulative, 0.03833413124084473s individual

.
current test PASSED/SKIPPED -- test_custom_content_type in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 148.6241273880005s cumulative, 0.020632266998291016s individual

.
current test PASSED/SKIPPED -- test_no_content_type in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 148.65339422225952s cumulative, 0.029266834259033203s individual

.
current test PASSED/SKIPPED -- test_override_default_media_type in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 148.67532086372375s cumulative, 0.0219266414642334s individual

.
current test PASSED/SKIPPED -- test_required_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 148.6913707256317s cumulative, 0.016049861907958984s individual

.
current test PASSED/SKIPPED -- test_default_value in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 148.7554931640625s cumulative, 0.06412243843078613s individual

.
current test PASSED/SKIPPED -- test_append_link_with_hreflang in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 148.78893876075745s cumulative, 0.03344559669494629s individual

.
current test PASSED/SKIPPED -- test_content_disposition_attachment_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 148.8145294189453s cumulative, 0.02559065818786621s individual

.
current test PASSED/SKIPPED -- test_response_header_helpers_on_get in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 148.84656262397766s cumulative, 0.03203320503234863s individual

.
current test PASSED/SKIPPED -- test_append_link_with_title in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 148.8697862625122s cumulative, 0.0232236385345459s individual

.
current test PASSED/SKIPPED -- test_set_headers_with_custom_class in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 148.89677023887634s cumulative, 0.026983976364135742s individual

.
current test PASSED/SKIPPED -- test_unset_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 148.91086149215698s cumulative, 0.014091253280639648s individual

.
current test PASSED/SKIPPED -- test_no_content_length in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 148.9228639602661s cumulative, 0.01200246810913086s individual

s
current test PASSED/SKIPPED -- test_unicode_headers_contain_non_ascii in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 148.93360877037048s cumulative, 0.010744810104370117s individual

.
current test PASSED/SKIPPED -- test_no_content_type in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 148.95404481887817s cumulative, 0.02043604850769043s individual

.
current test PASSED/SKIPPED -- test_declared_content_length_overridden_by_no_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 148.9687283039093s cumulative, 0.01468348503112793s individual

.
current test PASSED/SKIPPED -- test_response_append_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 148.99141478538513s cumulative, 0.022686481475830078s individual

.
current test PASSED/SKIPPED -- test_request_latin1_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 149.0281364917755s cumulative, 0.03672170639038086s individual

.
current test PASSED/SKIPPED -- test_passthrough_request_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 149.05571365356445s cumulative, 0.02757716178894043s individual

.
current test PASSED/SKIPPED -- test_append_link_multiple in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 149.08051347732544s cumulative, 0.024799823760986328s individual

.
current test PASSED/SKIPPED -- test_vary_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 149.1027112007141s cumulative, 0.022197723388671875s individual

.
current test PASSED/SKIPPED -- test_headers_as_list in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 149.12214493751526s cumulative, 0.01943373680114746s individual

.
current test PASSED/SKIPPED -- test_request_multiple_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 149.16468906402588s cumulative, 0.04254412651062012s individual

.
current test PASSED/SKIPPED -- test_append_link_with_hreflang_multi in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 149.18669366836548s cumulative, 0.02200460433959961s individual

.
current test PASSED/SKIPPED -- test_declared_content_length_overriden_by_data_length in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 149.2379183769226s cumulative, 0.051224708557128906s individual

.
current test PASSED/SKIPPED -- test_get_header_as_int in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 149.2826054096222s cumulative, 0.04468703269958496s individual

.
current test PASSED/SKIPPED -- test_content_disposition_attachment_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 149.316059589386s cumulative, 0.033454179763793945s individual

.
current test PASSED/SKIPPED -- test_unicode_headers_contain_non_ascii in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 149.33680653572083s cumulative, 0.020746946334838867s individual

.
current test PASSED/SKIPPED -- test_append_link_with_link_extension in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 149.35589051246643s cumulative, 0.01908397674560547s individual

.
current test PASSED/SKIPPED -- test_content_disposition_attachment_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 149.37824726104736s cumulative, 0.022356748580932617s individual

.
current test PASSED/SKIPPED -- test_append_link_with_title_star in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 149.3951859474182s cumulative, 0.01693868637084961s individual

.
current test PASSED/SKIPPED -- test_unicode_headers_contain_non_ascii in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 149.4140169620514s cumulative, 0.01883101463317871s individual

.
current test PASSED/SKIPPED -- test_append_link_with_anchor in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 149.42807841300964s cumulative, 0.014061450958251953s individual

.
current test PASSED/SKIPPED -- test_append_link_crossorigin in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 149.44436478614807s cumulative, 0.016286373138427734s individual

.
current test PASSED/SKIPPED -- test_content_disposition_inline_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 149.47033834457397s cumulative, 0.02597355842590332s individual

.
current test PASSED/SKIPPED -- test_unicode_headers_contain_non_ascii in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 149.48807168006897s cumulative, 0.017733335494995117s individual

.
current test PASSED/SKIPPED -- test_content_disposition_inline_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 149.50669407844543s cumulative, 0.018622398376464844s individual

.
current test PASSED/SKIPPED -- test_content_disposition_attachment_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 149.5200798511505s cumulative, 0.013385772705078125s individual

.
current test PASSED/SKIPPED -- test_no_content_length in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 149.58249020576477s cumulative, 0.06241035461425781s individual

.
current test PASSED/SKIPPED -- test_content_disposition_attachment_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 149.61804270744324s cumulative, 0.0355525016784668s individual

.
current test PASSED/SKIPPED -- test_content_length in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 149.64984893798828s cumulative, 0.031806230545043945s individual

.
current test PASSED/SKIPPED -- test_override_default_media_type in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 149.6760778427124s cumulative, 0.026228904724121094s individual

.
current test PASSED/SKIPPED -- test_default_media_type in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 149.70458507537842s cumulative, 0.028507232666015625s individual

.
current test PASSED/SKIPPED -- test_append_link_with_type_hint in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 149.73049521446228s cumulative, 0.025910139083862305s individual

.
current test PASSED/SKIPPED -- test_declared_content_length_overriden_by_body_length in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 149.75737619400024s cumulative, 0.026880979537963867s individual

.
current test PASSED/SKIPPED -- test_append_link_single in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 149.78214502334595s cumulative, 0.024768829345703125s individual

.
current test PASSED/SKIPPED -- test_unicode_headers_contain_only_ascii in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 149.80522346496582s cumulative, 0.023078441619873047s individual

.
current test PASSED/SKIPPED -- test_unicode_headers_contain_non_ascii in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 149.8276925086975s cumulative, 0.022469043731689453s individual

.
current test PASSED/SKIPPED -- test_append_link_crossorigin in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 149.85718035697937s cumulative, 0.02948784828186035s individual

.
current test PASSED/SKIPPED -- test_append_link_crossorigin in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 149.8815734386444s cumulative, 0.024393081665039062s individual

.
current test PASSED/SKIPPED -- test_append_link_complex in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 149.903146982193s cumulative, 0.021573543548583984s individual

.
current test PASSED/SKIPPED -- test_content_type_no_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 149.9262833595276s cumulative, 0.023136377334594727s individual

.
current test PASSED/SKIPPED -- test_append_link_crossorigin in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 149.9477550983429s cumulative, 0.021471738815307617s individual

.
current test PASSED/SKIPPED -- test_content_disposition_attachment_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 149.9673616886139s cumulative, 0.019606590270996094s individual

.
current test PASSED/SKIPPED -- test_vary_star in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 149.98696613311768s cumulative, 0.01960444450378418s individual

.
current test PASSED/SKIPPED -- test_unset_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 150.00763607025146s cumulative, 0.020669937133789062s individual

.
current test PASSED/SKIPPED -- test_unicode_location_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 150.03401637077332s cumulative, 0.026380300521850586s individual

.
current test PASSED/SKIPPED -- test_vary_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 150.05439448356628s cumulative, 0.02037811279296875s individual

.
current test PASSED/SKIPPED -- test_declared_content_length_on_head in /home/kaiyaok2/PythonProjects/falcon/tests/test_headers.py: 150.07922053337097s cumulative, 0.0248260498046875s individual


tests/asgi/test_request_body_asgi.py .
current test PASSED/SKIPPED -- test_read_body in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_request_body_asgi.py: 150.0978889465332s cumulative, 0.018668413162231445s individual

.
current test PASSED/SKIPPED -- test_tiny_body in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_request_body_asgi.py: 150.11570477485657s cumulative, 0.017815828323364258s individual

.
current test PASSED/SKIPPED -- test_tiny_body_overflow in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_request_body_asgi.py: 150.13109970092773s cumulative, 0.015394926071166992s individual

.
current test PASSED/SKIPPED -- test_request_repr in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_request_body_asgi.py: 150.13841223716736s cumulative, 0.0073125362396240234s individual

.
current test PASSED/SKIPPED -- test_content_length_smaller_than_body in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_request_body_asgi.py: 150.15512013435364s cumulative, 0.016707897186279297s individual

.
current test PASSED/SKIPPED -- test_content_length_smaller_than_body in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_request_body_asgi.py: 150.17144393920898s cumulative, 0.01632380485534668s individual

.
current test PASSED/SKIPPED -- test_content_length_smaller_than_body in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_request_body_asgi.py: 150.18275117874146s cumulative, 0.011307239532470703s individual

.
current test PASSED/SKIPPED -- test_content_length_smaller_than_body in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_request_body_asgi.py: 150.19435167312622s cumulative, 0.011600494384765625s individual

.
current test PASSED/SKIPPED -- test_content_length_smaller_than_body in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_request_body_asgi.py: 150.20375871658325s cumulative, 0.00940704345703125s individual

.
current test PASSED/SKIPPED -- test_empty_body in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_request_body_asgi.py: 150.2294692993164s cumulative, 0.025710582733154297s individual

.
current test PASSED/SKIPPED -- test_bounded_stream_alias in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_request_body_asgi.py: 150.2398030757904s cumulative, 0.010333776473999023s individual

.
current test PASSED/SKIPPED -- test_content_length_smaller_than_body in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_request_body_asgi.py: 150.25398206710815s cumulative, 0.014178991317749023s individual


tests/test_deps.py .
current test PASSED/SKIPPED -- test_deps_mimeparse_correct_package in /home/kaiyaok2/PythonProjects/falcon/tests/test_deps.py: 150.26813983917236s cumulative, 0.014157772064208984s individual


tests/test_error_handlers.py .
current test PASSED/SKIPPED -- test_uncaught_python_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 150.31560444831848s cumulative, 0.047464609146118164s individual

.
current test PASSED/SKIPPED -- test_uncaught_error_else in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 150.34258270263672s cumulative, 0.026978254318237305s individual

.
current test PASSED/SKIPPED -- test_uncaught_python_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 150.38914847373962s cumulative, 0.04656577110290527s individual

.
current test PASSED/SKIPPED -- test_handle_not_defined in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 150.4031000137329s cumulative, 0.013951539993286133s individual

.
current test PASSED/SKIPPED -- test_invalid_add_exception_handler_input in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 150.4163055419922s cumulative, 0.013205528259277344s individual

.
current test PASSED/SKIPPED -- test_invalid_add_exception_handler_input in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 150.44236588478088s cumulative, 0.02606034278869629s individual

.
current test PASSED/SKIPPED -- test_handler_signature_shim in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 150.46830773353577s cumulative, 0.025941848754882812s individual

.
current test PASSED/SKIPPED -- test_uncaught_python_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 150.49592900276184s cumulative, 0.02762126922607422s individual

.
current test PASSED/SKIPPED -- test_invalid_add_exception_handler_input in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 150.5062916278839s cumulative, 0.010362625122070312s individual

.
current test PASSED/SKIPPED -- test_subclass_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 150.51841020584106s cumulative, 0.01211857795715332s individual

.
current test PASSED/SKIPPED -- test_handler_single_exception_iterable in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 150.53694462776184s cumulative, 0.018534421920776367s individual

.
current test PASSED/SKIPPED -- test_uncaught_python_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 150.54996061325073s cumulative, 0.013015985488891602s individual

.
current test PASSED/SKIPPED -- test_invalid_add_exception_handler_input in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 150.55714201927185s cumulative, 0.007181406021118164s individual

.
current test PASSED/SKIPPED -- test_error_precedence_subclass_order_indifference in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 150.56705808639526s cumulative, 0.009916067123413086s individual

.
current test PASSED/SKIPPED -- test_handler_multiple_exception_iterable in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 150.58508467674255s cumulative, 0.01802659034729004s individual

.
current test PASSED/SKIPPED -- test_error_precedence_subclass in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 150.59965443611145s cumulative, 0.014569759368896484s individual

.
current test PASSED/SKIPPED -- test_handler_multiple_exception_iterable in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 150.61136388778687s cumulative, 0.011709451675415039s individual

.
current test PASSED/SKIPPED -- test_invalid_add_exception_handler_input in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 150.61740827560425s cumulative, 0.0060443878173828125s individual

.
current test PASSED/SKIPPED -- test_handle_not_defined in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 150.62400770187378s cumulative, 0.00659942626953125s individual

.
current test PASSED/SKIPPED -- test_handler_must_be_coroutine_for_asgi in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 150.62985754013062s cumulative, 0.0058498382568359375s individual

.
current test PASSED/SKIPPED -- test_converted_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 150.64282727241516s cumulative, 0.012969732284545898s individual

.
current test PASSED/SKIPPED -- test_error_precedence_duplicate in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 150.6508173942566s cumulative, 0.007990121841430664s individual

.
current test PASSED/SKIPPED -- test_uncaught_python_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 150.66353273391724s cumulative, 0.012715339660644531s individual

.
current test PASSED/SKIPPED -- test_error_precedence_duplicate in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 150.67600417137146s cumulative, 0.012471437454223633s individual

.
current test PASSED/SKIPPED -- test_error_precedence_subclass_order_indifference in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 150.68733954429626s cumulative, 0.011335372924804688s individual

.
current test PASSED/SKIPPED -- test_invalid_add_exception_handler_input in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 150.6937916278839s cumulative, 0.006452083587646484s individual

.
current test PASSED/SKIPPED -- test_uncaught_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 150.70203852653503s cumulative, 0.008246898651123047s individual

.
current test PASSED/SKIPPED -- test_invalid_add_exception_handler_input in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 150.7087938785553s cumulative, 0.006755352020263672s individual

.
current test PASSED/SKIPPED -- test_uncaught_error_else in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 150.72198963165283s cumulative, 0.01319575309753418s individual

.
current test PASSED/SKIPPED -- test_caught_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 150.7297339439392s cumulative, 0.007744312286376953s individual

.
current test PASSED/SKIPPED -- test_handler_multiple_exception_iterable in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 150.737797498703s cumulative, 0.008063554763793945s individual

.
current test PASSED/SKIPPED -- test_error_precedence_subclass in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 150.74527430534363s cumulative, 0.007476806640625s individual

.
current test PASSED/SKIPPED -- test_invalid_add_exception_handler_input in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 150.75185322761536s cumulative, 0.006578922271728516s individual

.
current test PASSED/SKIPPED -- test_handler_multiple_exception_iterable in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 150.7638852596283s cumulative, 0.012032032012939453s individual

.
current test PASSED/SKIPPED -- test_converted_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 150.7734293937683s cumulative, 0.009544134140014648s individual

.
current test PASSED/SKIPPED -- test_catch_http_no_route_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 150.78314876556396s cumulative, 0.009719371795654297s individual

.
current test PASSED/SKIPPED -- test_handler_single_exception_iterable in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 150.79000687599182s cumulative, 0.006858110427856445s individual

.
current test PASSED/SKIPPED -- test_subclass_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 150.8000020980835s cumulative, 0.009995222091674805s individual

.
current test PASSED/SKIPPED -- test_uncaught_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 150.80853390693665s cumulative, 0.008531808853149414s individual

.
current test PASSED/SKIPPED -- test_caught_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 150.81916308403015s cumulative, 0.01062917709350586s individual

.
current test PASSED/SKIPPED -- test_uncaught_python_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 150.83257675170898s cumulative, 0.013413667678833008s individual

.
current test PASSED/SKIPPED -- test_body_is_set in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 150.8404655456543s cumulative, 0.0078887939453125s individual

.
current test PASSED/SKIPPED -- test_media_is_set in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 150.84985661506653s cumulative, 0.009391069412231445s individual

.
current test PASSED/SKIPPED -- test_data_is_set in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 150.85639071464539s cumulative, 0.006534099578857422s individual

.
current test PASSED/SKIPPED -- test_data_is_set in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 150.865225315094s cumulative, 0.008834600448608398s individual

.
current test PASSED/SKIPPED -- test_media_is_set in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 150.87260699272156s cumulative, 0.0073816776275634766s individual

.
current test PASSED/SKIPPED -- test_body_is_set in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 150.88214349746704s cumulative, 0.009536504745483398s individual

.
current test PASSED/SKIPPED -- test_media_is_set in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 150.8891863822937s cumulative, 0.007042884826660156s individual

.
current test PASSED/SKIPPED -- test_media_is_set in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 150.8968904018402s cumulative, 0.007704019546508789s individual

.
current test PASSED/SKIPPED -- test_body_is_set in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 150.90518760681152s cumulative, 0.008297204971313477s individual

.
current test PASSED/SKIPPED -- test_data_is_set in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 150.9129831790924s cumulative, 0.007795572280883789s individual

.
current test PASSED/SKIPPED -- test_data_is_set in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 150.92251181602478s cumulative, 0.009528636932373047s individual

.
current test PASSED/SKIPPED -- test_body_is_set in /home/kaiyaok2/PythonProjects/falcon/tests/test_error_handlers.py: 150.9291489124298s cumulative, 0.006637096405029297s individual


tests/asgi/test_hello_asgi.py .
current test PASSED/SKIPPED -- test_filelike_closing_aiofiles in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_hello_asgi.py: 150.97211813926697s cumulative, 0.0429692268371582s individual


tests/test_redirects.py .
current test PASSED/SKIPPED -- test_redirect in /home/kaiyaok2/PythonProjects/falcon/tests/test_redirects.py: 150.98258757591248s cumulative, 0.010469436645507812s individual

.
current test PASSED/SKIPPED -- test_redirect in /home/kaiyaok2/PythonProjects/falcon/tests/test_redirects.py: 150.99067401885986s cumulative, 0.008086442947387695s individual

.
current test PASSED/SKIPPED -- test_redirect in /home/kaiyaok2/PythonProjects/falcon/tests/test_redirects.py: 150.99962520599365s cumulative, 0.008951187133789062s individual

.
current test PASSED/SKIPPED -- test_redirect in /home/kaiyaok2/PythonProjects/falcon/tests/test_redirects.py: 151.00876784324646s cumulative, 0.009142637252807617s individual

.
current test PASSED/SKIPPED -- test_redirect_with_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_redirects.py: 151.0181427001953s cumulative, 0.009374856948852539s individual

.
current test PASSED/SKIPPED -- test_redirect_with_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_redirects.py: 151.0249855518341s cumulative, 0.006842851638793945s individual

.
current test PASSED/SKIPPED -- test_redirect_with_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_redirects.py: 151.03999137878418s cumulative, 0.015005826950073242s individual

.
current test PASSED/SKIPPED -- test_redirect in /home/kaiyaok2/PythonProjects/falcon/tests/test_redirects.py: 151.05103039741516s cumulative, 0.011039018630981445s individual

.
current test PASSED/SKIPPED -- test_redirect in /home/kaiyaok2/PythonProjects/falcon/tests/test_redirects.py: 151.05950260162354s cumulative, 0.008472204208374023s individual

.
current test PASSED/SKIPPED -- test_redirect_with_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_redirects.py: 151.06779408454895s cumulative, 0.008291482925415039s individual

.
current test PASSED/SKIPPED -- test_redirect_with_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_redirects.py: 151.076904296875s cumulative, 0.009110212326049805s individual

.
current test PASSED/SKIPPED -- test_redirect_with_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_redirects.py: 151.08367133140564s cumulative, 0.0067670345306396484s individual

.
current test PASSED/SKIPPED -- test_redirect in /home/kaiyaok2/PythonProjects/falcon/tests/test_redirects.py: 151.09132266044617s cumulative, 0.007651329040527344s individual

.
current test PASSED/SKIPPED -- test_redirect in /home/kaiyaok2/PythonProjects/falcon/tests/test_redirects.py: 151.09821557998657s cumulative, 0.0068929195404052734s individual

.
current test PASSED/SKIPPED -- test_redirect_with_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_redirects.py: 151.11012148857117s cumulative, 0.011905908584594727s individual

.
current test PASSED/SKIPPED -- test_redirect in /home/kaiyaok2/PythonProjects/falcon/tests/test_redirects.py: 151.1173243522644s cumulative, 0.007202863693237305s individual

.
current test PASSED/SKIPPED -- test_redirect in /home/kaiyaok2/PythonProjects/falcon/tests/test_redirects.py: 151.12583231925964s cumulative, 0.008507966995239258s individual

.
current test PASSED/SKIPPED -- test_redirect_with_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_redirects.py: 151.13354444503784s cumulative, 0.007712125778198242s individual

.
current test PASSED/SKIPPED -- test_redirect_with_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_redirects.py: 151.14040851593018s cumulative, 0.006864070892333984s individual


tests/asgi/test_cythonized_asgi.py F
current test FAILED -- test_hooks in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_cythonized_asgi.py: 151.27152752876282s cumulative, 0.1311190128326416s individual

F
current test FAILED -- test_jsonchema_validator in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_cythonized_asgi.py: 151.46264743804932s cumulative, 0.19111990928649902s individual


tests/asgi/test_buffered_reader.py .
current test PASSED/SKIPPED -- test_varying_read_size in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 156.98111152648926s cumulative, 5.518464088439941s individual

.
current test PASSED/SKIPPED -- test_varying_read_size in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 161.309636592865s cumulative, 4.328525066375732s individual


tests/test_compiled_router.py .
current test PASSED/SKIPPED -- test_multithread_compile in /home/kaiyaok2/PythonProjects/falcon/tests/test_compiled_router.py: 161.37372398376465s cumulative, 0.0640873908996582s individual


tests/test_buffered_reader.py .
current test PASSED/SKIPPED -- test_read_until in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 167.4073143005371s cumulative, 6.033590316772461s individual


tests/asgi/test_boundedstream_asgi.py s
current test PASSED/SKIPPED -- test_read_all in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 167.46018314361572s cumulative, 0.05286884307861328s individual

s
current test PASSED/SKIPPED -- test_read_all in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 167.48316192626953s cumulative, 0.022978782653808594s individual

s
current test PASSED/SKIPPED -- test_read_all in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 167.49832797050476s cumulative, 0.015166044235229492s individual

s
current test PASSED/SKIPPED -- test_read_all in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 167.51760387420654s cumulative, 0.019275903701782227s individual

s
current test PASSED/SKIPPED -- test_read_all in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 167.53461408615112s cumulative, 0.017010211944580078s individual

s
current test PASSED/SKIPPED -- test_read_all in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 167.56227326393127s cumulative, 0.027659177780151367s individual

s
current test PASSED/SKIPPED -- test_read_all in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_boundedstream_asgi.py: 167.58253073692322s cumulative, 0.02025747299194336s individual


tests/asgi/test_scope.py .
current test PASSED/SKIPPED -- test_missing_asgi_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 167.99762320518494s cumulative, 0.41509246826171875s individual

.
current test PASSED/SKIPPED -- test_supported_http_spec in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 168.02645421028137s cumulative, 0.028831005096435547s individual

.
current test PASSED/SKIPPED -- test_supported_http_spec in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 168.04404258728027s cumulative, 0.017588376998901367s individual

.
current test PASSED/SKIPPED -- test_lifespan_scope_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 168.06315445899963s cumulative, 0.01911187171936035s individual

.
current test PASSED/SKIPPED -- test_lifespan_scope_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 168.07940363883972s cumulative, 0.01624917984008789s individual

.
current test PASSED/SKIPPED -- test_lifespan_scope_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 171.8824062347412s cumulative, 3.8030025959014893s individual

.
current test PASSED/SKIPPED -- test_supported_asgi_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 171.904394865036s cumulative, 0.021988630294799805s individual

.
current test PASSED/SKIPPED -- test_scheme in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 171.9212396144867s cumulative, 0.016844749450683594s individual

.
current test PASSED/SKIPPED -- test_lifespan_scope_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 171.94351744651794s cumulative, 0.02227783203125s individual

.
current test PASSED/SKIPPED -- test_supported_http_spec in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 171.96820259094238s cumulative, 0.024685144424438477s individual

.
current test PASSED/SKIPPED -- test_supported_asgi_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 171.98763847351074s cumulative, 0.019435882568359375s individual

.
current test PASSED/SKIPPED -- test_lifespan_scope_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 172.00910711288452s cumulative, 0.021468639373779297s individual

.
current test PASSED/SKIPPED -- test_lifespan_scope_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 172.03362941741943s cumulative, 0.02452230453491211s individual

.
current test PASSED/SKIPPED -- test_scheme in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 172.05163550376892s cumulative, 0.018006086349487305s individual

.
current test PASSED/SKIPPED -- test_supported_http_spec in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 172.0953779220581s cumulative, 0.04374241828918457s individual

.
current test PASSED/SKIPPED -- test_supported_asgi_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 172.11421084403992s cumulative, 0.018832921981811523s individual

.
current test PASSED/SKIPPED -- test_lifespan_scope_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 172.1344497203827s cumulative, 0.020238876342773438s individual

.
current test PASSED/SKIPPED -- test_scheme in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 172.14994096755981s cumulative, 0.015491247177124023s individual

.
current test PASSED/SKIPPED -- test_supported_asgi_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 172.17222547531128s cumulative, 0.022284507751464844s individual

.
current test PASSED/SKIPPED -- test_cookies_options_meathod in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 172.1853415966034s cumulative, 0.013116121292114258s individual

.
current test PASSED/SKIPPED -- test_unsupported_scope_type in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 172.2026150226593s cumulative, 0.017273426055908203s individual

.
current test PASSED/SKIPPED -- test_supported_http_spec in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 172.21990299224854s cumulative, 0.0172879695892334s individual

.
current test PASSED/SKIPPED -- test_scheme in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 172.22733640670776s cumulative, 0.007433414459228516s individual

.
current test PASSED/SKIPPED -- test_lifespan_scope_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 172.2464883327484s cumulative, 0.019151926040649414s individual

.
current test PASSED/SKIPPED -- test_cookies in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 172.25455522537231s cumulative, 0.008066892623901367s individual

.
current test PASSED/SKIPPED -- test_supported_http_spec in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 172.27479815483093s cumulative, 0.020242929458618164s individual

.
current test PASSED/SKIPPED -- test_supported_http_spec in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 172.28696537017822s cumulative, 0.012167215347290039s individual

.
current test PASSED/SKIPPED -- test_supported_http_spec in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 172.30656790733337s cumulative, 0.019602537155151367s individual

.
current test PASSED/SKIPPED -- test_supported_asgi_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 172.31930446624756s cumulative, 0.01273655891418457s individual

.
current test PASSED/SKIPPED -- test_unsupported_scope_type in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 172.3316307067871s cumulative, 0.012326240539550781s individual

.
current test PASSED/SKIPPED -- test_supported_asgi_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 172.3658950328827s cumulative, 0.034264326095581055s individual

.
current test PASSED/SKIPPED -- test_unsupported_http_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 172.38887476921082s cumulative, 0.022979736328125s individual

.
current test PASSED/SKIPPED -- test_query_string_values in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 172.4246790409088s cumulative, 0.03580427169799805s individual

.
current test PASSED/SKIPPED -- test_unsupported_http_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 172.44553923606873s cumulative, 0.02086019515991211s individual

.
current test PASSED/SKIPPED -- test_supported_http_spec in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 172.4740035533905s cumulative, 0.028464317321777344s individual

.
current test PASSED/SKIPPED -- test_supported_asgi_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 172.4941074848175s cumulative, 0.020103931427001953s individual

.
current test PASSED/SKIPPED -- test_scheme in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 172.50966000556946s cumulative, 0.015552520751953125s individual

.
current test PASSED/SKIPPED -- test_lifespan_scope_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 172.53542590141296s cumulative, 0.02576589584350586s individual

.
current test PASSED/SKIPPED -- test_supported_asgi_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 172.56479907035828s cumulative, 0.0293731689453125s individual

.
current test PASSED/SKIPPED -- test_unsupported_http_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 172.59289646148682s cumulative, 0.02809739112854004s individual

.
current test PASSED/SKIPPED -- test_supported_asgi_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 172.6216299533844s cumulative, 0.028733491897583008s individual

.
current test PASSED/SKIPPED -- test_supported_asgi_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 172.6501269340515s cumulative, 0.028496980667114258s individual

.
current test PASSED/SKIPPED -- test_supported_http_spec in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 172.66611576080322s cumulative, 0.015988826751708984s individual

.
current test PASSED/SKIPPED -- test_scheme in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 172.67762899398804s cumulative, 0.011513233184814453s individual

.
current test PASSED/SKIPPED -- test_lifespan_scope_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 172.6992015838623s cumulative, 0.021572589874267578s individual

.
current test PASSED/SKIPPED -- test_cookies in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 172.7107458114624s cumulative, 0.011544227600097656s individual

.
current test PASSED/SKIPPED -- test_unsupported_http_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 172.7425353527069s cumulative, 0.031789541244506836s individual

.
current test PASSED/SKIPPED -- test_supported_asgi_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 172.76205134391785s cumulative, 0.0195159912109375s individual

.
current test PASSED/SKIPPED -- test_lifespan_scope_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 172.7832863330841s cumulative, 0.021234989166259766s individual

.
current test PASSED/SKIPPED -- test_lifespan_scope_default_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 172.8102478981018s cumulative, 0.026961565017700195s individual

.
current test PASSED/SKIPPED -- test_scheme in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 172.82409954071045s cumulative, 0.013851642608642578s individual

.
current test PASSED/SKIPPED -- test_supported_asgi_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 172.84998536109924s cumulative, 0.025885820388793945s individual

.
current test PASSED/SKIPPED -- test_supported_asgi_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 172.8711130619049s cumulative, 0.021127700805664062s individual

.
current test PASSED/SKIPPED -- test_unsupported_scope_type in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 172.88591361045837s cumulative, 0.014800548553466797s individual

.
current test PASSED/SKIPPED -- test_supported_http_spec in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 172.90337991714478s cumulative, 0.017466306686401367s individual

.
current test PASSED/SKIPPED -- test_supported_asgi_version in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scope.py: 172.91991353034973s cumulative, 0.016533613204956055s individual


tests/asgi/test_scheduled_callbacks.py .
current test PASSED/SKIPPED -- test_multiple in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scheduled_callbacks.py: 173.4891574382782s cumulative, 0.5692439079284668s individual


tests/test_request_attrs.py .
current test PASSED/SKIPPED -- test_client_accepts_bogus in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 173.5124053955078s cumulative, 0.023247957229614258s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 173.53518891334534s cumulative, 0.022783517837524414s individual

.
current test PASSED/SKIPPED -- test_app_present in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 173.54675197601318s cumulative, 0.01156306266784668s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 173.55878138542175s cumulative, 0.012029409408569336s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 173.56752967834473s cumulative, 0.008748292922973633s individual

.
current test PASSED/SKIPPED -- test_range_unit in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 173.5782835483551s cumulative, 0.010753870010375977s individual

.
current test PASSED/SKIPPED -- test_date_invalid in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 173.59039735794067s cumulative, 0.012113809585571289s individual

.
current test PASSED/SKIPPED -- test_date in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 173.6063153743744s cumulative, 0.01591801643371582s individual

.
current test PASSED/SKIPPED -- test_nonlatin_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 173.6202051639557s cumulative, 0.013889789581298828s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 173.6307990550995s cumulative, 0.010593891143798828s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 173.64178323745728s cumulative, 0.010984182357788086s individual

.
current test PASSED/SKIPPED -- test_scheme_https in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 173.65198755264282s cumulative, 0.010204315185546875s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 173.67174077033997s cumulative, 0.019753217697143555s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 173.6831135749817s cumulative, 0.011372804641723633s individual

.
current test PASSED/SKIPPED -- test_attribute_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 173.69600319862366s cumulative, 0.012889623641967773s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 173.72677874565125s cumulative, 0.03077554702758789s individual

.
current test PASSED/SKIPPED -- test_netloc_from_env in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 173.7581696510315s cumulative, 0.03139090538024902s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 173.78693342208862s cumulative, 0.028763771057128906s individual

.
current test PASSED/SKIPPED -- test_attribute_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 173.80603289604187s cumulative, 0.01909947395324707s individual

.
current test PASSED/SKIPPED -- test_netloc_from_env in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 173.81718516349792s cumulative, 0.011152267456054688s individual

.
current test PASSED/SKIPPED -- test_bogus_content_length_neg in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 173.83431792259216s cumulative, 0.01713275909423828s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 173.8530924320221s cumulative, 0.01877450942993164s individual

.
current test PASSED/SKIPPED -- test_date_missing in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 173.87444043159485s cumulative, 0.021347999572753906s individual

.
current test PASSED/SKIPPED -- test_netloc_nondefault_port in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 173.8875002861023s cumulative, 0.013059854507446289s individual

.
current test PASSED/SKIPPED -- test_host in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 173.90105295181274s cumulative, 0.013552665710449219s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 173.91462206840515s cumulative, 0.013569116592407227s individual

.
current test PASSED/SKIPPED -- test_netloc_default_port in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 173.92871189117432s cumulative, 0.014089822769165039s individual

.
current test PASSED/SKIPPED -- test_scheme_http in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 173.94257497787476s cumulative, 0.013863086700439453s individual

.
current test PASSED/SKIPPED -- test_bogus_content_length_nan in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 173.95445919036865s cumulative, 0.011884212493896484s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 173.968900680542s cumulative, 0.014441490173339844s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 173.98825812339783s cumulative, 0.01935744285583496s individual

.
current test PASSED/SKIPPED -- test_client_accepts in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.009357213974s cumulative, 0.021099090576171875s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.0247597694397s cumulative, 0.015402555465698242s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.03218698501587s cumulative, 0.007427215576171875s individual

.
current test PASSED/SKIPPED -- test_client_accepts in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.04067516326904s cumulative, 0.008488178253173828s individual

.
current test PASSED/SKIPPED -- test_port_explicit in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.04740118980408s cumulative, 0.00672602653503418s individual

.
current test PASSED/SKIPPED -- test_client_accepts_bogus in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.05233311653137s cumulative, 0.004931926727294922s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.0593237876892s cumulative, 0.006990671157836914s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.06488871574402s cumulative, 0.00556492805480957s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.07131123542786s cumulative, 0.006422519683837891s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.07605981826782s cumulative, 0.00474858283996582s individual

.
current test PASSED/SKIPPED -- test_scheme_http in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.08124828338623s cumulative, 0.005188465118408203s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.0891752243042s cumulative, 0.00792694091796875s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.0985689163208s cumulative, 0.009393692016601562s individual

.
current test PASSED/SKIPPED -- test_attribute_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.10515570640564s cumulative, 0.006586790084838867s individual

.
current test PASSED/SKIPPED -- test_attribute_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.1126856803894s cumulative, 0.0075299739837646484s individual

.
current test PASSED/SKIPPED -- test_etag_is_missing in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.11878514289856s cumulative, 0.0060994625091552734s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.1250295639038s cumulative, 0.0062444210052490234s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.1335084438324s cumulative, 0.008478879928588867s individual

.
current test PASSED/SKIPPED -- test_client_prefers in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.140527009964s cumulative, 0.007018566131591797s individual

.
current test PASSED/SKIPPED -- test_scheme_https in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.14528918266296s cumulative, 0.004762172698974609s individual

.
current test PASSED/SKIPPED -- test_netloc_nondefault_port in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.15046572685242s cumulative, 0.005176544189453125s individual

.
current test PASSED/SKIPPED -- test_attribute_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.1563594341278s cumulative, 0.005893707275390625s individual

.
current test PASSED/SKIPPED -- test_bogus_content_length_neg in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.1621196269989s cumulative, 0.00576019287109375s individual

.
current test PASSED/SKIPPED -- test_scheme_http in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.16717076301575s cumulative, 0.005051136016845703s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.17189979553223s cumulative, 0.004729032516479492s individual

.
current test PASSED/SKIPPED -- test_content_type_method in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.17601585388184s cumulative, 0.004116058349609375s individual

.
current test PASSED/SKIPPED -- test_host in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.18013739585876s cumulative, 0.004121541976928711s individual

.
current test PASSED/SKIPPED -- test_attribute_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.18478107452393s cumulative, 0.004643678665161133s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.18959212303162s cumulative, 0.00481104850769043s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.19417262077332s cumulative, 0.004580497741699219s individual

.
current test PASSED/SKIPPED -- test_date in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.20014548301697s cumulative, 0.005972862243652344s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.20524859428406s cumulative, 0.005103111267089844s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.2109124660492s cumulative, 0.005663871765136719s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.2164785861969s cumulative, 0.005566120147705078s individual

.
current test PASSED/SKIPPED -- test_etag_parsing_helper in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.22098588943481s cumulative, 0.004507303237915039s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.22636365890503s cumulative, 0.005377769470214844s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.2314748764038s cumulative, 0.005111217498779297s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.23639369010925s cumulative, 0.004918813705444336s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.24835729599s cumulative, 0.011963605880737305s individual

.
current test PASSED/SKIPPED -- test_subdomain in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.25366616249084s cumulative, 0.005308866500854492s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.25832605361938s cumulative, 0.004659891128540039s individual

.
current test PASSED/SKIPPED -- test_range_invalid in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.26860070228577s cumulative, 0.010274648666381836s individual

.
current test PASSED/SKIPPED -- test_date in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.27517938613892s cumulative, 0.006578683853149414s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.28417038917542s cumulative, 0.008991003036499023s individual

.
current test PASSED/SKIPPED -- test_empty in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.28886103630066s cumulative, 0.004690647125244141s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.29398798942566s cumulative, 0.005126953125s individual

.
current test PASSED/SKIPPED -- test_date_missing in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.2982542514801s cumulative, 0.004266262054443359s individual

.
current test PASSED/SKIPPED -- test_uri_https in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.3060019016266s cumulative, 0.007747650146484375s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.31276631355286s cumulative, 0.006764411926269531s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.31823658943176s cumulative, 0.00547027587890625s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.3231019973755s cumulative, 0.004865407943725586s individual

.
current test PASSED/SKIPPED -- test_scheme_https in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.32931113243103s cumulative, 0.006209135055541992s individual

.
current test PASSED/SKIPPED -- test_method in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.33417057991028s cumulative, 0.004859447479248047s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.33983898162842s cumulative, 0.0056684017181396484s individual

.
current test PASSED/SKIPPED -- test_etag_parsing_helper in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.34429478645325s cumulative, 0.0044558048248291016s individual

.
current test PASSED/SKIPPED -- test_content_length in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.34901189804077s cumulative, 0.004717111587524414s individual

.
current test PASSED/SKIPPED -- test_attribute_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.35538339614868s cumulative, 0.006371498107910156s individual

.
current test PASSED/SKIPPED -- test_netloc_default_port in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.3641698360443s cumulative, 0.008786439895629883s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.37382698059082s cumulative, 0.009657144546508789s individual

.
current test PASSED/SKIPPED -- test_date in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.3858814239502s cumulative, 0.012054443359375s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.40074563026428s cumulative, 0.014864206314086914s individual

.
current test PASSED/SKIPPED -- test_nonlatin_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.4126636981964s cumulative, 0.011918067932128906s individual

.
current test PASSED/SKIPPED -- test_empty in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.421373128891s cumulative, 0.008709430694580078s individual

.
current test PASSED/SKIPPED -- test_date_missing in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.42878007888794s cumulative, 0.007406949996948242s individual

.
current test PASSED/SKIPPED -- test_date_invalid in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.43805956840515s cumulative, 0.009279489517211914s individual

.
current test PASSED/SKIPPED -- test_content_type_method in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.44265937805176s cumulative, 0.004599809646606445s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.44868874549866s cumulative, 0.006029367446899414s individual

.
current test PASSED/SKIPPED -- test_range_invalid in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.45858430862427s cumulative, 0.009895563125610352s individual

.
current test PASSED/SKIPPED -- test_scheme_https in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.4633400440216s cumulative, 0.004755735397338867s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.46796488761902s cumulative, 0.004624843597412109s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.47256922721863s cumulative, 0.004604339599609375s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.47725653648376s cumulative, 0.004687309265136719s individual

.
current test PASSED/SKIPPED -- test_port_explicit in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.48265194892883s cumulative, 0.005395412445068359s individual

.
current test PASSED/SKIPPED -- test_netloc_nondefault_port in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.4876356124878s cumulative, 0.004983663558959961s individual

.
current test PASSED/SKIPPED -- test_netloc_from_env in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.4933364391327s cumulative, 0.005700826644897461s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.49823665618896s cumulative, 0.004900217056274414s individual

.
current test PASSED/SKIPPED -- test_subdomain in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.50414204597473s cumulative, 0.0059053897857666016s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.51281690597534s cumulative, 0.008674860000610352s individual

.
current test PASSED/SKIPPED -- test_date_invalid in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.5197150707245s cumulative, 0.006898164749145508s individual

.
current test PASSED/SKIPPED -- test_reconstruct_url in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.52355289459229s cumulative, 0.0038378238677978516s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.5283546447754s cumulative, 0.004801750183105469s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.5330195426941s cumulative, 0.004664897918701172s individual

.
current test PASSED/SKIPPED -- test_scheme_http in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.53770661354065s cumulative, 0.004687070846557617s individual

.
current test PASSED/SKIPPED -- test_range in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.54241752624512s cumulative, 0.0047109127044677734s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.54690527915955s cumulative, 0.004487752914428711s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.5555715560913s cumulative, 0.008666276931762695s individual

.
current test PASSED/SKIPPED -- test_content_length_method in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.56282377243042s cumulative, 0.007252216339111328s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.56931257247925s cumulative, 0.006488800048828125s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.57776021957397s cumulative, 0.008447647094726562s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.58509588241577s cumulative, 0.007335662841796875s individual

.
current test PASSED/SKIPPED -- test_netloc_from_env in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.5942211151123s cumulative, 0.009125232696533203s individual

.
current test PASSED/SKIPPED -- test_attribute_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.60265946388245s cumulative, 0.008438348770141602s individual

.
current test PASSED/SKIPPED -- test_date_invalid in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.62077832221985s cumulative, 0.018118858337402344s individual

.
current test PASSED/SKIPPED -- test_uri in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.62794661521912s cumulative, 0.007168292999267578s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.63617253303528s cumulative, 0.00822591781616211s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.64625000953674s cumulative, 0.010077476501464844s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.66133451461792s cumulative, 0.015084505081176758s individual

.
current test PASSED/SKIPPED -- test_netloc_nondefault_port in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.66829180717468s cumulative, 0.006957292556762695s individual

.
current test PASSED/SKIPPED -- test_relative_uri in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.67675614356995s cumulative, 0.008464336395263672s individual

.
current test PASSED/SKIPPED -- test_scheme_https in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.68232607841492s cumulative, 0.005569934844970703s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.68781757354736s cumulative, 0.005491495132446289s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.69578552246094s cumulative, 0.007967948913574219s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.70067834854126s cumulative, 0.004892826080322266s individual

.
current test PASSED/SKIPPED -- test_scheme_http in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.70649361610413s cumulative, 0.005815267562866211s individual

.
current test PASSED/SKIPPED -- test_empty_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.7114598751068s cumulative, 0.004966259002685547s individual

.
current test PASSED/SKIPPED -- test_missing_attribute_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.71611714363098s cumulative, 0.004657268524169922s individual

.
current test PASSED/SKIPPED -- test_nonlatin_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.7209014892578s cumulative, 0.004784345626831055s individual

.
current test PASSED/SKIPPED -- test_attribute_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.72559547424316s cumulative, 0.0046939849853515625s individual

.
current test PASSED/SKIPPED -- test_range_unit in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.72979974746704s cumulative, 0.004204273223876953s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.73401427268982s cumulative, 0.00421452522277832s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.7381513118744s cumulative, 0.0041370391845703125s individual

.
current test PASSED/SKIPPED -- test_date_invalid in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.74390506744385s cumulative, 0.005753755569458008s individual

.
current test PASSED/SKIPPED -- test_scheme_http in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.74849009513855s cumulative, 0.0045850276947021484s individual

.
current test PASSED/SKIPPED -- test_etag_parsing_helper in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.75253820419312s cumulative, 0.00404810905456543s individual

.
current test PASSED/SKIPPED -- test_empty_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.7562553882599s cumulative, 0.003717184066772461s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.76090359687805s cumulative, 0.0046482086181640625s individual

.
current test PASSED/SKIPPED -- test_scheme_http in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.7650442123413s cumulative, 0.004140615463256836s individual

.
current test PASSED/SKIPPED -- test_nonlatin_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.76940631866455s cumulative, 0.0043621063232421875s individual

.
current test PASSED/SKIPPED -- test_app_blank in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.77403664588928s cumulative, 0.004630327224731445s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.77866983413696s cumulative, 0.004633188247680664s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.78379106521606s cumulative, 0.0051212310791015625s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.78834414482117s cumulative, 0.004553079605102539s individual

.
current test PASSED/SKIPPED -- test_etag_parsing_helper in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.79206585884094s cumulative, 0.0037217140197753906s individual

.
current test PASSED/SKIPPED -- test_bogus_content_length_nan in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.79701709747314s cumulative, 0.0049512386322021484s individual

.
current test PASSED/SKIPPED -- test_app_missing in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.80021047592163s cumulative, 0.003193378448486328s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.8042562007904s cumulative, 0.004045724868774414s individual

.
current test PASSED/SKIPPED -- test_attribute_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.8091847896576s cumulative, 0.0049285888671875s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.81419730186462s cumulative, 0.00501251220703125s individual

.
current test PASSED/SKIPPED -- test_method in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.81792092323303s cumulative, 0.003723621368408203s individual

.
current test PASSED/SKIPPED -- test_attribute_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.82218718528748s cumulative, 0.004266262054443359s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.82651042938232s cumulative, 0.004323244094848633s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.8306906223297s cumulative, 0.004180192947387695s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.8366060256958s cumulative, 0.005915403366088867s individual

.
current test PASSED/SKIPPED -- test_netloc_default_port in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.84412336349487s cumulative, 0.007517337799072266s individual

.
current test PASSED/SKIPPED -- test_port_explicit in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.84889459609985s cumulative, 0.004771232604980469s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.853529214859s cumulative, 0.0046346187591552734s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.85850858688354s cumulative, 0.004979372024536133s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.8632640838623s cumulative, 0.004755496978759766s individual

.
current test PASSED/SKIPPED -- test_port_explicit in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.86741614341736s cumulative, 0.004152059555053711s individual

.
current test PASSED/SKIPPED -- test_netloc_nondefault_port in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.87279891967773s cumulative, 0.0053827762603759766s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.87950491905212s cumulative, 0.0067059993743896484s individual

.
current test PASSED/SKIPPED -- test_app_blank in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.88516569137573s cumulative, 0.0056607723236083984s individual

.
current test PASSED/SKIPPED -- test_netloc_default_port in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.88954901695251s cumulative, 0.0043833255767822266s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.89471793174744s cumulative, 0.005168914794921875s individual

.
current test PASSED/SKIPPED -- test_date_missing in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.8986132144928s cumulative, 0.003895282745361328s individual

.
current test PASSED/SKIPPED -- test_uri_http_1_0 in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.90543341636658s cumulative, 0.006820201873779297s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.91192054748535s cumulative, 0.006487131118774414s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.92019033432007s cumulative, 0.008269786834716797s individual

.
current test PASSED/SKIPPED -- test_scheme_https in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.92875695228577s cumulative, 0.008566617965698242s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.9383692741394s cumulative, 0.009612321853637695s individual

.
current test PASSED/SKIPPED -- test_scheme_http in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.94512176513672s cumulative, 0.006752490997314453s individual

.
current test PASSED/SKIPPED -- test_client_prefers in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.95198130607605s cumulative, 0.006859540939331055s individual

.
current test PASSED/SKIPPED -- test_scheme_http in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.9565863609314s cumulative, 0.00460505485534668s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.9615273475647s cumulative, 0.004940986633300781s individual

.
current test PASSED/SKIPPED -- test_etag_is_missing in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.96591877937317s cumulative, 0.00439143180847168s individual

.
current test PASSED/SKIPPED -- test_attribute_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.9751603603363s cumulative, 0.009241580963134766s individual

.
current test PASSED/SKIPPED -- test_port_explicit in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.97947096824646s cumulative, 0.00431060791015625s individual

.
current test PASSED/SKIPPED -- test_scheme_http in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.98425579071045s cumulative, 0.004784822463989258s individual

.
current test PASSED/SKIPPED -- test_missing_attribute_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.9902093410492s cumulative, 0.005953550338745117s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.99492287635803s cumulative, 0.004713535308837891s individual

.
current test PASSED/SKIPPED -- test_date_missing in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 174.99958205223083s cumulative, 0.004659175872802734s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 175.00440955162048s cumulative, 0.0048274993896484375s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 175.00905966758728s cumulative, 0.004650115966796875s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 175.01483464241028s cumulative, 0.005774974822998047s individual

.
current test PASSED/SKIPPED -- test_netloc_nondefault_port in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 175.02110528945923s cumulative, 0.006270647048950195s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 175.02658867835999s cumulative, 0.005483388900756836s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 175.03465175628662s cumulative, 0.008063077926635742s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 175.04013466835022s cumulative, 0.005482912063598633s individual

.
current test PASSED/SKIPPED -- test_attribute_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 175.07800197601318s cumulative, 0.03786730766296387s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 175.0904622077942s cumulative, 0.01246023178100586s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 175.09699320793152s cumulative, 0.0065310001373291016s individual

.
current test PASSED/SKIPPED -- test_range in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 175.1051721572876s cumulative, 0.008178949356079102s individual

.
current test PASSED/SKIPPED -- test_netloc_default_port in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 175.11391830444336s cumulative, 0.008746147155761719s individual

.
current test PASSED/SKIPPED -- test_nonlatin_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 175.12131524085999s cumulative, 0.0073969364166259766s individual

.
current test PASSED/SKIPPED -- test_content_length_method in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 175.12696862220764s cumulative, 0.00565338134765625s individual

.
current test PASSED/SKIPPED -- test_netloc_from_env in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 175.13196635246277s cumulative, 0.004997730255126953s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 175.13726711273193s cumulative, 0.005300760269165039s individual

.
current test PASSED/SKIPPED -- test_etag_parsing_helper in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 175.14336776733398s cumulative, 0.006100654602050781s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 175.14954495429993s cumulative, 0.006177186965942383s individual

.
current test PASSED/SKIPPED -- test_uri_http_1_0 in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 175.15575623512268s cumulative, 0.006211280822753906s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 175.16088128089905s cumulative, 0.0051250457763671875s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 175.16601729393005s cumulative, 0.005136013031005859s individual

.
current test PASSED/SKIPPED -- test_date_invalid in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 175.1723494529724s cumulative, 0.0063321590423583984s individual

.
current test PASSED/SKIPPED -- test_port_explicit in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 175.17726135253906s cumulative, 0.004911899566650391s individual

.
current test PASSED/SKIPPED -- test_app_present in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 175.18135285377502s cumulative, 0.004091501235961914s individual

.
current test PASSED/SKIPPED -- test_uri_https in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 175.18656206130981s cumulative, 0.005209207534790039s individual

.
current test PASSED/SKIPPED -- test_uri in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 175.19145154953003s cumulative, 0.004889488220214844s individual

.
current test PASSED/SKIPPED -- test_date in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 175.1994504928589s cumulative, 0.007998943328857422s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 175.20698523521423s cumulative, 0.00753474235534668s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 175.21246695518494s cumulative, 0.005481719970703125s individual

.
current test PASSED/SKIPPED -- test_content_length in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 175.2180097103119s cumulative, 0.005542755126953125s individual

.
current test PASSED/SKIPPED -- test_netloc_default_port in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 175.22227668762207s cumulative, 0.004266977310180664s individual

.
current test PASSED/SKIPPED -- test_missing_qs in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 175.22571969032288s cumulative, 0.003443002700805664s individual

.
current test PASSED/SKIPPED -- test_date_missing in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 175.23108339309692s cumulative, 0.0053637027740478516s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 175.23599004745483s cumulative, 0.004906654357910156s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 175.2407259941101s cumulative, 0.0047359466552734375s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 175.24591946601868s cumulative, 0.005193471908569336s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 175.25100111961365s cumulative, 0.005081653594970703s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 175.2556450366974s cumulative, 0.004643917083740234s individual

.
current test PASSED/SKIPPED -- test_reconstruct_url in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 175.2597668170929s cumulative, 0.0041217803955078125s individual

.
current test PASSED/SKIPPED -- test_nonlatin_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 175.266175031662s cumulative, 0.006408214569091797s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 175.27172827720642s cumulative, 0.005553245544433594s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 175.2765703201294s cumulative, 0.004842042922973633s individual

.
current test PASSED/SKIPPED -- test_attribute_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 175.28253436088562s cumulative, 0.005964040756225586s individual

.
current test PASSED/SKIPPED -- test_scheme_http in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 175.28815245628357s cumulative, 0.005618095397949219s individual

.
current test PASSED/SKIPPED -- test_netloc_from_env in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 175.2935676574707s cumulative, 0.005415201187133789s individual

.
current test PASSED/SKIPPED -- test_client_accepts_props in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 175.30193996429443s cumulative, 0.008372306823730469s individual

.
current test PASSED/SKIPPED -- test_scheme_http in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 175.30762600898743s cumulative, 0.005686044692993164s individual

.
current test PASSED/SKIPPED -- test_etag_parsing_helper in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 175.31282329559326s cumulative, 0.005197286605834961s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 175.31942296028137s cumulative, 0.0065996646881103516s individual

.
current test PASSED/SKIPPED -- test_date in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 175.32624292373657s cumulative, 0.006819963455200195s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 175.3306896686554s cumulative, 0.004446744918823242s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 175.33474206924438s cumulative, 0.004052400588989258s individual

.
current test PASSED/SKIPPED -- test_client_accepts_props in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 175.34009623527527s cumulative, 0.005354166030883789s individual

.
current test PASSED/SKIPPED -- test_relative_uri in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 175.34737420082092s cumulative, 0.007277965545654297s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 175.3526177406311s cumulative, 0.005243539810180664s individual

.
current test PASSED/SKIPPED -- test_etag in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_attrs.py: 175.35788083076477s cumulative, 0.005263090133666992s individual


tests/test_default_router.py .
current test PASSED/SKIPPED -- test_malformed_pattern in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 175.3956789970398s cumulative, 0.037798166275024414s individual

.
current test PASSED/SKIPPED -- test_params_in_non_taken_branches in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 175.40916466712952s cumulative, 0.01348567008972168s individual

.
current test PASSED/SKIPPED -- test_capture_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 175.41766786575317s cumulative, 0.008503198623657227s individual

.
current test PASSED/SKIPPED -- test_user_regression_special_chars in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 175.42366361618042s cumulative, 0.005995750427246094s individual

.
current test PASSED/SKIPPED -- test_complex in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 175.44438433647156s cumulative, 0.020720720291137695s individual

.
current test PASSED/SKIPPED -- test_invalid_field_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 175.45711421966553s cumulative, 0.012729883193969727s individual

.
current test PASSED/SKIPPED -- test_not_found in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 175.47907876968384s cumulative, 0.021964550018310547s individual

.
current test PASSED/SKIPPED -- test_literal_vs_variable in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 175.50353932380676s cumulative, 0.024460554122924805s individual

.
current test PASSED/SKIPPED -- test_not_found in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 175.5361363887787s cumulative, 0.03259706497192383s individual

.
current test PASSED/SKIPPED -- test_user_regression_special_chars in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 175.5440549850464s cumulative, 0.007918596267700195s individual

.
current test PASSED/SKIPPED -- test_invalid_field_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 175.56055450439453s cumulative, 0.01649951934814453s individual

.
current test PASSED/SKIPPED -- test_not_str in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 175.5680718421936s cumulative, 0.007517337799072266s individual

.
current test PASSED/SKIPPED -- test_not_found in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 175.59293627738953s cumulative, 0.02486443519592285s individual

.
current test PASSED/SKIPPED -- test_converters in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 175.6185598373413s cumulative, 0.025623559951782227s individual

.
current test PASSED/SKIPPED -- test_invalid_field_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 175.6390609741211s cumulative, 0.020501136779785156s individual

.
current test PASSED/SKIPPED -- test_invalid_field_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 175.6563069820404s cumulative, 0.017246007919311523s individual

.
current test PASSED/SKIPPED -- test_converters_malformed_specification in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 175.66984295845032s cumulative, 0.01353597640991211s individual

.
current test PASSED/SKIPPED -- test_options_converters_invalid_name_on_update in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 175.68393397331238s cumulative, 0.014091014862060547s individual

.
current test PASSED/SKIPPED -- test_params_in_non_taken_branches in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 175.70432806015015s cumulative, 0.020394086837768555s individual

.
current test PASSED/SKIPPED -- test_capture_path_complex in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 175.71085906028748s cumulative, 0.0065310001373291016s individual

.
current test PASSED/SKIPPED -- test_invalid_field_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 175.72671175003052s cumulative, 0.015852689743041992s individual

.
current test PASSED/SKIPPED -- test_options_converters_invalid_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 175.7433958053589s cumulative, 0.01668405532836914s individual

.
current test PASSED/SKIPPED -- test_capture_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 175.75434684753418s cumulative, 0.010951042175292969s individual

.
current test PASSED/SKIPPED -- test_options_converters_set in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 175.78049850463867s cumulative, 0.026151657104492188s individual

.
current test PASSED/SKIPPED -- test_invalid_field_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 175.79680728912354s cumulative, 0.01630878448486328s individual

.
current test PASSED/SKIPPED -- test_literal_vs_variable in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 175.82682132720947s cumulative, 0.0300140380859375s individual

.
current test PASSED/SKIPPED -- test_literal_vs_variable in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 175.85518670082092s cumulative, 0.028365373611450195s individual

.
current test PASSED/SKIPPED -- test_converters_with_invalid_options in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 175.8755009174347s cumulative, 0.02031421661376953s individual

.
current test PASSED/SKIPPED -- test_converters in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 175.8945541381836s cumulative, 0.019053220748901367s individual

.
current test PASSED/SKIPPED -- test_invalid_field_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 175.90808510780334s cumulative, 0.013530969619750977s individual

.
current test PASSED/SKIPPED -- test_options_converters_invalid_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 175.92059779167175s cumulative, 0.012512683868408203s individual

.
current test PASSED/SKIPPED -- test_not_found in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 175.944477558136s cumulative, 0.0238797664642334s individual

.
current test PASSED/SKIPPED -- test_literal_vs_variable in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 175.9706449508667s cumulative, 0.02616739273071289s individual

.
current test PASSED/SKIPPED -- test_invalid_field_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 175.99100589752197s cumulative, 0.020360946655273438s individual

.
current test PASSED/SKIPPED -- test_user_regression_special_chars in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 175.99977684020996s cumulative, 0.008770942687988281s individual

.
current test PASSED/SKIPPED -- test_capture_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 176.0151731967926s cumulative, 0.015396356582641602s individual

.
current test PASSED/SKIPPED -- test_not_found in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 176.06574487686157s cumulative, 0.05057168006896973s individual

.
current test PASSED/SKIPPED -- test_options_converters_update in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 176.11581254005432s cumulative, 0.05006766319274902s individual

.
current test PASSED/SKIPPED -- test_literal_vs_variable in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 176.17534160614014s cumulative, 0.05952906608581543s individual

.
current test PASSED/SKIPPED -- test_complex in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 176.22844862937927s cumulative, 0.05310702323913574s individual

.
current test PASSED/SKIPPED -- test_capture_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 176.24792575836182s cumulative, 0.019477128982543945s individual

.
current test PASSED/SKIPPED -- test_literal_segment in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 176.27792644500732s cumulative, 0.030000686645507812s individual

.
current test PASSED/SKIPPED -- test_not_found in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 176.3053686618805s cumulative, 0.027442216873168945s individual

.
current test PASSED/SKIPPED -- test_root_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 176.3102674484253s cumulative, 0.004898786544799805s individual

.
current test PASSED/SKIPPED -- test_not_str in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 176.31938362121582s cumulative, 0.009116172790527344s individual

.
current test PASSED/SKIPPED -- test_invalid_field_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 176.33593845367432s cumulative, 0.016554832458496094s individual

.
current test PASSED/SKIPPED -- test_capture_path_complex in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 176.3401381969452s cumulative, 0.0041997432708740234s individual

.
current test PASSED/SKIPPED -- test_literal_vs_variable in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 176.37319326400757s cumulative, 0.03305506706237793s individual

.
current test PASSED/SKIPPED -- test_not_str in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 176.37996697425842s cumulative, 0.006773710250854492s individual



def find(path, return_values, patterns, converters, params):
    path_len = len(path)
    if path_len > 0:
        if path[0] == 'repos':
            if path_len > 1:
                if path_len > 2:
                    if path_len > 3:
                        if path[3] == 'commits':
                            if path_len == 4:
                                params['org'] = path[1]
                                params['repo'] = path[2]
                                return return_values[3]
                            return None
                        if path[3] == 'compare':
                            if path_len > 4:
                                if path[4] == 'all':
                                    if path_len == 5:
                                        params['org'] = path[1]
                                        params['repo'] = path[2]
                                        return return_values[4]
                                match = patterns[0].match(path[4])  # ^(?P<usr0>.+):(?P<branch0>.+)\.\.\.(?P<usr1>.+):(?P<branch1>.+)$
                                if match is not None:
                                    dict_match_3 = match.groupdict()
                                    if path_len > 5:
                                        if path[5] == 'full':
                                            if path_len == 6:
                                                params['org'] = path[1]
                                                params['repo'] = path[2]
                                                params.update(dict_match_3)
                                                return return_values[6]
                                        if path[5] == 'part':
                                            if path_len == 6:
                                                params['org'] = path[1]
                                                params['repo'] = path[2]
                                                params.update(dict_match_3)
                                                return return_values[7]
                                    if path_len == 5:
                                        params['org'] = path[1]
                                        params['repo'] = path[2]
                                        params.update(dict_match_3)
                                        return return_values[5]
                                match = patterns[1].match(path[4])  # ^(?P<usr0>.+):(?P<branch0>.+)$
                                if match is not None:
                                    dict_match_3 = match.groupdict()
                                    if path_len > 5:
                                        if path[5] == 'full':
                                            if path_len == 6:
                                                params['org'] = path[1]
                                                params['repo'] = path[2]
                                                params.update(dict_match_3)
                                                return return_values[9]
                                    if path_len == 5:
                                        params['org'] = path[1]
                                        params['repo'] = path[2]
                                        params.update(dict_match_3)
                                        return return_values[8]
                            return None
                        return None
                    if path_len == 3:
                        params['org'] = path[1]
                        params['repo'] = path[2]
                        return return_values[2]
                    return None
                if path_len == 2:
                    params['org'] = path[1]
                    return return_values[1]
                return None
            if path_len == 1:
                return return_values[0]
            return None
        if path[0] == 'teams':
            if path_len > 1:
                if path[1] == 'default':
                    if path_len > 2:
                        if path[2] == 'members':
                            if path_len > 3:
                                if path[3] == 'thing':
                                    if path_len == 4:
                                        return return_values[11]
                    if path_len == 2:
                        return return_values[10]
                if path_len > 2:
                    if path[2] == 'members':
                        if path_len == 3:
                            params['id'] = path[1]
                            return return_values[13]
                if path_len == 2:
                    params['id'] = path[1]
                    return return_values[12]
            return None
        if path[0] == 'user':
            if path_len > 1:
                if path[1] == 'memberships':
                    if path_len == 2:
                        return return_values[14]
                    return None
                return None
            return None
        if path[0] == 'emojis':
            if path_len > 1:
                if path[1] == 'signs':
                    if path_len > 2:
                        if path[2] == '0':
                            if path_len == 3:
                                return return_values[16]
                        if path[2] == '42':
                            if path_len > 3:
                                if path[3] == 'small.jpg':
                                    if path_len == 4:
                                        return return_values[18]
                            if path_len == 3:
                                return return_values[17]
                        if path[2] == '78':
                            if path_len > 3:
                                if path[3] == 'small.png':
                                    if path_len == 4:
                                        return return_values[19]
                                if path[3] == 'small(png)':
                                    if path_len == 4:
                                        return return_values[20]
                                if path[3] == 'small_png':
                                    if path_len == 4:
                                        return return_values[21]
                        if path_len == 3:
                            params['id'] = path[2]
                            return return_values[22]
                    return None
                return None
            if path_len == 1:
                return return_values[15]
            return None
        if path[0] == 'images':
            if path_len > 1:
                match = patterns[2].match(path[1])  # ^(?P<id>.+)\.gif$
                if match is not None:
                    dict_match_1 = match.groupdict()
                    if path_len == 2:
                        params.update(dict_match_1)
                        return return_values[23]
                    return None
                return None
            return None
        if path[0] == 'gists':
            if path_len > 1:
                if path[1] == 'first':
                    if path_len == 2:
                        return return_values[24]
                if path_len > 2:
                    if path[2] == 'raw':
                        if path_len == 3:
                            params['id'] = path[1]
                            return return_values[25]
                    if path_len == 3:
                        params['id'] = path[1]
                        params['representation'] = path[2]
                        return return_values[26]
            return None
        if path[0] == 'item':
            if path_len > 1:
                if path_len == 2:
                    params['q'] = path[1]
                    return return_values[27]
                return None
            return None
        if path[0] == 'cvt':
            if path_len > 1:
                if path[1] == 'teams':
                    if path_len > 2:
                        if path[2] == 'default':
                            if path_len > 3:
                                if path[3] == 'members':
                                    if path_len > 4:
                                        match = patterns[3].match(path[4])  # ^(?P<id>.+)-(?P<tenure>.+)$
                                        if match is not None:
                                            groups = match.groupdict()
                                            fragment = groups.pop('id')
                                            field_value_1 = converters[0].convert(fragment)
                                            if field_value_1 is not None:
                                                fragment = groups.pop('tenure')
                                                field_value_2 = converters[1].convert(fragment)
                                                if field_value_2 is not None:
                                                    if path_len == 5:
                                                        params['id'] = field_value_1
                                                        params['tenure'] = field_value_2
                                                        return return_values[29]
                            if path_len == 3:
                                return return_values[28]
                        fragment = path[2]
                        field_value_1 = converters[2].convert(fragment)
                        if field_value_1 is not None:
                            if path_len > 3:
                                if path[3] == 'members':
                                    if path_len == 4:
                                        params['id'] = field_value_1
                                        return return_values[31]
                            if path_len == 3:
                                params['id'] = field_value_1
                                return return_values[30]
                    return None
                if path[1] == 'repos':
                    if path_len > 2:
                        if path_len > 3:
                            if path_len > 4:
                                if path[4] == 'compare':
                                    if path_len > 5:
                                        match = patterns[4].match(path[5])  # ^(?P<usr0>.+):(?P<branch0>.+)\.\.\.(?P<usr1>.+):(?P<branch1>.+)$
                                        if match is not None:
                                            groups = match.groupdict()
                                            fragment = groups.pop('branch0')
                                            field_value_3 = converters[3].convert(fragment)
                                            if field_value_3 is not None:
                                                fragment = groups.pop('branch1')
                                                field_value_4 = converters[4].convert(fragment)
                                                if field_value_4 is not None:
                                                    dict_groups_5 = groups
                                                    if path_len > 6:
                                                        if path[6] == 'part':
                                                            if path_len == 7:
                                                                params['org'] = path[2]
                                                                params['repo'] = path[3]
                                                                params['branch0'] = field_value_3
                                                                params['branch1'] = field_value_4
                                                                params.update(dict_groups_5)
                                                                return return_values[32]
                                        match = patterns[5].match(path[5])  # ^(?P<usr0>.+):(?P<branch0>.+)$
                                        if match is not None:
                                            groups = match.groupdict()
                                            fragment = groups.pop('branch0')
                                            field_value_3 = converters[5].convert(fragment)
                                            if field_value_3 is not None:
                                                dict_groups_4 = groups
                                                if path_len > 6:
                                                    if path[6] == 'full':
                                                        if path_len == 7:
                                                            params['org'] = path[2]
                                                            params['repo'] = path[3]
                                                            params['branch0'] = field_value_3
                                                            params.update(dict_groups_4)
                                                            return return_values[34]
                                                if path_len == 6:
                                                    params['org'] = path[2]
                                                    params['repo'] = path[3]
                                                    params['branch0'] = field_value_3
                                                    params.update(dict_groups_4)
                                                    return return_values[33]
                                    return None
                                return None
                            return None
                        return None
                    return None
                return None
            return None
        return None
    return None

.
current test PASSED/SKIPPED -- test_print_src in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 176.40407967567444s cumulative, 0.024112701416015625s individual

.
current test PASSED/SKIPPED -- test_converters_with_invalid_options in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 176.46450638771057s cumulative, 0.06042671203613281s individual

.
current test PASSED/SKIPPED -- test_invalid_field_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 176.4925765991211s cumulative, 0.02807021141052246s individual

.
current test PASSED/SKIPPED -- test_not_found in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 176.52725481987s cumulative, 0.03467822074890137s individual

.
current test PASSED/SKIPPED -- test_capture_path_complex in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 176.53346300125122s cumulative, 0.006208181381225586s individual

.
current test PASSED/SKIPPED -- test_literal_vs_variable in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 176.55716466903687s cumulative, 0.02370166778564453s individual

.
current test PASSED/SKIPPED -- test_variable in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 176.58806347846985s cumulative, 0.0308988094329834s individual

.
current test PASSED/SKIPPED -- test_params_in_non_taken_branches in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 176.59958362579346s cumulative, 0.011520147323608398s individual

.
current test PASSED/SKIPPED -- test_user_regression_special_chars in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 176.60577130317688s cumulative, 0.0061876773834228516s individual

.
current test PASSED/SKIPPED -- test_user_regression_special_chars in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 176.6111147403717s cumulative, 0.005343437194824219s individual

.
current test PASSED/SKIPPED -- test_conflict in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 176.62360072135925s cumulative, 0.012485980987548828s individual

.
current test PASSED/SKIPPED -- test_capture_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 176.63390064239502s cumulative, 0.010299921035766602s individual

.
current test PASSED/SKIPPED -- test_non_conflict in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 176.65589261054993s cumulative, 0.021991968154907227s individual

.
current test PASSED/SKIPPED -- test_literal_vs_variable in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 176.69191646575928s cumulative, 0.036023855209350586s individual

.
current test PASSED/SKIPPED -- test_invalid_field_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 176.71118140220642s cumulative, 0.019264936447143555s individual

.
current test PASSED/SKIPPED -- test_invalid_field_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 176.72881889343262s cumulative, 0.01763749122619629s individual

.
current test PASSED/SKIPPED -- test_user_regression_special_chars in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 176.74075484275818s cumulative, 0.011935949325561523s individual

.
current test PASSED/SKIPPED -- test_dead_segment in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 176.78833961486816s cumulative, 0.04758477210998535s individual

.
current test PASSED/SKIPPED -- test_not_found in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 176.82214832305908s cumulative, 0.03380870819091797s individual

.
current test PASSED/SKIPPED -- test_invalid_field_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 176.8364496231079s cumulative, 0.014301300048828125s individual

.
current test PASSED/SKIPPED -- test_non_conflict in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 176.85294938087463s cumulative, 0.016499757766723633s individual

.
current test PASSED/SKIPPED -- test_not_found in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 176.88039827346802s cumulative, 0.02744889259338379s individual

.
current test PASSED/SKIPPED -- test_user_regression_special_chars in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 176.88958406448364s cumulative, 0.009185791015625s individual

.
current test PASSED/SKIPPED -- test_match_entire_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 176.89844179153442s cumulative, 0.00885772705078125s individual

.
current test PASSED/SKIPPED -- test_user_regression_special_chars in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 176.90977883338928s cumulative, 0.011337041854858398s individual

.
current test PASSED/SKIPPED -- test_user_regression_special_chars in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 176.92124032974243s cumulative, 0.011461496353149414s individual

.
current test PASSED/SKIPPED -- test_invalid_field_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 176.94562792778015s cumulative, 0.024387598037719727s individual

.
current test PASSED/SKIPPED -- test_not_found in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 176.97768783569336s cumulative, 0.03205990791320801s individual

.
current test PASSED/SKIPPED -- test_capture_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 176.99418377876282s cumulative, 0.016495943069458008s individual

.
current test PASSED/SKIPPED -- test_invalid_field_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 177.01546001434326s cumulative, 0.021276235580444336s individual

.
current test PASSED/SKIPPED -- test_dead_segment in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 177.04160690307617s cumulative, 0.026146888732910156s individual

.
current test PASSED/SKIPPED -- test_invalid_field_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 177.06576991081238s cumulative, 0.024163007736206055s individual

.
current test PASSED/SKIPPED -- test_literal_vs_variable in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 177.1002209186554s cumulative, 0.03445100784301758s individual

.
current test PASSED/SKIPPED -- test_not_found in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 177.1259639263153s cumulative, 0.02574300765991211s individual

.
current test PASSED/SKIPPED -- test_match_entire_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 177.133052110672s cumulative, 0.007088184356689453s individual

.
current test PASSED/SKIPPED -- test_invalid_field_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 177.14669394493103s cumulative, 0.013641834259033203s individual

.
current test PASSED/SKIPPED -- test_dead_segment in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 177.1723756790161s cumulative, 0.025681734085083008s individual

.
current test PASSED/SKIPPED -- test_duplicate_field_names in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 177.17645406723022s cumulative, 0.004078388214111328s individual

.
current test PASSED/SKIPPED -- test_user_regression_special_chars in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 177.1842975616455s cumulative, 0.007843494415283203s individual

.
current test PASSED/SKIPPED -- test_duplicate_field_names in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 177.18785905838013s cumulative, 0.0035614967346191406s individual

.
current test PASSED/SKIPPED -- test_converters in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 177.20952105522156s cumulative, 0.021661996841430664s individual

.
current test PASSED/SKIPPED -- test_not_found in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 177.2364320755005s cumulative, 0.026911020278930664s individual

.
current test PASSED/SKIPPED -- test_not_found in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 177.2538878917694s cumulative, 0.0174558162689209s individual

.
current test PASSED/SKIPPED -- test_converters_with_invalid_options in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 177.26746249198914s cumulative, 0.013574600219726562s individual

.
current test PASSED/SKIPPED -- test_capture_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 177.27587509155273s cumulative, 0.008412599563598633s individual

.
current test PASSED/SKIPPED -- test_complex in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 177.29614233970642s cumulative, 0.020267248153686523s individual

.
current test PASSED/SKIPPED -- test_not_str in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 177.3039391040802s cumulative, 0.007796764373779297s individual

.
current test PASSED/SKIPPED -- test_options_converters_invalid_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 177.31699585914612s cumulative, 0.013056755065917969s individual

.
current test PASSED/SKIPPED -- test_user_regression_special_chars in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 177.3223946094513s cumulative, 0.005398750305175781s individual

.
current test PASSED/SKIPPED -- test_capture_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 177.33098340034485s cumulative, 0.008588790893554688s individual

.
current test PASSED/SKIPPED -- test_invalid_field_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 177.34207320213318s cumulative, 0.011089801788330078s individual

.
current test PASSED/SKIPPED -- test_subsegment_not_found in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 177.36049509048462s cumulative, 0.01842188835144043s individual

.
current test PASSED/SKIPPED -- test_user_regression_special_chars in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 177.36546158790588s cumulative, 0.0049664974212646484s individual

.
current test PASSED/SKIPPED -- test_not_found in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 177.39000511169434s cumulative, 0.02454352378845215s individual

.
current test PASSED/SKIPPED -- test_malformed_pattern in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 177.41690731048584s cumulative, 0.026902198791503906s individual

.
current test PASSED/SKIPPED -- test_user_regression_versioned_url in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 177.42436718940735s cumulative, 0.007459878921508789s individual

.
current test PASSED/SKIPPED -- test_not_found in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 177.45368647575378s cumulative, 0.029319286346435547s individual

.
current test PASSED/SKIPPED -- test_converters_with_invalid_options in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 177.4654061794281s cumulative, 0.011719703674316406s individual

.
current test PASSED/SKIPPED -- test_options_converters_invalid_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 177.47885370254517s cumulative, 0.01344752311706543s individual

.
current test PASSED/SKIPPED -- test_non_conflict in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 177.50179362297058s cumulative, 0.02293992042541504s individual

.
current test PASSED/SKIPPED -- test_invalid_field_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 177.51859664916992s cumulative, 0.01680302619934082s individual

.
current test PASSED/SKIPPED -- test_invalid_field_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 177.5319619178772s cumulative, 0.01336526870727539s individual

.
current test PASSED/SKIPPED -- test_capture_path_no_children in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 177.54249143600464s cumulative, 0.010529518127441406s individual

.
current test PASSED/SKIPPED -- test_not_found in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 177.56358122825623s cumulative, 0.021089792251586914s individual

.
current test PASSED/SKIPPED -- test_not_found in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 177.64071488380432s cumulative, 0.0771336555480957s individual

.
current test PASSED/SKIPPED -- test_capture_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 177.65210461616516s cumulative, 0.011389732360839844s individual

.
current test PASSED/SKIPPED -- test_capture_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 177.66093587875366s cumulative, 0.008831262588500977s individual

.
current test PASSED/SKIPPED -- test_complex_alt in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 177.69161868095398s cumulative, 0.030682802200317383s individual

.
current test PASSED/SKIPPED -- test_converters in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 177.71693086624146s cumulative, 0.025312185287475586s individual

.
current test PASSED/SKIPPED -- test_options_converters_invalid_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 177.73224544525146s cumulative, 0.015314579010009766s individual

.
current test PASSED/SKIPPED -- test_not_found in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 177.76796698570251s cumulative, 0.035721540451049805s individual

.
current test PASSED/SKIPPED -- test_converters in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 177.8027582168579s cumulative, 0.03479123115539551s individual

.
current test PASSED/SKIPPED -- test_invalid_field_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 177.81547117233276s cumulative, 0.012712955474853516s individual

.
current test PASSED/SKIPPED -- test_capture_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 177.82309865951538s cumulative, 0.0076274871826171875s individual

.
current test PASSED/SKIPPED -- test_capture_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 177.8318853378296s cumulative, 0.008786678314208984s individual

.
current test PASSED/SKIPPED -- test_literal_vs_variable in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 177.8665909767151s cumulative, 0.03470563888549805s individual

.
current test PASSED/SKIPPED -- test_literal_vs_variable in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 177.89335012435913s cumulative, 0.02675914764404297s individual

.
current test PASSED/SKIPPED -- test_complex_alt in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 177.91634440422058s cumulative, 0.022994279861450195s individual

.
current test PASSED/SKIPPED -- test_invalid_field_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 177.93144369125366s cumulative, 0.015099287033081055s individual

.
current test PASSED/SKIPPED -- test_capture_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 177.93977618217468s cumulative, 0.008332490921020508s individual

.
current test PASSED/SKIPPED -- test_converters in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 177.9740595817566s cumulative, 0.03428339958190918s individual

.
current test PASSED/SKIPPED -- test_literal_vs_variable in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 177.99540400505066s cumulative, 0.021344423294067383s individual

.
current test PASSED/SKIPPED -- test_match_entire_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 178.00245094299316s cumulative, 0.007046937942504883s individual

.
current test PASSED/SKIPPED -- test_not_found in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 178.02179861068726s cumulative, 0.019347667694091797s individual

.
current test PASSED/SKIPPED -- test_literal_vs_variable in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 178.04009771347046s cumulative, 0.018299102783203125s individual

.
current test PASSED/SKIPPED -- test_user_regression_special_chars in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 178.04529309272766s cumulative, 0.0051953792572021484s individual

.
current test PASSED/SKIPPED -- test_user_regression_special_chars in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 178.0492241382599s cumulative, 0.0039310455322265625s individual

.
current test PASSED/SKIPPED -- test_not_found in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 178.0666229724884s cumulative, 0.017398834228515625s individual

.
current test PASSED/SKIPPED -- test_literal_vs_variable in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 178.09087419509888s cumulative, 0.024251222610473633s individual

.
current test PASSED/SKIPPED -- test_conflict in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 178.10201716423035s cumulative, 0.011142969131469727s individual

.
current test PASSED/SKIPPED -- test_user_regression_recipes in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 178.10789346694946s cumulative, 0.005876302719116211s individual

.
current test PASSED/SKIPPED -- test_options_converters_update in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 178.1264340877533s cumulative, 0.018540620803833008s individual

.
current test PASSED/SKIPPED -- test_capture_path_complex in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 178.13092803955078s cumulative, 0.0044939517974853516s individual

.
current test PASSED/SKIPPED -- test_duplicate_field_names in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 178.13409519195557s cumulative, 0.0031671524047851562s individual

.
current test PASSED/SKIPPED -- test_options_converters_invalid_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 178.14521193504333s cumulative, 0.011116743087768555s individual

.
current test PASSED/SKIPPED -- test_params_in_non_taken_branches in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 178.1564872264862s cumulative, 0.011275291442871094s individual

.
current test PASSED/SKIPPED -- test_invalid_field_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 178.16752123832703s cumulative, 0.011034011840820312s individual

.
current test PASSED/SKIPPED -- test_capture_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 178.17481207847595s cumulative, 0.007290840148925781s individual

.
current test PASSED/SKIPPED -- test_converters_malformed_specification in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 178.18535900115967s cumulative, 0.01054692268371582s individual

.
current test PASSED/SKIPPED -- test_not_found in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 178.211345911026s cumulative, 0.025986909866333008s individual

.
current test PASSED/SKIPPED -- test_capture_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 178.2190499305725s cumulative, 0.007704019546508789s individual

.
current test PASSED/SKIPPED -- test_capture_path_no_match in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 178.22537064552307s cumulative, 0.0063207149505615234s individual

.
current test PASSED/SKIPPED -- test_override in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 178.25150871276855s cumulative, 0.0261380672454834s individual

.
current test PASSED/SKIPPED -- test_user_regression_special_chars in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 178.26040244102478s cumulative, 0.008893728256225586s individual

.
current test PASSED/SKIPPED -- test_literal in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 178.2831265926361s cumulative, 0.022724151611328125s individual

.
current test PASSED/SKIPPED -- test_invalid_field_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 178.29743075370789s cumulative, 0.014304161071777344s individual

.
current test PASSED/SKIPPED -- test_params_in_non_taken_branches in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 178.3323483467102s cumulative, 0.034917593002319336s individual

.
current test PASSED/SKIPPED -- test_user_regression_special_chars in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 178.34431743621826s cumulative, 0.01196908950805664s individual

.
current test PASSED/SKIPPED -- test_not_str in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 178.352299451828s cumulative, 0.007982015609741211s individual

.
current test PASSED/SKIPPED -- test_duplicate_field_names in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 178.3593454360962s cumulative, 0.0070459842681884766s individual

.
current test PASSED/SKIPPED -- test_dead_segment in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 178.39563393592834s cumulative, 0.03628849983215332s individual

.
current test PASSED/SKIPPED -- test_user_regression_special_chars in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 178.40407967567444s cumulative, 0.00844573974609375s individual

.
current test PASSED/SKIPPED -- test_conflict in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 178.4262192249298s cumulative, 0.022139549255371094s individual

.
current test PASSED/SKIPPED -- test_single_character_field_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 178.4574966430664s cumulative, 0.03127741813659668s individual

.
current test PASSED/SKIPPED -- test_options_converters_invalid_name in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 178.47027325630188s cumulative, 0.012776613235473633s individual

.
current test PASSED/SKIPPED -- test_match_entire_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 178.48138451576233s cumulative, 0.011111259460449219s individual

.
current test PASSED/SKIPPED -- test_not_found in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 178.51388239860535s cumulative, 0.03249788284301758s individual

.
current test PASSED/SKIPPED -- test_multivar in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 178.5480842590332s cumulative, 0.034201860427856445s individual

.
current test PASSED/SKIPPED -- test_conflict in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 178.57144784927368s cumulative, 0.023363590240478516s individual

.
current test PASSED/SKIPPED -- test_user_regression_special_chars in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 178.58225965499878s cumulative, 0.010811805725097656s individual

.
current test PASSED/SKIPPED -- test_not_str in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 178.59184885025024s cumulative, 0.009589195251464844s individual

.
current test PASSED/SKIPPED -- test_not_found in /home/kaiyaok2/PythonProjects/falcon/tests/test_default_router.py: 178.6384298801422s cumulative, 0.04658102989196777s individual


tests/test_hello.py .
current test PASSED/SKIPPED -- test_no_route in /home/kaiyaok2/PythonProjects/falcon/tests/test_hello.py: 178.65497851371765s cumulative, 0.016548633575439453s individual

.
current test PASSED/SKIPPED -- test_stream_chunked in /home/kaiyaok2/PythonProjects/falcon/tests/test_hello.py: 178.6698887348175s cumulative, 0.014910221099853516s individual

.
current test PASSED/SKIPPED -- test_filelike in /home/kaiyaok2/PythonProjects/falcon/tests/test_hello.py: 178.69010400772095s cumulative, 0.020215272903442383s individual

.
current test PASSED/SKIPPED -- test_no_body_on_head in /home/kaiyaok2/PythonProjects/falcon/tests/test_hello.py: 178.70523118972778s cumulative, 0.015127182006835938s individual

.
current test PASSED/SKIPPED -- test_filelike_using_helper in /home/kaiyaok2/PythonProjects/falcon/tests/test_hello.py: 178.72084760665894s cumulative, 0.015616416931152344s individual

.
current test PASSED/SKIPPED -- test_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_hello.py: 178.74108219146729s cumulative, 0.02023458480834961s individual

.
current test PASSED/SKIPPED -- test_stream_known_len in /home/kaiyaok2/PythonProjects/falcon/tests/test_hello.py: 178.75677585601807s cumulative, 0.01569366455078125s individual

.
current test PASSED/SKIPPED -- test_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_hello.py: 178.77323246002197s cumulative, 0.01645660400390625s individual

.
current test PASSED/SKIPPED -- test_root_route in /home/kaiyaok2/PythonProjects/falcon/tests/test_hello.py: 178.78499913215637s cumulative, 0.011766672134399414s individual

.
current test PASSED/SKIPPED -- test_env_headers_list_of_tuples in /home/kaiyaok2/PythonProjects/falcon/tests/test_hello.py: 178.7913637161255s cumulative, 0.006364583969116211s individual

.
current test PASSED/SKIPPED -- test_status_not_set in /home/kaiyaok2/PythonProjects/falcon/tests/test_hello.py: 178.80393385887146s cumulative, 0.01257014274597168s individual

.
current test PASSED/SKIPPED -- test_filelike_closing in /home/kaiyaok2/PythonProjects/falcon/tests/test_hello.py: 178.81948590278625s cumulative, 0.015552043914794922s individual

.
current test PASSED/SKIPPED -- test_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_hello.py: 178.83658385276794s cumulative, 0.017097949981689453s individual

.
current test PASSED/SKIPPED -- test_filelike_closing in /home/kaiyaok2/PythonProjects/falcon/tests/test_hello.py: 178.85032558441162s cumulative, 0.013741731643676758s individual


tests/test_deprecations.py .
current test PASSED/SKIPPED -- test_bounded_stream in /home/kaiyaok2/PythonProjects/falcon/tests/test_deprecations.py: 178.85405206680298s cumulative, 0.003726482391357422s individual


tests/test_compiled_router.py .
current test PASSED/SKIPPED -- test_cannot_replace_compiled in /home/kaiyaok2/PythonProjects/falcon/tests/test_compiled_router.py: 178.86016583442688s cumulative, 0.006113767623901367s individual

.
current test PASSED/SKIPPED -- test_compile in /home/kaiyaok2/PythonProjects/falcon/tests/test_compiled_router.py: 178.87325525283813s cumulative, 0.013089418411254883s individual

.
current test PASSED/SKIPPED -- test_no_compile_kw in /home/kaiyaok2/PythonProjects/falcon/tests/test_compiled_router.py: 178.88745379447937s cumulative, 0.014198541641235352s individual

.
current test PASSED/SKIPPED -- test_no_compile_kw in /home/kaiyaok2/PythonProjects/falcon/tests/test_compiled_router.py: 178.89532041549683s cumulative, 0.007866621017456055s individual

.
current test PASSED/SKIPPED -- test_add_route_after_first_request in /home/kaiyaok2/PythonProjects/falcon/tests/test_compiled_router.py: 178.9062855243683s cumulative, 0.010965108871459961s individual

.
current test PASSED/SKIPPED -- test_converter_not_subclass in /home/kaiyaok2/PythonProjects/falcon/tests/test_compiled_router.py: 178.91719222068787s cumulative, 0.010906696319580078s individual

.
current test PASSED/SKIPPED -- test_find_src in /home/kaiyaok2/PythonProjects/falcon/tests/test_compiled_router.py: 178.92376160621643s cumulative, 0.006569385528564453s individual

.
current test PASSED/SKIPPED -- test_no_compile_kw in /home/kaiyaok2/PythonProjects/falcon/tests/test_compiled_router.py: 178.93799757957458s cumulative, 0.014235973358154297s individual

.
current test PASSED/SKIPPED -- test_no_compile_kw in /home/kaiyaok2/PythonProjects/falcon/tests/test_compiled_router.py: 178.9518620967865s cumulative, 0.013864517211914062s individual


tests/test_media_multipart.py .
current test PASSED/SKIPPED -- test_too_many_body_parts in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 178.97770738601685s cumulative, 0.02584528923034668s individual


tests/asgi/test_sse.py .
current test PASSED/SKIPPED -- test_invalid_event_values in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_sse.py: 178.98652243614197s cumulative, 0.00881505012512207s individual

.
current test PASSED/SKIPPED -- test_no_events in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_sse.py: 179.00104594230652s cumulative, 0.014523506164550781s individual

.
current test PASSED/SKIPPED -- test_multiple_events in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_sse.py: 179.1035873889923s cumulative, 0.10254144668579102s individual

.
current test PASSED/SKIPPED -- test_use_media_handler_dumps in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_sse.py: 179.11972737312317s cumulative, 0.016139984130859375s individual

.
current test PASSED/SKIPPED -- test_non_iterable in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_sse.py: 179.1330201625824s cumulative, 0.013292789459228516s individual

.
current test PASSED/SKIPPED -- test_single_event in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_sse.py: 179.15597558021545s cumulative, 0.02295541763305664s individual

.
current test PASSED/SKIPPED -- test_no_json_media_handler in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_sse.py: 179.17130064964294s cumulative, 0.015325069427490234s individual


tests/test_media_multipart.py .
current test PASSED/SKIPPED -- test_random_form in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 180.03337454795837s cumulative, 0.8620738983154297s individual


tests/test_response_body.py .
current test PASSED/SKIPPED -- test_content_length_not_set_when_streaming_response in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_body.py: 180.0737009048462s cumulative, 0.04032635688781738s individual

.
current test PASSED/SKIPPED -- test_content_length_not_set_when_streaming_response in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_body.py: 180.10137939453125s cumulative, 0.027678489685058594s individual

.
current test PASSED/SKIPPED -- test_response_repr in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_body.py: 180.11836433410645s cumulative, 0.016984939575195312s individual

.
current test PASSED/SKIPPED -- test_content_length_set_on_head_with_no_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_body.py: 180.13555574417114s cumulative, 0.017191410064697266s individual

.
current test PASSED/SKIPPED -- test_response_body_rendition_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_body.py: 180.1566867828369s cumulative, 0.021131038665771484s individual

.
current test PASSED/SKIPPED -- test_unsupported_response_content_type in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_body.py: 180.1714267730713s cumulative, 0.014739990234375s individual

.
current test PASSED/SKIPPED -- test_response_repr in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_body.py: 180.18167185783386s cumulative, 0.010245084762573242s individual

.
current test PASSED/SKIPPED -- test_append_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_body.py: 180.1955292224884s cumulative, 0.013857364654541016s individual

.
current test PASSED/SKIPPED -- test_content_length_not_set_when_streaming_response in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_body.py: 180.23259139060974s cumulative, 0.03706216812133789s individual

.
current test PASSED/SKIPPED -- test_content_length_not_set_when_streaming_response in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_body.py: 180.25404906272888s cumulative, 0.021457672119140625s individual

.
current test PASSED/SKIPPED -- test_append_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_body.py: 180.26757287979126s cumulative, 0.01352381706237793s individual


tests/test_cmd_inspect_app.py F
current test FAILED -- test_routes_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_cmd_inspect_app.py: 180.65681385993958s cumulative, 0.38924098014831543s individual

F
current test FAILED -- test_inspect in /home/kaiyaok2/PythonProjects/falcon/tests/test_cmd_inspect_app.py: 180.9379231929779s cumulative, 0.2811093330383301s individual

F
current test FAILED -- test_routes_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_cmd_inspect_app.py: 181.18053674697876s cumulative, 0.2426135540008545s individual

F
current test FAILED -- test_routes_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_cmd_inspect_app.py: 181.41849064826965s cumulative, 0.23795390129089355s individual

F
current test FAILED -- test_inspect in /home/kaiyaok2/PythonProjects/falcon/tests/test_cmd_inspect_app.py: 181.72148609161377s cumulative, 0.3029954433441162s individual

F
current test FAILED -- test_routes_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_cmd_inspect_app.py: 181.9113645553589s cumulative, 0.1898784637451172s individual

F
current test FAILED -- test_inspect in /home/kaiyaok2/PythonProjects/falcon/tests/test_cmd_inspect_app.py: 182.12167382240295s cumulative, 0.21030926704406738s individual

F
current test FAILED -- test_inspect in /home/kaiyaok2/PythonProjects/falcon/tests/test_cmd_inspect_app.py: 182.31180000305176s cumulative, 0.1901261806488037s individual

F
current test FAILED -- test_load_app_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_cmd_inspect_app.py: 182.54097199440002s cumulative, 0.2291719913482666s individual

F
current test FAILED -- test_load_app in /home/kaiyaok2/PythonProjects/falcon/tests/test_cmd_inspect_app.py: 182.85558581352234s cumulative, 0.31461381912231445s individual

F
current test FAILED -- test_load_app_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_cmd_inspect_app.py: 183.1731252670288s cumulative, 0.3175394535064697s individual

F
current test FAILED -- test_load_app_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_cmd_inspect_app.py: 183.4638786315918s cumulative, 0.2907533645629883s individual

F
current test FAILED -- test_load_app in /home/kaiyaok2/PythonProjects/falcon/tests/test_cmd_inspect_app.py: 183.7733862400055s cumulative, 0.3095076084136963s individual


tests/test_response.py .
current test PASSED/SKIPPED -- test_response_attempt_to_set_read_only_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_response.py: 183.7861578464508s cumulative, 0.0127716064453125s individual

.
current test PASSED/SKIPPED -- test_response_set_content_type_not_set in /home/kaiyaok2/PythonProjects/falcon/tests/test_response.py: 183.79500007629395s cumulative, 0.008842229843139648s individual

.
current test PASSED/SKIPPED -- test_response_removed_stream_len in /home/kaiyaok2/PythonProjects/falcon/tests/test_response.py: 183.80375051498413s cumulative, 0.008750438690185547s individual

.
current test PASSED/SKIPPED -- test_response_option_mimetype_init in /home/kaiyaok2/PythonProjects/falcon/tests/test_response.py: 183.82112097740173s cumulative, 0.01737046241760254s individual

.
current test PASSED/SKIPPED -- test_response_get_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_response.py: 183.83367538452148s cumulative, 0.012554407119750977s individual

.
current test PASSED/SKIPPED -- test_response_removed_stream_len in /home/kaiyaok2/PythonProjects/falcon/tests/test_response.py: 183.84201741218567s cumulative, 0.00834202766418457s individual

.
current test PASSED/SKIPPED -- test_response_get_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_response.py: 183.85242223739624s cumulative, 0.010404825210571289s individual

.
current test PASSED/SKIPPED -- test_response_set_content_type_set in /home/kaiyaok2/PythonProjects/falcon/tests/test_response.py: 183.85994458198547s cumulative, 0.0075223445892333984s individual

.
current test PASSED/SKIPPED -- test_response_attempt_to_set_read_only_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_response.py: 183.86814761161804s cumulative, 0.00820302963256836s individual

.
current test PASSED/SKIPPED -- test_response_set_content_type_set in /home/kaiyaok2/PythonProjects/falcon/tests/test_response.py: 183.87576007843018s cumulative, 0.007612466812133789s individual

.
current test PASSED/SKIPPED -- test_response_set_content_type_not_set in /home/kaiyaok2/PythonProjects/falcon/tests/test_response.py: 183.88553714752197s cumulative, 0.009777069091796875s individual


tests/test_httpstatus.py .
current test PASSED/SKIPPED -- test_raise_status_in_process_request in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 183.93972873687744s cumulative, 0.05419158935546875s individual

.
current test PASSED/SKIPPED -- test_raise_status_runs_process_response in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 183.9674904346466s cumulative, 0.02776169776916504s individual

E
current test FAILED -- test_raise_status_in_process_resource in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 184.2841386795044s cumulative, 0.3166482448577881s individual

E
current test FAILED -- test_raise_status_in_process_request in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 184.62806367874146s cumulative, 0.34392499923706055s individual

E
current test FAILED -- test_raise_status_runs_process_response in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 184.85743880271912s cumulative, 0.22937512397766113s individual

.
current test PASSED/SKIPPED -- test_raise_status_in_process_resource in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 184.8837251663208s cumulative, 0.02628636360168457s individual

.
current test PASSED/SKIPPED -- test_non_string_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 184.90161800384521s cumulative, 0.017892837524414062s individual

.
current test PASSED/SKIPPED -- test_data_is_set in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 184.9151759147644s cumulative, 0.013557910919189453s individual

.
current test PASSED/SKIPPED -- test_non_string_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 184.9339292049408s cumulative, 0.0187532901763916s individual

.
current test PASSED/SKIPPED -- test_body_is_set in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 184.94820380210876s cumulative, 0.01427459716796875s individual

.
current test PASSED/SKIPPED -- test_non_string_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 184.96042943000793s cumulative, 0.012225627899169922s individual

.
current test PASSED/SKIPPED -- test_non_string_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 184.9720814228058s cumulative, 0.011651992797851562s individual

.
current test PASSED/SKIPPED -- test_non_string_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 184.98163056373596s cumulative, 0.009549140930175781s individual

.
current test PASSED/SKIPPED -- test_non_string_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 184.9911961555481s cumulative, 0.009565591812133789s individual

E
current test FAILED -- test_data_is_set in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 185.14936113357544s cumulative, 0.15816497802734375s individual

.
current test PASSED/SKIPPED -- test_non_string_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 185.16423726081848s cumulative, 0.014876127243041992s individual

E
current test FAILED -- test_media_is_set in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 185.30715227127075s cumulative, 0.1429150104522705s individual

.
current test PASSED/SKIPPED -- test_deprecated_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 185.31266593933105s cumulative, 0.005513668060302734s individual

.
current test PASSED/SKIPPED -- test_non_string_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 185.32451605796814s cumulative, 0.011850118637084961s individual

.
current test PASSED/SKIPPED -- test_non_string_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 185.33385944366455s cumulative, 0.009343385696411133s individual

.
current test PASSED/SKIPPED -- test_media_is_set in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 185.34583520889282s cumulative, 0.011975765228271484s individual

.
current test PASSED/SKIPPED -- test_non_string_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 185.35555481910706s cumulative, 0.009719610214233398s individual

.
current test PASSED/SKIPPED -- test_non_string_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 185.3624234199524s cumulative, 0.006868600845336914s individual

.
current test PASSED/SKIPPED -- test_non_string_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 185.3746795654297s cumulative, 0.012256145477294922s individual

.
current test PASSED/SKIPPED -- test_non_string_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 185.38398814201355s cumulative, 0.009308576583862305s individual

E
current test FAILED -- test_body_is_set in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 185.507670879364s cumulative, 0.12368273735046387s individual

.
current test PASSED/SKIPPED -- test_non_string_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 185.5185580253601s cumulative, 0.01088714599609375s individual

E
current test FAILED -- test_raise_status_empty_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 189.0418508052826s cumulative, 3.5232927799224854s individual

.
current test PASSED/SKIPPED -- test_raise_status_in_responder in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 189.0798375606537s cumulative, 0.03798675537109375s individual

.
current test PASSED/SKIPPED -- test_raise_status_empty_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 189.1069951057434s cumulative, 0.02715754508972168s individual

.
current test PASSED/SKIPPED -- test_raise_status_in_before_hook in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 189.13866806030273s cumulative, 0.03167295455932617s individual

E
current test FAILED -- test_raise_status_runs_after_hooks in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 189.49069094657898s cumulative, 0.3520228862762451s individual

E
current test FAILED -- test_raise_status_survives_after_hooks in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 189.70070600509644s cumulative, 0.21001505851745605s individual

.
current test PASSED/SKIPPED -- test_raise_status_survives_after_hooks in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 189.71361827850342s cumulative, 0.012912273406982422s individual

.
current test PASSED/SKIPPED -- test_raise_status_runs_after_hooks in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 189.72123074531555s cumulative, 0.007612466812133789s individual

E
current test FAILED -- test_raise_status_in_responder in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 189.84683561325073s cumulative, 0.12560486793518066s individual

E
current test FAILED -- test_raise_status_in_before_hook in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 189.94046878814697s cumulative, 0.09363317489624023s individual


tests/asgi/test_testing_asgi.py .
current test PASSED/SKIPPED -- test_ignore_extra_asgi_events in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_testing_asgi.py: 189.94592261314392s cumulative, 0.005453824996948242s individual

.
current test PASSED/SKIPPED -- test_invalid_asgi_events in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_testing_asgi.py: 189.94961977005005s cumulative, 0.0036971569061279297s individual

.
current test PASSED/SKIPPED -- test_create_scope_default_ua_override in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_testing_asgi.py: 189.95335793495178s cumulative, 0.0037381649017333984s individual

.
current test PASSED/SKIPPED -- test_immediate_disconnect in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_testing_asgi.py: 189.95849609375s cumulative, 0.0051381587982177734s individual

.
current test PASSED/SKIPPED -- test_create_scope_default_ua_modify_global in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_testing_asgi.py: 189.96194553375244s cumulative, 0.0034494400024414062s individual

.
current test PASSED/SKIPPED -- test_is_asgi_app_cls in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_testing_asgi.py: 189.96594142913818s cumulative, 0.0039958953857421875s individual

.
current test PASSED/SKIPPED -- test_create_scope_default_ua in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_testing_asgi.py: 189.96903562545776s cumulative, 0.003094196319580078s individual

.
current test PASSED/SKIPPED -- test_cookies_jar in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_testing_asgi.py: 189.97872400283813s cumulative, 0.009688377380371094s individual

.
current test PASSED/SKIPPED -- test_missing_header_is_none in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_testing_asgi.py: 189.98204016685486s cumulative, 0.003316164016723633s individual


tests/test_wsgi_servers.py Starting uWSGI...
uwsgi --http 127.0.0.1:57119 --wsgi-file _wsgi_test_app.py
s
current test PASSED/SKIPPED -- test_get in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 189.99449825286865s cumulative, 0.012458086013793945s individual

Starting uWSGI...
uwsgi --http 127.0.0.1:41331 --wsgi-file _wsgi_test_app.py
s
current test PASSED/SKIPPED -- test_get_deprecated in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 189.99969124794006s cumulative, 0.005192995071411133s individual

Starting Gunicorn...
/usr/bin/python3 -m gunicorn --access-logfile - --bind 127.0.0.1:40361 --graceful-timeout 10 --timeout 10 _wsgi_test_app:app
Starting Gunicorn...
/usr/bin/python3 -m gunicorn --access-logfile - --bind 127.0.0.1:44335 --graceful-timeout 10 --timeout 10 _wsgi_test_app:app
Starting Gunicorn...
/usr/bin/python3 -m gunicorn --access-logfile - --bind 127.0.0.1:37465 --graceful-timeout 10 --timeout 10 _wsgi_test_app:app
E
current test FAILED -- test_static_file_byte_range in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 220.4954833984375s cumulative, 30.495792150497437s individual

s
current test PASSED/SKIPPED -- test_get in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 220.50826334953308s cumulative, 0.012779951095581055s individual

Starting uWSGI...
uwsgi --http 127.0.0.1:34277 --wsgi-file _wsgi_test_app.py
s
current test PASSED/SKIPPED -- test_static_file_byte_range in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 220.51969075202942s cumulative, 0.01142740249633789s individual

s
current test PASSED/SKIPPED -- test_static_file in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 220.53357601165771s cumulative, 0.013885259628295898s individual

s
current test PASSED/SKIPPED -- test_get_deprecated in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 220.5479347705841s cumulative, 0.014358758926391602s individual

Starting Uvicorn (WSGI interface)...
/usr/bin/python3 -m uvicorn --host 127.0.0.1 --port 49615 --interface wsgi _wsgi_test_app:app
Starting Uvicorn (WSGI interface)...
/usr/bin/python3 -m uvicorn --host 127.0.0.1 --port 45703 --interface wsgi _wsgi_test_app:app
Starting Uvicorn (WSGI interface)...
/usr/bin/python3 -m uvicorn --host 127.0.0.1 --port 48121 --interface wsgi _wsgi_test_app:app
E
current test FAILED -- test_get_deprecated in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 251.0086808204651s cumulative, 30.46074604988098s individual

Starting uWSGI...
uwsgi --http 127.0.0.1:47839 --wsgi-file _wsgi_test_app.py
s
current test PASSED/SKIPPED -- test_post_multipart_form in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 251.03168201446533s cumulative, 0.02300119400024414s individual

Starting Gunicorn...
/usr/bin/python3 -m gunicorn --access-logfile - --bind 127.0.0.1:43641 --graceful-timeout 10 --timeout 10 _wsgi_test_app:app
Starting Gunicorn...
/usr/bin/python3 -m gunicorn --access-logfile - --bind 127.0.0.1:58327 --graceful-timeout 10 --timeout 10 _wsgi_test_app:app
Starting Gunicorn...
/usr/bin/python3 -m gunicorn --access-logfile - --bind 127.0.0.1:33769 --graceful-timeout 10 --timeout 10 _wsgi_test_app:app
E
current test FAILED -- test_static_file_byte_range in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 281.29972314834595s cumulative, 30.268041133880615s individual

s
current test PASSED/SKIPPED -- test_post_multipart_form in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 281.3357422351837s cumulative, 0.036019086837768555s individual

s
current test PASSED/SKIPPED -- test_static_file in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 281.37040162086487s cumulative, 0.034659385681152344s individual

Starting Gunicorn...
/usr/bin/python3 -m gunicorn --access-logfile - --bind 127.0.0.1:35161 --graceful-timeout 10 --timeout 10 _wsgi_test_app:app
Starting Gunicorn...
/usr/bin/python3 -m gunicorn --access-logfile - --bind 127.0.0.1:43057 --graceful-timeout 10 --timeout 10 _wsgi_test_app:app
Starting Gunicorn...
/usr/bin/python3 -m gunicorn --access-logfile - --bind 127.0.0.1:38813 --graceful-timeout 10 --timeout 10 _wsgi_test_app:app
E
current test FAILED -- test_static_file in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 311.6423165798187s cumulative, 30.271914958953857s individual

s
current test PASSED/SKIPPED -- test_static_file_byte_range in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 311.67978739738464s cumulative, 0.03747081756591797s individual

Starting Uvicorn (WSGI interface)...
/usr/bin/python3 -m uvicorn --host 127.0.0.1 --port 41661 --interface wsgi _wsgi_test_app:app
Starting Uvicorn (WSGI interface)...
/usr/bin/python3 -m uvicorn --host 127.0.0.1 --port 53217 --interface wsgi _wsgi_test_app:app
Starting Uvicorn (WSGI interface)...
/usr/bin/python3 -m uvicorn --host 127.0.0.1 --port 45791 --interface wsgi _wsgi_test_app:app
E
current test FAILED -- test_static_file_byte_range in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 342.13658595085144s cumulative, 30.456798553466797s individual

Starting Gunicorn...
/usr/bin/python3 -m gunicorn --access-logfile - --bind 127.0.0.1:38593 --graceful-timeout 10 --timeout 10 _wsgi_test_app:app
Starting Gunicorn...
/usr/bin/python3 -m gunicorn --access-logfile - --bind 127.0.0.1:58275 --graceful-timeout 10 --timeout 10 _wsgi_test_app:app
Starting Gunicorn...
/usr/bin/python3 -m gunicorn --access-logfile - --bind 127.0.0.1:52109 --graceful-timeout 10 --timeout 10 _wsgi_test_app:app
E
current test FAILED -- test_static_file_byte_range in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 372.2731463909149s cumulative, 30.136560440063477s individual

Starting Uvicorn (WSGI interface)...
/usr/bin/python3 -m uvicorn --host 127.0.0.1 --port 40101 --interface wsgi _wsgi_test_app:app
Starting Uvicorn (WSGI interface)...
/usr/bin/python3 -m uvicorn --host 127.0.0.1 --port 37259 --interface wsgi _wsgi_test_app:app
Starting Uvicorn (WSGI interface)...
/usr/bin/python3 -m uvicorn --host 127.0.0.1 --port 40273 --interface wsgi _wsgi_test_app:app
E
current test FAILED -- test_static_file_byte_range in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 402.7227957248688s cumulative, 30.449649333953857s individual

s
current test PASSED/SKIPPED -- test_static_file_byte_range in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 402.73584842681885s cumulative, 0.013052701950073242s individual

s
current test PASSED/SKIPPED -- test_static_file_byte_range in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 402.7422811985016s cumulative, 0.006432771682739258s individual

Starting uWSGI...
uwsgi --http 127.0.0.1:50855 --wsgi-file _wsgi_test_app.py
s
current test PASSED/SKIPPED -- test_static_file_byte_range in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 402.75486302375793s cumulative, 0.012581825256347656s individual

s
current test PASSED/SKIPPED -- test_static_file_byte_range in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 402.7640120983124s cumulative, 0.00914907455444336s individual

s
current test PASSED/SKIPPED -- test_get in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 402.77503538131714s cumulative, 0.011023283004760742s individual

Starting Gunicorn...
/usr/bin/python3 -m gunicorn --access-logfile - --bind 127.0.0.1:57605 --graceful-timeout 10 --timeout 10 _wsgi_test_app:app
Starting Gunicorn...
/usr/bin/python3 -m gunicorn --access-logfile - --bind 127.0.0.1:34323 --graceful-timeout 10 --timeout 10 _wsgi_test_app:app
Starting Gunicorn...
/usr/bin/python3 -m gunicorn --access-logfile - --bind 127.0.0.1:53999 --graceful-timeout 10 --timeout 10 _wsgi_test_app:app
E
current test FAILED -- test_static_file_byte_range in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 433.1112620830536s cumulative, 30.33622670173645s individual

Starting uWSGI...
uwsgi --http 127.0.0.1:44591 --wsgi-file _wsgi_test_app.py
s
current test PASSED/SKIPPED -- test_static_file_byte_range in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 433.1373665332794s cumulative, 0.026104450225830078s individual

s
current test PASSED/SKIPPED -- test_get_deprecated in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 433.16263031959534s cumulative, 0.02526378631591797s individual

Starting uWSGI...
uwsgi --http 127.0.0.1:40627 --wsgi-file _wsgi_test_app.py
s
current test PASSED/SKIPPED -- test_static_file in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 433.18727135658264s cumulative, 0.024641036987304688s individual

s
current test PASSED/SKIPPED -- test_static_file_byte_range in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 433.21048974990845s cumulative, 0.023218393325805664s individual

Starting Gunicorn...
/usr/bin/python3 -m gunicorn --access-logfile - --bind 127.0.0.1:36529 --graceful-timeout 10 --timeout 10 _wsgi_test_app:app
Starting Gunicorn...
/usr/bin/python3 -m gunicorn --access-logfile - --bind 127.0.0.1:56719 --graceful-timeout 10 --timeout 10 _wsgi_test_app:app
Starting Gunicorn...
/usr/bin/python3 -m gunicorn --access-logfile - --bind 127.0.0.1:59101 --graceful-timeout 10 --timeout 10 _wsgi_test_app:app
E
current test FAILED -- test_get_deprecated in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 463.677695274353s cumulative, 30.46720552444458s individual

Starting Uvicorn (WSGI interface)...
/usr/bin/python3 -m uvicorn --host 127.0.0.1 --port 58747 --interface wsgi _wsgi_test_app:app
Starting Uvicorn (WSGI interface)...
/usr/bin/python3 -m uvicorn --host 127.0.0.1 --port 59303 --interface wsgi _wsgi_test_app:app
Starting Uvicorn (WSGI interface)...
/usr/bin/python3 -m uvicorn --host 127.0.0.1 --port 33785 --interface wsgi _wsgi_test_app:app
E
current test FAILED -- test_static_file_byte_range in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 493.97154426574707s cumulative, 30.293848991394043s individual

Starting Uvicorn (WSGI interface)...
/usr/bin/python3 -m uvicorn --host 127.0.0.1 --port 60393 --interface wsgi _wsgi_test_app:app
Starting Uvicorn (WSGI interface)...
/usr/bin/python3 -m uvicorn --host 127.0.0.1 --port 59083 --interface wsgi _wsgi_test_app:app
Starting Uvicorn (WSGI interface)...
/usr/bin/python3 -m uvicorn --host 127.0.0.1 --port 41867 --interface wsgi _wsgi_test_app:app
E
current test FAILED -- test_get in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 524.3157804012299s cumulative, 30.344236135482788s individual

s
current test PASSED/SKIPPED -- test_static_file_byte_range in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 524.3361215591431s cumulative, 0.020341157913208008s individual

Starting Uvicorn (WSGI interface)...
/usr/bin/python3 -m uvicorn --host 127.0.0.1 --port 59269 --interface wsgi _wsgi_test_app:app
Starting Uvicorn (WSGI interface)...
/usr/bin/python3 -m uvicorn --host 127.0.0.1 --port 59143 --interface wsgi _wsgi_test_app:app
Starting Uvicorn (WSGI interface)...
/usr/bin/python3 -m uvicorn --host 127.0.0.1 --port 40311 --interface wsgi _wsgi_test_app:app
E
current test FAILED -- test_static_file_byte_range in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 554.8293297290802s cumulative, 30.493208169937134s individual

Starting Gunicorn...
/usr/bin/python3 -m gunicorn --access-logfile - --bind 127.0.0.1:54339 --graceful-timeout 10 --timeout 10 _wsgi_test_app:app
Starting Gunicorn...
/usr/bin/python3 -m gunicorn --access-logfile - --bind 127.0.0.1:40279 --graceful-timeout 10 --timeout 10 _wsgi_test_app:app
Starting Gunicorn...
/usr/bin/python3 -m gunicorn --access-logfile - --bind 127.0.0.1:35199 --graceful-timeout 10 --timeout 10 _wsgi_test_app:app
E
current test FAILED -- test_get in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 585.2329466342926s cumulative, 30.403616905212402s individual

s
current test PASSED/SKIPPED -- test_static_file_byte_range in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 585.2419810295105s cumulative, 0.009034395217895508s individual

Starting Uvicorn (WSGI interface)...
/usr/bin/python3 -m uvicorn --host 127.0.0.1 --port 43611 --interface wsgi _wsgi_test_app:app
Starting Uvicorn (WSGI interface)...
/usr/bin/python3 -m uvicorn --host 127.0.0.1 --port 43033 --interface wsgi _wsgi_test_app:app
Starting Uvicorn (WSGI interface)...
/usr/bin/python3 -m uvicorn --host 127.0.0.1 --port 55235 --interface wsgi _wsgi_test_app:app
E
current test FAILED -- test_post_multipart_form in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 615.5690598487854s cumulative, 30.327078819274902s individual

s
current test PASSED/SKIPPED -- test_static_file_byte_range in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 615.594560623169s cumulative, 0.025500774383544922s individual

Starting Uvicorn (WSGI interface)...
/usr/bin/python3 -m uvicorn --host 127.0.0.1 --port 48419 --interface wsgi _wsgi_test_app:app
Starting Uvicorn (WSGI interface)...
/usr/bin/python3 -m uvicorn --host 127.0.0.1 --port 55367 --interface wsgi _wsgi_test_app:app
Starting Uvicorn (WSGI interface)...
/usr/bin/python3 -m uvicorn --host 127.0.0.1 --port 58169 --interface wsgi _wsgi_test_app:app
E
current test FAILED -- test_static_file in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 646.0929119586945s cumulative, 30.498351335525513s individual

s
current test PASSED/SKIPPED -- test_post_multipart_form in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 646.1071338653564s cumulative, 0.014221906661987305s individual

Starting uWSGI...
uwsgi --http 127.0.0.1:40301 --wsgi-file _wsgi_test_app.py
s
current test PASSED/SKIPPED -- test_static_file_byte_range in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 646.1190423965454s cumulative, 0.011908531188964844s individual

Starting Gunicorn...
/usr/bin/python3 -m gunicorn --access-logfile - --bind 127.0.0.1:59277 --graceful-timeout 10 --timeout 10 _wsgi_test_app:app
Starting Gunicorn...
/usr/bin/python3 -m gunicorn --access-logfile - --bind 127.0.0.1:45173 --graceful-timeout 10 --timeout 10 _wsgi_test_app:app
Starting Gunicorn...
/usr/bin/python3 -m gunicorn --access-logfile - --bind 127.0.0.1:43013 --graceful-timeout 10 --timeout 10 _wsgi_test_app:app
E
current test FAILED -- test_post_multipart_form in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_servers.py: 676.368549823761s cumulative, 30.249507427215576s individual


tests/test_after_hooks.py F
current test FAILED -- test_wrapped_resource in /home/kaiyaok2/PythonProjects/falcon/tests/test_after_hooks.py: 676.5068070888519s cumulative, 0.13825726509094238s individual

F
current test FAILED -- test_wrapped_resource in /home/kaiyaok2/PythonProjects/falcon/tests/test_after_hooks.py: 676.6158671379089s cumulative, 0.10906004905700684s individual

F
current test FAILED -- test_wrapped_resource_with_hooks_aware_of_resource in /home/kaiyaok2/PythonProjects/falcon/tests/test_after_hooks.py: 676.7260324954987s cumulative, 0.11016535758972168s individual

F
current test FAILED -- test_resource_with_uri_fields in /home/kaiyaok2/PythonProjects/falcon/tests/test_after_hooks.py: 676.8758592605591s cumulative, 0.1498267650604248s individual

F
current test FAILED -- test_resource_with_uri_fields in /home/kaiyaok2/PythonProjects/falcon/tests/test_after_hooks.py: 677.0108821392059s cumulative, 0.13502287864685059s individual


tests/test_things_example.py .
current test PASSED/SKIPPED -- test_things_resource_response in /home/kaiyaok2/PythonProjects/falcon/tests/test_things_example.py: 677.018961429596s cumulative, 0.008079290390014648s individual


tests/test_wsgi_interface.py .
current test PASSED/SKIPPED -- test_pep3333 in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_interface.py: 677.0278770923615s cumulative, 0.00891566276550293s individual

.
current test PASSED/SKIPPED -- test_srmock in /home/kaiyaok2/PythonProjects/falcon/tests/test_wsgi_interface.py: 677.0324728488922s cumulative, 0.004595756530761719s individual


tests/test_buffered_reader.py .
current test PASSED/SKIPPED -- test_pipe_until_without_destination in /home/kaiyaok2/PythonProjects/falcon/tests/test_buffered_reader.py: 677.3626730442047s cumulative, 0.3302001953125s individual


tests/asgi/test_cythonized_asgi.py .
current test PASSED/SKIPPED -- test_not_cython_func in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_cythonized_asgi.py: 677.3669769763947s cumulative, 0.004303932189941406s individual

.
current test PASSED/SKIPPED -- test_is_cython_func in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_cythonized_asgi.py: 677.3716042041779s cumulative, 0.004627227783203125s individual

.
current test PASSED/SKIPPED -- test_is_cython_func in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_cythonized_asgi.py: 677.3767278194427s cumulative, 0.005123615264892578s individual

.
current test PASSED/SKIPPED -- test_not_cython_func in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_cythonized_asgi.py: 677.3820271492004s cumulative, 0.00529932975769043s individual

.
current test PASSED/SKIPPED -- test_is_cython_func in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_cythonized_asgi.py: 677.3863456249237s cumulative, 0.0043184757232666016s individual

.
current test PASSED/SKIPPED -- test_not_cython_func in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_cythonized_asgi.py: 677.3903293609619s cumulative, 0.003983736038208008s individual

.
current test PASSED/SKIPPED -- test_not_cython_func in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_cythonized_asgi.py: 677.3943185806274s cumulative, 0.003989219665527344s individual

.
current test PASSED/SKIPPED -- test_is_cython_func in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_cythonized_asgi.py: 677.3991630077362s cumulative, 0.0048444271087646484s individual

.
current test PASSED/SKIPPED -- test_not_cython_func in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_cythonized_asgi.py: 677.4041872024536s cumulative, 0.0050241947174072266s individual

.
current test PASSED/SKIPPED -- test_is_cython_func in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_cythonized_asgi.py: 677.4080650806427s cumulative, 0.003877878189086914s individual

.
current test PASSED/SKIPPED -- test_is_cython_func in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_cythonized_asgi.py: 677.4136197566986s cumulative, 0.005554676055908203s individual

.
current test PASSED/SKIPPED -- test_not_cython_func in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_cythonized_asgi.py: 677.419037103653s cumulative, 0.005417346954345703s individual


tests/test_media_handlers.py .
current test PASSED/SKIPPED -- test_deserialization_raises in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 677.4352030754089s cumulative, 0.016165971755981445s individual

.
current test PASSED/SKIPPED -- test_deserialization in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 677.4418623447418s cumulative, 0.006659269332885742s individual

.
current test PASSED/SKIPPED -- test_full_app in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 677.4557392597198s cumulative, 0.013876914978027344s individual

.
current test PASSED/SKIPPED -- test_sync_methods_not_overridden in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 677.4707078933716s cumulative, 0.014968633651733398s individual

.
current test PASSED/SKIPPED -- test_full_app in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 677.4854605197906s cumulative, 0.014752626419067383s individual

.
current test PASSED/SKIPPED -- test_deserialization_raises in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 677.4942893981934s cumulative, 0.008828878402709961s individual

.
current test PASSED/SKIPPED -- test_deserialization in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 677.4984660148621s cumulative, 0.004176616668701172s individual

.
current test PASSED/SKIPPED -- test_deserialization in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 677.503449678421s cumulative, 0.004983663558959961s individual

.
current test PASSED/SKIPPED -- test_full_app in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 677.5199468135834s cumulative, 0.016497135162353516s individual

.
current test PASSED/SKIPPED -- test_full_app in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 677.5295996665955s cumulative, 0.009652853012084961s individual

.
current test PASSED/SKIPPED -- test_json in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 677.5336503982544s cumulative, 0.004050731658935547s individual

.
current test PASSED/SKIPPED -- test_serialization in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 677.5378246307373s cumulative, 0.004174232482910156s individual

.
current test PASSED/SKIPPED -- test_full_app in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 677.5566489696503s cumulative, 0.018824338912963867s individual

.
current test PASSED/SKIPPED -- test_deserialization_raises in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 677.5710997581482s cumulative, 0.014450788497924805s individual

.
current test PASSED/SKIPPED -- test_full_app in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 677.5788562297821s cumulative, 0.007756471633911133s individual

.
current test PASSED/SKIPPED -- test_deserialization in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 677.5833113193512s cumulative, 0.004455089569091797s individual

.
current test PASSED/SKIPPED -- test_full_app in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 677.5951282978058s cumulative, 0.011816978454589844s individual

.
current test PASSED/SKIPPED -- test_serialization in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 677.612190246582s cumulative, 0.017061948776245117s individual

.
current test PASSED/SKIPPED -- test_json_err_no_handler in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 677.6331920623779s cumulative, 0.021001815795898438s individual

.
current test PASSED/SKIPPED -- test_deserialization in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 677.6381709575653s cumulative, 0.00497889518737793s individual

.
current test PASSED/SKIPPED -- test_deserialization in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 677.6432344913483s cumulative, 0.005063533782958984s individual

.
current test PASSED/SKIPPED -- test_deserialization in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 677.6478390693665s cumulative, 0.0046045780181884766s individual

.
current test PASSED/SKIPPED -- test_deserialization_raises in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 677.6591846942902s cumulative, 0.011345624923706055s individual

.
current test PASSED/SKIPPED -- test_async_handler_returning_none in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 677.6684551239014s cumulative, 0.009270429611206055s individual

.
current test PASSED/SKIPPED -- test_deserialization in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 677.6735045909882s cumulative, 0.005049467086791992s individual

.
current test PASSED/SKIPPED -- test_async_methods_not_overridden in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 677.6824493408203s cumulative, 0.00894474983215332s individual

.
current test PASSED/SKIPPED -- test_serialization in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 677.6872870922089s cumulative, 0.004837751388549805s individual

.
current test PASSED/SKIPPED -- test_full_app in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 677.6958301067352s cumulative, 0.008543014526367188s individual

.
current test PASSED/SKIPPED -- test_serialization in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 677.7003622055054s cumulative, 0.0045320987701416016s individual

.
current test PASSED/SKIPPED -- test_deserialization in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 677.7051472663879s cumulative, 0.004785060882568359s individual

.
current test PASSED/SKIPPED -- test_full_app in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 677.7133860588074s cumulative, 0.008238792419433594s individual

.
current test PASSED/SKIPPED -- test_defaultError in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 677.7170672416687s cumulative, 0.003681182861328125s individual

.
current test PASSED/SKIPPED -- test_full_app in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 677.7385759353638s cumulative, 0.02150869369506836s individual

.
current test PASSED/SKIPPED -- test_full_app in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 677.748530626297s cumulative, 0.009954690933227539s individual

.
current test PASSED/SKIPPED -- test_serialization in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 677.7534399032593s cumulative, 0.0049092769622802734s individual

.
current test PASSED/SKIPPED -- test_deserialization_raises in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 677.7614459991455s cumulative, 0.008006095886230469s individual

.
current test PASSED/SKIPPED -- test_serialization in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 677.7667837142944s cumulative, 0.005337715148925781s individual

.
current test PASSED/SKIPPED -- test_serialization in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 677.7726397514343s cumulative, 0.005856037139892578s individual

.
current test PASSED/SKIPPED -- test_serialization in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 677.7783968448639s cumulative, 0.00575709342956543s individual

.
current test PASSED/SKIPPED -- test_serialization in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 677.7837233543396s cumulative, 0.005326509475708008s individual

.
current test PASSED/SKIPPED -- test_serialization in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 677.7900786399841s cumulative, 0.00635528564453125s individual

.
current test PASSED/SKIPPED -- test_deserialization in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 677.7969992160797s cumulative, 0.006920576095581055s individual

.
current test PASSED/SKIPPED -- test_deserialization_raises in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 677.8145265579224s cumulative, 0.017527341842651367s individual

.
current test PASSED/SKIPPED -- test_serialization in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 677.8201730251312s cumulative, 0.005646467208862305s individual

.
current test PASSED/SKIPPED -- test_full_app in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 677.8280928134918s cumulative, 0.007919788360595703s individual

.
current test PASSED/SKIPPED -- test_full_app in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 677.8474690914154s cumulative, 0.019376277923583984s individual

.
current test PASSED/SKIPPED -- test_full_app in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 677.8618278503418s cumulative, 0.014358758926391602s individual

.
current test PASSED/SKIPPED -- test_deserialization in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 677.8658671379089s cumulative, 0.004039287567138672s individual

.
current test PASSED/SKIPPED -- test_serialization in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 677.870356798172s cumulative, 0.0044896602630615234s individual

.
current test PASSED/SKIPPED -- test_sync_methods_not_overridden in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 677.8850250244141s cumulative, 0.01466822624206543s individual

.
current test PASSED/SKIPPED -- test_deserialization_raises in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 677.8988411426544s cumulative, 0.013816118240356445s individual

.
current test PASSED/SKIPPED -- test_serialization in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 677.9140532016754s cumulative, 0.015212059020996094s individual

.
current test PASSED/SKIPPED -- test_full_app in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 677.9227669239044s cumulative, 0.008713722229003906s individual

.
current test PASSED/SKIPPED -- test_full_app in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 677.9339454174042s cumulative, 0.01117849349975586s individual

.
current test PASSED/SKIPPED -- test_full_app in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 677.9487092494965s cumulative, 0.014763832092285156s individual

.
current test PASSED/SKIPPED -- test_deserialization_raises in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 677.9700319766998s cumulative, 0.02132272720336914s individual

.
current test PASSED/SKIPPED -- test_full_app in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 677.9779388904572s cumulative, 0.007906913757324219s individual

.
current test PASSED/SKIPPED -- test_deserialization in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 677.9828658103943s cumulative, 0.004926919937133789s individual

.
current test PASSED/SKIPPED -- test_json_err_no_handler in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 677.9898586273193s cumulative, 0.006992816925048828s individual

.
current test PASSED/SKIPPED -- test_serialization in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 677.9937176704407s cumulative, 0.0038590431213378906s individual

.
current test PASSED/SKIPPED -- test_full_app in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 678.0151445865631s cumulative, 0.021426916122436523s individual

.
current test PASSED/SKIPPED -- test_full_app in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 678.0232543945312s cumulative, 0.008109807968139648s individual


tests/asgi/test_request_context_asgi.py .
current test PASSED/SKIPPED -- test_custom_request_context_failure in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_request_context_asgi.py: 678.0283737182617s cumulative, 0.00511932373046875s individual

.
current test PASSED/SKIPPED -- test_custom_request_context in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_request_context_asgi.py: 678.0324988365173s cumulative, 0.004125118255615234s individual

.
current test PASSED/SKIPPED -- test_default_request_context in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_request_context_asgi.py: 678.0367088317871s cumulative, 0.004209995269775391s individual

.
current test PASSED/SKIPPED -- test_custom_request_context_request_access in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_request_context_asgi.py: 678.0430819988251s cumulative, 0.006373167037963867s individual


tests/asgi/test_sync.py .
current test PASSED/SKIPPED -- test_sync_helpers in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_sync.py: 683.273720741272s cumulative, 5.230638742446899s individual


tests/asgi/test_cythonized_asgi.py .
current test PASSED/SKIPPED -- test_scheduled_jobs_type_error in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_cythonized_asgi.py: 683.2842967510223s cumulative, 0.010576009750366211s individual


tests/test_uri_templates.py .
current test PASSED/SKIPPED -- test_relative_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 683.2885205745697s cumulative, 0.004223823547363281s individual

.
current test PASSED/SKIPPED -- test_single in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 683.2952556610107s cumulative, 0.006735086441040039s individual

.
current test PASSED/SKIPPED -- test_multiple in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 683.3046734333038s cumulative, 0.00941777229309082s individual

.
current test PASSED/SKIPPED -- test_relative_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 683.30894780159s cumulative, 0.0042743682861328125s individual

.
current test PASSED/SKIPPED -- test_datetime_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 683.3188939094543s cumulative, 0.009946107864379883s individual

.
current test PASSED/SKIPPED -- test_uuid_converter_complex_segment in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 683.3262610435486s cumulative, 0.007367134094238281s individual

.
current test PASSED/SKIPPED -- test_int_converter_rejections in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 683.3326640129089s cumulative, 0.0064029693603515625s individual

.
current test PASSED/SKIPPED -- test_single_trailing_slash in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 683.3461992740631s cumulative, 0.013535261154174805s individual

.
current test PASSED/SKIPPED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 683.3534126281738s cumulative, 0.0072133541107177734s individual

.
current test PASSED/SKIPPED -- test_same_level_complex_var in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 683.3609826564789s cumulative, 0.007570028305053711s individual

.
current test PASSED/SKIPPED -- test_root_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 683.3664412498474s cumulative, 0.0054585933685302734s individual

.
current test PASSED/SKIPPED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 683.3734176158905s cumulative, 0.00697636604309082s individual

.
current test PASSED/SKIPPED -- test_float_converter_non_finite_allowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 683.379472732544s cumulative, 0.006055116653442383s individual

.
current test PASSED/SKIPPED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 683.3851659297943s cumulative, 0.005693197250366211s individual

.
current test PASSED/SKIPPED -- test_int_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 683.391135931015s cumulative, 0.005970001220703125s individual

.
current test PASSED/SKIPPED -- test_empty_path_component in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 683.3960988521576s cumulative, 0.004962921142578125s individual

.
current test PASSED/SKIPPED -- test_int_converter_rejections in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 683.403400182724s cumulative, 0.00730133056640625s individual

.
current test PASSED/SKIPPED -- test_special_chars in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 683.4115333557129s cumulative, 0.008133172988891602s individual

.
current test PASSED/SKIPPED -- test_converter_custom in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 683.4176218509674s cumulative, 0.0060884952545166016s individual

.
current test PASSED/SKIPPED -- test_datetime_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 683.4272847175598s cumulative, 0.009662866592407227s individual

.
current test PASSED/SKIPPED -- test_relative_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 683.4319732189178s cumulative, 0.0046885013580322266s individual

.
current test PASSED/SKIPPED -- test_converter_custom in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 683.4411714076996s cumulative, 0.009198188781738281s individual

.
current test PASSED/SKIPPED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 683.4472482204437s cumulative, 0.006076812744140625s individual

.
current test PASSED/SKIPPED -- test_with_and_without_trailing_slash in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 683.4580311775208s cumulative, 0.010782957077026367s individual

.
current test PASSED/SKIPPED -- test_single in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 683.4638531208038s cumulative, 0.005821943283081055s individual

.
current test PASSED/SKIPPED -- test_empty_path_component in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 683.4701178073883s cumulative, 0.006264686584472656s individual

.
current test PASSED/SKIPPED -- test_empty_path_component in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 683.4740860462189s cumulative, 0.003968238830566406s individual

.
current test PASSED/SKIPPED -- test_int_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 683.479076385498s cumulative, 0.004990339279174805s individual

.
current test PASSED/SKIPPED -- test_int_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 683.4843776226044s cumulative, 0.005301237106323242s individual

.
current test PASSED/SKIPPED -- test_datetime_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 683.4955699443817s cumulative, 0.01119232177734375s individual

.
current test PASSED/SKIPPED -- test_empty_path_component in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 683.5007839202881s cumulative, 0.00521397590637207s individual

.
current test PASSED/SKIPPED -- test_relative_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 683.5050036907196s cumulative, 0.004219770431518555s individual

.
current test PASSED/SKIPPED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 683.5103459358215s cumulative, 0.005342245101928711s individual

.
current test PASSED/SKIPPED -- test_float_converter_non_finite_allowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 683.5170550346375s cumulative, 0.006709098815917969s individual

.
current test PASSED/SKIPPED -- test_no_vars in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 683.5241253376007s cumulative, 0.007070302963256836s individual

.
current test PASSED/SKIPPED -- test_with_and_without_trailing_slash in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 683.5355935096741s cumulative, 0.011468172073364258s individual

.
current test PASSED/SKIPPED -- test_empty_path_component in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 683.5401194095612s cumulative, 0.004525899887084961s individual

.
current test PASSED/SKIPPED -- test_float_converter_non_finite_disallowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 683.5463664531708s cumulative, 0.006247043609619141s individual

.
current test PASSED/SKIPPED -- test_custom_error_on_suffix_route_not_found in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 683.5504350662231s cumulative, 0.004068613052368164s individual

.
current test PASSED/SKIPPED -- test_int_converter_rejections in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 683.5570044517517s cumulative, 0.006569385528564453s individual

.
current test PASSED/SKIPPED -- test_int_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 683.5637226104736s cumulative, 0.006718158721923828s individual

.
current test PASSED/SKIPPED -- test_relative_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 683.5679221153259s cumulative, 0.004199504852294922s individual

.
current test PASSED/SKIPPED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 683.5731203556061s cumulative, 0.005198240280151367s individual

.
current test PASSED/SKIPPED -- test_single in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 683.5780138969421s cumulative, 0.00489354133605957s individual

.
current test PASSED/SKIPPED -- test_float_converter_non_finite_allowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 683.5831816196442s cumulative, 0.005167722702026367s individual

.
current test PASSED/SKIPPED -- test_adding_suffix_routes in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 683.5915071964264s cumulative, 0.008325576782226562s individual

.
current test PASSED/SKIPPED -- test_converter_custom in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 683.5986597537994s cumulative, 0.007152557373046875s individual

.
current test PASSED/SKIPPED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 683.6050975322723s cumulative, 0.006437778472900391s individual

.
current test PASSED/SKIPPED -- test_empty_path_component in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 683.6098701953888s cumulative, 0.004772663116455078s individual

.
current test PASSED/SKIPPED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 683.6158313751221s cumulative, 0.005961179733276367s individual

.
current test PASSED/SKIPPED -- test_empty_path_component in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 683.6247055530548s cumulative, 0.008874177932739258s individual

.
current test PASSED/SKIPPED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 683.6316804885864s cumulative, 0.006974935531616211s individual

.
current test PASSED/SKIPPED -- test_empty_path_component in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 683.635550737381s cumulative, 0.003870248794555664s individual

.
current test PASSED/SKIPPED -- test_single_path_segment in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 683.6417229175568s cumulative, 0.00617218017578125s individual

.
current test PASSED/SKIPPED -- test_datetime_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 683.6488535404205s cumulative, 0.007130622863769531s individual

.
current test PASSED/SKIPPED -- test_same_level_complex_var in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 683.655280828476s cumulative, 0.006427288055419922s individual

.
current test PASSED/SKIPPED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 683.6602485179901s cumulative, 0.004967689514160156s individual

.
current test PASSED/SKIPPED -- test_relative_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 683.6648707389832s cumulative, 0.004622220993041992s individual

.
current test PASSED/SKIPPED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 683.6706953048706s cumulative, 0.005824565887451172s individual

.
current test PASSED/SKIPPED -- test_custom_error_on_suffix_route_not_found in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 683.6748509407043s cumulative, 0.004155635833740234s individual

.
current test PASSED/SKIPPED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 683.6801118850708s cumulative, 0.005260944366455078s individual


tests/test_response_body.py F
current test FAILED -- test_response_body_rendition_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_body.py: 683.9307482242584s cumulative, 0.25063633918762207s individual

F
current test FAILED -- test_content_length_set_on_head_with_no_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_body.py: 684.1868371963501s cumulative, 0.2560889720916748s individual

F
current test FAILED -- test_unsupported_response_content_type in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_body.py: 684.3032639026642s cumulative, 0.11642670631408691s individual


tests/test_request_forwarded.py .
current test PASSED/SKIPPED -- test_escape_malformed_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_forwarded.py: 684.3085722923279s cumulative, 0.005308389663696289s individual

.
current test PASSED/SKIPPED -- test_escape_malformed_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_forwarded.py: 684.3136975765228s cumulative, 0.005125284194946289s individual

.
current test PASSED/SKIPPED -- test_no_forwarded_headers_with_port in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_forwarded.py: 684.3176050186157s cumulative, 0.003907442092895508s individual

.
current test PASSED/SKIPPED -- test_forwarded_missing_first_hop_host in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_forwarded.py: 684.320663690567s cumulative, 0.0030586719512939453s individual

.
current test PASSED/SKIPPED -- test_escape_malformed_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_forwarded.py: 684.3254673480988s cumulative, 0.004803657531738281s individual

.
current test PASSED/SKIPPED -- test_x_forwarded_proto in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_forwarded.py: 684.3306143283844s cumulative, 0.005146980285644531s individual

.
current test PASSED/SKIPPED -- test_no_forwarded_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_forwarded.py: 684.3367640972137s cumulative, 0.006149768829345703s individual

.
current test PASSED/SKIPPED -- test_forwarded_host in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_forwarded.py: 684.3423104286194s cumulative, 0.0055463314056396484s individual

.
current test PASSED/SKIPPED -- test_x_forwarded_host_with_port in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_forwarded.py: 684.3476300239563s cumulative, 0.0053195953369140625s individual

.
current test PASSED/SKIPPED -- test_forwarded_host in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_forwarded.py: 684.3521316051483s cumulative, 0.0045015811920166016s individual

.
current test PASSED/SKIPPED -- test_x_forwarded_host in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_forwarded.py: 684.3550367355347s cumulative, 0.002905130386352539s individual

.
current test PASSED/SKIPPED -- test_escape_malformed_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_forwarded.py: 684.359167098999s cumulative, 0.004130363464355469s individual

.
current test PASSED/SKIPPED -- test_forwarded_quote_escaping in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_forwarded.py: 684.3631143569946s cumulative, 0.003947257995605469s individual

.
current test PASSED/SKIPPED -- test_forwarded_invalid in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_forwarded.py: 684.366456747055s cumulative, 0.0033423900604248047s individual

.
current test PASSED/SKIPPED -- test_forwarded_invalid in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_forwarded.py: 684.3693733215332s cumulative, 0.002916574478149414s individual

.
current test PASSED/SKIPPED -- test_escape_malformed_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_forwarded.py: 684.3725197315216s cumulative, 0.0031464099884033203s individual

.
current test PASSED/SKIPPED -- test_escape_malformed_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_forwarded.py: 684.3756849765778s cumulative, 0.0031652450561523438s individual

.
current test PASSED/SKIPPED -- test_forwarded_multiple_params in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_forwarded.py: 684.37868475914s cumulative, 0.0029997825622558594s individual

.
current test PASSED/SKIPPED -- test_escape_malformed_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_forwarded.py: 684.3820195198059s cumulative, 0.0033347606658935547s individual

.
current test PASSED/SKIPPED -- test_forwarded_missing_first_hop_host in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_forwarded.py: 684.3853876590729s cumulative, 0.0033681392669677734s individual

.
current test PASSED/SKIPPED -- test_forwarded_quote_escaping in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_forwarded.py: 684.388669013977s cumulative, 0.0032813549041748047s individual

.
current test PASSED/SKIPPED -- test_escape_malformed_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_forwarded.py: 684.3927688598633s cumulative, 0.004099845886230469s individual

.
current test PASSED/SKIPPED -- test_no_forwarded_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_forwarded.py: 684.396205663681s cumulative, 0.0034368038177490234s individual

.
current test PASSED/SKIPPED -- test_x_forwarded_host_with_port in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_forwarded.py: 684.4002313613892s cumulative, 0.004025697708129883s individual

.
current test PASSED/SKIPPED -- test_x_forwarded_proto in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_forwarded.py: 684.4034700393677s cumulative, 0.003238677978515625s individual

.
current test PASSED/SKIPPED -- test_escape_malformed_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_forwarded.py: 684.4068448543549s cumulative, 0.003374814987182617s individual

.
current test PASSED/SKIPPED -- test_escape_malformed_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_forwarded.py: 684.4105253219604s cumulative, 0.0036804676055908203s individual

.
current test PASSED/SKIPPED -- test_forwarded_multiple_params in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_forwarded.py: 684.4135611057281s cumulative, 0.0030357837677001953s individual

.
current test PASSED/SKIPPED -- test_x_forwarded_host in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_forwarded.py: 684.4166054725647s cumulative, 0.0030443668365478516s individual

.
current test PASSED/SKIPPED -- test_no_forwarded_headers_with_port in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_forwarded.py: 684.4193799495697s cumulative, 0.002774477005004883s individual


tests/test_utils.py F
current test FAILED -- test_simulate_remote_addr in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 686.6073808670044s cumulative, 2.1880009174346924s individual

F
current test FAILED -- test_path_must_start_with_slash in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 686.7775459289551s cumulative, 0.1701650619506836s individual

F
current test FAILED -- test_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 687.1552057266235s cumulative, 0.37765979766845703s individual

F
current test FAILED -- test_simulate_remote_addr in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 687.440277338028s cumulative, 0.28507161140441895s individual

F
current test FAILED -- test_query_string in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 687.7075438499451s cumulative, 0.26726651191711426s individual

F
current test FAILED -- test_simulate_remote_addr in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 687.9776208400726s cumulative, 0.2700769901275635s individual

F
current test FAILED -- test_simulate_hostname in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 691.2427015304565s cumulative, 3.265080690383911s individual

F
current test FAILED -- test_cached_text_in_result in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 691.5838193893433s cumulative, 0.34111785888671875s individual

F
current test FAILED -- test_query_string_in_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 691.855192899704s cumulative, 0.2713735103607178s individual

F
current test FAILED -- test_override_method_with_extras in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 692.1924698352814s cumulative, 0.3372769355773926s individual

F
current test FAILED -- test_default_headers_with_override in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 692.5944788455963s cumulative, 0.4020090103149414s individual

F
current test FAILED -- test_query_string_no_question in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 693.0541517734528s cumulative, 0.4596729278564453s individual

F
current test FAILED -- test_simulate_remote_addr in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 693.4242584705353s cumulative, 0.37010669708251953s individual

F
current test FAILED -- test_default_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 696.3966248035431s cumulative, 2.9723663330078125s individual

F
current test FAILED -- test_simulate_remote_addr in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 696.7795052528381s cumulative, 0.38288044929504395s individual


tests/test_response_context.py .
current test PASSED/SKIPPED -- test_custom_response_context_failure in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_context.py: 696.7903912067413s cumulative, 0.010885953903198242s individual

.
current test PASSED/SKIPPED -- test_default_response_context in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_context.py: 696.799129486084s cumulative, 0.008738279342651367s individual

.
current test PASSED/SKIPPED -- test_default_response_context in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_context.py: 696.8102979660034s cumulative, 0.011168479919433594s individual

.
current test PASSED/SKIPPED -- test_custom_response_context in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_context.py: 696.818811416626s cumulative, 0.008513450622558594s individual

.
current test PASSED/SKIPPED -- test_custom_response_context_failure in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_context.py: 696.8324637413025s cumulative, 0.013652324676513672s individual

.
current test PASSED/SKIPPED -- test_custom_response_context_factory in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_context.py: 696.8443624973297s cumulative, 0.01189875602722168s individual

.
current test PASSED/SKIPPED -- test_custom_response_context in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_context.py: 696.8544945716858s cumulative, 0.010132074356079102s individual

.
current test PASSED/SKIPPED -- test_custom_response_context_factory in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_context.py: 696.8606564998627s cumulative, 0.006161928176879883s individual


tests/test_query_params.py F
current test FAILED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 697.2287011146545s cumulative, 0.3680446147918701s individual

.
current test PASSED/SKIPPED -- test_get_datetime_valid_with_format in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 697.252110004425s cumulative, 0.023408889770507812s individual

F
current test FAILED -- test_get_datetime_missing_param in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 697.680816411972s cumulative, 0.42870640754699707s individual

.
current test PASSED/SKIPPED -- test_simple in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 697.7035758495331s cumulative, 0.022759437561035156s individual

.
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 697.7424550056458s cumulative, 0.0388791561126709s individual

.
current test PASSED/SKIPPED -- test_list_type in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 697.7713975906372s cumulative, 0.028942584991455078s individual

.
current test PASSED/SKIPPED -- test_multiple_form_keys_as_list in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 697.7986946105957s cumulative, 0.027297019958496094s individual

.
current test PASSED/SKIPPED -- test_get_date_valid in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 697.8206608295441s cumulative, 0.021966218948364258s individual

F
current test FAILED -- test_option_auto_parse_qs_csv_simple_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 698.3019309043884s cumulative, 0.48127007484436035s individual

.
current test PASSED/SKIPPED -- test_has_param in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 698.3317618370056s cumulative, 0.0298309326171875s individual

F
current test FAILED -- test_get_datetime_missing_param in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 698.8634967803955s cumulative, 0.5317349433898926s individual

F
current test FAILED -- test_blank in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 699.394139289856s cumulative, 0.5306425094604492s individual

.
current test PASSED/SKIPPED -- test_required in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 699.4237987995148s cumulative, 0.029659509658813477s individual

.
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_simple_false in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 699.4510133266449s cumulative, 0.027214527130126953s individual

.
current test PASSED/SKIPPED -- test_get_dict_store in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 699.4789483547211s cumulative, 0.027935028076171875s individual

.
current test PASSED/SKIPPED -- test_get_datetime_store in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 699.5078852176666s cumulative, 0.02893686294555664s individual

.
current test PASSED/SKIPPED -- test_percent_encoded in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 699.5240368843079s cumulative, 0.01615166664123535s individual

F
current test FAILED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 702.1774537563324s cumulative, 2.653416872024536s individual

F
current test FAILED -- test_multiple_keys_as_bool in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 702.4719200134277s cumulative, 0.2944662570953369s individual

F
current test FAILED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 702.9122047424316s cumulative, 0.44028472900390625s individual

F
current test FAILED -- test_percent_encoded in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 703.3589560985565s cumulative, 0.44675135612487793s individual

.
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 703.3776183128357s cumulative, 0.018662214279174805s individual

F
current test FAILED -- test_list_type_blank in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 703.6790010929108s cumulative, 0.30138278007507324s individual

F
current test FAILED -- test_required in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 703.9791707992554s cumulative, 0.3001697063446045s individual

.
current test PASSED/SKIPPED -- test_required in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 703.9923331737518s cumulative, 0.013162374496459961s individual

F
current test FAILED -- test_get_dict_valid in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 704.2234063148499s cumulative, 0.23107314109802246s individual

F
current test FAILED -- test_percent_encoded in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 706.8713278770447s cumulative, 2.647921562194824s individual

.
current test PASSED/SKIPPED -- test_float in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 706.8950963020325s cumulative, 0.02376842498779297s individual

F
current test FAILED -- test_list_transformer in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 707.2786111831665s cumulative, 0.3835148811340332s individual

F
current test FAILED -- test_default_auto_parse_csv_behaviour in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 707.7035789489746s cumulative, 0.42496776580810547s individual

F
current test FAILED -- test_multiple_form_keys_as_list in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 708.1709554195404s cumulative, 0.4673764705657959s individual

.
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 708.1984570026398s cumulative, 0.027501583099365234s individual

.
current test PASSED/SKIPPED -- test_get_date_invalid in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 708.2282516956329s cumulative, 0.029794692993164062s individual

F
current test FAILED -- test_get_dict_missing_param in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 708.7543983459473s cumulative, 0.526146650314331s individual

F
current test FAILED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 709.1313061714172s cumulative, 0.3769078254699707s individual

.
current test PASSED/SKIPPED -- test_allowed_names in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 709.1545226573944s cumulative, 0.02321648597717285s individual

.
current test PASSED/SKIPPED -- test_param_property in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 709.1804707050323s cumulative, 0.025948047637939453s individual

.
current test PASSED/SKIPPED -- test_get_dict_missing_param in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 709.2022807598114s cumulative, 0.021810054779052734s individual

.
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_simple_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 709.2253315448761s cumulative, 0.023050785064697266s individual

F
current test FAILED -- test_get_datetime_invalid in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 712.2840366363525s cumulative, 3.0587050914764404s individual

F
current test FAILED -- test_multiple_form_keys_as_list in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 712.4885528087616s cumulative, 0.20451617240905762s individual

.
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 712.5007898807526s cumulative, 0.012237071990966797s individual

F
current test FAILED -- test_none in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 712.7378506660461s cumulative, 0.2370607852935791s individual

F
current test FAILED -- test_get_datetime_store in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 713.0694165229797s cumulative, 0.33156585693359375s individual

F
current test FAILED -- test_get_date_store in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 713.3600106239319s cumulative, 0.29059410095214844s individual

.
current test PASSED/SKIPPED -- test_percent_encoded in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 713.3777067661285s cumulative, 0.017696142196655273s individual

.
current test PASSED/SKIPPED -- test_required in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 713.3961179256439s cumulative, 0.01841115951538086s individual

F
current test FAILED -- test_option_auto_parse_qs_csv_complex_false in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 713.6170511245728s cumulative, 0.220933198928833s individual

.
current test PASSED/SKIPPED -- test_uuid in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 713.6268782615662s cumulative, 0.009827136993408203s individual

F
current test FAILED -- test_get_dict_store in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 713.8902595043182s cumulative, 0.2633812427520752s individual

F
current test FAILED -- test_default in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 716.8386881351471s cumulative, 2.9484286308288574s individual

.
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 716.8557550907135s cumulative, 0.01706695556640625s individual

.
current test PASSED/SKIPPED -- test_multiple_keys_as_bool in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 716.8670220375061s cumulative, 0.011266946792602539s individual

F
current test FAILED -- test_get_datetime_valid_with_format in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 717.1538496017456s cumulative, 0.28682756423950195s individual

F
current test FAILED -- test_simple in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 717.4218456745148s cumulative, 0.26799607276916504s individual

F
current test FAILED -- test_has_param in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 717.6444256305695s cumulative, 0.2225799560546875s individual

.
current test PASSED/SKIPPED -- test_get_datetime_valid in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 717.6559960842133s cumulative, 0.011570453643798828s individual

F
current test FAILED -- test_required in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 717.8530459403992s cumulative, 0.19704985618591309s individual

.
current test PASSED/SKIPPED -- test_default in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 717.8665056228638s cumulative, 0.01345968246459961s individual

F
current test FAILED -- test_int_neg in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 718.321811914444s cumulative, 0.4553062915802002s individual

.
current test PASSED/SKIPPED -- test_get_dict_invalid in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 718.3467831611633s cumulative, 0.02497124671936035s individual

.
current test PASSED/SKIPPED -- test_get_date_store in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 718.3677370548248s cumulative, 0.020953893661499023s individual

F
current test FAILED -- test_list_transformer in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 718.7551381587982s cumulative, 0.38740110397338867s individual

.
current test PASSED/SKIPPED -- test_has_param in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 718.7745449542999s cumulative, 0.019406795501708984s individual

F
current test FAILED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 722.991945028305s cumulative, 4.217400074005127s individual

.
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_complex_false in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 723.0108950138092s cumulative, 0.01894998550415039s individual

.
current test PASSED/SKIPPED -- test_boolean_blank in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 723.0301830768585s cumulative, 0.019288063049316406s individual

.
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 723.0527114868164s cumulative, 0.022528409957885742s individual

F
current test FAILED -- test_get_date_missing_param in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 723.6033265590668s cumulative, 0.5506150722503662s individual

F
current test FAILED -- test_option_auto_parse_qs_csv_simple_false in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 724.3586304187775s cumulative, 0.7553038597106934s individual

.
current test PASSED/SKIPPED -- test_list_type in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 724.4071490764618s cumulative, 0.04851865768432617s individual

F
current test FAILED -- test_bad_percentage in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 725.0107982158661s cumulative, 0.6036491394042969s individual

.
current test PASSED/SKIPPED -- test_default_auto_parse_csv_behaviour in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 725.0359139442444s cumulative, 0.0251157283782959s individual

F
current test FAILED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 725.436915397644s cumulative, 0.4010014533996582s individual

.
current test PASSED/SKIPPED -- test_get_dict_missing_param in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 725.452437877655s cumulative, 0.015522480010986328s individual

.
current test PASSED/SKIPPED -- test_get_date_valid in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 725.4628643989563s cumulative, 0.010426521301269531s individual

F
current test FAILED -- test_multiple_keys_as_int in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 725.8846039772034s cumulative, 0.4217395782470703s individual

F
current test FAILED -- test_required in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 729.5534975528717s cumulative, 3.668893575668335s individual

.
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_simple_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 729.5740728378296s cumulative, 0.020575284957885742s individual

.
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 729.590589761734s cumulative, 0.016516923904418945s individual

F
current test FAILED -- test_multiple_form_keys in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 729.8771574497223s cumulative, 0.28656768798828125s individual

F
current test FAILED -- test_bad_percentage in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 730.1177394390106s cumulative, 0.24058198928833008s individual

F
current test FAILED -- test_required in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 730.4431550502777s cumulative, 0.32541561126708984s individual

F
current test FAILED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 730.7555027008057s cumulative, 0.3123476505279541s individual

F
current test FAILED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 731.1636562347412s cumulative, 0.4081535339355469s individual

.
current test PASSED/SKIPPED -- test_boolean in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 731.1835522651672s cumulative, 0.01989603042602539s individual

.
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 731.198634147644s cumulative, 0.01508188247680664s individual

F
current test FAILED -- test_uuid in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 731.4780428409576s cumulative, 0.27940869331359863s individual

F
current test FAILED -- test_get_date_valid in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 731.6984272003174s cumulative, 0.2203843593597412s individual

F
current test FAILED -- test_boolean_blank in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 734.3984885215759s cumulative, 2.700061321258545s individual

.
current test PASSED/SKIPPED -- test_required in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 734.4244594573975s cumulative, 0.025970935821533203s individual

F
current test FAILED -- test_required in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 734.8900957107544s cumulative, 0.4656362533569336s individual

.
current test PASSED/SKIPPED -- test_blank in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 734.9147160053253s cumulative, 0.02462029457092285s individual

.
current test PASSED/SKIPPED -- test_multiple_form_keys in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 734.9322867393494s cumulative, 0.01757073402404785s individual

.
current test PASSED/SKIPPED -- test_get_date_missing_param in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 734.9540555477142s cumulative, 0.021768808364868164s individual

.
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 734.9760141372681s cumulative, 0.021958589553833008s individual

.
current test PASSED/SKIPPED -- test_get_date_valid_with_format in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 734.9922544956207s cumulative, 0.016240358352661133s individual

.
current test PASSED/SKIPPED -- test_boolean_blank in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 735.004962682724s cumulative, 0.012708187103271484s individual

F
current test FAILED -- test_get_dict_invalid in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 735.4366381168365s cumulative, 0.43167543411254883s individual

F
current test FAILED -- test_get_param_as_json_handler_json in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 735.8919768333435s cumulative, 0.455338716506958s individual

.
current test PASSED/SKIPPED -- test_allowed_names in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 735.9124495983124s cumulative, 0.02047276496887207s individual

.
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 735.9264960289001s cumulative, 0.014046430587768555s individual

F
current test FAILED -- test_float_neg in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 736.3657765388489s cumulative, 0.43928050994873047s individual

F
current test FAILED -- test_boolean in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 736.929265499115s cumulative, 0.5634889602661133s individual

F
current test FAILED -- test_required in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 740.7741203308105s cumulative, 3.8448548316955566s individual

F
current test FAILED -- test_boolean in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 741.1653118133545s cumulative, 0.3911914825439453s individual

.
current test PASSED/SKIPPED -- test_get_datetime_valid_with_format in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 741.1957449913025s cumulative, 0.030433177947998047s individual

.
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 741.2168591022491s cumulative, 0.021114110946655273s individual

F
current test FAILED -- test_get_datetime_valid_with_format in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 741.5637884140015s cumulative, 0.34692931175231934s individual

.
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 741.5907690525055s cumulative, 0.02698063850402832s individual

F
current test FAILED -- test_multiple_keys_as_float in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 742.1870031356812s cumulative, 0.5962340831756592s individual

F
current test FAILED -- test_default in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 742.797031879425s cumulative, 0.6100287437438965s individual

F
current test FAILED -- test_none in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 743.2821173667908s cumulative, 0.48508548736572266s individual

.
current test PASSED/SKIPPED -- test_multiple_keys_as_int in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 743.3063139915466s cumulative, 0.024196624755859375s individual

.
current test PASSED/SKIPPED -- test_int in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 743.3252747058868s cumulative, 0.01896071434020996s individual

.
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 743.3453571796417s cumulative, 0.020082473754882812s individual

F
current test FAILED -- test_get_dict_missing_param in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 743.6321060657501s cumulative, 0.28674888610839844s individual

.
current test PASSED/SKIPPED -- test_list_transformer in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 743.6530590057373s cumulative, 0.020952939987182617s individual

F
current test FAILED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 746.8268513679504s cumulative, 3.1737923622131348s individual

F
current test FAILED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 747.2957241535187s cumulative, 0.4688727855682373s individual

F
current test FAILED -- test_default_auto_parse_csv_behaviour in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 747.7461922168732s cumulative, 0.4504680633544922s individual

F
current test FAILED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 748.1823883056641s cumulative, 0.43619608879089355s individual

F
current test FAILED -- test_float in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 748.5586760044098s cumulative, 0.37628769874572754s individual

.
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 748.5867664813995s cumulative, 0.028090476989746094s individual

F
current test FAILED -- test_get_datetime_invalid in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 749.0350737571716s cumulative, 0.4483072757720947s individual

.
current test PASSED/SKIPPED -- test_uuid in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 749.0665864944458s cumulative, 0.03151273727416992s individual

F
current test FAILED -- test_get_datetime_valid in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 749.4801607131958s cumulative, 0.41357421875s individual

.
current test PASSED/SKIPPED -- test_multiple_keys_as_float in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 749.4972312450409s cumulative, 0.017070531845092773s individual

F
current test FAILED -- test_required in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 752.1949670314789s cumulative, 2.6977357864379883s individual

F
current test FAILED -- test_required in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 752.409051656723s cumulative, 0.21408462524414062s individual

.
current test PASSED/SKIPPED -- test_required in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 752.4217526912689s cumulative, 0.012701034545898438s individual

F
current test FAILED -- test_get_date_valid_with_format in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 752.6235744953156s cumulative, 0.20182180404663086s individual

.
current test PASSED/SKIPPED -- test_get_dict_invalid in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 752.6388311386108s cumulative, 0.015256643295288086s individual

F
current test FAILED -- test_simple in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 752.8541579246521s cumulative, 0.21532678604125977s individual

F
current test FAILED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 753.2515468597412s cumulative, 0.39738893508911133s individual

.
current test PASSED/SKIPPED -- test_get_datetime_store in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 753.2742853164673s cumulative, 0.02273845672607422s individual

F
current test FAILED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 753.5745384693146s cumulative, 0.30025315284729004s individual

F
current test FAILED -- test_int in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 753.8136684894562s cumulative, 0.23913002014160156s individual

.
current test PASSED/SKIPPED -- test_multiple_keys_as_float in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 753.8320958614349s cumulative, 0.018427371978759766s individual

.
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 753.8467545509338s cumulative, 0.014658689498901367s individual

.
current test PASSED/SKIPPED -- test_list_type_blank in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 753.8613717556s cumulative, 0.014617204666137695s individual

.
current test PASSED/SKIPPED -- test_param_property in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 753.8717424869537s cumulative, 0.010370731353759766s individual

F
current test FAILED -- test_get_param_as_json_no_handler_json in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 756.5979125499725s cumulative, 2.726170063018799s individual

.
current test PASSED/SKIPPED -- test_multiple_keys_as_bool in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 756.6209495067596s cumulative, 0.023036956787109375s individual

.
current test PASSED/SKIPPED -- test_required in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 756.6334657669067s cumulative, 0.012516260147094727s individual

.
current test PASSED/SKIPPED -- test_get_datetime_missing_param in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 756.649564743042s cumulative, 0.016098976135253906s individual

F
current test FAILED -- test_multiple_keys_as_float in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 757.0681092739105s cumulative, 0.4185445308685303s individual

.
current test PASSED/SKIPPED -- test_required in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 757.0861914157867s cumulative, 0.018082141876220703s individual

F
current test FAILED -- test_list_type_blank in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 757.3843336105347s cumulative, 0.2981421947479248s individual

.
current test PASSED/SKIPPED -- test_blank in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 757.4030377864838s cumulative, 0.01870417594909668s individual

F
current test FAILED -- test_multiple_keys_as_int in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 757.7243254184723s cumulative, 0.3212876319885254s individual

.
current test PASSED/SKIPPED -- test_get_dict_store in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 757.7477140426636s cumulative, 0.02338862419128418s individual

F
current test FAILED -- test_param_property in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 758.1372361183167s cumulative, 0.38952207565307617s individual

.
current test PASSED/SKIPPED -- test_required in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 758.1614139080048s cumulative, 0.02417778968811035s individual

.
current test PASSED/SKIPPED -- test_default_auto_parse_csv_behaviour in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 758.1795697212219s cumulative, 0.018155813217163086s individual

.
current test PASSED/SKIPPED -- test_get_datetime_valid in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 758.1986548900604s cumulative, 0.019085168838500977s individual

.
current test PASSED/SKIPPED -- test_multiple_keys_as_int in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 758.2172019481659s cumulative, 0.01854705810546875s individual

.
current test PASSED/SKIPPED -- test_list_transformer in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 758.2367351055145s cumulative, 0.019533157348632812s individual

F
current test FAILED -- test_get_date_valid in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 758.6957166194916s cumulative, 0.4589815139770508s individual

.
current test PASSED/SKIPPED -- test_required in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 758.7219474315643s cumulative, 0.026230812072753906s individual

F
current test FAILED -- test_get_datetime_store in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 762.4713768959045s cumulative, 3.74942946434021s individual

F
current test FAILED -- test_required in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 763.0340430736542s cumulative, 0.5626661777496338s individual

F
current test FAILED -- test_get_dict_invalid in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 763.5288465023041s cumulative, 0.49480342864990234s individual

.
current test PASSED/SKIPPED -- test_get_dict_valid in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 763.5505938529968s cumulative, 0.021747350692749023s individual

.
current test PASSED/SKIPPED -- test_get_date_store in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 763.5748138427734s cumulative, 0.024219989776611328s individual

F
current test FAILED -- test_blank in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 764.1817770004272s cumulative, 0.6069631576538086s individual

F
current test FAILED -- test_option_auto_parse_qs_csv_complex_false in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 764.7249546051025s cumulative, 0.543177604675293s individual

.
current test PASSED/SKIPPED -- test_get_datetime_invalid in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 764.7576553821564s cumulative, 0.03270077705383301s individual

F
current test FAILED -- test_get_datetime_valid in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 765.2903771400452s cumulative, 0.532721757888794s individual

.
current test PASSED/SKIPPED -- test_bad_percentage in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 765.3130164146423s cumulative, 0.02263927459716797s individual

.
current test PASSED/SKIPPED -- test_bad_percentage in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 765.3299553394318s cumulative, 0.01693892478942871s individual

F
current test FAILED -- test_uuid in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 765.6801879405975s cumulative, 0.3502326011657715s individual

F
current test FAILED -- test_get_date_invalid in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 769.7435493469238s cumulative, 4.063361406326294s individual

.
current test PASSED/SKIPPED -- test_int in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 769.7808663845062s cumulative, 0.03731703758239746s individual

F
current test FAILED -- test_get_dict_store in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 770.3731353282928s cumulative, 0.5922689437866211s individual

F
current test FAILED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 771.0294644832611s cumulative, 0.6563291549682617s individual

.
current test PASSED/SKIPPED -- test_get_datetime_invalid in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 771.0689148902893s cumulative, 0.03945040702819824s individual

.
current test PASSED/SKIPPED -- test_multiple_form_keys_as_list in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 771.0929698944092s cumulative, 0.024055004119873047s individual

F
current test FAILED -- test_int_neg in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 771.5349168777466s cumulative, 0.44194698333740234s individual

.
current test PASSED/SKIPPED -- test_list_type_blank in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 771.5513467788696s cumulative, 0.016429901123046875s individual

.
current test PASSED/SKIPPED -- test_float_neg in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 771.5651798248291s cumulative, 0.013833045959472656s individual

F
current test FAILED -- test_allowed_names in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 771.9989132881165s cumulative, 0.4337334632873535s individual

F
current test FAILED -- test_option_auto_parse_qs_csv_simple_false in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 772.4766471385956s cumulative, 0.477733850479126s individual

F
current test FAILED -- test_get_date_invalid in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 772.7817244529724s cumulative, 0.30507731437683105s individual

F
current test FAILED -- test_boolean_blank in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 776.785698890686s cumulative, 4.003974437713623s individual

.
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 776.7994363307953s cumulative, 0.01373744010925293s individual

.
current test PASSED/SKIPPED -- test_int_neg in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 776.8083963394165s cumulative, 0.00896000862121582s individual

F
current test FAILED -- test_multiple_keys_as_bool in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 777.002191066742s cumulative, 0.19379472732543945s individual

.
current test PASSED/SKIPPED -- test_default in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 777.016655921936s cumulative, 0.014464855194091797s individual

.
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_multiple_fields_false in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 777.0242857933044s cumulative, 0.007629871368408203s individual

.
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 777.0342259407043s cumulative, 0.009940147399902344s individual

.
current test PASSED/SKIPPED -- test_float in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 777.0441529750824s cumulative, 0.009927034378051758s individual

F
current test FAILED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 777.2777826786041s cumulative, 0.23362970352172852s individual

F
current test FAILED -- test_multiple_form_keys in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 777.4877552986145s cumulative, 0.20997262001037598s individual

F
current test FAILED -- test_get_date_valid_with_format in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 777.6784734725952s cumulative, 0.1907181739807129s individual

F
current test FAILED -- test_option_auto_parse_qs_csv_multiple_fields_false in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 777.8892397880554s cumulative, 0.21076631546020508s individual

.
current test PASSED/SKIPPED -- test_get_date_invalid in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 777.9044461250305s cumulative, 0.015206336975097656s individual

F
current test FAILED -- test_param_property in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 780.5399158000946s cumulative, 2.635469675064087s individual

F
current test FAILED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 780.719554901123s cumulative, 0.17963910102844238s individual

F
current test FAILED -- test_required in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 780.8780434131622s cumulative, 0.15848851203918457s individual

F
current test FAILED -- test_get_date_store in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 781.0407791137695s cumulative, 0.1627357006072998s individual

F
current test FAILED -- test_has_param in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 781.2048270702362s cumulative, 0.1640479564666748s individual

.
current test PASSED/SKIPPED -- test_required in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 781.2166590690613s cumulative, 0.011831998825073242s individual

F
current test FAILED -- test_allowed_names in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 781.464813709259s cumulative, 0.2481546401977539s individual

F
current test FAILED -- test_option_auto_parse_qs_csv_simple_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 781.803915977478s cumulative, 0.33910226821899414s individual

F
current test FAILED -- test_required in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 785.1040668487549s cumulative, 3.3001508712768555s individual

F
current test FAILED -- test_get_dict_valid in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 785.266548871994s cumulative, 0.16248202323913574s individual

.
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_simple_false in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 785.2763917446136s cumulative, 0.009842872619628906s individual

.
current test PASSED/SKIPPED -- test_multiple_form_keys in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 785.2827417850494s cumulative, 0.006350040435791016s individual

.
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 785.2904560565948s cumulative, 0.007714271545410156s individual

F
current test FAILED -- test_list_type in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 785.5173540115356s cumulative, 0.2268979549407959s individual

.
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_multiple_fields_false in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 785.5335438251495s cumulative, 0.0161898136138916s individual

F
current test FAILED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 785.7729070186615s cumulative, 0.2393631935119629s individual

.
current test PASSED/SKIPPED -- test_none in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 785.7857599258423s cumulative, 0.012852907180786133s individual

F
current test FAILED -- test_list_type in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 786.2871649265289s cumulative, 0.5014050006866455s individual

.
current test PASSED/SKIPPED -- test_boolean in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 786.3166196346283s cumulative, 0.029454708099365234s individual

.
current test PASSED/SKIPPED -- test_none in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 786.3331887722015s cumulative, 0.016569137573242188s individual

F
current test FAILED -- test_option_auto_parse_qs_csv_multiple_fields_true in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 786.6620576381683s cumulative, 0.3288688659667969s individual

.
current test PASSED/SKIPPED -- test_get_date_missing_param in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 786.680356502533s cumulative, 0.018298864364624023s individual

.
current test PASSED/SKIPPED -- test_required in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 786.6976001262665s cumulative, 0.017243623733520508s individual

.
current test PASSED/SKIPPED -- test_get_date_valid_with_format in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 786.7231681346893s cumulative, 0.025568008422851562s individual

F
current test FAILED -- test_float_neg in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 790.5840260982513s cumulative, 3.8608579635620117s individual

.
current test PASSED/SKIPPED -- test_required in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 790.6080884933472s cumulative, 0.024062395095825195s individual

F
current test FAILED -- test_option_auto_parse_qs_csv_multiple_fields_false in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 791.0042991638184s cumulative, 0.3962106704711914s individual

.
current test PASSED/SKIPPED -- test_simple in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 791.0505604743958s cumulative, 0.04626131057739258s individual

F
current test FAILED -- test_int in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 791.4589471817017s cumulative, 0.4083867073059082s individual

.
current test PASSED/SKIPPED -- test_int_neg in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 791.4888134002686s cumulative, 0.02986621856689453s individual

.
current test PASSED/SKIPPED -- test_option_auto_parse_qs_csv_complex_false in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 791.5077245235443s cumulative, 0.018911123275756836s individual

F
current test FAILED -- test_get_date_missing_param in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 791.8529553413391s cumulative, 0.3452308177947998s individual

F
current test FAILED -- test_float in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 792.1212701797485s cumulative, 0.26831483840942383s individual

.
current test PASSED/SKIPPED -- test_get_dict_valid in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 792.1412847042084s cumulative, 0.020014524459838867s individual

.
current test PASSED/SKIPPED -- test_float_neg in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 792.1597111225128s cumulative, 0.01842641830444336s individual

F
current test FAILED -- test_required in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 792.5902872085571s cumulative, 0.4305760860443115s individual

.
current test PASSED/SKIPPED -- test_get_datetime_missing_param in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 792.6175496578217s cumulative, 0.027262449264526367s individual

F
current test FAILED -- test_empty_body_no_content_length in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 793.069714307785s cumulative, 0.4521646499633789s individual

F
current test FAILED -- test_http_methods_body_not_expected in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 793.5448637008667s cumulative, 0.47514939308166504s individual

F
current test FAILED -- test_explicitly_disable_auto_parse in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 796.965812921524s cumulative, 3.4209492206573486s individual

F
current test FAILED -- test_http_methods_body_not_expected in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 797.1938545703888s cumulative, 0.2280416488647461s individual

F
current test FAILED -- test_non_ascii in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 797.4252202510834s cumulative, 0.23136568069458008s individual

F
current test FAILED -- test_http_methods_body_expected in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 797.669095993042s cumulative, 0.24387574195861816s individual

F
current test FAILED -- test_http_methods_body_expected in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 797.8776230812073s cumulative, 0.2085270881652832s individual

F
current test FAILED -- test_asgi_raises_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 798.1663699150085s cumulative, 0.28874683380126953s individual

F
current test FAILED -- test_http_methods_body_expected in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 801.383451461792s cumulative, 3.2170815467834473s individual

F
current test FAILED -- test_http_methods_body_expected in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 801.6491303443909s cumulative, 0.26567888259887695s individual

F
current test FAILED -- test_http_methods_body_expected in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 801.940288066864s cumulative, 0.29115772247314453s individual

F
current test FAILED -- test_empty_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 802.2236301898956s cumulative, 0.2833421230316162s individual

F
current test FAILED -- test_dont_auto_parse_by_default in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 802.559398651123s cumulative, 0.335768461227417s individual


tests/asgi/test_middleware_asgi.py .
current test PASSED/SKIPPED -- test_raise_on_incompatible in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_middleware_asgi.py: 802.5710773468018s cumulative, 0.011678695678710938s individual

.
current test PASSED/SKIPPED -- test_raise_on_incompatible in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_middleware_asgi.py: 802.5794801712036s cumulative, 0.008402824401855469s individual

.
current test PASSED/SKIPPED -- test_raise_on_incompatible in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_middleware_asgi.py: 802.5928888320923s cumulative, 0.013408660888671875s individual

.
current test PASSED/SKIPPED -- test_raise_on_incompatible in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_middleware_asgi.py: 802.6104753017426s cumulative, 0.017586469650268555s individual


tests/test_response_media.py .
current test PASSED/SKIPPED -- test_json in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_media.py: 802.6437156200409s cumulative, 0.033240318298339844s individual

.
current test PASSED/SKIPPED -- test_media in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_media.py: 802.6612360477448s cumulative, 0.017520427703857422s individual

.
current test PASSED/SKIPPED -- test_default_media_type in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_media.py: 802.6756234169006s cumulative, 0.014387369155883789s individual

.
current test PASSED/SKIPPED -- test_use_cached_media in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_media.py: 802.6885361671448s cumulative, 0.012912750244140625s individual

.
current test PASSED/SKIPPED -- test_text in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_media.py: 802.7027542591095s cumulative, 0.01421809196472168s individual

.
current test PASSED/SKIPPED -- test_msgpack in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_media.py: 802.7150011062622s cumulative, 0.012246847152709961s individual

.
current test PASSED/SKIPPED -- test_non_ascii_json_serialization in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_media.py: 802.7269749641418s cumulative, 0.011973857879638672s individual

.
current test PASSED/SKIPPED -- test_data in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_media.py: 802.7388362884521s cumulative, 0.011861324310302734s individual

.
current test PASSED/SKIPPED -- test_non_ascii_json_serialization in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_media.py: 802.7512972354889s cumulative, 0.012460947036743164s individual

.
current test PASSED/SKIPPED -- test_msgpack in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_media.py: 802.7678837776184s cumulative, 0.0165865421295166s individual

.
current test PASSED/SKIPPED -- test_unknown_media_type in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_media.py: 802.7851078510284s cumulative, 0.01722407341003418s individual

.
current test PASSED/SKIPPED -- test_msgpack in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_media.py: 802.7986307144165s cumulative, 0.013522863388061523s individual

.
current test PASSED/SKIPPED -- test_json in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_media.py: 802.8125591278076s cumulative, 0.013928413391113281s individual

.
current test PASSED/SKIPPED -- test_mimeparse_edgecases in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_media.py: 802.8245577812195s cumulative, 0.011998653411865234s individual

.
current test PASSED/SKIPPED -- test_non_ascii_json_serialization in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_media.py: 802.836727142334s cumulative, 0.012169361114501953s individual

.
current test PASSED/SKIPPED -- test_non_ascii_json_serialization in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_media.py: 802.851051568985s cumulative, 0.014324426651000977s individual

.
current test PASSED/SKIPPED -- test_media_rendered_cached in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_media.py: 802.8619437217712s cumulative, 0.010892152786254883s individual

.
current test PASSED/SKIPPED -- test_json in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_media.py: 802.8752856254578s cumulative, 0.013341903686523438s individual

.
current test PASSED/SKIPPED -- test_non_ascii_json_serialization in /home/kaiyaok2/PythonProjects/falcon/tests/test_response_media.py: 802.8885407447815s cumulative, 0.013255119323730469s individual


tests/test_media_multipart.py .
current test PASSED/SKIPPED -- test_parsing_correctness in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 802.9000341892242s cumulative, 0.011493444442749023s individual

.
current test PASSED/SKIPPED -- test_invalid_text_or_charset in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 802.9122943878174s cumulative, 0.012260198593139648s individual

.
current test PASSED/SKIPPED -- test_parse in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 802.9215083122253s cumulative, 0.009213924407958984s individual

.
current test PASSED/SKIPPED -- test_parsing_correctness in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 802.9291286468506s cumulative, 0.007620334625244141s individual

.
current test PASSED/SKIPPED -- test_headers_edge_cases in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 802.9544966220856s cumulative, 0.02536797523498535s individual

.
current test PASSED/SKIPPED -- test_serialize in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 802.9595413208008s cumulative, 0.005044698715209961s individual

.
current test PASSED/SKIPPED -- test_truncated_form in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 802.9853475093842s cumulative, 0.025806188583374023s individual

.
current test PASSED/SKIPPED -- test_parsing_correctness in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 802.9968862533569s cumulative, 0.01153874397277832s individual

.
current test PASSED/SKIPPED -- test_parsing_correctness in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 803.0083079338074s cumulative, 0.011421680450439453s individual

.
current test PASSED/SKIPPED -- test_headers_edge_cases in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 803.0377676486969s cumulative, 0.029459714889526367s individual

.
current test PASSED/SKIPPED -- test_parsing_correctness in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 803.0483434200287s cumulative, 0.01057577133178711s individual

.
current test PASSED/SKIPPED -- test_too_many_body_parts in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 803.0771040916443s cumulative, 0.028760671615600586s individual

.
current test PASSED/SKIPPED -- test_parsing_correctness in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 803.0877778530121s cumulative, 0.010673761367797852s individual

.
current test PASSED/SKIPPED -- test_parsing_correctness in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 803.0950796604156s cumulative, 0.007301807403564453s individual

.
current test PASSED/SKIPPED -- test_parsing_correctness in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 803.1030426025391s cumulative, 0.007962942123413086s individual

.
current test PASSED/SKIPPED -- test_truncated_form in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 803.1360321044922s cumulative, 0.032989501953125s individual

.
current test PASSED/SKIPPED -- test_truncated_form in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 803.1600346565247s cumulative, 0.024002552032470703s individual

.
current test PASSED/SKIPPED -- test_too_many_body_parts in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 803.1789922714233s cumulative, 0.01895761489868164s individual

.
current test PASSED/SKIPPED -- test_deserialize_custom_media in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 803.2030534744263s cumulative, 0.024061203002929688s individual

.
current test PASSED/SKIPPED -- test_invalid_text_or_charset in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 803.2089560031891s cumulative, 0.005902528762817383s individual

.
current test PASSED/SKIPPED -- test_parsing_correctness in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 803.2208425998688s cumulative, 0.0118865966796875s individual

.
current test PASSED/SKIPPED -- test_parsing_correctness in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 803.231009721756s cumulative, 0.010167121887207031s individual

.
current test PASSED/SKIPPED -- test_headers_edge_cases in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 803.2596070766449s cumulative, 0.028597354888916016s individual

.
current test PASSED/SKIPPED -- test_invalid_text_or_charset in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 803.275586605072s cumulative, 0.015979528427124023s individual

.
current test PASSED/SKIPPED -- test_parsing_correctness in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 803.2961356639862s cumulative, 0.02054905891418457s individual

.
current test PASSED/SKIPPED -- test_from_buffered_stream in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 803.3254582881927s cumulative, 0.02932262420654297s individual

.
current test PASSED/SKIPPED -- test_parsing_correctness in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 803.3440897464752s cumulative, 0.018631458282470703s individual

.
current test PASSED/SKIPPED -- test_headers_edge_cases in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 803.3854804039001s cumulative, 0.04139065742492676s individual

.
current test PASSED/SKIPPED -- test_too_many_body_parts in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 803.4147300720215s cumulative, 0.02924966812133789s individual

.
current test PASSED/SKIPPED -- test_too_many_body_parts in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 803.4475653171539s cumulative, 0.03283524513244629s individual

.
current test PASSED/SKIPPED -- test_parsing_correctness in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 803.4661037921906s cumulative, 0.018538475036621094s individual

.
current test PASSED/SKIPPED -- test_too_many_body_parts in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 803.507376909256s cumulative, 0.04127311706542969s individual

.
current test PASSED/SKIPPED -- test_data_too_large in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 803.5832350254059s cumulative, 0.07585811614990234s individual

.
current test PASSED/SKIPPED -- test_parsing_correctness in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 803.5977880954742s cumulative, 0.014553070068359375s individual

.
current test PASSED/SKIPPED -- test_truncated_form in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 803.63996052742s cumulative, 0.04217243194580078s individual

.
current test PASSED/SKIPPED -- test_parsing_correctness in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 803.655032157898s cumulative, 0.015071630477905273s individual

.
current test PASSED/SKIPPED -- test_unexected_form_structure in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 803.6961765289307s cumulative, 0.041144371032714844s individual

.
current test PASSED/SKIPPED -- test_too_many_body_parts in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 803.723846912384s cumulative, 0.02767038345336914s individual

.
current test PASSED/SKIPPED -- test_headers_edge_cases in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 803.7559499740601s cumulative, 0.03210306167602539s individual

.
current test PASSED/SKIPPED -- test_too_many_body_parts in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 803.7883179187775s cumulative, 0.03236794471740723s individual

.
current test PASSED/SKIPPED -- test_parsing_correctness in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 803.8092243671417s cumulative, 0.020906448364257812s individual

.
current test PASSED/SKIPPED -- test_unsupported_charset in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 803.8449988365173s cumulative, 0.03577446937561035s individual

.
current test PASSED/SKIPPED -- test_truncated_form in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 803.8864116668701s cumulative, 0.0414128303527832s individual

.
current test PASSED/SKIPPED -- test_missing_boundary in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 803.9031498432159s cumulative, 0.016738176345825195s individual

.
current test PASSED/SKIPPED -- test_too_many_body_parts in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 803.9482910633087s cumulative, 0.04514122009277344s individual

.
current test PASSED/SKIPPED -- test_parsing_correctness in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 803.9641687870026s cumulative, 0.015877723693847656s individual

.
current test PASSED/SKIPPED -- test_too_many_body_parts in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 803.9976997375488s cumulative, 0.03353095054626465s individual

.
current test PASSED/SKIPPED -- test_empty_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 804.013778924942s cumulative, 0.016079187393188477s individual

.
current test PASSED/SKIPPED -- test_too_many_body_parts in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 804.0531792640686s cumulative, 0.039400339126586914s individual

.
current test PASSED/SKIPPED -- test_parsing_correctness in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 804.0662841796875s cumulative, 0.013104915618896484s individual

.
current test PASSED/SKIPPED -- test_filename_star in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 804.0995841026306s cumulative, 0.033299922943115234s individual

.
current test PASSED/SKIPPED -- test_content_transfer_encoding_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 804.1470432281494s cumulative, 0.04745912551879883s individual

.
current test PASSED/SKIPPED -- test_parsing_correctness in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 804.1669125556946s cumulative, 0.019869327545166016s individual

.
current test PASSED/SKIPPED -- test_nested_multipart_mixed in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 804.248199224472s cumulative, 0.08128666877746582s individual

.
current test PASSED/SKIPPED -- test_parsing_correctness in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 804.270441532135s cumulative, 0.022242307662963867s individual

.
current test PASSED/SKIPPED -- test_truncated_form in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 804.3145487308502s cumulative, 0.04410719871520996s individual

.
current test PASSED/SKIPPED -- test_data_too_large in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 804.3670060634613s cumulative, 0.052457332611083984s individual

.
current test PASSED/SKIPPED -- test_filename_star in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 804.4129731655121s cumulative, 0.04596710205078125s individual

.
current test PASSED/SKIPPED -- test_too_many_body_parts in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 804.4505641460419s cumulative, 0.037590980529785156s individual

.
current test PASSED/SKIPPED -- test_upload_multipart in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 804.4918375015259s cumulative, 0.04127335548400879s individual

.
current test PASSED/SKIPPED -- test_parsing_correctness in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 804.5139710903168s cumulative, 0.022133588790893555s individual

.
current test PASSED/SKIPPED -- test_content_transfer_encoding_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 804.5573766231537s cumulative, 0.04340553283691406s individual

.
current test PASSED/SKIPPED -- test_parsing_correctness in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 804.5792164802551s cumulative, 0.02183985710144043s individual

.
current test PASSED/SKIPPED -- test_parse in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 804.5970418453217s cumulative, 0.01782536506652832s individual

.
current test PASSED/SKIPPED -- test_parsing_correctness in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 804.6199638843536s cumulative, 0.022922039031982422s individual

.
current test PASSED/SKIPPED -- test_unknown_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 804.6344747543335s cumulative, 0.014510869979858398s individual

.
current test PASSED/SKIPPED -- test_too_many_body_parts in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 804.6813051700592s cumulative, 0.04683041572570801s individual

.
current test PASSED/SKIPPED -- test_invalid_random_form in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 804.772937297821s cumulative, 0.09163212776184082s individual

.
current test PASSED/SKIPPED -- test_parsing_correctness in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 804.7854518890381s cumulative, 0.012514591217041016s individual

.
current test PASSED/SKIPPED -- test_too_many_body_parts in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 804.8148415088654s cumulative, 0.029389619827270508s individual

.
current test PASSED/SKIPPED -- test_parsing_correctness in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 804.8256454467773s cumulative, 0.010803937911987305s individual

.
current test PASSED/SKIPPED -- test_truncated_form in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 804.8543381690979s cumulative, 0.02869272232055664s individual

.
current test PASSED/SKIPPED -- test_unsupported_charset in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 804.8800935745239s cumulative, 0.02575540542602539s individual

.
current test PASSED/SKIPPED -- test_parsing_correctness in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 804.8906981945038s cumulative, 0.010604619979858398s individual

.
current test PASSED/SKIPPED -- test_too_many_body_parts in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 804.9205992221832s cumulative, 0.02990102767944336s individual

.
current test PASSED/SKIPPED -- test_parsing_correctness in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 804.9331855773926s cumulative, 0.012586355209350586s individual

.
current test PASSED/SKIPPED -- test_headers_edge_cases in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 804.9625780582428s cumulative, 0.029392480850219727s individual

.
current test PASSED/SKIPPED -- test_parsing_correctness in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 804.9753386974335s cumulative, 0.012760639190673828s individual

.
current test PASSED/SKIPPED -- test_parsing_correctness in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 804.9882919788361s cumulative, 0.01295328140258789s individual

.
current test PASSED/SKIPPED -- test_deserialize_part_media in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 805.0144550800323s cumulative, 0.026163101196289062s individual

.
current test PASSED/SKIPPED -- test_parsing_correctness in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 805.0232818126678s cumulative, 0.008826732635498047s individual

.
current test PASSED/SKIPPED -- test_headers_edge_cases in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 805.0492279529572s cumulative, 0.02594614028930664s individual

.
current test PASSED/SKIPPED -- test_body_part_media in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 805.0591566562653s cumulative, 0.009928703308105469s individual

.
current test PASSED/SKIPPED -- test_headers_edge_cases in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 805.0814385414124s cumulative, 0.022281885147094727s individual

.
current test PASSED/SKIPPED -- test_headers_edge_cases in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 805.1025390625s cumulative, 0.021100521087646484s individual

.
current test PASSED/SKIPPED -- test_too_many_body_parts in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 805.1382033824921s cumulative, 0.03566431999206543s individual

.
current test PASSED/SKIPPED -- test_invalid_random_form in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 805.2263224124908s cumulative, 0.0881190299987793s individual

.
current test PASSED/SKIPPED -- test_deserialize_part_media in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 805.2504789829254s cumulative, 0.024156570434570312s individual

.
current test PASSED/SKIPPED -- test_parsing_correctness in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 805.2612533569336s cumulative, 0.010774374008178711s individual

.
current test PASSED/SKIPPED -- test_empty_input in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 805.269143819809s cumulative, 0.007890462875366211s individual

.
current test PASSED/SKIPPED -- test_parse in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 805.278044462204s cumulative, 0.008900642395019531s individual

.
current test PASSED/SKIPPED -- test_parsing_correctness in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 805.2917053699493s cumulative, 0.013660907745361328s individual

.
current test PASSED/SKIPPED -- test_invalid_text_or_charset in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 805.3049161434174s cumulative, 0.013210773468017578s individual

.
current test PASSED/SKIPPED -- test_body_part_properties in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 805.3212268352509s cumulative, 0.016310691833496094s individual

.
current test PASSED/SKIPPED -- test_truncated_form in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 805.3485548496246s cumulative, 0.027328014373779297s individual

.
current test PASSED/SKIPPED -- test_headers_edge_cases in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 805.3589336872101s cumulative, 0.010378837585449219s individual

.
current test PASSED/SKIPPED -- test_deserialize_custom_media in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 805.3738460540771s cumulative, 0.01491236686706543s individual

.
current test PASSED/SKIPPED -- test_unexected_form_structure in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 805.3971967697144s cumulative, 0.02335071563720703s individual

.
current test PASSED/SKIPPED -- test_too_many_body_parts in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 805.4148824214935s cumulative, 0.017685651779174805s individual

.
current test PASSED/SKIPPED -- test_upload_multipart in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 805.4326267242432s cumulative, 0.01774430274963379s individual

.
current test PASSED/SKIPPED -- test_parse in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 805.498842716217s cumulative, 0.06621599197387695s individual

.
current test PASSED/SKIPPED -- test_headers_edge_cases in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 805.5273563861847s cumulative, 0.028513669967651367s individual

.
current test PASSED/SKIPPED -- test_headers_edge_cases in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 805.5425508022308s cumulative, 0.015194416046142578s individual

.
current test PASSED/SKIPPED -- test_too_many_body_parts in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_multipart.py: 805.5611329078674s cumulative, 0.01858210563659668s individual


tests/asgi/test_sse.py .
current test PASSED/SKIPPED -- test_multiple_events_early_disconnect in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_sse.py: 805.6423499584198s cumulative, 0.08121705055236816s individual


tests/test_uri_templates.py F
current test FAILED -- test_datetime_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 805.8663811683655s cumulative, 0.2240312099456787s individual

.
current test PASSED/SKIPPED -- test_uuid_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 805.8905894756317s cumulative, 0.02420830726623535s individual

F
current test FAILED -- test_adding_suffix_routes in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 806.0562143325806s cumulative, 0.16562485694885254s individual

F
current test FAILED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 806.2414541244507s cumulative, 0.1852397918701172s individual

F
current test FAILED -- test_converter_custom in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 810.991201877594s cumulative, 4.7497477531433105s individual

F
current test FAILED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 811.3791937828064s cumulative, 0.38799190521240234s individual

F
current test FAILED -- test_converter_custom in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 811.6675243377686s cumulative, 0.2883305549621582s individual

F
current test FAILED -- test_int_converter_rejections in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 811.9366381168365s cumulative, 0.26911377906799316s individual

F
current test FAILED -- test_uuid_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 812.2606530189514s cumulative, 0.32401490211486816s individual

F
current test FAILED -- test_datetime_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 812.5582666397095s cumulative, 0.29761362075805664s individual

F
current test FAILED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 812.7980811595917s cumulative, 0.23981451988220215s individual

F
current test FAILED -- test_with_and_without_trailing_slash in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 813.0761566162109s cumulative, 0.2780754566192627s individual

F
current test FAILED -- test_special_chars in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 813.4615573883057s cumulative, 0.38540077209472656s individual

F
current test FAILED -- test_float_converter_non_finite_disallowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 813.6802592277527s cumulative, 0.21870183944702148s individual

F
current test FAILED -- test_float_converter_non_finite_allowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 813.8144509792328s cumulative, 0.13419175148010254s individual

F
current test FAILED -- test_int_converter_rejections in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 817.7735662460327s cumulative, 3.9591152667999268s individual

F
current test FAILED -- test_int_converter_rejections in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 818.2956762313843s cumulative, 0.5221099853515625s individual

F
current test FAILED -- test_uuid_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 818.7052352428436s cumulative, 0.4095590114593506s individual

F
current test FAILED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 819.2482583522797s cumulative, 0.5430231094360352s individual

F
current test FAILED -- test_with_and_without_trailing_slash in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 819.7361574172974s cumulative, 0.4878990650177002s individual

F
current test FAILED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 820.3776497840881s cumulative, 0.6414923667907715s individual

F
current test FAILED -- test_datetime_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 821.0128383636475s cumulative, 0.6351885795593262s individual

F
current test FAILED -- test_uuid_converter_complex_segment in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 821.2754595279694s cumulative, 0.2626211643218994s individual

F
current test FAILED -- test_float_converter_non_finite_allowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 821.4075679779053s cumulative, 0.13210844993591309s individual

.
current test PASSED/SKIPPED -- test_uuid_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 821.4278163909912s cumulative, 0.0202484130859375s individual

F
current test FAILED -- test_int_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 824.1566970348358s cumulative, 2.7288806438446045s individual

F
current test FAILED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 824.498152256012s cumulative, 0.34145522117614746s individual

F
current test FAILED -- test_single_trailing_slash in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 824.8004291057587s cumulative, 0.3022768497467041s individual

F
current test FAILED -- test_multiple in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 825.0133979320526s cumulative, 0.2129688262939453s individual

F
current test FAILED -- test_datetime_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 825.2760441303253s cumulative, 0.2626461982727051s individual

F
current test FAILED -- test_no_vars in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 825.470915555954s cumulative, 0.1948714256286621s individual

F
current test FAILED -- test_int_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 825.7829372882843s cumulative, 0.31202173233032227s individual

F
current test FAILED -- test_uuid_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 826.0567235946655s cumulative, 0.2737863063812256s individual

F
current test FAILED -- test_single in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 826.2033808231354s cumulative, 0.14665722846984863s individual

F
current test FAILED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 826.3868718147278s cumulative, 0.18349099159240723s individual

F
current test FAILED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 829.4859046936035s cumulative, 3.0990328788757324s individual

F
current test FAILED -- test_single_path_segment in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 829.7552046775818s cumulative, 0.2692999839782715s individual

F
current test FAILED -- test_single in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 830.0989582538605s cumulative, 0.3437535762786865s individual

F
current test FAILED -- test_uuid_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 830.4685163497925s cumulative, 0.36955809593200684s individual

F
current test FAILED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 830.797422170639s cumulative, 0.3289058208465576s individual

.
current test PASSED/SKIPPED -- test_uuid_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 830.8247268199921s cumulative, 0.027304649353027344s individual

F
current test FAILED -- test_int_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 831.0805771350861s cumulative, 0.25585031509399414s individual

.
current test PASSED/SKIPPED -- test_uuid_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 831.1071178913116s cumulative, 0.026540756225585938s individual

F
current test FAILED -- test_same_level_complex_var in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 831.3389315605164s cumulative, 0.23181366920471191s individual

.
current test PASSED/SKIPPED -- test_uuid_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 831.3606419563293s cumulative, 0.02171039581298828s individual

F
current test FAILED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 831.569415807724s cumulative, 0.20877385139465332s individual

F
current test FAILED -- test_converter_custom in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 831.7163331508636s cumulative, 0.14691734313964844s individual

F
current test FAILED -- test_float_converter_non_finite_allowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 831.8768765926361s cumulative, 0.16054344177246094s individual

F
current test FAILED -- test_single in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 836.2307786941528s cumulative, 4.353902101516724s individual

F
current test FAILED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 836.576996088028s cumulative, 0.34621739387512207s individual

.
current test PASSED/SKIPPED -- test_uuid_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 836.6327607631683s cumulative, 0.05576467514038086s individual

F
current test FAILED -- test_uuid_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 837.1124620437622s cumulative, 0.47970128059387207s individual

F
current test FAILED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 837.7086009979248s cumulative, 0.5961389541625977s individual

F
current test FAILED -- test_same_level_complex_var in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 838.0743958950043s cumulative, 0.3657948970794678s individual

F
current test FAILED -- test_uuid_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 838.4356672763824s cumulative, 0.36127138137817383s individual

F
current test FAILED -- test_root_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 838.7796547412872s cumulative, 0.34398746490478516s individual

F
current test FAILED -- test_int_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates.py: 839.0244903564453s cumulative, 0.24483561515808105s individual


tests/test_middleware.py .
current test PASSED/SKIPPED -- test_process_request_cached in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 839.0440700054169s cumulative, 0.019579648971557617s individual

.
current test PASSED/SKIPPED -- test_process_request_not_cached in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 839.0604312419891s cumulative, 0.016361236572265625s individual

.
current test PASSED/SKIPPED -- test_process_resource_cached in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 839.0732779502869s cumulative, 0.012846708297729492s individual

.
current test PASSED/SKIPPED -- test_process_resource_cached in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 839.0842192173004s cumulative, 0.010941267013549805s individual

.
current test PASSED/SKIPPED -- test_process_request_cached in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 839.0909039974213s cumulative, 0.006684780120849609s individual

.
current test PASSED/SKIPPED -- test_http_status_raised_from_error_handler in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 839.0974035263062s cumulative, 0.006499528884887695s individual

.
current test PASSED/SKIPPED -- test_error_composed_before_resp_middleware_called in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 839.1042368412018s cumulative, 0.006833314895629883s individual

.
current test PASSED/SKIPPED -- test_base_path_is_removed_before_routing in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 839.1104936599731s cumulative, 0.006256818771362305s individual

.
current test PASSED/SKIPPED -- test_generate_trans_id_with_request in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 839.1166479587555s cumulative, 0.006154298782348633s individual

.
current test PASSED/SKIPPED -- test_response_middleware_raises_exception in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 839.1280510425568s cumulative, 0.011403083801269531s individual

.
current test PASSED/SKIPPED -- test_log_get_request in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 839.1375887393951s cumulative, 0.009537696838378906s individual

.
current test PASSED/SKIPPED -- test_add_invalid_middleware in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 839.1418342590332s cumulative, 0.0042455196380615234s individual

.
current test PASSED/SKIPPED -- test_skip_process_resource in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 839.150622844696s cumulative, 0.008788585662841797s individual

.
current test PASSED/SKIPPED -- test_add_invalid_middleware in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 839.1544966697693s cumulative, 0.0038738250732421875s individual

.
current test PASSED/SKIPPED -- test_log_get_request in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 839.161465883255s cumulative, 0.0069692134857177734s individual

.
current test PASSED/SKIPPED -- test_order_mw_executed_when_exception_in_resp in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 839.169184923172s cumulative, 0.0077190399169921875s individual

.
current test PASSED/SKIPPED -- test_generate_trans_id_and_time_with_request in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 839.17729139328s cumulative, 0.008106470108032227s individual

.
current test PASSED/SKIPPED -- test_inner_mw_throw_exception_while_processing_resp in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 839.184278011322s cumulative, 0.0069866180419921875s individual

.
current test PASSED/SKIPPED -- test_legacy_middleware_called_with_correct_args in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 839.1904373168945s cumulative, 0.006159305572509766s individual

.
current test PASSED/SKIPPED -- test_order_mw_executed_when_exception_in_rsrc in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 839.1961636543274s cumulative, 0.005726337432861328s individual

.
current test PASSED/SKIPPED -- test_order_independent_mw_executed_when_exception_in_req in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 839.2007787227631s cumulative, 0.004615068435668945s individual

.
current test PASSED/SKIPPED -- test_middleware_execution_order in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 839.2070369720459s cumulative, 0.006258249282836914s individual

.
current test PASSED/SKIPPED -- test_order_independent_mw_executed_when_exception_in_rsrc in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 839.2140853404999s cumulative, 0.007048368453979492s individual

.
current test PASSED/SKIPPED -- test_independent_middleware_execution_order in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 839.2195134162903s cumulative, 0.0054280757904052734s individual

.
current test PASSED/SKIPPED -- test_generate_trans_id_and_time_with_request in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 839.2272517681122s cumulative, 0.007738351821899414s individual

.
current test PASSED/SKIPPED -- test_order_mw_executed_when_exception_in_req in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 839.2346518039703s cumulative, 0.007400035858154297s individual

.
current test PASSED/SKIPPED -- test_inner_mw_with_ex_handler_throw_exception in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 839.2435877323151s cumulative, 0.008935928344726562s individual

.
current test PASSED/SKIPPED -- test_inner_mw_throw_exception in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 839.2562379837036s cumulative, 0.012650251388549805s individual

.
current test PASSED/SKIPPED -- test_multiple_response_mw_throw_exception in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 839.272486448288s cumulative, 0.016248464584350586s individual

.
current test PASSED/SKIPPED -- test_order_independent_mw_executed_when_exception_in_resp in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 839.2848854064941s cumulative, 0.012398958206176758s individual

.
current test PASSED/SKIPPED -- test_outer_mw_with_ex_handler_throw_exception in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 839.2923154830933s cumulative, 0.007430076599121094s individual

.
current test PASSED/SKIPPED -- test_can_access_resource_params in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 839.3023755550385s cumulative, 0.01006007194519043s individual

.
current test PASSED/SKIPPED -- test_can_access_resource_params in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 839.3179786205292s cumulative, 0.015603065490722656s individual

.
current test PASSED/SKIPPED -- test_api_initialization_with_cors_enabled_and_middleware_param in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 839.3380360603333s cumulative, 0.02005743980407715s individual

.
current test PASSED/SKIPPED -- test_api_initialization_with_cors_enabled_and_middleware_param in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 839.3518183231354s cumulative, 0.013782262802124023s individual

.
current test PASSED/SKIPPED -- test_api_initialization_with_cors_enabled_and_middleware_param in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 839.3656957149506s cumulative, 0.013877391815185547s individual

.
current test PASSED/SKIPPED -- test_api_initialization_with_cors_enabled_and_middleware_param in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 839.3808012008667s cumulative, 0.015105485916137695s individual

.
current test PASSED/SKIPPED -- test_dont_need_params_in_signature in /home/kaiyaok2/PythonProjects/falcon/tests/test_middleware.py: 839.393664598465s cumulative, 0.012863397598266602s individual


tests/test_sinks.py F
current test FAILED -- test_add_sync_sink_with_wrapping in /home/kaiyaok2/PythonProjects/falcon/tests/test_sinks.py: 839.500584602356s cumulative, 0.10692000389099121s individual

F
current test FAILED -- test_with_route in /home/kaiyaok2/PythonProjects/falcon/tests/test_sinks.py: 839.7583270072937s cumulative, 0.25774240493774414s individual

F
current test FAILED -- test_route_precedence_with_id in /home/kaiyaok2/PythonProjects/falcon/tests/test_sinks.py: 840.0453631877899s cumulative, 0.2870361804962158s individual

F
current test FAILED -- test_route_precedence in /home/kaiyaok2/PythonProjects/falcon/tests/test_sinks.py: 840.3753144741058s cumulative, 0.32995128631591797s individual

F
current test FAILED -- test_route_precedence_with_both_id in /home/kaiyaok2/PythonProjects/falcon/tests/test_sinks.py: 843.7463772296906s cumulative, 3.371062755584717s individual


tests/asgi/test_asgi_servers.py 
[Starting server process...]

[Sending SIGTERM to server process...]

[Starting server process...]

[Sending SIGTERM to server process...]

[Starting server process...]

[Sending SIGTERM to server process...]
E
current test FAILED -- test_head_405 in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 859.2088446617126s cumulative, 15.462467432022095s individual

s
current test PASSED/SKIPPED -- test_sse_client_disconnects_early in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 859.2224469184875s cumulative, 0.013602256774902344s individual

s
current test PASSED/SKIPPED -- test_post_read_bounded_stream in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 859.2294483184814s cumulative, 0.007001399993896484s individual

s
current test PASSED/SKIPPED -- test_post_multipart_form in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 859.2403576374054s cumulative, 0.010909318923950195s individual

s
current test PASSED/SKIPPED -- test_put in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 859.2475447654724s cumulative, 0.0071871280670166016s individual

s
current test PASSED/SKIPPED -- test_post_multipart_form in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 859.2586719989777s cumulative, 0.011127233505249023s individual

s
current test PASSED/SKIPPED -- test_post_read_bounded_stream in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 859.2661674022675s cumulative, 0.007495403289794922s individual


[Starting server process...]

[Sending SIGTERM to server process...]

[Starting server process...]

[Sending SIGTERM to server process...]

[Starting server process...]

[Sending SIGTERM to server process...]
E
current test FAILED -- test_sse_client_disconnects_early in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 874.9150745868683s cumulative, 15.64890718460083s individual


[Starting server process...]

[Sending SIGTERM to server process...]

[Starting server process...]

[Sending SIGTERM to server process...]

[Starting server process...]

[Sending SIGTERM to server process...]
E
current test FAILED -- test_post_invalid_content_length in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 890.3829863071442s cumulative, 15.467911720275879s individual


[Starting server process...]

[Sending SIGTERM to server process...]

[Starting server process...]

[Sending SIGTERM to server process...]

[Starting server process...]

[Sending SIGTERM to server process...]
E
current test FAILED -- test_post_multipart_form in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 905.713870048523s cumulative, 15.330883741378784s individual

s
current test PASSED/SKIPPED -- test_post_read_bounded_stream_large in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 905.7267186641693s cumulative, 0.012848615646362305s individual

s
current test PASSED/SKIPPED -- test_sse_client_disconnects_early in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 905.735835313797s cumulative, 0.009116649627685547s individual

s
current test PASSED/SKIPPED -- test_head_405 in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 905.7455747127533s cumulative, 0.009739398956298828s individual

s
current test PASSED/SKIPPED -- test_sse in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 905.7553706169128s cumulative, 0.009795904159545898s individual

s
current test PASSED/SKIPPED -- test_put in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 905.7670624256134s cumulative, 0.011691808700561523s individual

s
current test PASSED/SKIPPED -- test_head_405 in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 905.7753586769104s cumulative, 0.00829625129699707s individual

s
current test PASSED/SKIPPED -- test_post_read_bounded_stream_large in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 905.7823512554169s cumulative, 0.0069925785064697266s individual

s
current test PASSED/SKIPPED -- test_get in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 905.7895126342773s cumulative, 0.007161378860473633s individual


[Starting server process...]

[Sending SIGTERM to server process...]

[Starting server process...]

[Sending SIGTERM to server process...]

[Starting server process...]

[Sending SIGTERM to server process...]
E
current test FAILED -- test_stream_chunked_request in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 921.2867953777313s cumulative, 15.49728274345398s individual

s
current test PASSED/SKIPPED -- test_get in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 921.2963619232178s cumulative, 0.009566545486450195s individual


[Starting server process...]

[Sending SIGTERM to server process...]

[Starting server process...]

[Sending SIGTERM to server process...]

[Starting server process...]

[Sending SIGTERM to server process...]
E
current test FAILED -- test_get in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 936.599630355835s cumulative, 15.303268432617188s individual

s
current test PASSED/SKIPPED -- test_sse in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 936.6084632873535s cumulative, 0.008832931518554688s individual


[Starting server process...]

[Sending SIGTERM to server process...]

[Starting server process...]

[Sending SIGTERM to server process...]

[Starting server process...]

[Sending SIGTERM to server process...]
E
current test FAILED -- test_post_multiple in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 952.0600399971008s cumulative, 15.451576709747314s individual

s
current test PASSED/SKIPPED -- test_post_read_bounded_stream_no_body in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 952.0658581256866s cumulative, 0.00581812858581543s individual


[Starting server process...]

[Sending SIGTERM to server process...]

[Starting server process...]

[Sending SIGTERM to server process...]

[Starting server process...]

[Sending SIGTERM to server process...]
E
current test FAILED -- test_post_read_bounded_stream in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 967.5165855884552s cumulative, 15.450727462768555s individual

s
current test PASSED/SKIPPED -- test_stream_chunked_request in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 967.5226991176605s cumulative, 0.006113529205322266s individual

s
current test PASSED/SKIPPED -- test_post_invalid_content_length in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 967.5265152454376s cumulative, 0.0038161277770996094s individual


[Starting server process...]

[Sending SIGTERM to server process...]

[Starting server process...]

[Sending SIGTERM to server process...]

[Starting server process...]

[Sending SIGTERM to server process...]
E
current test FAILED -- test_post_read_bounded_stream_no_body in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 982.9299705028534s cumulative, 15.403455257415771s individual

s
current test PASSED/SKIPPED -- test_stream_chunked_request in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 982.9401659965515s cumulative, 0.010195493698120117s individual

s
current test PASSED/SKIPPED -- test_post_multiple in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 982.9463036060333s cumulative, 0.0061376094818115234s individual


[Starting server process...]

[Sending SIGTERM to server process...]

[Starting server process...]

[Sending SIGTERM to server process...]

[Starting server process...]

[Sending SIGTERM to server process...]
E
current test FAILED -- test_put in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 998.4298377037048s cumulative, 15.483534097671509s individual


[Starting server process...]

[Sending SIGTERM to server process...]

[Starting server process...]

[Sending SIGTERM to server process...]

[Starting server process...]

[Sending SIGTERM to server process...]
E
current test FAILED -- test_sse in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1013.8221514225006s cumulative, 15.392313718795776s individual

s
current test PASSED/SKIPPED -- test_post_multiple in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1013.8275375366211s cumulative, 0.0053861141204833984s individual


[Starting server process...]

[Sending SIGTERM to server process...]

[Starting server process...]

[Sending SIGTERM to server process...]

[Starting server process...]

[Sending SIGTERM to server process...]
E
current test FAILED -- test_post_read_bounded_stream_large in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1029.3292388916016s cumulative, 15.501701354980469s individual

s
current test PASSED/SKIPPED -- test_post_invalid_content_length in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1029.334793329239s cumulative, 0.0055544376373291016s individual

s
current test PASSED/SKIPPED -- test_post_read_bounded_stream_no_body in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1029.3387882709503s cumulative, 0.003994941711425781s individual


[Starting server process...]

[Sending SIGTERM to server process...]

[Starting server process...]

[Sending SIGTERM to server process...]

[Starting server process...]

[Sending SIGTERM to server process...]
E
current test FAILED -- test_rejected in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1044.7628531455994s cumulative, 15.424064874649048s individual


[Starting server process...]

[Sending SIGTERM to server process...]

[Starting server process...]

[Sending SIGTERM to server process...]

[Starting server process...]

[Sending SIGTERM to server process...]
E
current test FAILED -- test_select_subprotocol_known in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1060.2465558052063s cumulative, 15.483702659606934s individual


[Starting server process...]

[Sending SIGTERM to server process...]

[Starting server process...]

[Sending SIGTERM to server process...]

[Starting server process...]

[Sending SIGTERM to server process...]
E
current test FAILED -- test_hello in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1075.5360901355743s cumulative, 15.289534330368042s individual

s
current test PASSED/SKIPPED -- test_disconnecting_client_early in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1075.546980381012s cumulative, 0.01089024543762207s individual

s
current test PASSED/SKIPPED -- test_recv_before_accept in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1075.5526349544525s cumulative, 0.005654573440551758s individual


[Starting server process...]

[Sending SIGTERM to server process...]

[Starting server process...]

[Sending SIGTERM to server process...]

[Starting server process...]

[Sending SIGTERM to server process...]
E
current test FAILED -- test_type_mismatch in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1091.1074059009552s cumulative, 15.554770946502686s individual


[Starting server process...]

[Sending SIGTERM to server process...]

[Starting server process...]

[Sending SIGTERM to server process...]

[Starting server process...]

[Sending SIGTERM to server process...]
E
current test FAILED -- test_type_mismatch in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1106.5750324726105s cumulative, 15.467626571655273s individual

s
current test PASSED/SKIPPED -- test_type_mismatch in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1106.5848791599274s cumulative, 0.009846687316894531s individual

s
current test PASSED/SKIPPED -- test_close_code_on_unhandled_http_error in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1106.5921533107758s cumulative, 0.007274150848388672s individual

s
current test PASSED/SKIPPED -- test_send_before_accept in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1106.5975363254547s cumulative, 0.005383014678955078s individual


[Starting server process...]

[Sending SIGTERM to server process...]

[Starting server process...]

[Sending SIGTERM to server process...]

[Starting server process...]

[Sending SIGTERM to server process...]
E
current test FAILED -- test_hello in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1121.965898990631s cumulative, 15.368362665176392s individual


[Starting server process...]

[Sending SIGTERM to server process...]

[Starting server process...]

[Sending SIGTERM to server process...]

[Starting server process...]

[Sending SIGTERM to server process...]
E
current test FAILED -- test_rejected in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1137.4847288131714s cumulative, 15.518829822540283s individual


[Starting server process...]

[Sending SIGTERM to server process...]

[Starting server process...]

[Sending SIGTERM to server process...]

[Starting server process...]

[Sending SIGTERM to server process...]
E
current test FAILED -- test_close_code_on_unhandled_http_error in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1152.693264245987s cumulative, 15.208535432815552s individual

s
current test PASSED/SKIPPED -- test_type_mismatch in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1152.700642824173s cumulative, 0.007378578186035156s individual


[Starting server process...]

[Sending SIGTERM to server process...]

[Starting server process...]

[Sending SIGTERM to server process...]

[Starting server process...]

[Sending SIGTERM to server process...]
E
current test FAILED -- test_close_code_on_unhandled_error in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1168.3086783885956s cumulative, 15.608035564422607s individual

s
current test PASSED/SKIPPED -- test_select_subprotocol_known in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1168.3178787231445s cumulative, 0.009200334548950195s individual

s
current test PASSED/SKIPPED -- test_type_mismatch in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1168.3298964500427s cumulative, 0.01201772689819336s individual

s
current test PASSED/SKIPPED -- test_type_mismatch in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1168.3376486301422s cumulative, 0.007752180099487305s individual

s
current test PASSED/SKIPPED -- test_select_subprotocol_known in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1168.3521296977997s cumulative, 0.014481067657470703s individual

s
current test PASSED/SKIPPED -- test_type_mismatch in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1168.3645105361938s cumulative, 0.012380838394165039s individual

s
current test PASSED/SKIPPED -- test_send_before_accept in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1168.372231721878s cumulative, 0.0077211856842041016s individual

s
current test PASSED/SKIPPED -- test_invalid_close_code in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1168.3806338310242s cumulative, 0.008402109146118164s individual

s
current test PASSED/SKIPPED -- test_select_subprotocol_known in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1168.3902621269226s cumulative, 0.0096282958984375s individual

s
current test PASSED/SKIPPED -- test_missing_responder in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1168.4037098884583s cumulative, 0.013447761535644531s individual

s
current test PASSED/SKIPPED -- test_disconnecting_client_early in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1168.4129602909088s cumulative, 0.009250402450561523s individual

s
current test PASSED/SKIPPED -- test_rejected in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1168.42262840271s cumulative, 0.009668111801147461s individual


[Starting server process...]

[Sending SIGTERM to server process...]

[Starting server process...]

[Sending SIGTERM to server process...]

[Starting server process...]

[Sending SIGTERM to server process...]
E
current test FAILED -- test_rejected in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1183.9801759719849s cumulative, 15.557547569274902s individual

s
current test PASSED/SKIPPED -- test_passing_path_params in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1184.019002199173s cumulative, 0.03882622718811035s individual

s
current test PASSED/SKIPPED -- test_close_code_on_unhandled_http_error in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1184.0581874847412s cumulative, 0.039185285568237305s individual

s
current test PASSED/SKIPPED -- test_rejected in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1184.0920255184174s cumulative, 0.03383803367614746s individual

s
current test PASSED/SKIPPED -- test_select_subprotocol_unknown in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1184.132831811905s cumulative, 0.04080629348754883s individual


[Starting server process...]

[Sending SIGTERM to server process...]

[Starting server process...]

[Sending SIGTERM to server process...]

[Starting server process...]

[Sending SIGTERM to server process...]
E
current test FAILED -- test_hello in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1199.5377404689789s cumulative, 15.404908657073975s individual

s
current test PASSED/SKIPPED -- test_missing_responder in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1199.5467295646667s cumulative, 0.008989095687866211s individual

s
current test PASSED/SKIPPED -- test_rejected in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1199.554569721222s cumulative, 0.007840156555175781s individual

s
current test PASSED/SKIPPED -- test_select_subprotocol_known in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1199.562294960022s cumulative, 0.007725238800048828s individual

s
current test PASSED/SKIPPED -- test_rejected in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1199.5703222751617s cumulative, 0.008027315139770508s individual

s
current test PASSED/SKIPPED -- test_type_mismatch in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1199.5839366912842s cumulative, 0.013614416122436523s individual

s
current test PASSED/SKIPPED -- test_rejected in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1199.5950243473053s cumulative, 0.011087656021118164s individual

s
current test PASSED/SKIPPED -- test_hello in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1199.6023406982422s cumulative, 0.0073163509368896484s individual

s
current test PASSED/SKIPPED -- test_rejected in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1199.6079518795013s cumulative, 0.0056111812591552734s individual

s
current test PASSED/SKIPPED -- test_invalid_close_code in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1199.613109111786s cumulative, 0.0051572322845458984s individual


[Starting server process...]

[Sending SIGTERM to server process...]

[Starting server process...]

[Sending SIGTERM to server process...]

[Starting server process...]

[Sending SIGTERM to server process...]
E
current test FAILED -- test_invalid_close_code in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1215.1165091991425s cumulative, 15.503400087356567s individual

s
current test PASSED/SKIPPED -- test_rejected in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1215.1255056858063s cumulative, 0.00899648666381836s individual

s
current test PASSED/SKIPPED -- test_type_mismatch in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1215.1328151226044s cumulative, 0.007309436798095703s individual


[Starting server process...]

[Sending SIGTERM to server process...]

[Starting server process...]

[Sending SIGTERM to server process...]

[Starting server process...]

[Sending SIGTERM to server process...]
E
current test FAILED -- test_select_subprotocol_unknown in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1230.55100274086s cumulative, 15.418187618255615s individual

s
current test PASSED/SKIPPED -- test_hello in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1230.572046995163s cumulative, 0.021044254302978516s individual


[Starting server process...]

[Sending SIGTERM to server process...]

[Starting server process...]

[Sending SIGTERM to server process...]

[Starting server process...]

[Sending SIGTERM to server process...]
E
current test FAILED -- test_hello in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1246.1029059886932s cumulative, 15.530858993530273s individual


[Starting server process...]

[Sending SIGTERM to server process...]

[Starting server process...]

[Sending SIGTERM to server process...]

[Starting server process...]

[Sending SIGTERM to server process...]
E
current test FAILED -- test_rejected in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1261.3571252822876s cumulative, 15.25421929359436s individual

s
current test PASSED/SKIPPED -- test_close_code_on_unhandled_error in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1261.3663473129272s cumulative, 0.009222030639648438s individual

s
current test PASSED/SKIPPED -- test_recv_before_accept in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1261.3734002113342s cumulative, 0.007052898406982422s individual


[Starting server process...]

[Sending SIGTERM to server process...]

[Starting server process...]

[Sending SIGTERM to server process...]

[Starting server process...]

[Sending SIGTERM to server process...]
E
current test FAILED -- test_type_mismatch in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1276.7695128917694s cumulative, 15.39611268043518s individual

s
current test PASSED/SKIPPED -- test_hello in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1276.7808966636658s cumulative, 0.011383771896362305s individual

s
current test PASSED/SKIPPED -- test_type_mismatch in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1276.7962534427643s cumulative, 0.015356779098510742s individual

s
current test PASSED/SKIPPED -- test_passing_path_params in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1276.8114240169525s cumulative, 0.015170574188232422s individual

s
current test PASSED/SKIPPED -- test_rejected in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1276.8289692401886s cumulative, 0.017545223236083984s individual

s
current test PASSED/SKIPPED -- test_hello in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1276.8451797962189s cumulative, 0.016210556030273438s individual


[Starting server process...]

[Sending SIGTERM to server process...]

[Starting server process...]

[Sending SIGTERM to server process...]

[Starting server process...]

[Sending SIGTERM to server process...]
E
current test FAILED -- test_disconnecting_client_early in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1292.3740067481995s cumulative, 15.52882695198059s individual

s
current test PASSED/SKIPPED -- test_hello in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1292.404321193695s cumulative, 0.03031444549560547s individual


[Starting server process...]

[Sending SIGTERM to server process...]

[Starting server process...]

[Sending SIGTERM to server process...]

[Starting server process...]

[Sending SIGTERM to server process...]
E
current test FAILED -- test_send_before_accept in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1307.9452865123749s cumulative, 15.54096531867981s individual

s
current test PASSED/SKIPPED -- test_hello in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1307.9577310085297s cumulative, 0.012444496154785156s individual

s
current test PASSED/SKIPPED -- test_close_code_on_unhandled_error in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1307.9639415740967s cumulative, 0.0062105655670166016s individual


[Starting server process...]

[Sending SIGTERM to server process...]

[Starting server process...]

[Sending SIGTERM to server process...]

[Starting server process...]

[Sending SIGTERM to server process...]
E
current test FAILED -- test_select_subprotocol_known in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1323.407374382019s cumulative, 15.443432807922363s individual

s
current test PASSED/SKIPPED -- test_hello in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1323.4176545143127s cumulative, 0.010280132293701172s individual

s
current test PASSED/SKIPPED -- test_hello in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1323.4259736537933s cumulative, 0.00831913948059082s individual


[Starting server process...]

[Sending SIGTERM to server process...]

[Starting server process...]

[Sending SIGTERM to server process...]

[Starting server process...]

[Sending SIGTERM to server process...]
E
current test FAILED -- test_missing_responder in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1338.8854637145996s cumulative, 15.459490060806274s individual


[Starting server process...]

[Sending SIGTERM to server process...]

[Starting server process...]

[Sending SIGTERM to server process...]

[Starting server process...]

[Sending SIGTERM to server process...]
E
current test FAILED -- test_recv_before_accept in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1354.5030357837677s cumulative, 15.61757206916809s individual

s
current test PASSED/SKIPPED -- test_select_subprotocol_unknown in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1354.5149426460266s cumulative, 0.011906862258911133s individual


[Starting server process...]

[Sending SIGTERM to server process...]

[Starting server process...]

[Sending SIGTERM to server process...]

[Starting server process...]

[Sending SIGTERM to server process...]
E
current test FAILED -- test_passing_path_params in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1369.968163728714s cumulative, 15.453221082687378s individual


[Starting server process...]

[Sending SIGTERM to server process...]

[Starting server process...]

[Sending SIGTERM to server process...]

[Starting server process...]

[Sending SIGTERM to server process...]
E
current test FAILED -- test_type_mismatch in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_asgi_servers.py: 1385.4042727947235s cumulative, 15.436109066009521s individual


tests/test_request_media.py .
current test PASSED/SKIPPED -- test_empty_json_media in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 1385.4177012443542s cumulative, 0.013428449630737305s individual

.
current test PASSED/SKIPPED -- test_empty_json_media in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 1385.4298167228699s cumulative, 0.012115478515625s individual

.
current test PASSED/SKIPPED -- test_empty_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 1385.4391076564789s cumulative, 0.009290933609008789s individual

.
current test PASSED/SKIPPED -- test_json in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 1385.4499099254608s cumulative, 0.010802268981933594s individual

.
current test PASSED/SKIPPED -- test_fallback_not_for_error_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 1385.4571256637573s cumulative, 0.007215738296508789s individual

.
current test PASSED/SKIPPED -- test_unknown_media_type in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 1385.4667880535126s cumulative, 0.009662389755249023s individual

.
current test PASSED/SKIPPED -- test_fallback_does_not_override_media_default in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 1385.4851293563843s cumulative, 0.0183413028717041s individual

.
current test PASSED/SKIPPED -- test_json in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 1385.4972252845764s cumulative, 0.012095928192138672s individual

.
current test PASSED/SKIPPED -- test_invalid_json in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 1385.5074696540833s cumulative, 0.010244369506835938s individual

.
current test PASSED/SKIPPED -- test_fallback_not_for_error_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 1385.5165266990662s cumulative, 0.009057044982910156s individual

.
current test PASSED/SKIPPED -- test_null_json_media in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 1385.5265481472015s cumulative, 0.010021448135375977s individual

.
current test PASSED/SKIPPED -- test_msgpack in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 1385.5385830402374s cumulative, 0.012034893035888672s individual

.
current test PASSED/SKIPPED -- test_empty_json_media in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 1385.5475811958313s cumulative, 0.00899815559387207s individual

.
current test PASSED/SKIPPED -- test_empty_json_media in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 1385.5586686134338s cumulative, 0.011087417602539062s individual

.
current test PASSED/SKIPPED -- test_json in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 1385.5713469982147s cumulative, 0.012678384780883789s individual

.
current test PASSED/SKIPPED -- test_empty_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 1385.5818536281586s cumulative, 0.010506629943847656s individual

.
current test PASSED/SKIPPED -- test_empty_json_media in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 1385.590249300003s cumulative, 0.008395671844482422s individual

.
current test PASSED/SKIPPED -- test_invalid_json in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 1385.602229833603s cumulative, 0.011980533599853516s individual

.
current test PASSED/SKIPPED -- test_complete_consumption in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 1385.6121447086334s cumulative, 0.009914875030517578s individual

.
current test PASSED/SKIPPED -- test_fallback_does_not_override_media_default in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 1385.624327659607s cumulative, 0.012182950973510742s individual

.
current test PASSED/SKIPPED -- test_empty_json_media in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 1385.6346867084503s cumulative, 0.010359048843383789s individual

.
current test PASSED/SKIPPED -- test_error_after_first_default in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 1385.6464858055115s cumulative, 0.011799097061157227s individual

.
current test PASSED/SKIPPED -- test_unknown_media_type in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 1385.6553285121918s cumulative, 0.008842706680297852s individual

.
current test PASSED/SKIPPED -- test_msgpack in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 1385.6678364276886s cumulative, 0.012507915496826172s individual

.
current test PASSED/SKIPPED -- test_empty_json_media in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 1385.6792187690735s cumulative, 0.011382341384887695s individual

.
current test PASSED/SKIPPED -- test_invalid_msgpack in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 1385.6872804164886s cumulative, 0.008061647415161133s individual

.
current test PASSED/SKIPPED -- test_repeated_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 1385.6948988437653s cumulative, 0.007618427276611328s individual

.
current test PASSED/SKIPPED -- test_invalid_msgpack in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 1385.705905199051s cumulative, 0.011006355285644531s individual

.
current test PASSED/SKIPPED -- test_empty_json_media in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 1385.721289396286s cumulative, 0.015384197235107422s individual

.
current test PASSED/SKIPPED -- test_fallback_not_for_error_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 1385.732394695282s cumulative, 0.01110529899597168s individual

.
current test PASSED/SKIPPED -- test_json in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 1385.745300769806s cumulative, 0.012906074523925781s individual

.
current test PASSED/SKIPPED -- test_complete_consumption in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 1385.7529656887054s cumulative, 0.007664918899536133s individual

.
current test PASSED/SKIPPED -- test_msgpack in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 1385.7618641853333s cumulative, 0.008898496627807617s individual

.
current test PASSED/SKIPPED -- test_msgpack in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 1385.7704520225525s cumulative, 0.008587837219238281s individual

.
current test PASSED/SKIPPED -- test_null_json_media in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 1385.77610206604s cumulative, 0.005650043487548828s individual

.
current test PASSED/SKIPPED -- test_fallback_not_for_error_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 1385.785634279251s cumulative, 0.00953221321105957s individual

.
current test PASSED/SKIPPED -- test_json in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 1385.7924346923828s cumulative, 0.006800413131713867s individual

.
current test PASSED/SKIPPED -- test_json in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 1385.8005826473236s cumulative, 0.008147954940795898s individual

.
current test PASSED/SKIPPED -- test_empty_json_media in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 1385.8108291625977s cumulative, 0.010246515274047852s individual

.
current test PASSED/SKIPPED -- test_empty_json_media in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 1385.8168289661407s cumulative, 0.00599980354309082s individual

.
current test PASSED/SKIPPED -- test_empty_json_media in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 1385.8230457305908s cumulative, 0.006216764450073242s individual

.
current test PASSED/SKIPPED -- test_msgpack in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 1385.8317358493805s cumulative, 0.008690118789672852s individual

.
current test PASSED/SKIPPED -- test_fallback_not_for_error_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 1385.8404359817505s cumulative, 0.008700132369995117s individual

.
current test PASSED/SKIPPED -- test_fallback in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 1385.848242521286s cumulative, 0.007806539535522461s individual

.
current test PASSED/SKIPPED -- test_fallback_not_for_error_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 1385.856424331665s cumulative, 0.00818181037902832s individual

.
current test PASSED/SKIPPED -- test_json in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 1385.8679025173187s cumulative, 0.011478185653686523s individual

.
current test PASSED/SKIPPED -- test_repeated_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 1385.8757123947144s cumulative, 0.007809877395629883s individual

.
current test PASSED/SKIPPED -- test_msgpack in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 1385.8830235004425s cumulative, 0.007311105728149414s individual

.
current test PASSED/SKIPPED -- test_fallback in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 1385.890026807785s cumulative, 0.007003307342529297s individual

.
current test PASSED/SKIPPED -- test_empty_json_media in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 1385.9008786678314s cumulative, 0.010851860046386719s individual

.
current test PASSED/SKIPPED -- test_repeated_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 1385.9083704948425s cumulative, 0.0074918270111083984s individual

.
current test PASSED/SKIPPED -- test_empty_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 1385.9199950695038s cumulative, 0.011624574661254883s individual

.
current test PASSED/SKIPPED -- test_fallback_not_for_error_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 1385.9295842647552s cumulative, 0.009589195251464844s individual

.
current test PASSED/SKIPPED -- test_repeated_error in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 1385.9388418197632s cumulative, 0.00925755500793457s individual

.
current test PASSED/SKIPPED -- test_json in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 1385.9475753307343s cumulative, 0.008733510971069336s individual

.
current test PASSED/SKIPPED -- test_error_after_first_default in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 1385.9551105499268s cumulative, 0.007535219192504883s individual

.
current test PASSED/SKIPPED -- test_empty_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 1385.9674043655396s cumulative, 0.012293815612792969s individual

.
current test PASSED/SKIPPED -- test_fallback_not_for_error_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_media.py: 1385.9809918403625s cumulative, 0.013587474822998047s individual


tests/test_utils.py .
current test PASSED/SKIPPED -- test_simulate_free_functions in /home/kaiyaok2/PythonProjects/falcon/tests/test_utils.py: 1386.0052485466003s cumulative, 0.02425670623779297s individual


tests/test_uri_converters.py .
current test PASSED/SKIPPED -- test_int_converter_malformed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.0180060863495s cumulative, 0.012757539749145508s individual

.
current test PASSED/SKIPPED -- test_float_converter_malformed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.0276672840118s cumulative, 0.009661197662353516s individual

.
current test PASSED/SKIPPED -- test_datetime_converter_default_format in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.0346567630768s cumulative, 0.006989479064941406s individual

.
current test PASSED/SKIPPED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.0432596206665s cumulative, 0.00860285758972168s individual

.
current test PASSED/SKIPPED -- test_int_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.0481133460999s cumulative, 0.004853725433349609s individual

.
current test PASSED/SKIPPED -- test_float_converter_malformed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.0519239902496s cumulative, 0.0038106441497802734s individual

.
current test PASSED/SKIPPED -- test_int_converter_malformed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.0583095550537s cumulative, 0.0063855648040771484s individual

.
current test PASSED/SKIPPED -- test_datetime_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.068559885025s cumulative, 0.010250329971313477s individual

.
current test PASSED/SKIPPED -- test_float_converter_malformed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.0762591362s cumulative, 0.007699251174926758s individual

.
current test PASSED/SKIPPED -- test_int_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.0838506221771s cumulative, 0.0075914859771728516s individual

.
current test PASSED/SKIPPED -- test_float_converter_malformed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.0918622016907s cumulative, 0.008011579513549805s individual

.
current test PASSED/SKIPPED -- test_int_converter_malformed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.1003592014313s cumulative, 0.008496999740600586s individual

.
current test PASSED/SKIPPED -- test_float_converter_non_finite_disallowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.1053814888s cumulative, 0.005022287368774414s individual

.
current test PASSED/SKIPPED -- test_float_converter_non_finite_allowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.1090290546417s cumulative, 0.0036475658416748047s individual

.
current test PASSED/SKIPPED -- test_int_converter_invalid_config in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.1131708621979s cumulative, 0.004141807556152344s individual

.
current test PASSED/SKIPPED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.1173603534698s cumulative, 0.004189491271972656s individual

.
current test PASSED/SKIPPED -- test_int_converter_malformed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.1206848621368s cumulative, 0.0033245086669921875s individual

.
current test PASSED/SKIPPED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.124638080597s cumulative, 0.003953218460083008s individual

.
current test PASSED/SKIPPED -- test_float_converter_malformed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.127613067627s cumulative, 0.002974987030029297s individual

.
current test PASSED/SKIPPED -- test_int_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.1313264369965s cumulative, 0.003713369369506836s individual

.
current test PASSED/SKIPPED -- test_int_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.1346139907837s cumulative, 0.0032875537872314453s individual

.
current test PASSED/SKIPPED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.1425440311432s cumulative, 0.00793004035949707s individual

.
current test PASSED/SKIPPED -- test_int_converter_malformed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.146376132965s cumulative, 0.003832101821899414s individual

.
current test PASSED/SKIPPED -- test_float_converter_non_finite_allowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.1501443386078s cumulative, 0.0037682056427001953s individual

.
current test PASSED/SKIPPED -- test_float_converter_non_finite_disallowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.153338432312s cumulative, 0.003194093704223633s individual

.
current test PASSED/SKIPPED -- test_datetime_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.1582200527191s cumulative, 0.004881620407104492s individual

.
current test PASSED/SKIPPED -- test_uuid_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.1624035835266s cumulative, 0.004183530807495117s individual

.
current test PASSED/SKIPPED -- test_int_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.166143655777s cumulative, 0.003740072250366211s individual

.
current test PASSED/SKIPPED -- test_datetime_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.1712701320648s cumulative, 0.005126476287841797s individual

.
current test PASSED/SKIPPED -- test_int_converter_invalid_config in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.1744313240051s cumulative, 0.003161191940307617s individual

.
current test PASSED/SKIPPED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.178032875061s cumulative, 0.003601551055908203s individual

.
current test PASSED/SKIPPED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.182028055191s cumulative, 0.003995180130004883s individual

.
current test PASSED/SKIPPED -- test_int_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.1855885982513s cumulative, 0.0035605430603027344s individual

.
current test PASSED/SKIPPED -- test_int_converter_malformed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.1888418197632s cumulative, 0.0032532215118408203s individual

.
current test PASSED/SKIPPED -- test_int_converter_malformed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.1915650367737s cumulative, 0.002723217010498047s individual

.
current test PASSED/SKIPPED -- test_int_converter_malformed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.1950676441193s cumulative, 0.0035026073455810547s individual

.
current test PASSED/SKIPPED -- test_float_converter_non_finite_allowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.1979818344116s cumulative, 0.0029141902923583984s individual

.
current test PASSED/SKIPPED -- test_int_converter_malformed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.2016994953156s cumulative, 0.003717660903930664s individual

.
current test PASSED/SKIPPED -- test_float_converter_malformed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.205587387085s cumulative, 0.0038878917694091797s individual

.
current test PASSED/SKIPPED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.2101244926453s cumulative, 0.004537105560302734s individual

.
current test PASSED/SKIPPED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.216046333313s cumulative, 0.005921840667724609s individual

.
current test PASSED/SKIPPED -- test_int_converter_malformed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.2206344604492s cumulative, 0.004588127136230469s individual

.
current test PASSED/SKIPPED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.225431919098s cumulative, 0.004797458648681641s individual

.
current test PASSED/SKIPPED -- test_int_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.2317297458649s cumulative, 0.0062978267669677734s individual

.
current test PASSED/SKIPPED -- test_int_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.2390096187592s cumulative, 0.007279872894287109s individual

.
current test PASSED/SKIPPED -- test_int_converter_malformed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.2441501617432s cumulative, 0.005140542984008789s individual

.
current test PASSED/SKIPPED -- test_int_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.2494721412659s cumulative, 0.005321979522705078s individual

.
current test PASSED/SKIPPED -- test_float_converter_malformed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.252454996109s cumulative, 0.0029828548431396484s individual

.
current test PASSED/SKIPPED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.2556493282318s cumulative, 0.0031943321228027344s individual

.
current test PASSED/SKIPPED -- test_float_converter_malformed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.2585854530334s cumulative, 0.002936124801635742s individual

.
current test PASSED/SKIPPED -- test_datetime_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.2631084918976s cumulative, 0.004523038864135742s individual

.
current test PASSED/SKIPPED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.267333984375s cumulative, 0.004225492477416992s individual

.
current test PASSED/SKIPPED -- test_int_converter_malformed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.270586490631s cumulative, 0.0032525062561035156s individual

.
current test PASSED/SKIPPED -- test_int_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.2745866775513s cumulative, 0.004000186920166016s individual

.
current test PASSED/SKIPPED -- test_float_converter_malformed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.2790648937225s cumulative, 0.0044782161712646484s individual

.
current test PASSED/SKIPPED -- test_float_converter_malformed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.284452676773s cumulative, 0.005387783050537109s individual

.
current test PASSED/SKIPPED -- test_int_converter_malformed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.288390636444s cumulative, 0.003937959671020508s individual

.
current test PASSED/SKIPPED -- test_int_converter_malformed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.2915904521942s cumulative, 0.0031998157501220703s individual

.
current test PASSED/SKIPPED -- test_int_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.2966113090515s cumulative, 0.005020856857299805s individual

.
current test PASSED/SKIPPED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.300629377365s cumulative, 0.004018068313598633s individual

.
current test PASSED/SKIPPED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.3040914535522s cumulative, 0.003462076187133789s individual

.
current test PASSED/SKIPPED -- test_int_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.3075931072235s cumulative, 0.0035016536712646484s individual

.
current test PASSED/SKIPPED -- test_int_converter_malformed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.3108665943146s cumulative, 0.003273487091064453s individual

.
current test PASSED/SKIPPED -- test_datetime_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.3151276111603s cumulative, 0.004261016845703125s individual

.
current test PASSED/SKIPPED -- test_int_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.3190302848816s cumulative, 0.0039026737213134766s individual

.
current test PASSED/SKIPPED -- test_datetime_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.3233437538147s cumulative, 0.004313468933105469s individual

.
current test PASSED/SKIPPED -- test_float_converter_malformed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.3264682292938s cumulative, 0.0031244754791259766s individual

.
current test PASSED/SKIPPED -- test_int_converter_malformed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.3306510448456s cumulative, 0.0041828155517578125s individual

.
current test PASSED/SKIPPED -- test_int_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.3388214111328s cumulative, 0.008170366287231445s individual

.
current test PASSED/SKIPPED -- test_uuid_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.3430907726288s cumulative, 0.00426936149597168s individual

.
current test PASSED/SKIPPED -- test_float_converter_non_finite_allowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.3481106758118s cumulative, 0.0050199031829833984s individual

.
current test PASSED/SKIPPED -- test_float_converter_malformed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.3518340587616s cumulative, 0.0037233829498291016s individual

.
current test PASSED/SKIPPED -- test_float_converter_malformed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.3564186096191s cumulative, 0.004584550857543945s individual

.
current test PASSED/SKIPPED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.372675895691s cumulative, 0.016257286071777344s individual

.
current test PASSED/SKIPPED -- test_int_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.3786914348602s cumulative, 0.0060155391693115234s individual

.
current test PASSED/SKIPPED -- test_int_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.3833339214325s cumulative, 0.004642486572265625s individual

.
current test PASSED/SKIPPED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.3906390666962s cumulative, 0.007305145263671875s individual

.
current test PASSED/SKIPPED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.3956415653229s cumulative, 0.005002498626708984s individual

.
current test PASSED/SKIPPED -- test_float_converter_malformed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.3994324207306s cumulative, 0.0037908554077148438s individual

.
current test PASSED/SKIPPED -- test_float_converter_malformed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.4033432006836s cumulative, 0.00391077995300293s individual

.
current test PASSED/SKIPPED -- test_int_converter_invalid_config in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.4085009098053s cumulative, 0.0051577091217041016s individual

.
current test PASSED/SKIPPED -- test_int_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.4186899662018s cumulative, 0.010189056396484375s individual

.
current test PASSED/SKIPPED -- test_int_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.4242010116577s cumulative, 0.005511045455932617s individual

.
current test PASSED/SKIPPED -- test_datetime_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.4297223091125s cumulative, 0.005521297454833984s individual

.
current test PASSED/SKIPPED -- test_float_converter_non_finite_allowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.434511423111s cumulative, 0.004789113998413086s individual

.
current test PASSED/SKIPPED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.4403829574585s cumulative, 0.00587153434753418s individual

.
current test PASSED/SKIPPED -- test_datetime_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.4504387378693s cumulative, 0.010055780410766602s individual

.
current test PASSED/SKIPPED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.4553179740906s cumulative, 0.0048792362213134766s individual

.
current test PASSED/SKIPPED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.4587993621826s cumulative, 0.0034813880920410156s individual

.
current test PASSED/SKIPPED -- test_int_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.4643762111664s cumulative, 0.0055768489837646484s individual

.
current test PASSED/SKIPPED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.4696865081787s cumulative, 0.0053102970123291016s individual

.
current test PASSED/SKIPPED -- test_int_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.4754707813263s cumulative, 0.005784273147583008s individual

.
current test PASSED/SKIPPED -- test_float_converter_non_finite_allowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.4812173843384s cumulative, 0.005746603012084961s individual

.
current test PASSED/SKIPPED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.4855418205261s cumulative, 0.004324436187744141s individual

.
current test PASSED/SKIPPED -- test_int_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.4909753799438s cumulative, 0.005433559417724609s individual

.
current test PASSED/SKIPPED -- test_float_converter_non_finite_allowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.4944264888763s cumulative, 0.003451108932495117s individual

.
current test PASSED/SKIPPED -- test_int_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.5005650520325s cumulative, 0.00613856315612793s individual

.
current test PASSED/SKIPPED -- test_float_converter_malformed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.5057773590088s cumulative, 0.005212306976318359s individual

.
current test PASSED/SKIPPED -- test_datetime_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.5125215053558s cumulative, 0.0067441463470458984s individual

.
current test PASSED/SKIPPED -- test_float_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.517092704773s cumulative, 0.004571199417114258s individual

.
current test PASSED/SKIPPED -- test_float_converter_non_finite_allowed in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.5227766036987s cumulative, 0.00568389892578125s individual

.
current test PASSED/SKIPPED -- test_int_converter in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_converters.py: 1386.531378030777s cumulative, 0.00860142707824707s individual


tests/test_request_body.py .
current test PASSED/SKIPPED -- test_tiny_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_body.py: 1386.571902513504s cumulative, 0.04052448272705078s individual

.
current test PASSED/SKIPPED -- test_request_repr in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_body.py: 1386.5808823108673s cumulative, 0.00897979736328125s individual

.
current test PASSED/SKIPPED -- test_bounded_stream_property_empty_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_body.py: 1386.586763381958s cumulative, 0.005881071090698242s individual

.
current test PASSED/SKIPPED -- test_tiny_body_overflow in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_body.py: 1386.6021609306335s cumulative, 0.01539754867553711s individual

.
current test PASSED/SKIPPED -- test_body_stream_wrapper in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_body.py: 1386.6117343902588s cumulative, 0.00957345962524414s individual

.
current test PASSED/SKIPPED -- test_empty_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_body.py: 1386.6225731372833s cumulative, 0.010838747024536133s individual

.
current test PASSED/SKIPPED -- test_read_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_request_body.py: 1386.651529788971s cumulative, 0.02895665168762207s individual


tests/test_alias.py .
current test PASSED/SKIPPED -- test_alias_equals_to_app in /home/kaiyaok2/PythonProjects/falcon/tests/test_alias.py: 1386.6633639335632s cumulative, 0.011834144592285156s individual

.
current test PASSED/SKIPPED -- test_cookies in /home/kaiyaok2/PythonProjects/falcon/tests/test_alias.py: 1386.6805973052979s cumulative, 0.01723337173461914s individual


tests/test_redirects.py E
current test FAILED -- test_redirect_with_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_redirects.py: 1386.8196897506714s cumulative, 0.13909244537353516s individual


tests/test_custom_router.py .
current test PASSED/SKIPPED -- test_custom_router_takes_req_positional_argument in /home/kaiyaok2/PythonProjects/falcon/tests/test_custom_router.py: 1386.8405330181122s cumulative, 0.0208432674407959s individual

.
current test PASSED/SKIPPED -- test_custom_router_find_should_be_used in /home/kaiyaok2/PythonProjects/falcon/tests/test_custom_router.py: 1386.8688850402832s cumulative, 0.028352022171020508s individual

.
current test PASSED/SKIPPED -- test_can_pass_additional_params_to_add_route in /home/kaiyaok2/PythonProjects/falcon/tests/test_custom_router.py: 1386.880220413208s cumulative, 0.011335372924804688s individual

.
current test PASSED/SKIPPED -- test_custom_router_takes_req_positional_argument in /home/kaiyaok2/PythonProjects/falcon/tests/test_custom_router.py: 1386.8975884914398s cumulative, 0.017368078231811523s individual

.
current test PASSED/SKIPPED -- test_custom_router_add_route_should_be_used in /home/kaiyaok2/PythonProjects/falcon/tests/test_custom_router.py: 1386.9082057476044s cumulative, 0.010617256164550781s individual

.
current test PASSED/SKIPPED -- test_custom_router_takes_req_keyword_argument in /home/kaiyaok2/PythonProjects/falcon/tests/test_custom_router.py: 1386.9191188812256s cumulative, 0.01091313362121582s individual

.
current test PASSED/SKIPPED -- test_custom_router_add_route_should_be_used in /home/kaiyaok2/PythonProjects/falcon/tests/test_custom_router.py: 1386.9274096488953s cumulative, 0.008290767669677734s individual

.
current test PASSED/SKIPPED -- test_can_pass_additional_params_to_add_route in /home/kaiyaok2/PythonProjects/falcon/tests/test_custom_router.py: 1386.9355328083038s cumulative, 0.008123159408569336s individual

.
current test PASSED/SKIPPED -- test_custom_router_takes_req_keyword_argument in /home/kaiyaok2/PythonProjects/falcon/tests/test_custom_router.py: 1386.9468050003052s cumulative, 0.011272192001342773s individual

.
current test PASSED/SKIPPED -- test_custom_router_find_should_be_used in /home/kaiyaok2/PythonProjects/falcon/tests/test_custom_router.py: 1386.9614052772522s cumulative, 0.014600276947021484s individual


tests/test_static.py .
current test PASSED/SKIPPED -- test_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1386.974272966385s cumulative, 0.01286768913269043s individual

.
current test PASSED/SKIPPED -- test_good_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1386.9883918762207s cumulative, 0.01411890983581543s individual

.
current test PASSED/SKIPPED -- test_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.0005543231964s cumulative, 0.012162446975708008s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.0073690414429s cumulative, 0.006814718246459961s individual

.
current test PASSED/SKIPPED -- test_e2e_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.025990486145s cumulative, 0.018621444702148438s individual

.
current test PASSED/SKIPPED -- test_bad_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.03755068779s cumulative, 0.011560201644897461s individual

.
current test PASSED/SKIPPED -- test_e2e_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.0524053573608s cumulative, 0.014854669570922852s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.0639081001282s cumulative, 0.011502742767333984s individual

.
current test PASSED/SKIPPED -- test_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.0769324302673s cumulative, 0.013024330139160156s individual

.
current test PASSED/SKIPPED -- test_good_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.0851163864136s cumulative, 0.008183956146240234s individual

.
current test PASSED/SKIPPED -- test_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.0970509052277s cumulative, 0.011934518814086914s individual

.
current test PASSED/SKIPPED -- test_match in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.1034848690033s cumulative, 0.006433963775634766s individual

.
current test PASSED/SKIPPED -- test_bounded_file_wrapper in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.107896566391s cumulative, 0.0044116973876953125s individual

.
current test PASSED/SKIPPED -- test_bad_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.1183605194092s cumulative, 0.010463953018188477s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.1260430812836s cumulative, 0.0076825618743896484s individual

.
current test PASSED/SKIPPED -- test_bad_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.1348795890808s cumulative, 0.008836507797241211s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.1417393684387s cumulative, 0.006859779357910156s individual

.
current test PASSED/SKIPPED -- test_invalid_args_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.1478657722473s cumulative, 0.00612640380859375s individual

.
current test PASSED/SKIPPED -- test_good_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.1580972671509s cumulative, 0.010231494903564453s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.163881778717s cumulative, 0.005784511566162109s individual

.
current test PASSED/SKIPPED -- test_range_request_zero_length in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.177794456482s cumulative, 0.013912677764892578s individual

.
current test PASSED/SKIPPED -- test_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.1907796859741s cumulative, 0.0129852294921875s individual

.
current test PASSED/SKIPPED -- test_e2e_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.2042803764343s cumulative, 0.013500690460205078s individual

.
current test PASSED/SKIPPED -- test_bad_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.2150037288666s cumulative, 0.010723352432250977s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.2223284244537s cumulative, 0.007324695587158203s individual

.
current test PASSED/SKIPPED -- test_range_request_zero_length in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.2344691753387s cumulative, 0.012140750885009766s individual

.
current test PASSED/SKIPPED -- test_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.2436020374298s cumulative, 0.009132862091064453s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.248788356781s cumulative, 0.005186319351196289s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.25350356102s cumulative, 0.0047152042388916016s individual

.
current test PASSED/SKIPPED -- test_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.2626473903656s cumulative, 0.009143829345703125s individual

.
current test PASSED/SKIPPED -- test_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.2803609371185s cumulative, 0.017713546752929688s individual

.
current test PASSED/SKIPPED -- test_downloadable_not_found in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.2923743724823s cumulative, 0.012013435363769531s individual

.
current test PASSED/SKIPPED -- test_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.3019480705261s cumulative, 0.009573698043823242s individual

.
current test PASSED/SKIPPED -- test_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.3155901432037s cumulative, 0.013642072677612305s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.321174621582s cumulative, 0.0055844783782958984s individual

.
current test PASSED/SKIPPED -- test_invalid_args_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.3284575939178s cumulative, 0.00728297233581543s individual

.
current test PASSED/SKIPPED -- test_range_request_zero_length in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.3422274589539s cumulative, 0.013769865036010742s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.349301815033s cumulative, 0.0070743560791015625s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.3544249534607s cumulative, 0.005123138427734375s individual

.
current test PASSED/SKIPPED -- test_invalid_args_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.3615815639496s cumulative, 0.0071566104888916016s individual

.
current test PASSED/SKIPPED -- test_e2e_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.3762657642365s cumulative, 0.014684200286865234s individual

.
current test PASSED/SKIPPED -- test_good_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.3868741989136s cumulative, 0.010608434677124023s individual

.
current test PASSED/SKIPPED -- test_file_closed in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.4017934799194s cumulative, 0.014919281005859375s individual

.
current test PASSED/SKIPPED -- test_lifo in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.4164533615112s cumulative, 0.014659881591796875s individual

.
current test PASSED/SKIPPED -- test_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.4339492321014s cumulative, 0.01749587059020996s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.441089630127s cumulative, 0.007140398025512695s individual

.
current test PASSED/SKIPPED -- test_match in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.4469377994537s cumulative, 0.0058481693267822266s individual

.
current test PASSED/SKIPPED -- test_invalid_args in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.4584548473358s cumulative, 0.011517047882080078s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.471061706543s cumulative, 0.01260685920715332s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.4797711372375s cumulative, 0.008709430694580078s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.4860575199127s cumulative, 0.0062863826751708984s individual

.
current test PASSED/SKIPPED -- test_bad_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.5020205974579s cumulative, 0.015963077545166016s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.5125696659088s cumulative, 0.010549068450927734s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.5215163230896s cumulative, 0.008946657180786133s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.5324845314026s cumulative, 0.010968208312988281s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.538896560669s cumulative, 0.006412029266357422s individual

.
current test PASSED/SKIPPED -- test_match in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.546818971634s cumulative, 0.00792241096496582s individual

.
current test PASSED/SKIPPED -- test_invalid_args in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.555195093155s cumulative, 0.008376121520996094s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.5613255500793s cumulative, 0.0061304569244384766s individual

.
current test PASSED/SKIPPED -- test_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.5689153671265s cumulative, 0.007589817047119141s individual

.
current test PASSED/SKIPPED -- test_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.5835728645325s cumulative, 0.01465749740600586s individual

.
current test PASSED/SKIPPED -- test_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.5969047546387s cumulative, 0.013331890106201172s individual

.
current test PASSED/SKIPPED -- test_good_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.607491493225s cumulative, 0.010586738586425781s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.6154713630676s cumulative, 0.007979869842529297s individual

.
current test PASSED/SKIPPED -- test_e2e_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.6288094520569s cumulative, 0.013338088989257812s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.6367127895355s cumulative, 0.007903337478637695s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.645833492279s cumulative, 0.009120702743530273s individual

.
current test PASSED/SKIPPED -- test_good_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.6587216854095s cumulative, 0.012888193130493164s individual

.
current test PASSED/SKIPPED -- test_range_request_zero_length in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.6762914657593s cumulative, 0.017569780349731445s individual

.
current test PASSED/SKIPPED -- test_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.68945145607s cumulative, 0.013159990310668945s individual

.
current test PASSED/SKIPPED -- test_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.6994948387146s cumulative, 0.01004338264465332s individual

.
current test PASSED/SKIPPED -- test_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.7224979400635s cumulative, 0.023003101348876953s individual

.
current test PASSED/SKIPPED -- test_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.7436859607697s cumulative, 0.021188020706176758s individual

.
current test PASSED/SKIPPED -- test_range_request_zero_length in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.7717254161835s cumulative, 0.02803945541381836s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.783450603485s cumulative, 0.011725187301635742s individual

.
current test PASSED/SKIPPED -- test_downloadable_not_found in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.8018560409546s cumulative, 0.018405437469482422s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.8397521972656s cumulative, 0.037896156311035156s individual

.
current test PASSED/SKIPPED -- test_e2e_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.8727734088898s cumulative, 0.03302121162414551s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.878939151764s cumulative, 0.006165742874145508s individual

.
current test PASSED/SKIPPED -- test_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.8858664035797s cumulative, 0.0069272518157958984s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.8955872058868s cumulative, 0.009720802307128906s individual

.
current test PASSED/SKIPPED -- test_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.9193859100342s cumulative, 0.023798704147338867s individual

.
current test PASSED/SKIPPED -- test_match in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.9261820316315s cumulative, 0.006796121597290039s individual

.
current test PASSED/SKIPPED -- test_range_request_zero_length in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.9424347877502s cumulative, 0.016252756118774414s individual

.
current test PASSED/SKIPPED -- test_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.9592201709747s cumulative, 0.016785383224487305s individual

.
current test PASSED/SKIPPED -- test_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.9763135910034s cumulative, 0.017093420028686523s individual

.
current test PASSED/SKIPPED -- test_pathlib_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1387.9842805862427s cumulative, 0.007966995239257812s individual

.
current test PASSED/SKIPPED -- test_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1388.000896692276s cumulative, 0.016616106033325195s individual

.
current test PASSED/SKIPPED -- test_e2e_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1388.0201392173767s cumulative, 0.019242525100708008s individual

.
current test PASSED/SKIPPED -- test_invalid_args in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1388.0293509960175s cumulative, 0.00921177864074707s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1388.0367019176483s cumulative, 0.007350921630859375s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1388.048505306244s cumulative, 0.011803388595581055s individual

.
current test PASSED/SKIPPED -- test_range_request_zero_length in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1388.0660738945007s cumulative, 0.017568588256835938s individual

.
current test PASSED/SKIPPED -- test_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1388.08198428154s cumulative, 0.01591038703918457s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1388.0906052589417s cumulative, 0.008620977401733398s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1388.0981731414795s cumulative, 0.007567882537841797s individual

.
current test PASSED/SKIPPED -- test_bad_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1388.111912727356s cumulative, 0.013739585876464844s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1388.1215391159058s cumulative, 0.009626388549804688s individual

.
current test PASSED/SKIPPED -- test_good_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1388.134169101715s cumulative, 0.012629985809326172s individual

.
current test PASSED/SKIPPED -- test_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1388.1498093605042s cumulative, 0.0156402587890625s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1388.160008430481s cumulative, 0.01019906997680664s individual

.
current test PASSED/SKIPPED -- test_invalid_args in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1388.1703407764435s cumulative, 0.010332345962524414s individual

.
current test PASSED/SKIPPED -- test_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1388.1809260845184s cumulative, 0.010585308074951172s individual

.
current test PASSED/SKIPPED -- test_match in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1388.1888251304626s cumulative, 0.007899045944213867s individual

.
current test PASSED/SKIPPED -- test_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1388.2173326015472s cumulative, 0.028507471084594727s individual

.
current test PASSED/SKIPPED -- test_pathlib_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1388.2304241657257s cumulative, 0.013091564178466797s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1388.2416369915009s cumulative, 0.011212825775146484s individual

.
current test PASSED/SKIPPED -- test_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1388.249891757965s cumulative, 0.008254766464233398s individual

.
current test PASSED/SKIPPED -- test_lifo_negative in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1388.2636721134186s cumulative, 0.013780355453491211s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1388.273283958435s cumulative, 0.009611845016479492s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1388.2822017669678s cumulative, 0.008917808532714844s individual

.
current test PASSED/SKIPPED -- test_e2e_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1388.3080520629883s cumulative, 0.025850296020507812s individual

.
current test PASSED/SKIPPED -- test_e2e_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1388.3379399776459s cumulative, 0.029887914657592773s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1388.3502480983734s cumulative, 0.012308120727539062s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1388.3635501861572s cumulative, 0.013302087783813477s individual

.
current test PASSED/SKIPPED -- test_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1388.3978674411774s cumulative, 0.0343172550201416s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1388.4155616760254s cumulative, 0.01769423484802246s individual

.
current test PASSED/SKIPPED -- test_good_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1388.4360733032227s cumulative, 0.020511627197265625s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1388.4581019878387s cumulative, 0.022028684616088867s individual

.
current test PASSED/SKIPPED -- test_e2e_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1388.488958120346s cumulative, 0.03085613250732422s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1388.5085616111755s cumulative, 0.019603490829467773s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1388.5257482528687s cumulative, 0.017186641693115234s individual

.
current test PASSED/SKIPPED -- test_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1388.5572786331177s cumulative, 0.03153038024902344s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1388.573083639145s cumulative, 0.01580500602722168s individual

.
current test PASSED/SKIPPED -- test_filesystem_traversal_fuse in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1388.60152053833s cumulative, 0.028436899185180664s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1388.6366031169891s cumulative, 0.03508257865905762s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1388.651328086853s cumulative, 0.014724969863891602s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1388.671110868454s cumulative, 0.01978278160095215s individual

.
current test PASSED/SKIPPED -- test_range_request_zero_length in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1388.7045903205872s cumulative, 0.03347945213317871s individual

.
current test PASSED/SKIPPED -- test_invalid_args in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1388.7206480503082s cumulative, 0.016057729721069336s individual

.
current test PASSED/SKIPPED -- test_e2e_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1388.7653002738953s cumulative, 0.04465222358703613s individual

.
current test PASSED/SKIPPED -- test_good_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1388.7857315540314s cumulative, 0.0204312801361084s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1388.8006472587585s cumulative, 0.014915704727172852s individual

.
current test PASSED/SKIPPED -- test_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1388.8193047046661s cumulative, 0.018657445907592773s individual

.
current test PASSED/SKIPPED -- test_match in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1388.8371694087982s cumulative, 0.017864704132080078s individual

.
current test PASSED/SKIPPED -- test_match in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1388.8440070152283s cumulative, 0.006837606430053711s individual

.
current test PASSED/SKIPPED -- test_invalid_args in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1388.8565516471863s cumulative, 0.012544631958007812s individual

.
current test PASSED/SKIPPED -- test_match in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1388.866729259491s cumulative, 0.0101776123046875s individual

.
current test PASSED/SKIPPED -- test_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1388.880702495575s cumulative, 0.013973236083984375s individual

.
current test PASSED/SKIPPED -- test_match in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1388.8892714977264s cumulative, 0.008569002151489258s individual

.
current test PASSED/SKIPPED -- test_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1388.896775007248s cumulative, 0.007503509521484375s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1388.903294801712s cumulative, 0.006519794464111328s individual

.
current test PASSED/SKIPPED -- test_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1388.9190301895142s cumulative, 0.015735387802124023s individual

.
current test PASSED/SKIPPED -- test_good_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1388.9289512634277s cumulative, 0.009921073913574219s individual

.
current test PASSED/SKIPPED -- test_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1388.9498398303986s cumulative, 0.020888566970825195s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1388.9580790996552s cumulative, 0.008239269256591797s individual

.
current test PASSED/SKIPPED -- test_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1388.9802346229553s cumulative, 0.0221555233001709s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1389.0012893676758s cumulative, 0.021054744720458984s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1389.0122663974762s cumulative, 0.010977029800415039s individual

.
current test PASSED/SKIPPED -- test_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1389.0335631370544s cumulative, 0.02129673957824707s individual

.
current test PASSED/SKIPPED -- test_good_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1389.0436840057373s cumulative, 0.010120868682861328s individual

.
current test PASSED/SKIPPED -- test_good_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1389.0541443824768s cumulative, 0.010460376739501953s individual

.
current test PASSED/SKIPPED -- test_e2e_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1389.0680360794067s cumulative, 0.01389169692993164s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1389.076355457306s cumulative, 0.008319377899169922s individual

.
current test PASSED/SKIPPED -- test_invalid_args_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1389.0839686393738s cumulative, 0.007613182067871094s individual

.
current test PASSED/SKIPPED -- test_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1389.1000220775604s cumulative, 0.016053438186645508s individual

.
current test PASSED/SKIPPED -- test_range_request_zero_length in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1389.1129879951477s cumulative, 0.012965917587280273s individual

.
current test PASSED/SKIPPED -- test_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1389.1253566741943s cumulative, 0.01236867904663086s individual

.
current test PASSED/SKIPPED -- test_e2e_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1389.1424176692963s cumulative, 0.01706099510192871s individual

.
current test PASSED/SKIPPED -- test_invalid_args in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1389.15030503273s cumulative, 0.00788736343383789s individual

.
current test PASSED/SKIPPED -- test_e2e_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1389.1711299419403s cumulative, 0.020824909210205078s individual

.
current test PASSED/SKIPPED -- test_match in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1389.1875143051147s cumulative, 0.016384363174438477s individual

.
current test PASSED/SKIPPED -- test_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1389.206856250763s cumulative, 0.01934194564819336s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1389.2237520217896s cumulative, 0.016895771026611328s individual

.
current test PASSED/SKIPPED -- test_e2e_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1389.2480115890503s cumulative, 0.024259567260742188s individual

.
current test PASSED/SKIPPED -- test_bad_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1389.2677426338196s cumulative, 0.01973104476928711s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1389.2833573818207s cumulative, 0.015614748001098633s individual

.
current test PASSED/SKIPPED -- test_bad_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1389.3099601268768s cumulative, 0.026602745056152344s individual

.
current test PASSED/SKIPPED -- test_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1389.335818529129s cumulative, 0.025858402252197266s individual

.
current test PASSED/SKIPPED -- test_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1389.3686904907227s cumulative, 0.03287196159362793s individual

.
current test PASSED/SKIPPED -- test_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1389.390245437622s cumulative, 0.021554946899414062s individual

.
current test PASSED/SKIPPED -- test_bad_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1389.4181156158447s cumulative, 0.02787017822265625s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1389.4307889938354s cumulative, 0.012673377990722656s individual

.
current test PASSED/SKIPPED -- test_e2e_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1389.4531798362732s cumulative, 0.02239084243774414s individual

.
current test PASSED/SKIPPED -- test_downloadable in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1389.4789803028107s cumulative, 0.025800466537475586s individual

.
current test PASSED/SKIPPED -- test_invalid_args in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1389.4922926425934s cumulative, 0.013312339782714844s individual

.
current test PASSED/SKIPPED -- test_e2e_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1389.517420053482s cumulative, 0.025127410888671875s individual

.
current test PASSED/SKIPPED -- test_bad_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1389.5364081859589s cumulative, 0.01898813247680664s individual

.
current test PASSED/SKIPPED -- test_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1389.5606853961945s cumulative, 0.024277210235595703s individual

.
current test PASSED/SKIPPED -- test_range_request_zero_length in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1389.5915553569794s cumulative, 0.03086996078491211s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1389.6145174503326s cumulative, 0.022962093353271484s individual

.
current test PASSED/SKIPPED -- test_bad_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1389.645098209381s cumulative, 0.030580759048461914s individual

.
current test PASSED/SKIPPED -- test_match in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1389.6587176322937s cumulative, 0.013619422912597656s individual

.
current test PASSED/SKIPPED -- test_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1389.694456577301s cumulative, 0.03573894500732422s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1389.7156672477722s cumulative, 0.021210670471191406s individual

.
current test PASSED/SKIPPED -- test_lifo in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1389.7670447826385s cumulative, 0.05137753486633301s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1389.7937541007996s cumulative, 0.026709318161010742s individual

.
current test PASSED/SKIPPED -- test_match in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1389.8057489395142s cumulative, 0.01199483871459961s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1389.8243496418s cumulative, 0.0186007022857666s individual

.
current test PASSED/SKIPPED -- test_range_request_zero_length in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1389.8491380214691s cumulative, 0.024788379669189453s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1389.864179611206s cumulative, 0.015041589736938477s individual

.
current test PASSED/SKIPPED -- test_bad_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1389.8886704444885s cumulative, 0.024490833282470703s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1389.9041900634766s cumulative, 0.01551961898803711s individual

.
current test PASSED/SKIPPED -- test_bad_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1389.9326713085175s cumulative, 0.028481245040893555s individual

.
current test PASSED/SKIPPED -- test_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1389.9521234035492s cumulative, 0.01945209503173828s individual

.
current test PASSED/SKIPPED -- test_range_request_zero_length in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1389.977157831192s cumulative, 0.025034427642822266s individual

.
current test PASSED/SKIPPED -- test_good_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1389.992425441742s cumulative, 0.015267610549926758s individual

.
current test PASSED/SKIPPED -- test_good_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1390.0164849758148s cumulative, 0.024059534072875977s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1390.034358739853s cumulative, 0.017873764038085938s individual

.
current test PASSED/SKIPPED -- test_good_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1390.0556373596191s cumulative, 0.02127861976623535s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1390.067881822586s cumulative, 0.012244462966918945s individual

.
current test PASSED/SKIPPED -- test_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1390.090237379074s cumulative, 0.02235555648803711s individual

.
current test PASSED/SKIPPED -- test_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1390.1092858314514s cumulative, 0.019048452377319336s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1390.1264889240265s cumulative, 0.017203092575073242s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1390.1511430740356s cumulative, 0.024654150009155273s individual

.
current test PASSED/SKIPPED -- test_match in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1390.1690418720245s cumulative, 0.0178987979888916s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1390.1854045391083s cumulative, 0.016362667083740234s individual

.
current test PASSED/SKIPPED -- test_filesystem_traversal_fuse in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1390.1999497413635s cumulative, 0.014545202255249023s individual

.
current test PASSED/SKIPPED -- test_e2e_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1390.228096961975s cumulative, 0.028147220611572266s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1390.2416212558746s cumulative, 0.013524293899536133s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1390.271656513214s cumulative, 0.03003525733947754s individual

.
current test PASSED/SKIPPED -- test_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1390.3132863044739s cumulative, 0.041629791259765625s individual

.
current test PASSED/SKIPPED -- test_downloadable in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1390.3473300933838s cumulative, 0.03404378890991211s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1390.362182855606s cumulative, 0.014852762222290039s individual

.
current test PASSED/SKIPPED -- test_e2e_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1390.3902876377106s cumulative, 0.028104782104492188s individual

.
current test PASSED/SKIPPED -- test_invalid_args_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1390.406292438507s cumulative, 0.01600480079650879s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1390.4232807159424s cumulative, 0.016988277435302734s individual

.
current test PASSED/SKIPPED -- test_bad_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1390.441124677658s cumulative, 0.017843961715698242s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1390.450716972351s cumulative, 0.009592294692993164s individual

.
current test PASSED/SKIPPED -- test_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1390.4659297466278s cumulative, 0.015212774276733398s individual

.
current test PASSED/SKIPPED -- test_e2e_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1390.4863300323486s cumulative, 0.020400285720825195s individual

.
current test PASSED/SKIPPED -- test_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1390.5060408115387s cumulative, 0.019710779190063477s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1390.5186038017273s cumulative, 0.012562990188598633s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1390.531358242035s cumulative, 0.012754440307617188s individual

.
current test PASSED/SKIPPED -- test_good_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1390.5443077087402s cumulative, 0.012949466705322266s individual

.
current test PASSED/SKIPPED -- test_match in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1390.5502128601074s cumulative, 0.0059051513671875s individual

.
current test PASSED/SKIPPED -- test_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1390.5701434612274s cumulative, 0.019930601119995117s individual

.
current test PASSED/SKIPPED -- test_bad_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1390.5874984264374s cumulative, 0.017354965209960938s individual

.
current test PASSED/SKIPPED -- test_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1390.600289106369s cumulative, 0.012790679931640625s individual

.
current test PASSED/SKIPPED -- test_bad_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1390.618263244629s cumulative, 0.017974138259887695s individual

.
current test PASSED/SKIPPED -- test_match in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1390.625825881958s cumulative, 0.0075626373291015625s individual

.
current test PASSED/SKIPPED -- test_bad_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1390.6453528404236s cumulative, 0.019526958465576172s individual

.
current test PASSED/SKIPPED -- test_lifo_negative in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1390.666846036911s cumulative, 0.021493196487426758s individual

.
current test PASSED/SKIPPED -- test_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1390.686224937439s cumulative, 0.0193789005279541s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1390.6968448162079s cumulative, 0.010619878768920898s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1390.7059018611908s cumulative, 0.009057044982910156s individual

.
current test PASSED/SKIPPED -- test_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1390.718850851059s cumulative, 0.012948989868164062s individual

.
current test PASSED/SKIPPED -- test_range_request_zero_length in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1390.7355489730835s cumulative, 0.016698122024536133s individual

.
current test PASSED/SKIPPED -- test_good_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1390.7473900318146s cumulative, 0.011841058731079102s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1390.7615113258362s cumulative, 0.014121294021606445s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1390.77094912529s cumulative, 0.009437799453735352s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1390.7829213142395s cumulative, 0.011972188949584961s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1390.7938129901886s cumulative, 0.01089167594909668s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1390.8086240291595s cumulative, 0.014811038970947266s individual

.
current test PASSED/SKIPPED -- test_bad_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1390.8358461856842s cumulative, 0.027222156524658203s individual

.
current test PASSED/SKIPPED -- test_good_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1390.8478801250458s cumulative, 0.012033939361572266s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1390.8583407402039s cumulative, 0.010460615158081055s individual

.
current test PASSED/SKIPPED -- test_match in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1390.864273071289s cumulative, 0.005932331085205078s individual

.
current test PASSED/SKIPPED -- test_good_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1390.8730313777924s cumulative, 0.008758306503295898s individual

.
current test PASSED/SKIPPED -- test_good_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1390.8868463039398s cumulative, 0.013814926147460938s individual

.
current test PASSED/SKIPPED -- test_file_closed in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1390.908360004425s cumulative, 0.021513700485229492s individual

.
current test PASSED/SKIPPED -- test_bad_path in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1390.918648481369s cumulative, 0.010288476943969727s individual

.
current test PASSED/SKIPPED -- test_range_requests in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1390.9352357387543s cumulative, 0.016587257385253906s individual

.
current test PASSED/SKIPPED -- test_range_request_zero_length in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1390.948523759842s cumulative, 0.013288021087646484s individual

.
current test PASSED/SKIPPED -- test_invalid_args_fallback_filename in /home/kaiyaok2/PythonProjects/falcon/tests/test_static.py: 1390.9588582515717s cumulative, 0.010334491729736328s individual


tests/test_httpstatus.py F
current test FAILED -- test_non_string_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 1391.2147898674011s cumulative, 0.2559316158294678s individual

F
current test FAILED -- test_non_string_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 1391.439783334732s cumulative, 0.22499346733093262s individual

F
current test FAILED -- test_non_string_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 1391.634729385376s cumulative, 0.1949460506439209s individual

F
current test FAILED -- test_non_string_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 1391.7639107704163s cumulative, 0.1291813850402832s individual

F
current test FAILED -- test_non_string_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 1394.58531332016s cumulative, 2.8214025497436523s individual

F
current test FAILED -- test_non_string_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 1394.8620975017548s cumulative, 0.27678418159484863s individual

F
current test FAILED -- test_non_string_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 1395.1606211662292s cumulative, 0.2985236644744873s individual

F
current test FAILED -- test_non_string_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 1395.445903301239s cumulative, 0.2852821350097656s individual

F
current test FAILED -- test_non_string_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 1395.73241853714s cumulative, 0.2865152359008789s individual

F
current test FAILED -- test_non_string_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 1395.9737088680267s cumulative, 0.24129033088684082s individual

F
current test FAILED -- test_non_string_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 1396.1478123664856s cumulative, 0.1741034984588623s individual

F
current test FAILED -- test_non_string_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 1396.359265089035s cumulative, 0.21145272254943848s individual

F
current test FAILED -- test_non_string_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 1396.603200674057s cumulative, 0.24393558502197266s individual

F
current test FAILED -- test_non_string_status in /home/kaiyaok2/PythonProjects/falcon/tests/test_httpstatus.py: 1396.770928144455s cumulative, 0.16772747039794922s individual


tests/asgi/test_scheduled_callbacks.py .
current test PASSED/SKIPPED -- test_callback in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scheduled_callbacks.py: 1396.7814209461212s cumulative, 0.010492801666259766s individual

.
current test PASSED/SKIPPED -- test_callback in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scheduled_callbacks.py: 1396.788337469101s cumulative, 0.006916522979736328s individual

.
current test PASSED/SKIPPED -- test_callback in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scheduled_callbacks.py: 1396.7952406406403s cumulative, 0.006903171539306641s individual

.
current test PASSED/SKIPPED -- test_callback in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_scheduled_callbacks.py: 1396.8011164665222s cumulative, 0.005875825881958008s individual


tests/test_query_params.py .
current test PASSED/SKIPPED -- test_explicitly_disable_auto_parse in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 1396.8120286464691s cumulative, 0.010912179946899414s individual

.
current test PASSED/SKIPPED -- test_empty_body_no_content_length in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 1396.8218748569489s cumulative, 0.009846210479736328s individual

.
current test PASSED/SKIPPED -- test_http_methods_body_expected in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 1396.8339159488678s cumulative, 0.012041091918945312s individual

.
current test PASSED/SKIPPED -- test_http_methods_body_expected in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 1396.8412539958954s cumulative, 0.007338047027587891s individual

.
current test PASSED/SKIPPED -- test_http_methods_body_not_expected in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 1396.8500735759735s cumulative, 0.008819580078125s individual

.
current test PASSED/SKIPPED -- test_http_methods_body_expected in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 1396.8589074611664s cumulative, 0.008833885192871094s individual

.
current test PASSED/SKIPPED -- test_empty_body in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 1396.8690338134766s cumulative, 0.010126352310180664s individual

.
current test PASSED/SKIPPED -- test_http_methods_body_not_expected in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 1396.8801364898682s cumulative, 0.011102676391601562s individual

.
current test PASSED/SKIPPED -- test_non_ascii in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 1396.8874430656433s cumulative, 0.007306575775146484s individual

.
current test PASSED/SKIPPED -- test_http_methods_body_expected in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 1396.8937423229218s cumulative, 0.006299257278442383s individual

.
current test PASSED/SKIPPED -- test_http_methods_body_expected in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 1396.903448343277s cumulative, 0.00970602035522461s individual

.
current test PASSED/SKIPPED -- test_get_param_as_json_handler_json in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 1396.9153201580048s cumulative, 0.011871814727783203s individual

.
current test PASSED/SKIPPED -- test_get_param_as_json_no_handler_json in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 1396.9343655109406s cumulative, 0.019045352935791016s individual

.
current test PASSED/SKIPPED -- test_dont_auto_parse_by_default in /home/kaiyaok2/PythonProjects/falcon/tests/test_query_params.py: 1396.945194721222s cumulative, 0.01082921028137207s individual


tests/asgi/test_buffered_reader.py .
current test PASSED/SKIPPED -- test_small_reads in /home/kaiyaok2/PythonProjects/falcon/tests/asgi/test_buffered_reader.py: 1400.1902160644531s cumulative, 3.245021343231201s individual


tests/test_media_handlers.py F
current test FAILED -- test_json_err_no_handler in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 1400.3271260261536s cumulative, 0.13690996170043945s individual

F
current test FAILED -- test_json_err_no_handler in /home/kaiyaok2/PythonProjects/falcon/tests/test_media_handlers.py: 1400.4242260456085s cumulative, 0.09710001945495605s individual


tests/test_error.py .
current test PASSED/SKIPPED -- test_with_default_title_and_desc_args in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.4283316135406s cumulative, 0.004105567932128906s individual

.
current test PASSED/SKIPPED -- test_other_header_list in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.4325637817383s cumulative, 0.004232168197631836s individual

.
current test PASSED/SKIPPED -- test_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.4360070228577s cumulative, 0.0034432411193847656s individual

.
current test PASSED/SKIPPED -- test_http_error_repr in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.4388496875763s cumulative, 0.0028426647186279297s individual

.
current test PASSED/SKIPPED -- test_with_default_title_and_desc in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.4422717094421s cumulative, 0.0034220218658447266s individual

.
current test PASSED/SKIPPED -- test_with_title_desc_and_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.4454617500305s cumulative, 0.0031900405883789062s individual

.
current test PASSED/SKIPPED -- test_other_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.4498410224915s cumulative, 0.0043792724609375s individual

.
current test PASSED/SKIPPED -- test_with_title_desc_and_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.4533262252808s cumulative, 0.0034852027893066406s individual

.
current test PASSED/SKIPPED -- test_with_title_desc_and_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.4568815231323s cumulative, 0.0035552978515625s individual

.
current test PASSED/SKIPPED -- test_with_title_desc_and_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.4604678153992s cumulative, 0.003586292266845703s individual

.
current test PASSED/SKIPPED -- test_override_header_list in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.4651191234589s cumulative, 0.004651308059692383s individual

.
current test PASSED/SKIPPED -- test_with_default_title_and_desc in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.4680681228638s cumulative, 0.0029489994049072266s individual

.
current test PASSED/SKIPPED -- test_with_default_title_and_desc in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.4709920883179s cumulative, 0.0029239654541015625s individual

.
current test PASSED/SKIPPED -- test_no_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.4745335578918s cumulative, 0.0035414695739746094s individual

.
current test PASSED/SKIPPED -- test_with_default_title_and_desc in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.4774343967438s cumulative, 0.002900838851928711s individual

.
current test PASSED/SKIPPED -- test_with_title_desc_and_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.4802753925323s cumulative, 0.0028409957885742188s individual

.
current test PASSED/SKIPPED -- test_with_title_desc_and_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.4828712940216s cumulative, 0.0025959014892578125s individual

.
current test PASSED/SKIPPED -- test_override_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.4861426353455s cumulative, 0.003271341323852539s individual

.
current test PASSED/SKIPPED -- test_with_title_desc_and_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.4889092445374s cumulative, 0.0027666091918945312s individual

.
current test PASSED/SKIPPED -- test_other_header_list in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.4922335147858s cumulative, 0.003324270248413086s individual

.
current test PASSED/SKIPPED -- test_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.4948842525482s cumulative, 0.002650737762451172s individual

.
current test PASSED/SKIPPED -- test_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.4975216388702s cumulative, 0.0026373863220214844s individual

.
current test PASSED/SKIPPED -- test_with_title_desc_and_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.5001692771912s cumulative, 0.0026476383209228516s individual

.
current test PASSED/SKIPPED -- test_with_default_title_and_desc in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.5033886432648s cumulative, 0.0032193660736083984s individual

.
current test PASSED/SKIPPED -- test_with_title_desc_and_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.5060541629791s cumulative, 0.0026655197143554688s individual

.
current test PASSED/SKIPPED -- test_with_default_title_and_desc in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.5088274478912s cumulative, 0.002773284912109375s individual

.
current test PASSED/SKIPPED -- test_with_title_desc_and_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.511468887329s cumulative, 0.002641439437866211s individual

.
current test PASSED/SKIPPED -- test_with_default_title_and_desc in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.5142936706543s cumulative, 0.0028247833251953125s individual

.
current test PASSED/SKIPPED -- test_with_title_desc_and_headers_args in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.5170629024506s cumulative, 0.0027692317962646484s individual

.
current test PASSED/SKIPPED -- test_args_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.5198612213135s cumulative, 0.002798318862915039s individual

.
current test PASSED/SKIPPED -- test_with_default_title_and_desc in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.5226118564606s cumulative, 0.0027506351470947266s individual

.
current test PASSED/SKIPPED -- test_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.525251865387s cumulative, 0.0026400089263916016s individual

.
current test PASSED/SKIPPED -- test_with_default_title_and_desc in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.5280508995056s cumulative, 0.0027990341186523438s individual

.
current test PASSED/SKIPPED -- test_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.5307385921478s cumulative, 0.002687692642211914s individual

.
current test PASSED/SKIPPED -- test_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.5333776474s cumulative, 0.0026390552520751953s individual

.
current test PASSED/SKIPPED -- test_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.5360009670258s cumulative, 0.002623319625854492s individual

.
current test PASSED/SKIPPED -- test_override_header_list in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.5394644737244s cumulative, 0.0034635066986083984s individual

.
current test PASSED/SKIPPED -- test_other_header_list in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.543344259262s cumulative, 0.0038797855377197266s individual

.
current test PASSED/SKIPPED -- test_other_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.5466918945312s cumulative, 0.003347635269165039s individual

.
current test PASSED/SKIPPED -- test_with_title_desc_and_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.5493431091309s cumulative, 0.002651214599609375s individual

.
current test PASSED/SKIPPED -- test_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.5520071983337s cumulative, 0.0026640892028808594s individual

.
current test PASSED/SKIPPED -- test_no_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.555372953415s cumulative, 0.003365755081176758s individual

.
current test PASSED/SKIPPED -- test_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.5581057071686s cumulative, 0.0027327537536621094s individual

.
current test PASSED/SKIPPED -- test_with_title_desc_and_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.560830116272s cumulative, 0.0027244091033935547s individual

.
current test PASSED/SKIPPED -- test_no_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.56405544281s cumulative, 0.0032253265380859375s individual

.
current test PASSED/SKIPPED -- test_no_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.5673658847809s cumulative, 0.0033104419708251953s individual

.
current test PASSED/SKIPPED -- test_override_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.570648431778s cumulative, 0.0032825469970703125s individual

.
current test PASSED/SKIPPED -- test_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.5733473300934s cumulative, 0.0026988983154296875s individual

.
current test PASSED/SKIPPED -- test_args_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.576153755188s cumulative, 0.002806425094604492s individual

.
current test PASSED/SKIPPED -- test_with_default_title_and_desc in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.579026222229s cumulative, 0.002872467041015625s individual

.
current test PASSED/SKIPPED -- test_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.5817730426788s cumulative, 0.0027468204498291016s individual

.
current test PASSED/SKIPPED -- test_with_default_title_and_desc in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.5846745967865s cumulative, 0.0029015541076660156s individual

.
current test PASSED/SKIPPED -- test_with_default_title_and_desc in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.5875442028046s cumulative, 0.0028696060180664062s individual

.
current test PASSED/SKIPPED -- test_no_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.5908257961273s cumulative, 0.0032815933227539062s individual

.
current test PASSED/SKIPPED -- test_with_default_title_and_desc in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.5935847759247s cumulative, 0.0027589797973632812s individual

.
current test PASSED/SKIPPED -- test_args_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.5969562530518s cumulative, 0.0033714771270751953s individual

.
current test PASSED/SKIPPED -- test_other_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.6005129814148s cumulative, 0.0035567283630371094s individual

.
current test PASSED/SKIPPED -- test_with_title_desc_and_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.6031694412231s cumulative, 0.0026564598083496094s individual

.
current test PASSED/SKIPPED -- test_no_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.6064591407776s cumulative, 0.0032896995544433594s individual

.
current test PASSED/SKIPPED -- test_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.609169960022s cumulative, 0.0027108192443847656s individual

.
current test PASSED/SKIPPED -- test_override_header_list in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.6124815940857s cumulative, 0.003311634063720703s individual

.
current test PASSED/SKIPPED -- test_with_title_desc_and_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.6150922775269s cumulative, 0.0026106834411621094s individual

.
current test PASSED/SKIPPED -- test_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.617726802826s cumulative, 0.0026345252990722656s individual

.
current test PASSED/SKIPPED -- test_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.6208546161652s cumulative, 0.0031278133392333984s individual

.
current test PASSED/SKIPPED -- test_with_title_desc_and_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.62348818779s cumulative, 0.0026335716247558594s individual

.
current test PASSED/SKIPPED -- test_override_header_list in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.626873254776s cumulative, 0.0033850669860839844s individual

.
current test PASSED/SKIPPED -- test_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.6296150684357s cumulative, 0.0027418136596679688s individual

.
current test PASSED/SKIPPED -- test_with_title_desc_and_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.63232421875s cumulative, 0.0027091503143310547s individual

.
current test PASSED/SKIPPED -- test_with_default_title_and_desc in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.635108947754s cumulative, 0.00278472900390625s individual

.
current test PASSED/SKIPPED -- test_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.638055562973s cumulative, 0.002946615219116211s individual

.
current test PASSED/SKIPPED -- test_with_title_desc_and_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.6409256458282s cumulative, 0.0028700828552246094s individual

.
current test PASSED/SKIPPED -- test_override_header_list in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.6446323394775s cumulative, 0.003706693649291992s individual

.
current test PASSED/SKIPPED -- test_override_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.648010969162s cumulative, 0.003378629684448242s individual

.
current test PASSED/SKIPPED -- test_custom_400 in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.6510524749756s cumulative, 0.003041505813598633s individual

.
current test PASSED/SKIPPED -- test_with_title_desc_and_headers_args in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.6538558006287s cumulative, 0.002803325653076172s individual

.
current test PASSED/SKIPPED -- test_with_retry_after_and_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.6565816402435s cumulative, 0.002725839614868164s individual

.
current test PASSED/SKIPPED -- test_other_header_list in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.659840106964s cumulative, 0.0032584667205810547s individual

.
current test PASSED/SKIPPED -- test_override_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.6631047725677s cumulative, 0.0032646656036376953s individual

.
current test PASSED/SKIPPED -- test_with_default_title_and_desc in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.66583776474s cumulative, 0.002732992172241211s individual

.
current test PASSED/SKIPPED -- test_with_title_desc_and_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.6685214042664s cumulative, 0.0026836395263671875s individual

.
current test PASSED/SKIPPED -- test_with_default_title_and_desc in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.6712675094604s cumulative, 0.002746105194091797s individual

.
current test PASSED/SKIPPED -- test_with_title_desc_and_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.6739256381989s cumulative, 0.0026581287384033203s individual

.
current test PASSED/SKIPPED -- test_with_retry_after_and_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.6765270233154s cumulative, 0.0026013851165771484s individual

.
current test PASSED/SKIPPED -- test_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.6791775226593s cumulative, 0.0026504993438720703s individual

.
current test PASSED/SKIPPED -- test_other_header_list in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.6830425262451s cumulative, 0.0038650035858154297s individual

.
current test PASSED/SKIPPED -- test_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.6857750415802s cumulative, 0.002732515335083008s individual

.
current test PASSED/SKIPPED -- test_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.688437461853s cumulative, 0.0026624202728271484s individual

.
current test PASSED/SKIPPED -- test_with_default_title_and_desc in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.6911997795105s cumulative, 0.002762317657470703s individual

.
current test PASSED/SKIPPED -- test_with_title_desc_and_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.6938490867615s cumulative, 0.0026493072509765625s individual

.
current test PASSED/SKIPPED -- test_override_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.697143793106s cumulative, 0.003294706344604492s individual

.
current test PASSED/SKIPPED -- test_with_title_desc_and_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.6997916698456s cumulative, 0.002647876739501953s individual

.
current test PASSED/SKIPPED -- test_custom_400 in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.7028019428253s cumulative, 0.003010272979736328s individual

.
current test PASSED/SKIPPED -- test_with_title_desc_and_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.7054543495178s cumulative, 0.002652406692504883s individual

.
current test PASSED/SKIPPED -- test_with_title_desc_and_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.708044052124s cumulative, 0.002589702606201172s individual

.
current test PASSED/SKIPPED -- test_override_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.7113771438599s cumulative, 0.0033330917358398438s individual

.
current test PASSED/SKIPPED -- test_custom_400 in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.714408159256s cumulative, 0.003031015396118164s individual

.
current test PASSED/SKIPPED -- test_with_title_desc_and_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.7170114517212s cumulative, 0.002603292465209961s individual

.
current test PASSED/SKIPPED -- test_with_default_title_and_desc in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.7201890945435s cumulative, 0.003177642822265625s individual

.
current test PASSED/SKIPPED -- test_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.7228841781616s cumulative, 0.0026950836181640625s individual

.
current test PASSED/SKIPPED -- test_with_default_title_and_desc in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.7256209850311s cumulative, 0.002736806869506836s individual

.
current test PASSED/SKIPPED -- test_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.728261232376s cumulative, 0.002640247344970703s individual

.
current test PASSED/SKIPPED -- test_with_default_title_and_desc in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.7310156822205s cumulative, 0.0027544498443603516s individual

.
current test PASSED/SKIPPED -- test_with_title_desc_and_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.733633518219s cumulative, 0.0026178359985351562s individual

.
current test PASSED/SKIPPED -- test_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.7363872528076s cumulative, 0.002753734588623047s individual

.
current test PASSED/SKIPPED -- test_with_title_desc_and_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.73899435997s cumulative, 0.002607107162475586s individual

.
current test PASSED/SKIPPED -- test_with_retry_after in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.7416217327118s cumulative, 0.0026273727416992188s individual

.
current test PASSED/SKIPPED -- test_with_default_title_and_desc in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.744397163391s cumulative, 0.002775430679321289s individual

.
current test PASSED/SKIPPED -- test_with_default_title_and_desc_args in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.7472929954529s cumulative, 0.002895832061767578s individual

.
current test PASSED/SKIPPED -- test_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.7499368190765s cumulative, 0.0026438236236572266s individual

.
current test PASSED/SKIPPED -- test_with_retry_after in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.7526116371155s cumulative, 0.0026748180389404297s individual

.
current test PASSED/SKIPPED -- test_with_retry_after in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.7561337947845s cumulative, 0.003522157669067383s individual

.
current test PASSED/SKIPPED -- test_with_title_desc_and_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.7588250637054s cumulative, 0.0026912689208984375s individual

.
current test PASSED/SKIPPED -- test_override_header_list in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.7621262073517s cumulative, 0.0033011436462402344s individual

.
current test PASSED/SKIPPED -- test_custom_400 in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.7652430534363s cumulative, 0.0031168460845947266s individual

.
current test PASSED/SKIPPED -- test_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.7679710388184s cumulative, 0.002727985382080078s individual

.
current test PASSED/SKIPPED -- test_other_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.7712979316711s cumulative, 0.003326892852783203s individual

.
current test PASSED/SKIPPED -- test_args_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.7740650177002s cumulative, 0.0027670860290527344s individual

.
current test PASSED/SKIPPED -- test_with_default_title_and_desc in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.7768313884735s cumulative, 0.0027663707733154297s individual

.
current test PASSED/SKIPPED -- test_other_header_list in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.7801604270935s cumulative, 0.003329038619995117s individual

.
current test PASSED/SKIPPED -- test_other_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.783406496048s cumulative, 0.0032460689544677734s individual

.
current test PASSED/SKIPPED -- test_with_default_title_and_desc in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.7861547470093s cumulative, 0.002748250961303711s individual

.
current test PASSED/SKIPPED -- test_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.7887995243073s cumulative, 0.002644777297973633s individual

.
current test PASSED/SKIPPED -- test_with_default_title_and_desc in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.7916452884674s cumulative, 0.00284576416015625s individual

.
current test PASSED/SKIPPED -- test_other_header in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.794915676117s cumulative, 0.003270387649536133s individual

.
current test PASSED/SKIPPED -- test_args_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.797697544098s cumulative, 0.0027818679809570312s individual

.
current test PASSED/SKIPPED -- test_with_retry_after_and_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.8003215789795s cumulative, 0.002624034881591797s individual

.
current test PASSED/SKIPPED -- test_with_default_title_and_desc in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.8034420013428s cumulative, 0.00312042236328125s individual

.
current test PASSED/SKIPPED -- test_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.8061046600342s cumulative, 0.00266265869140625s individual

.
current test PASSED/SKIPPED -- test_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.808762550354s cumulative, 0.0026578903198242188s individual

.
current test PASSED/SKIPPED -- test_with_title_desc_and_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.8113887310028s cumulative, 0.002626180648803711s individual

.
current test PASSED/SKIPPED -- test_with_default_title_and_desc in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.8142244815826s cumulative, 0.0028357505798339844s individual

.
current test PASSED/SKIPPED -- test_with_default_title_and_desc in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.8170161247253s cumulative, 0.0027916431427001953s individual

.
current test PASSED/SKIPPED -- test_with_default_title_and_desc in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.8197824954987s cumulative, 0.0027663707733154297s individual

.
current test PASSED/SKIPPED -- test_args_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.8227288722992s cumulative, 0.0029463768005371094s individual

.
current test PASSED/SKIPPED -- test_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.8253555297852s cumulative, 0.002626657485961914s individual

.
current test PASSED/SKIPPED -- test_with_title_desc_and_headers in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.8282721042633s cumulative, 0.002916574478149414s individual

.
current test PASSED/SKIPPED -- test_with_default_title_and_desc in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.8310809135437s cumulative, 0.002808809280395508s individual

.
current test PASSED/SKIPPED -- test_kw_only in /home/kaiyaok2/PythonProjects/falcon/tests/test_error.py: 1400.8339104652405s cumulative, 0.0028295516967773438s individual


tests/test_sink_and_static.py .
current test PASSED/SKIPPED -- test_sink_before_static_route in /home/kaiyaok2/PythonProjects/falcon/tests/test_sink_and_static.py: 1400.8458738327026s cumulative, 0.011963367462158203s individual

.
current test PASSED/SKIPPED -- test_sink_after_static_route in /home/kaiyaok2/PythonProjects/falcon/tests/test_sink_and_static.py: 1400.9015791416168s cumulative, 0.05570530891418457s individual

.
current test PASSED/SKIPPED -- test_sink_after_static_route in /home/kaiyaok2/PythonProjects/falcon/tests/test_sink_and_static.py: 1400.9128675460815s cumulative, 0.01128840446472168s individual

.
current test PASSED/SKIPPED -- test_sink_before_static_route in /home/kaiyaok2/PythonProjects/falcon/tests/test_sink_and_static.py: 1400.921418428421s cumulative, 0.008550882339477539s individual


tests/test_uri_templates_legacy.py .
current test PASSED/SKIPPED -- test_two_fields in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates_legacy.py: 1400.925499200821s cumulative, 0.004080772399902344s individual

.
current test PASSED/SKIPPED -- test_string_type_required in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates_legacy.py: 1400.9283232688904s cumulative, 0.002824068069458008s individual

.
current test PASSED/SKIPPED -- test_template_must_start_with_slash in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates_legacy.py: 1400.9310264587402s cumulative, 0.0027031898498535156s individual

.
current test PASSED/SKIPPED -- test_string_type_required in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates_legacy.py: 1400.9337754249573s cumulative, 0.0027489662170410156s individual

.
current test PASSED/SKIPPED -- test_two_fields in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates_legacy.py: 1400.9365484714508s cumulative, 0.0027730464935302734s individual

.
current test PASSED/SKIPPED -- test_template_may_not_contain_double_slash in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates_legacy.py: 1400.9392294883728s cumulative, 0.0026810169219970703s individual

.
current test PASSED/SKIPPED -- test_no_fields in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates_legacy.py: 1400.9422221183777s cumulative, 0.0029926300048828125s individual

.
current test PASSED/SKIPPED -- test_one_field_with_prefixed_digits in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates_legacy.py: 1400.94504570961s cumulative, 0.0028235912322998047s individual

.
current test PASSED/SKIPPED -- test_one_field_with_digits in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates_legacy.py: 1400.9478278160095s cumulative, 0.002782106399536133s individual

.
current test PASSED/SKIPPED -- test_deprecated_warning in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates_legacy.py: 1400.9508690834045s cumulative, 0.0030412673950195312s individual

.
current test PASSED/SKIPPED -- test_template_may_not_contain_double_slash in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates_legacy.py: 1400.953694343567s cumulative, 0.0028252601623535156s individual

.
current test PASSED/SKIPPED -- test_template_may_not_contain_double_slash in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates_legacy.py: 1400.9567868709564s cumulative, 0.003092527389526367s individual

.
current test PASSED/SKIPPED -- test_template_may_not_contain_double_slash in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates_legacy.py: 1400.9595923423767s cumulative, 0.002805471420288086s individual

.
current test PASSED/SKIPPED -- test_template_may_not_contain_double_slash in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates_legacy.py: 1400.9623453617096s cumulative, 0.002753019332885742s individual

.
current test PASSED/SKIPPED -- test_one_field in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates_legacy.py: 1400.96586561203s cumulative, 0.0035202503204345703s individual

.
current test PASSED/SKIPPED -- test_template_may_not_contain_double_slash in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates_legacy.py: 1400.9705028533936s cumulative, 0.004637241363525391s individual

.
current test PASSED/SKIPPED -- test_malformed_field in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates_legacy.py: 1400.9735083580017s cumulative, 0.003005504608154297s individual

.
current test PASSED/SKIPPED -- test_root in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates_legacy.py: 1400.9761209487915s cumulative, 0.002612590789794922s individual

.
current test PASSED/SKIPPED -- test_three_fields in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates_legacy.py: 1400.9790539741516s cumulative, 0.002933025360107422s individual

.
current test PASSED/SKIPPED -- test_no_fields in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates_legacy.py: 1400.9818799495697s cumulative, 0.0028259754180908203s individual

.
current test PASSED/SKIPPED -- test_no_fields in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates_legacy.py: 1400.9847431182861s cumulative, 0.002863168716430664s individual

.
current test PASSED/SKIPPED -- test_template_must_start_with_slash in /home/kaiyaok2/PythonProjects/falcon/tests/test_uri_templates_legacy.py: 1400.9874181747437s cumulative, 0.0026750564575195312s individual


tests/test_app_initializers.py .
current test PASSED/SKIPPED -- test_api_media_type_overriding in /home/kaiyaok2/PythonProjects/falcon/tests/test_app_initializers.py: 1400.9933557510376s cumulative, 0.0059375762939453125s individual

.
current test PASSED/SKIPPED -- test_api_media_type_overriding in /home/kaiyaok2/PythonProjects/falcon/tests/test_app_initializers.py: 1400.9986400604248s cumulative, 0.005284309387207031s individual



==================================== ERRORS ====================================
_ ERROR at setup of TestHTTPStatusWithMiddleware.test_raise_status_in_process_resource[True] _

request = <SubRequest 'hook_test_client' for <Function test_raise_status_in_process_resource[True]>>

    @pytest.fixture(params=[True, False])
    def hook_test_client(request):
        app = create_app(asgi=request.param)
>       app.add_route('/status', TestHookResource())

tests/test_httpstatus.py:25: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a847f680>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a83f53f0>, 'CHECK...53f0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a83f53f0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method TestHookResource.on_get of <test_httpstatus.TestHookResource object at 0x7f03a8347370>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ ERROR at setup of TestHTTPStatusWithMiddleware.test_raise_status_in_process_request[True] _

request = <SubRequest 'hook_test_client' for <Function test_raise_status_in_process_request[True]>>

    @pytest.fixture(params=[True, False])
    def hook_test_client(request):
        app = create_app(asgi=request.param)
>       app.add_route('/status', TestHookResource())

tests/test_httpstatus.py:25: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a84b0e40>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a8b0a0e0>, 'CHECK...a0e0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a8b0a0e0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method TestHookResource.on_get of <test_httpstatus.TestHookResource object at 0x7f03a8347130>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ ERROR at setup of TestHTTPStatusWithMiddleware.test_raise_status_runs_process_response[True] _

request = <SubRequest 'hook_test_client' for <Function test_raise_status_runs_process_response[True]>>

    @pytest.fixture(params=[True, False])
    def hook_test_client(request):
        app = create_app(asgi=request.param)
>       app.add_route('/status', TestHookResource())

tests/test_httpstatus.py:25: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a84b2420>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f02549e3910>, 'CHECK...3910>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f02549e3910>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method TestHookResource.on_get of <test_httpstatus.TestHookResource object at 0x7f03a83ad510>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
________ ERROR at setup of TestNoBodyWithStatus.test_data_is_set[asgi] _________

asgi = True

    @pytest.fixture()
    def body_client(asgi):
        app = create_app(asgi=asgi)
>       app.add_route('/status', NoBodyResource())

tests/test_httpstatus.py:210: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a84b2500>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a83f5000>, 'CHECK...5000>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a83f5000>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method NoBodyResource.on_get of <test_httpstatus.NoBodyResource object at 0x7f03a84a9750>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
________ ERROR at setup of TestNoBodyWithStatus.test_media_is_set[asgi] ________

asgi = True

    @pytest.fixture()
    def body_client(asgi):
        app = create_app(asgi=asgi)
>       app.add_route('/status', NoBodyResource())

tests/test_httpstatus.py:210: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a84b3b50>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a83f4ca0>, 'CHECK...4ca0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a83f4ca0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method NoBodyResource.on_get of <test_httpstatus.NoBodyResource object at 0x7f03a8485630>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
________ ERROR at setup of TestNoBodyWithStatus.test_body_is_set[asgi] _________

asgi = True

    @pytest.fixture()
    def body_client(asgi):
        app = create_app(asgi=asgi)
>       app.add_route('/status', NoBodyResource())

tests/test_httpstatus.py:210: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a84b13f0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a8390790>, 'CHECK...0790>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a8390790>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method NoBodyResource.on_get of <test_httpstatus.NoBodyResource object at 0x7f03a88e4130>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_____ ERROR at setup of TestHTTPStatus.test_raise_status_empty_body[True] ______

request = <SubRequest 'client' for <Function test_raise_status_empty_body[True]>>

    @pytest.fixture(params=[True, False])
    def client(request):
        app = create_app(asgi=request.param)
>       app.add_route('/status', TestStatusResource())

tests/test_httpstatus.py:18: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a84b11c0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a8391000>, 'CHECK...1000>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a8391000>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method TestStatusResource.on_delete of <test_httpstatus.TestStatusResource object at 0x7f03a8406d40>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
__ ERROR at setup of TestHTTPStatus.test_raise_status_runs_after_hooks[True] ___

request = <SubRequest 'client' for <Function test_raise_status_runs_after_hooks[True]>>

    @pytest.fixture(params=[True, False])
    def client(request):
        app = create_app(asgi=request.param)
>       app.add_route('/status', TestStatusResource())

tests/test_httpstatus.py:18: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a8422340>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a83f6680>, 'CHECK...6680>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a83f6680>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method TestStatusResource.on_delete of <test_httpstatus.TestStatusResource object at 0x7f03a8490b50>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ ERROR at setup of TestHTTPStatus.test_raise_status_survives_after_hooks[True] _

request = <SubRequest 'client' for <Function test_raise_status_survives_after_hooks[True]>>

    @pytest.fixture(params=[True, False])
    def client(request):
        app = create_app(asgi=request.param)
>       app.add_route('/status', TestStatusResource())

tests/test_httpstatus.py:18: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a8422500>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a83f7be0>, 'CHECK...7be0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a83f7be0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method TestStatusResource.on_delete of <test_httpstatus.TestStatusResource object at 0x7f03a8346680>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
____ ERROR at setup of TestHTTPStatus.test_raise_status_in_responder[True] _____

request = <SubRequest 'client' for <Function test_raise_status_in_responder[True]>>

    @pytest.fixture(params=[True, False])
    def client(request):
        app = create_app(asgi=request.param)
>       app.add_route('/status', TestStatusResource())

tests/test_httpstatus.py:18: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a8423370>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a83f5510>, 'CHECK...5510>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a83f5510>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method TestStatusResource.on_delete of <test_httpstatus.TestStatusResource object at 0x7f03a8402020>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
___ ERROR at setup of TestHTTPStatus.test_raise_status_in_before_hook[True] ____

request = <SubRequest 'client' for <Function test_raise_status_in_before_hook[True]>>

    @pytest.fixture(params=[True, False])
    def client(request):
        app = create_app(asgi=request.param)
>       app.add_route('/status', TestStatusResource())

tests/test_httpstatus.py:18: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a8423ae0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a83f4a60>, 'CHECK...4a60>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a83f4a60>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method TestStatusResource.on_delete of <test_httpstatus.TestStatusResource object at 0x7f03a836cf40>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ ERROR at setup of TestWSGIServer.test_static_file_byte_range[gunicorn-32-38-random] _

server_args = <function _gunicorn_args at 0x7f0268b47eb0>

    @pytest.fixture
    def server_url(server_args):
        if sys.platform.startswith('win'):
            pytest.skip('WSGI server tests are currently unsupported on Windows')
    
        for attempt in range(3):
            server_port = testing.get_unused_port()
            base_url = 'http://{}:{}'.format(_SERVER_HOST, server_port)
    
            args = server_args(_SERVER_HOST, server_port)
            print('Starting {}...'.format(server_args.__doc__))
            print(' '.join(args))
            try:
                server = subprocess.Popen(args, cwd=_HERE)
            except FileNotFoundError:
                pytest.skip('{} executable is not installed'.format(args[0]))
    
            # NOTE(vytas): give the app server some time to start.
            start_time = time.time()
            while time.time() - start_time < _STARTUP_TIMEOUT:
                try:
                    requests.get(base_url + '/hello', timeout=0.2)
                except (requests.exceptions.Timeout, requests.exceptions.ConnectionError):
                    time.sleep(0.2)
                else:
                    break
            else:
                if server.poll() is None:
                    pytest.fail('Server is not responding to requests')
                else:
                    # NOTE(kgriffs): The server did not start up; probably due to
                    #   the port being in use. We could check the output but
                    #   capsys fixture may not have buffered the error output
                    #   yet, so we just retry.
                    continue
    
            yield base_url
            break
    
        else:
>           pytest.fail('Could not start server')
E           Failed: Could not start server

tests/test_wsgi_servers.py:175: Failed
________ ERROR at setup of TestWSGIServer.test_get_deprecated[uvicorn] _________

server_args = <function _uvicorn_args at 0x7f0268bb4040>

    @pytest.fixture
    def server_url(server_args):
        if sys.platform.startswith('win'):
            pytest.skip('WSGI server tests are currently unsupported on Windows')
    
        for attempt in range(3):
            server_port = testing.get_unused_port()
            base_url = 'http://{}:{}'.format(_SERVER_HOST, server_port)
    
            args = server_args(_SERVER_HOST, server_port)
            print('Starting {}...'.format(server_args.__doc__))
            print(' '.join(args))
            try:
                server = subprocess.Popen(args, cwd=_HERE)
            except FileNotFoundError:
                pytest.skip('{} executable is not installed'.format(args[0]))
    
            # NOTE(vytas): give the app server some time to start.
            start_time = time.time()
            while time.time() - start_time < _STARTUP_TIMEOUT:
                try:
                    requests.get(base_url + '/hello', timeout=0.2)
                except (requests.exceptions.Timeout, requests.exceptions.ConnectionError):
                    time.sleep(0.2)
                else:
                    break
            else:
                if server.poll() is None:
                    pytest.fail('Server is not responding to requests')
                else:
                    # NOTE(kgriffs): The server did not start up; probably due to
                    #   the port being in use. We could check the output but
                    #   capsys fixture may not have buffered the error output
                    #   yet, so we just retry.
                    continue
    
            yield base_url
            break
    
        else:
>           pytest.fail('Could not start server')
E           Failed: Could not start server

tests/test_wsgi_servers.py:175: Failed
_ ERROR at setup of TestWSGIServer.test_static_file_byte_range[gunicorn-2-6-port] _

server_args = <function _gunicorn_args at 0x7f0268b47eb0>

    @pytest.fixture
    def server_url(server_args):
        if sys.platform.startswith('win'):
            pytest.skip('WSGI server tests are currently unsupported on Windows')
    
        for attempt in range(3):
            server_port = testing.get_unused_port()
            base_url = 'http://{}:{}'.format(_SERVER_HOST, server_port)
    
            args = server_args(_SERVER_HOST, server_port)
            print('Starting {}...'.format(server_args.__doc__))
            print(' '.join(args))
            try:
                server = subprocess.Popen(args, cwd=_HERE)
            except FileNotFoundError:
                pytest.skip('{} executable is not installed'.format(args[0]))
    
            # NOTE(vytas): give the app server some time to start.
            start_time = time.time()
            while time.time() - start_time < _STARTUP_TIMEOUT:
                try:
                    requests.get(base_url + '/hello', timeout=0.2)
                except (requests.exceptions.Timeout, requests.exceptions.ConnectionError):
                    time.sleep(0.2)
                else:
                    break
            else:
                if server.poll() is None:
                    pytest.fail('Server is not responding to requests')
                else:
                    # NOTE(kgriffs): The server did not start up; probably due to
                    #   the port being in use. We could check the output but
                    #   capsys fixture may not have buffered the error output
                    #   yet, so we just retry.
                    continue
    
            yield base_url
            break
    
        else:
>           pytest.fail('Could not start server')
E           Failed: Could not start server

tests/test_wsgi_servers.py:175: Failed
_________ ERROR at setup of TestWSGIServer.test_static_file[gunicorn] __________

server_args = <function _gunicorn_args at 0x7f0268b47eb0>

    @pytest.fixture
    def server_url(server_args):
        if sys.platform.startswith('win'):
            pytest.skip('WSGI server tests are currently unsupported on Windows')
    
        for attempt in range(3):
            server_port = testing.get_unused_port()
            base_url = 'http://{}:{}'.format(_SERVER_HOST, server_port)
    
            args = server_args(_SERVER_HOST, server_port)
            print('Starting {}...'.format(server_args.__doc__))
            print(' '.join(args))
            try:
                server = subprocess.Popen(args, cwd=_HERE)
            except FileNotFoundError:
                pytest.skip('{} executable is not installed'.format(args[0]))
    
            # NOTE(vytas): give the app server some time to start.
            start_time = time.time()
            while time.time() - start_time < _STARTUP_TIMEOUT:
                try:
                    requests.get(base_url + '/hello', timeout=0.2)
                except (requests.exceptions.Timeout, requests.exceptions.ConnectionError):
                    time.sleep(0.2)
                else:
                    break
            else:
                if server.poll() is None:
                    pytest.fail('Server is not responding to requests')
                else:
                    # NOTE(kgriffs): The server did not start up; probably due to
                    #   the port being in use. We could check the output but
                    #   capsys fixture may not have buffered the error output
                    #   yet, so we just retry.
                    continue
    
            yield base_url
            break
    
        else:
>           pytest.fail('Could not start server')
E           Failed: Could not start server

tests/test_wsgi_servers.py:175: Failed
_ ERROR at setup of TestWSGIServer.test_static_file_byte_range[uvicorn-2-6-port] _

server_args = <function _uvicorn_args at 0x7f0268bb4040>

    @pytest.fixture
    def server_url(server_args):
        if sys.platform.startswith('win'):
            pytest.skip('WSGI server tests are currently unsupported on Windows')
    
        for attempt in range(3):
            server_port = testing.get_unused_port()
            base_url = 'http://{}:{}'.format(_SERVER_HOST, server_port)
    
            args = server_args(_SERVER_HOST, server_port)
            print('Starting {}...'.format(server_args.__doc__))
            print(' '.join(args))
            try:
                server = subprocess.Popen(args, cwd=_HERE)
            except FileNotFoundError:
                pytest.skip('{} executable is not installed'.format(args[0]))
    
            # NOTE(vytas): give the app server some time to start.
            start_time = time.time()
            while time.time() - start_time < _STARTUP_TIMEOUT:
                try:
                    requests.get(base_url + '/hello', timeout=0.2)
                except (requests.exceptions.Timeout, requests.exceptions.ConnectionError):
                    time.sleep(0.2)
                else:
                    break
            else:
                if server.poll() is None:
                    pytest.fail('Server is not responding to requests')
                else:
                    # NOTE(kgriffs): The server did not start up; probably due to
                    #   the port being in use. We could check the output but
                    #   capsys fixture may not have buffered the error output
                    #   yet, so we just retry.
                    continue
    
            yield base_url
            break
    
        else:
>           pytest.fail('Could not start server')
E           Failed: Could not start server

tests/test_wsgi_servers.py:175: Failed
_ ERROR at setup of TestWSGIServer.test_static_file_byte_range[gunicorn-7--hashlib] _

server_args = <function _gunicorn_args at 0x7f0268b47eb0>

    @pytest.fixture
    def server_url(server_args):
        if sys.platform.startswith('win'):
            pytest.skip('WSGI server tests are currently unsupported on Windows')
    
        for attempt in range(3):
            server_port = testing.get_unused_port()
            base_url = 'http://{}:{}'.format(_SERVER_HOST, server_port)
    
            args = server_args(_SERVER_HOST, server_port)
            print('Starting {}...'.format(server_args.__doc__))
            print(' '.join(args))
            try:
                server = subprocess.Popen(args, cwd=_HERE)
            except FileNotFoundError:
                pytest.skip('{} executable is not installed'.format(args[0]))
    
            # NOTE(vytas): give the app server some time to start.
            start_time = time.time()
            while time.time() - start_time < _STARTUP_TIMEOUT:
                try:
                    requests.get(base_url + '/hello', timeout=0.2)
                except (requests.exceptions.Timeout, requests.exceptions.ConnectionError):
                    time.sleep(0.2)
                else:
                    break
            else:
                if server.poll() is None:
                    pytest.fail('Server is not responding to requests')
                else:
                    # NOTE(kgriffs): The server did not start up; probably due to
                    #   the port being in use. We could check the output but
                    #   capsys fixture may not have buffered the error output
                    #   yet, so we just retry.
                    continue
    
            yield base_url
            break
    
        else:
>           pytest.fail('Could not start server')
E           Failed: Could not start server

tests/test_wsgi_servers.py:175: Failed
_ ERROR at setup of TestWSGIServer.test_static_file_byte_range[uvicorn-7--hashlib] _

server_args = <function _uvicorn_args at 0x7f0268bb4040>

    @pytest.fixture
    def server_url(server_args):
        if sys.platform.startswith('win'):
            pytest.skip('WSGI server tests are currently unsupported on Windows')
    
        for attempt in range(3):
            server_port = testing.get_unused_port()
            base_url = 'http://{}:{}'.format(_SERVER_HOST, server_port)
    
            args = server_args(_SERVER_HOST, server_port)
            print('Starting {}...'.format(server_args.__doc__))
            print(' '.join(args))
            try:
                server = subprocess.Popen(args, cwd=_HERE)
            except FileNotFoundError:
                pytest.skip('{} executable is not installed'.format(args[0]))
    
            # NOTE(vytas): give the app server some time to start.
            start_time = time.time()
            while time.time() - start_time < _STARTUP_TIMEOUT:
                try:
                    requests.get(base_url + '/hello', timeout=0.2)
                except (requests.exceptions.Timeout, requests.exceptions.ConnectionError):
                    time.sleep(0.2)
                else:
                    break
            else:
                if server.poll() is None:
                    pytest.fail('Server is not responding to requests')
                else:
                    # NOTE(kgriffs): The server did not start up; probably due to
                    #   the port being in use. We could check the output but
                    #   capsys fixture may not have buffered the error output
                    #   yet, so we just retry.
                    continue
    
            yield base_url
            break
    
        else:
>           pytest.fail('Could not start server')
E           Failed: Could not start server

tests/test_wsgi_servers.py:175: Failed
_ ERROR at setup of TestWSGIServer.test_static_file_byte_range[gunicorn--47-The content of this comment is part of a test.\n] _

server_args = <function _gunicorn_args at 0x7f0268b47eb0>

    @pytest.fixture
    def server_url(server_args):
        if sys.platform.startswith('win'):
            pytest.skip('WSGI server tests are currently unsupported on Windows')
    
        for attempt in range(3):
            server_port = testing.get_unused_port()
            base_url = 'http://{}:{}'.format(_SERVER_HOST, server_port)
    
            args = server_args(_SERVER_HOST, server_port)
            print('Starting {}...'.format(server_args.__doc__))
            print(' '.join(args))
            try:
                server = subprocess.Popen(args, cwd=_HERE)
            except FileNotFoundError:
                pytest.skip('{} executable is not installed'.format(args[0]))
    
            # NOTE(vytas): give the app server some time to start.
            start_time = time.time()
            while time.time() - start_time < _STARTUP_TIMEOUT:
                try:
                    requests.get(base_url + '/hello', timeout=0.2)
                except (requests.exceptions.Timeout, requests.exceptions.ConnectionError):
                    time.sleep(0.2)
                else:
                    break
            else:
                if server.poll() is None:
                    pytest.fail('Server is not responding to requests')
                else:
                    # NOTE(kgriffs): The server did not start up; probably due to
                    #   the port being in use. We could check the output but
                    #   capsys fixture may not have buffered the error output
                    #   yet, so we just retry.
                    continue
    
            yield base_url
            break
    
        else:
>           pytest.fail('Could not start server')
E           Failed: Could not start server

tests/test_wsgi_servers.py:175: Failed
________ ERROR at setup of TestWSGIServer.test_get_deprecated[gunicorn] ________

server_args = <function _gunicorn_args at 0x7f0268b47eb0>

    @pytest.fixture
    def server_url(server_args):
        if sys.platform.startswith('win'):
            pytest.skip('WSGI server tests are currently unsupported on Windows')
    
        for attempt in range(3):
            server_port = testing.get_unused_port()
            base_url = 'http://{}:{}'.format(_SERVER_HOST, server_port)
    
            args = server_args(_SERVER_HOST, server_port)
            print('Starting {}...'.format(server_args.__doc__))
            print(' '.join(args))
            try:
                server = subprocess.Popen(args, cwd=_HERE)
            except FileNotFoundError:
                pytest.skip('{} executable is not installed'.format(args[0]))
    
            # NOTE(vytas): give the app server some time to start.
            start_time = time.time()
            while time.time() - start_time < _STARTUP_TIMEOUT:
                try:
                    requests.get(base_url + '/hello', timeout=0.2)
                except (requests.exceptions.Timeout, requests.exceptions.ConnectionError):
                    time.sleep(0.2)
                else:
                    break
            else:
                if server.poll() is None:
                    pytest.fail('Server is not responding to requests')
                else:
                    # NOTE(kgriffs): The server did not start up; probably due to
                    #   the port being in use. We could check the output but
                    #   capsys fixture may not have buffered the error output
                    #   yet, so we just retry.
                    continue
    
            yield base_url
            break
    
        else:
>           pytest.fail('Could not start server')
E           Failed: Could not start server

tests/test_wsgi_servers.py:175: Failed
_ ERROR at setup of TestWSGIServer.test_static_file_byte_range[uvicorn--47-The content of this comment is part of a test.\n] _

server_args = <function _uvicorn_args at 0x7f0268bb4040>

    @pytest.fixture
    def server_url(server_args):
        if sys.platform.startswith('win'):
            pytest.skip('WSGI server tests are currently unsupported on Windows')
    
        for attempt in range(3):
            server_port = testing.get_unused_port()
            base_url = 'http://{}:{}'.format(_SERVER_HOST, server_port)
    
            args = server_args(_SERVER_HOST, server_port)
            print('Starting {}...'.format(server_args.__doc__))
            print(' '.join(args))
            try:
                server = subprocess.Popen(args, cwd=_HERE)
            except FileNotFoundError:
                pytest.skip('{} executable is not installed'.format(args[0]))
    
            # NOTE(vytas): give the app server some time to start.
            start_time = time.time()
            while time.time() - start_time < _STARTUP_TIMEOUT:
                try:
                    requests.get(base_url + '/hello', timeout=0.2)
                except (requests.exceptions.Timeout, requests.exceptions.ConnectionError):
                    time.sleep(0.2)
                else:
                    break
            else:
                if server.poll() is None:
                    pytest.fail('Server is not responding to requests')
                else:
                    # NOTE(kgriffs): The server did not start up; probably due to
                    #   the port being in use. We could check the output but
                    #   capsys fixture may not have buffered the error output
                    #   yet, so we just retry.
                    continue
    
            yield base_url
            break
    
        else:
>           pytest.fail('Could not start server')
E           Failed: Could not start server

tests/test_wsgi_servers.py:175: Failed
______________ ERROR at setup of TestWSGIServer.test_get[uvicorn] ______________

server_args = <function _uvicorn_args at 0x7f0268bb4040>

    @pytest.fixture
    def server_url(server_args):
        if sys.platform.startswith('win'):
            pytest.skip('WSGI server tests are currently unsupported on Windows')
    
        for attempt in range(3):
            server_port = testing.get_unused_port()
            base_url = 'http://{}:{}'.format(_SERVER_HOST, server_port)
    
            args = server_args(_SERVER_HOST, server_port)
            print('Starting {}...'.format(server_args.__doc__))
            print(' '.join(args))
            try:
                server = subprocess.Popen(args, cwd=_HERE)
            except FileNotFoundError:
                pytest.skip('{} executable is not installed'.format(args[0]))
    
            # NOTE(vytas): give the app server some time to start.
            start_time = time.time()
            while time.time() - start_time < _STARTUP_TIMEOUT:
                try:
                    requests.get(base_url + '/hello', timeout=0.2)
                except (requests.exceptions.Timeout, requests.exceptions.ConnectionError):
                    time.sleep(0.2)
                else:
                    break
            else:
                if server.poll() is None:
                    pytest.fail('Server is not responding to requests')
                else:
                    # NOTE(kgriffs): The server did not start up; probably due to
                    #   the port being in use. We could check the output but
                    #   capsys fixture may not have buffered the error output
                    #   yet, so we just retry.
                    continue
    
            yield base_url
            break
    
        else:
>           pytest.fail('Could not start server')
E           Failed: Could not start server

tests/test_wsgi_servers.py:175: Failed
_ ERROR at setup of TestWSGIServer.test_static_file_byte_range[uvicorn-32-38-random] _

server_args = <function _uvicorn_args at 0x7f0268bb4040>

    @pytest.fixture
    def server_url(server_args):
        if sys.platform.startswith('win'):
            pytest.skip('WSGI server tests are currently unsupported on Windows')
    
        for attempt in range(3):
            server_port = testing.get_unused_port()
            base_url = 'http://{}:{}'.format(_SERVER_HOST, server_port)
    
            args = server_args(_SERVER_HOST, server_port)
            print('Starting {}...'.format(server_args.__doc__))
            print(' '.join(args))
            try:
                server = subprocess.Popen(args, cwd=_HERE)
            except FileNotFoundError:
                pytest.skip('{} executable is not installed'.format(args[0]))
    
            # NOTE(vytas): give the app server some time to start.
            start_time = time.time()
            while time.time() - start_time < _STARTUP_TIMEOUT:
                try:
                    requests.get(base_url + '/hello', timeout=0.2)
                except (requests.exceptions.Timeout, requests.exceptions.ConnectionError):
                    time.sleep(0.2)
                else:
                    break
            else:
                if server.poll() is None:
                    pytest.fail('Server is not responding to requests')
                else:
                    # NOTE(kgriffs): The server did not start up; probably due to
                    #   the port being in use. We could check the output but
                    #   capsys fixture may not have buffered the error output
                    #   yet, so we just retry.
                    continue
    
            yield base_url
            break
    
        else:
>           pytest.fail('Could not start server')
E           Failed: Could not start server

tests/test_wsgi_servers.py:175: Failed
_____________ ERROR at setup of TestWSGIServer.test_get[gunicorn] ______________

server_args = <function _gunicorn_args at 0x7f0268b47eb0>

    @pytest.fixture
    def server_url(server_args):
        if sys.platform.startswith('win'):
            pytest.skip('WSGI server tests are currently unsupported on Windows')
    
        for attempt in range(3):
            server_port = testing.get_unused_port()
            base_url = 'http://{}:{}'.format(_SERVER_HOST, server_port)
    
            args = server_args(_SERVER_HOST, server_port)
            print('Starting {}...'.format(server_args.__doc__))
            print(' '.join(args))
            try:
                server = subprocess.Popen(args, cwd=_HERE)
            except FileNotFoundError:
                pytest.skip('{} executable is not installed'.format(args[0]))
    
            # NOTE(vytas): give the app server some time to start.
            start_time = time.time()
            while time.time() - start_time < _STARTUP_TIMEOUT:
                try:
                    requests.get(base_url + '/hello', timeout=0.2)
                except (requests.exceptions.Timeout, requests.exceptions.ConnectionError):
                    time.sleep(0.2)
                else:
                    break
            else:
                if server.poll() is None:
                    pytest.fail('Server is not responding to requests')
                else:
                    # NOTE(kgriffs): The server did not start up; probably due to
                    #   the port being in use. We could check the output but
                    #   capsys fixture may not have buffered the error output
                    #   yet, so we just retry.
                    continue
    
            yield base_url
            break
    
        else:
>           pytest.fail('Could not start server')
E           Failed: Could not start server

tests/test_wsgi_servers.py:175: Failed
______ ERROR at setup of TestWSGIServer.test_post_multipart_form[uvicorn] ______

server_args = <function _uvicorn_args at 0x7f0268bb4040>

    @pytest.fixture
    def server_url(server_args):
        if sys.platform.startswith('win'):
            pytest.skip('WSGI server tests are currently unsupported on Windows')
    
        for attempt in range(3):
            server_port = testing.get_unused_port()
            base_url = 'http://{}:{}'.format(_SERVER_HOST, server_port)
    
            args = server_args(_SERVER_HOST, server_port)
            print('Starting {}...'.format(server_args.__doc__))
            print(' '.join(args))
            try:
                server = subprocess.Popen(args, cwd=_HERE)
            except FileNotFoundError:
                pytest.skip('{} executable is not installed'.format(args[0]))
    
            # NOTE(vytas): give the app server some time to start.
            start_time = time.time()
            while time.time() - start_time < _STARTUP_TIMEOUT:
                try:
                    requests.get(base_url + '/hello', timeout=0.2)
                except (requests.exceptions.Timeout, requests.exceptions.ConnectionError):
                    time.sleep(0.2)
                else:
                    break
            else:
                if server.poll() is None:
                    pytest.fail('Server is not responding to requests')
                else:
                    # NOTE(kgriffs): The server did not start up; probably due to
                    #   the port being in use. We could check the output but
                    #   capsys fixture may not have buffered the error output
                    #   yet, so we just retry.
                    continue
    
            yield base_url
            break
    
        else:
>           pytest.fail('Could not start server')
E           Failed: Could not start server

tests/test_wsgi_servers.py:175: Failed
__________ ERROR at setup of TestWSGIServer.test_static_file[uvicorn] __________

server_args = <function _uvicorn_args at 0x7f0268bb4040>

    @pytest.fixture
    def server_url(server_args):
        if sys.platform.startswith('win'):
            pytest.skip('WSGI server tests are currently unsupported on Windows')
    
        for attempt in range(3):
            server_port = testing.get_unused_port()
            base_url = 'http://{}:{}'.format(_SERVER_HOST, server_port)
    
            args = server_args(_SERVER_HOST, server_port)
            print('Starting {}...'.format(server_args.__doc__))
            print(' '.join(args))
            try:
                server = subprocess.Popen(args, cwd=_HERE)
            except FileNotFoundError:
                pytest.skip('{} executable is not installed'.format(args[0]))
    
            # NOTE(vytas): give the app server some time to start.
            start_time = time.time()
            while time.time() - start_time < _STARTUP_TIMEOUT:
                try:
                    requests.get(base_url + '/hello', timeout=0.2)
                except (requests.exceptions.Timeout, requests.exceptions.ConnectionError):
                    time.sleep(0.2)
                else:
                    break
            else:
                if server.poll() is None:
                    pytest.fail('Server is not responding to requests')
                else:
                    # NOTE(kgriffs): The server did not start up; probably due to
                    #   the port being in use. We could check the output but
                    #   capsys fixture may not have buffered the error output
                    #   yet, so we just retry.
                    continue
    
            yield base_url
            break
    
        else:
>           pytest.fail('Could not start server')
E           Failed: Could not start server

tests/test_wsgi_servers.py:175: Failed
_____ ERROR at setup of TestWSGIServer.test_post_multipart_form[gunicorn] ______

server_args = <function _gunicorn_args at 0x7f0268b47eb0>

    @pytest.fixture
    def server_url(server_args):
        if sys.platform.startswith('win'):
            pytest.skip('WSGI server tests are currently unsupported on Windows')
    
        for attempt in range(3):
            server_port = testing.get_unused_port()
            base_url = 'http://{}:{}'.format(_SERVER_HOST, server_port)
    
            args = server_args(_SERVER_HOST, server_port)
            print('Starting {}...'.format(server_args.__doc__))
            print(' '.join(args))
            try:
                server = subprocess.Popen(args, cwd=_HERE)
            except FileNotFoundError:
                pytest.skip('{} executable is not installed'.format(args[0]))
    
            # NOTE(vytas): give the app server some time to start.
            start_time = time.time()
            while time.time() - start_time < _STARTUP_TIMEOUT:
                try:
                    requests.get(base_url + '/hello', timeout=0.2)
                except (requests.exceptions.Timeout, requests.exceptions.ConnectionError):
                    time.sleep(0.2)
                else:
                    break
            else:
                if server.poll() is None:
                    pytest.fail('Server is not responding to requests')
                else:
                    # NOTE(kgriffs): The server did not start up; probably due to
                    #   the port being in use. We could check the output but
                    #   capsys fixture may not have buffered the error output
                    #   yet, so we just retry.
                    continue
    
            yield base_url
            break
    
        else:
>           pytest.fail('Could not start server')
E           Failed: Could not start server

tests/test_wsgi_servers.py:175: Failed
_______ ERROR at setup of TestASGIServer.test_head_405[_uvicorn_factory] _______

request = <SubRequest 'server_base_url' for <Function test_head_405[_uvicorn_factory]>>

    @pytest.fixture(params=[_uvicorn_factory, _daphne_factory, _hypercorn_factory])
    def server_base_url(request):
        process_factory = request.param
        _can_run(process_factory)
    
        for i in range(3):
            server_port = testing.get_unused_port()
            base_url = 'http://{}:{}/'.format(_SERVER_HOST, server_port)
    
            with _run_server_isolated(process_factory, _SERVER_HOST, server_port) as server:
                # NOTE(kgriffs): Let the server start up. Give up after 5 seconds.
                start_ts = time.time()
                while (time.time() - start_ts) < 5:
                    try:
                        requests.get(base_url, timeout=0.2)
                    except (
                        requests.exceptions.Timeout,
                        requests.exceptions.ConnectionError,
                    ):
                        time.sleep(0.2)
                    else:
                        break
                else:
                    if server.poll() is None:
                        pytest.fail('Server is not responding to requests')
                    else:
                        # NOTE(kgriffs): The server did not start up; probably due to
                        #   the port being in use. We could check the output but
                        #   capsys fixture may not have buffered the error output
                        #   yet, so we just retry.
                        continue
    
                yield base_url
    
            assert server.returncode == 0
    
            break
    
        else:
>           pytest.fail('Could not start server')
E           Failed: Could not start server

tests/asgi/test_asgi_servers.py:628: Failed
_ ERROR at setup of TestASGIServer.test_sse_client_disconnects_early[_uvicorn_factory] _

request = <SubRequest 'server_base_url' for <Function test_sse_client_disconnects_early[_uvicorn_factory]>>

    @pytest.fixture(params=[_uvicorn_factory, _daphne_factory, _hypercorn_factory])
    def server_base_url(request):
        process_factory = request.param
        _can_run(process_factory)
    
        for i in range(3):
            server_port = testing.get_unused_port()
            base_url = 'http://{}:{}/'.format(_SERVER_HOST, server_port)
    
            with _run_server_isolated(process_factory, _SERVER_HOST, server_port) as server:
                # NOTE(kgriffs): Let the server start up. Give up after 5 seconds.
                start_ts = time.time()
                while (time.time() - start_ts) < 5:
                    try:
                        requests.get(base_url, timeout=0.2)
                    except (
                        requests.exceptions.Timeout,
                        requests.exceptions.ConnectionError,
                    ):
                        time.sleep(0.2)
                    else:
                        break
                else:
                    if server.poll() is None:
                        pytest.fail('Server is not responding to requests')
                    else:
                        # NOTE(kgriffs): The server did not start up; probably due to
                        #   the port being in use. We could check the output but
                        #   capsys fixture may not have buffered the error output
                        #   yet, so we just retry.
                        continue
    
                yield base_url
    
            assert server.returncode == 0
    
            break
    
        else:
>           pytest.fail('Could not start server')
E           Failed: Could not start server

tests/asgi/test_asgi_servers.py:628: Failed
_ ERROR at setup of TestASGIServer.test_post_invalid_content_length[_uvicorn_factory] _

request = <SubRequest 'server_base_url' for <Function test_post_invalid_content_length[_uvicorn_factory]>>

    @pytest.fixture(params=[_uvicorn_factory, _daphne_factory, _hypercorn_factory])
    def server_base_url(request):
        process_factory = request.param
        _can_run(process_factory)
    
        for i in range(3):
            server_port = testing.get_unused_port()
            base_url = 'http://{}:{}/'.format(_SERVER_HOST, server_port)
    
            with _run_server_isolated(process_factory, _SERVER_HOST, server_port) as server:
                # NOTE(kgriffs): Let the server start up. Give up after 5 seconds.
                start_ts = time.time()
                while (time.time() - start_ts) < 5:
                    try:
                        requests.get(base_url, timeout=0.2)
                    except (
                        requests.exceptions.Timeout,
                        requests.exceptions.ConnectionError,
                    ):
                        time.sleep(0.2)
                    else:
                        break
                else:
                    if server.poll() is None:
                        pytest.fail('Server is not responding to requests')
                    else:
                        # NOTE(kgriffs): The server did not start up; probably due to
                        #   the port being in use. We could check the output but
                        #   capsys fixture may not have buffered the error output
                        #   yet, so we just retry.
                        continue
    
                yield base_url
    
            assert server.returncode == 0
    
            break
    
        else:
>           pytest.fail('Could not start server')
E           Failed: Could not start server

tests/asgi/test_asgi_servers.py:628: Failed
_ ERROR at setup of TestASGIServer.test_post_multipart_form[_uvicorn_factory] __

request = <SubRequest 'server_base_url' for <Function test_post_multipart_form[_uvicorn_factory]>>

    @pytest.fixture(params=[_uvicorn_factory, _daphne_factory, _hypercorn_factory])
    def server_base_url(request):
        process_factory = request.param
        _can_run(process_factory)
    
        for i in range(3):
            server_port = testing.get_unused_port()
            base_url = 'http://{}:{}/'.format(_SERVER_HOST, server_port)
    
            with _run_server_isolated(process_factory, _SERVER_HOST, server_port) as server:
                # NOTE(kgriffs): Let the server start up. Give up after 5 seconds.
                start_ts = time.time()
                while (time.time() - start_ts) < 5:
                    try:
                        requests.get(base_url, timeout=0.2)
                    except (
                        requests.exceptions.Timeout,
                        requests.exceptions.ConnectionError,
                    ):
                        time.sleep(0.2)
                    else:
                        break
                else:
                    if server.poll() is None:
                        pytest.fail('Server is not responding to requests')
                    else:
                        # NOTE(kgriffs): The server did not start up; probably due to
                        #   the port being in use. We could check the output but
                        #   capsys fixture may not have buffered the error output
                        #   yet, so we just retry.
                        continue
    
                yield base_url
    
            assert server.returncode == 0
    
            break
    
        else:
>           pytest.fail('Could not start server')
E           Failed: Could not start server

tests/asgi/test_asgi_servers.py:628: Failed
_ ERROR at setup of TestASGIServer.test_stream_chunked_request[_uvicorn_factory] _

request = <SubRequest 'server_base_url' for <Function test_stream_chunked_request[_uvicorn_factory]>>

    @pytest.fixture(params=[_uvicorn_factory, _daphne_factory, _hypercorn_factory])
    def server_base_url(request):
        process_factory = request.param
        _can_run(process_factory)
    
        for i in range(3):
            server_port = testing.get_unused_port()
            base_url = 'http://{}:{}/'.format(_SERVER_HOST, server_port)
    
            with _run_server_isolated(process_factory, _SERVER_HOST, server_port) as server:
                # NOTE(kgriffs): Let the server start up. Give up after 5 seconds.
                start_ts = time.time()
                while (time.time() - start_ts) < 5:
                    try:
                        requests.get(base_url, timeout=0.2)
                    except (
                        requests.exceptions.Timeout,
                        requests.exceptions.ConnectionError,
                    ):
                        time.sleep(0.2)
                    else:
                        break
                else:
                    if server.poll() is None:
                        pytest.fail('Server is not responding to requests')
                    else:
                        # NOTE(kgriffs): The server did not start up; probably due to
                        #   the port being in use. We could check the output but
                        #   capsys fixture may not have buffered the error output
                        #   yet, so we just retry.
                        continue
    
                yield base_url
    
            assert server.returncode == 0
    
            break
    
        else:
>           pytest.fail('Could not start server')
E           Failed: Could not start server

tests/asgi/test_asgi_servers.py:628: Failed
_________ ERROR at setup of TestASGIServer.test_get[_uvicorn_factory] __________

request = <SubRequest 'server_base_url' for <Function test_get[_uvicorn_factory]>>

    @pytest.fixture(params=[_uvicorn_factory, _daphne_factory, _hypercorn_factory])
    def server_base_url(request):
        process_factory = request.param
        _can_run(process_factory)
    
        for i in range(3):
            server_port = testing.get_unused_port()
            base_url = 'http://{}:{}/'.format(_SERVER_HOST, server_port)
    
            with _run_server_isolated(process_factory, _SERVER_HOST, server_port) as server:
                # NOTE(kgriffs): Let the server start up. Give up after 5 seconds.
                start_ts = time.time()
                while (time.time() - start_ts) < 5:
                    try:
                        requests.get(base_url, timeout=0.2)
                    except (
                        requests.exceptions.Timeout,
                        requests.exceptions.ConnectionError,
                    ):
                        time.sleep(0.2)
                    else:
                        break
                else:
                    if server.poll() is None:
                        pytest.fail('Server is not responding to requests')
                    else:
                        # NOTE(kgriffs): The server did not start up; probably due to
                        #   the port being in use. We could check the output but
                        #   capsys fixture may not have buffered the error output
                        #   yet, so we just retry.
                        continue
    
                yield base_url
    
            assert server.returncode == 0
    
            break
    
        else:
>           pytest.fail('Could not start server')
E           Failed: Could not start server

tests/asgi/test_asgi_servers.py:628: Failed
____ ERROR at setup of TestASGIServer.test_post_multiple[_uvicorn_factory] _____

request = <SubRequest 'server_base_url' for <Function test_post_multiple[_uvicorn_factory]>>

    @pytest.fixture(params=[_uvicorn_factory, _daphne_factory, _hypercorn_factory])
    def server_base_url(request):
        process_factory = request.param
        _can_run(process_factory)
    
        for i in range(3):
            server_port = testing.get_unused_port()
            base_url = 'http://{}:{}/'.format(_SERVER_HOST, server_port)
    
            with _run_server_isolated(process_factory, _SERVER_HOST, server_port) as server:
                # NOTE(kgriffs): Let the server start up. Give up after 5 seconds.
                start_ts = time.time()
                while (time.time() - start_ts) < 5:
                    try:
                        requests.get(base_url, timeout=0.2)
                    except (
                        requests.exceptions.Timeout,
                        requests.exceptions.ConnectionError,
                    ):
                        time.sleep(0.2)
                    else:
                        break
                else:
                    if server.poll() is None:
                        pytest.fail('Server is not responding to requests')
                    else:
                        # NOTE(kgriffs): The server did not start up; probably due to
                        #   the port being in use. We could check the output but
                        #   capsys fixture may not have buffered the error output
                        #   yet, so we just retry.
                        continue
    
                yield base_url
    
            assert server.returncode == 0
    
            break
    
        else:
>           pytest.fail('Could not start server')
E           Failed: Could not start server

tests/asgi/test_asgi_servers.py:628: Failed
_ ERROR at setup of TestASGIServer.test_post_read_bounded_stream[_uvicorn_factory] _

request = <SubRequest 'server_base_url' for <Function test_post_read_bounded_stream[_uvicorn_factory]>>

    @pytest.fixture(params=[_uvicorn_factory, _daphne_factory, _hypercorn_factory])
    def server_base_url(request):
        process_factory = request.param
        _can_run(process_factory)
    
        for i in range(3):
            server_port = testing.get_unused_port()
            base_url = 'http://{}:{}/'.format(_SERVER_HOST, server_port)
    
            with _run_server_isolated(process_factory, _SERVER_HOST, server_port) as server:
                # NOTE(kgriffs): Let the server start up. Give up after 5 seconds.
                start_ts = time.time()
                while (time.time() - start_ts) < 5:
                    try:
                        requests.get(base_url, timeout=0.2)
                    except (
                        requests.exceptions.Timeout,
                        requests.exceptions.ConnectionError,
                    ):
                        time.sleep(0.2)
                    else:
                        break
                else:
                    if server.poll() is None:
                        pytest.fail('Server is not responding to requests')
                    else:
                        # NOTE(kgriffs): The server did not start up; probably due to
                        #   the port being in use. We could check the output but
                        #   capsys fixture may not have buffered the error output
                        #   yet, so we just retry.
                        continue
    
                yield base_url
    
            assert server.returncode == 0
    
            break
    
        else:
>           pytest.fail('Could not start server')
E           Failed: Could not start server

tests/asgi/test_asgi_servers.py:628: Failed
_ ERROR at setup of TestASGIServer.test_post_read_bounded_stream_no_body[_uvicorn_factory] _

request = <SubRequest 'server_base_url' for <Function test_post_read_bounded_stream_no_body[_uvicorn_factory]>>

    @pytest.fixture(params=[_uvicorn_factory, _daphne_factory, _hypercorn_factory])
    def server_base_url(request):
        process_factory = request.param
        _can_run(process_factory)
    
        for i in range(3):
            server_port = testing.get_unused_port()
            base_url = 'http://{}:{}/'.format(_SERVER_HOST, server_port)
    
            with _run_server_isolated(process_factory, _SERVER_HOST, server_port) as server:
                # NOTE(kgriffs): Let the server start up. Give up after 5 seconds.
                start_ts = time.time()
                while (time.time() - start_ts) < 5:
                    try:
                        requests.get(base_url, timeout=0.2)
                    except (
                        requests.exceptions.Timeout,
                        requests.exceptions.ConnectionError,
                    ):
                        time.sleep(0.2)
                    else:
                        break
                else:
                    if server.poll() is None:
                        pytest.fail('Server is not responding to requests')
                    else:
                        # NOTE(kgriffs): The server did not start up; probably due to
                        #   the port being in use. We could check the output but
                        #   capsys fixture may not have buffered the error output
                        #   yet, so we just retry.
                        continue
    
                yield base_url
    
            assert server.returncode == 0
    
            break
    
        else:
>           pytest.fail('Could not start server')
E           Failed: Could not start server

tests/asgi/test_asgi_servers.py:628: Failed
_________ ERROR at setup of TestASGIServer.test_put[_uvicorn_factory] __________

request = <SubRequest 'server_base_url' for <Function test_put[_uvicorn_factory]>>

    @pytest.fixture(params=[_uvicorn_factory, _daphne_factory, _hypercorn_factory])
    def server_base_url(request):
        process_factory = request.param
        _can_run(process_factory)
    
        for i in range(3):
            server_port = testing.get_unused_port()
            base_url = 'http://{}:{}/'.format(_SERVER_HOST, server_port)
    
            with _run_server_isolated(process_factory, _SERVER_HOST, server_port) as server:
                # NOTE(kgriffs): Let the server start up. Give up after 5 seconds.
                start_ts = time.time()
                while (time.time() - start_ts) < 5:
                    try:
                        requests.get(base_url, timeout=0.2)
                    except (
                        requests.exceptions.Timeout,
                        requests.exceptions.ConnectionError,
                    ):
                        time.sleep(0.2)
                    else:
                        break
                else:
                    if server.poll() is None:
                        pytest.fail('Server is not responding to requests')
                    else:
                        # NOTE(kgriffs): The server did not start up; probably due to
                        #   the port being in use. We could check the output but
                        #   capsys fixture may not have buffered the error output
                        #   yet, so we just retry.
                        continue
    
                yield base_url
    
            assert server.returncode == 0
    
            break
    
        else:
>           pytest.fail('Could not start server')
E           Failed: Could not start server

tests/asgi/test_asgi_servers.py:628: Failed
_________ ERROR at setup of TestASGIServer.test_sse[_uvicorn_factory] __________

request = <SubRequest 'server_base_url' for <Function test_sse[_uvicorn_factory]>>

    @pytest.fixture(params=[_uvicorn_factory, _daphne_factory, _hypercorn_factory])
    def server_base_url(request):
        process_factory = request.param
        _can_run(process_factory)
    
        for i in range(3):
            server_port = testing.get_unused_port()
            base_url = 'http://{}:{}/'.format(_SERVER_HOST, server_port)
    
            with _run_server_isolated(process_factory, _SERVER_HOST, server_port) as server:
                # NOTE(kgriffs): Let the server start up. Give up after 5 seconds.
                start_ts = time.time()
                while (time.time() - start_ts) < 5:
                    try:
                        requests.get(base_url, timeout=0.2)
                    except (
                        requests.exceptions.Timeout,
                        requests.exceptions.ConnectionError,
                    ):
                        time.sleep(0.2)
                    else:
                        break
                else:
                    if server.poll() is None:
                        pytest.fail('Server is not responding to requests')
                    else:
                        # NOTE(kgriffs): The server did not start up; probably due to
                        #   the port being in use. We could check the output but
                        #   capsys fixture may not have buffered the error output
                        #   yet, so we just retry.
                        continue
    
                yield base_url
    
            assert server.returncode == 0
    
            break
    
        else:
>           pytest.fail('Could not start server')
E           Failed: Could not start server

tests/asgi/test_asgi_servers.py:628: Failed
_ ERROR at setup of TestASGIServer.test_post_read_bounded_stream_large[_uvicorn_factory] _

request = <SubRequest 'server_base_url' for <Function test_post_read_bounded_stream_large[_uvicorn_factory]>>

    @pytest.fixture(params=[_uvicorn_factory, _daphne_factory, _hypercorn_factory])
    def server_base_url(request):
        process_factory = request.param
        _can_run(process_factory)
    
        for i in range(3):
            server_port = testing.get_unused_port()
            base_url = 'http://{}:{}/'.format(_SERVER_HOST, server_port)
    
            with _run_server_isolated(process_factory, _SERVER_HOST, server_port) as server:
                # NOTE(kgriffs): Let the server start up. Give up after 5 seconds.
                start_ts = time.time()
                while (time.time() - start_ts) < 5:
                    try:
                        requests.get(base_url, timeout=0.2)
                    except (
                        requests.exceptions.Timeout,
                        requests.exceptions.ConnectionError,
                    ):
                        time.sleep(0.2)
                    else:
                        break
                else:
                    if server.poll() is None:
                        pytest.fail('Server is not responding to requests')
                    else:
                        # NOTE(kgriffs): The server did not start up; probably due to
                        #   the port being in use. We could check the output but
                        #   capsys fixture may not have buffered the error output
                        #   yet, so we just retry.
                        continue
    
                yield base_url
    
            assert server.returncode == 0
    
            break
    
        else:
>           pytest.fail('Could not start server')
E           Failed: Could not start server

tests/asgi/test_asgi_servers.py:628: Failed
__ ERROR at setup of TestWebSocket.test_rejected[_uvicorn_factory-None-True] ___

request = <SubRequest 'server_base_url' for <Function test_rejected[_uvicorn_factory-None-True]>>

    @pytest.fixture(params=[_uvicorn_factory, _daphne_factory, _hypercorn_factory])
    def server_base_url(request):
        process_factory = request.param
        _can_run(process_factory)
    
        for i in range(3):
            server_port = testing.get_unused_port()
            base_url = 'http://{}:{}/'.format(_SERVER_HOST, server_port)
    
            with _run_server_isolated(process_factory, _SERVER_HOST, server_port) as server:
                # NOTE(kgriffs): Let the server start up. Give up after 5 seconds.
                start_ts = time.time()
                while (time.time() - start_ts) < 5:
                    try:
                        requests.get(base_url, timeout=0.2)
                    except (
                        requests.exceptions.Timeout,
                        requests.exceptions.ConnectionError,
                    ):
                        time.sleep(0.2)
                    else:
                        break
                else:
                    if server.poll() is None:
                        pytest.fail('Server is not responding to requests')
                    else:
                        # NOTE(kgriffs): The server did not start up; probably due to
                        #   the port being in use. We could check the output but
                        #   capsys fixture may not have buffered the error output
                        #   yet, so we just retry.
                        continue
    
                yield base_url
    
            assert server.returncode == 0
    
            break
    
        else:
>           pytest.fail('Could not start server')
E           Failed: Could not start server

tests/asgi/test_asgi_servers.py:628: Failed
_ ERROR at setup of TestWebSocket.test_select_subprotocol_known[_uvicorn_factory-wamp-wamp] _

request = <SubRequest 'server_base_url' for <Function test_select_subprotocol_known[_uvicorn_factory-wamp-wamp]>>

    @pytest.fixture(params=[_uvicorn_factory, _daphne_factory, _hypercorn_factory])
    def server_base_url(request):
        process_factory = request.param
        _can_run(process_factory)
    
        for i in range(3):
            server_port = testing.get_unused_port()
            base_url = 'http://{}:{}/'.format(_SERVER_HOST, server_port)
    
            with _run_server_isolated(process_factory, _SERVER_HOST, server_port) as server:
                # NOTE(kgriffs): Let the server start up. Give up after 5 seconds.
                start_ts = time.time()
                while (time.time() - start_ts) < 5:
                    try:
                        requests.get(base_url, timeout=0.2)
                    except (
                        requests.exceptions.Timeout,
                        requests.exceptions.ConnectionError,
                    ):
                        time.sleep(0.2)
                    else:
                        break
                else:
                    if server.poll() is None:
                        pytest.fail('Server is not responding to requests')
                    else:
                        # NOTE(kgriffs): The server did not start up; probably due to
                        #   the port being in use. We could check the output but
                        #   capsys fixture may not have buffered the error output
                        #   yet, so we just retry.
                        continue
    
                yield base_url
    
            assert server.returncode == 0
    
            break
    
        else:
>           pytest.fail('Could not start server')
E           Failed: Could not start server

tests/asgi/test_asgi_servers.py:628: Failed
___ ERROR at setup of TestWebSocket.test_hello[_uvicorn_factory-None-False] ____

request = <SubRequest 'server_base_url' for <Function test_hello[_uvicorn_factory-None-False]>>

    @pytest.fixture(params=[_uvicorn_factory, _daphne_factory, _hypercorn_factory])
    def server_base_url(request):
        process_factory = request.param
        _can_run(process_factory)
    
        for i in range(3):
            server_port = testing.get_unused_port()
            base_url = 'http://{}:{}/'.format(_SERVER_HOST, server_port)
    
            with _run_server_isolated(process_factory, _SERVER_HOST, server_port) as server:
                # NOTE(kgriffs): Let the server start up. Give up after 5 seconds.
                start_ts = time.time()
                while (time.time() - start_ts) < 5:
                    try:
                        requests.get(base_url, timeout=0.2)
                    except (
                        requests.exceptions.Timeout,
                        requests.exceptions.ConnectionError,
                    ):
                        time.sleep(0.2)
                    else:
                        break
                else:
                    if server.poll() is None:
                        pytest.fail('Server is not responding to requests')
                    else:
                        # NOTE(kgriffs): The server did not start up; probably due to
                        #   the port being in use. We could check the output but
                        #   capsys fixture may not have buffered the error output
                        #   yet, so we just retry.
                        continue
    
                yield base_url
    
            assert server.returncode == 0
    
            break
    
        else:
>           pytest.fail('Could not start server')
E           Failed: Could not start server

tests/asgi/test_asgi_servers.py:628: Failed
_ ERROR at setup of TestWebSocket.test_type_mismatch[_uvicorn_factory-text-recv] _

request = <SubRequest 'server_base_url' for <Function test_type_mismatch[_uvicorn_factory-text-recv]>>

    @pytest.fixture(params=[_uvicorn_factory, _daphne_factory, _hypercorn_factory])
    def server_base_url(request):
        process_factory = request.param
        _can_run(process_factory)
    
        for i in range(3):
            server_port = testing.get_unused_port()
            base_url = 'http://{}:{}/'.format(_SERVER_HOST, server_port)
    
            with _run_server_isolated(process_factory, _SERVER_HOST, server_port) as server:
                # NOTE(kgriffs): Let the server start up. Give up after 5 seconds.
                start_ts = time.time()
                while (time.time() - start_ts) < 5:
                    try:
                        requests.get(base_url, timeout=0.2)
                    except (
                        requests.exceptions.Timeout,
                        requests.exceptions.ConnectionError,
                    ):
                        time.sleep(0.2)
                    else:
                        break
                else:
                    if server.poll() is None:
                        pytest.fail('Server is not responding to requests')
                    else:
                        # NOTE(kgriffs): The server did not start up; probably due to
                        #   the port being in use. We could check the output but
                        #   capsys fixture may not have buffered the error output
                        #   yet, so we just retry.
                        continue
    
                yield base_url
    
            assert server.returncode == 0
    
            break
    
        else:
>           pytest.fail('Could not start server')
E           Failed: Could not start server

tests/asgi/test_asgi_servers.py:628: Failed
_ ERROR at setup of TestWebSocket.test_type_mismatch[_uvicorn_factory-text-send] _

request = <SubRequest 'server_base_url' for <Function test_type_mismatch[_uvicorn_factory-text-send]>>

    @pytest.fixture(params=[_uvicorn_factory, _daphne_factory, _hypercorn_factory])
    def server_base_url(request):
        process_factory = request.param
        _can_run(process_factory)
    
        for i in range(3):
            server_port = testing.get_unused_port()
            base_url = 'http://{}:{}/'.format(_SERVER_HOST, server_port)
    
            with _run_server_isolated(process_factory, _SERVER_HOST, server_port) as server:
                # NOTE(kgriffs): Let the server start up. Give up after 5 seconds.
                start_ts = time.time()
                while (time.time() - start_ts) < 5:
                    try:
                        requests.get(base_url, timeout=0.2)
                    except (
                        requests.exceptions.Timeout,
                        requests.exceptions.ConnectionError,
                    ):
                        time.sleep(0.2)
                    else:
                        break
                else:
                    if server.poll() is None:
                        pytest.fail('Server is not responding to requests')
                    else:
                        # NOTE(kgriffs): The server did not start up; probably due to
                        #   the port being in use. We could check the output but
                        #   capsys fixture may not have buffered the error output
                        #   yet, so we just retry.
                        continue
    
                yield base_url
    
            assert server.returncode == 0
    
            break
    
        else:
>           pytest.fail('Could not start server')
E           Failed: Could not start server

tests/asgi/test_asgi_servers.py:628: Failed
____ ERROR at setup of TestWebSocket.test_hello[_uvicorn_factory-4321-True] ____

request = <SubRequest 'server_base_url' for <Function test_hello[_uvicorn_factory-4321-True]>>

    @pytest.fixture(params=[_uvicorn_factory, _daphne_factory, _hypercorn_factory])
    def server_base_url(request):
        process_factory = request.param
        _can_run(process_factory)
    
        for i in range(3):
            server_port = testing.get_unused_port()
            base_url = 'http://{}:{}/'.format(_SERVER_HOST, server_port)
    
            with _run_server_isolated(process_factory, _SERVER_HOST, server_port) as server:
                # NOTE(kgriffs): Let the server start up. Give up after 5 seconds.
                start_ts = time.time()
                while (time.time() - start_ts) < 5:
                    try:
                        requests.get(base_url, timeout=0.2)
                    except (
                        requests.exceptions.Timeout,
                        requests.exceptions.ConnectionError,
                    ):
                        time.sleep(0.2)
                    else:
                        break
                else:
                    if server.poll() is None:
                        pytest.fail('Server is not responding to requests')
                    else:
                        # NOTE(kgriffs): The server did not start up; probably due to
                        #   the port being in use. We could check the output but
                        #   capsys fixture may not have buffered the error output
                        #   yet, so we just retry.
                        continue
    
                yield base_url
    
            assert server.returncode == 0
    
            break
    
        else:
>           pytest.fail('Could not start server')
E           Failed: Could not start server

tests/asgi/test_asgi_servers.py:628: Failed
__ ERROR at setup of TestWebSocket.test_rejected[_uvicorn_factory-None-False] __

request = <SubRequest 'server_base_url' for <Function test_rejected[_uvicorn_factory-None-False]>>

    @pytest.fixture(params=[_uvicorn_factory, _daphne_factory, _hypercorn_factory])
    def server_base_url(request):
        process_factory = request.param
        _can_run(process_factory)
    
        for i in range(3):
            server_port = testing.get_unused_port()
            base_url = 'http://{}:{}/'.format(_SERVER_HOST, server_port)
    
            with _run_server_isolated(process_factory, _SERVER_HOST, server_port) as server:
                # NOTE(kgriffs): Let the server start up. Give up after 5 seconds.
                start_ts = time.time()
                while (time.time() - start_ts) < 5:
                    try:
                        requests.get(base_url, timeout=0.2)
                    except (
                        requests.exceptions.Timeout,
                        requests.exceptions.ConnectionError,
                    ):
                        time.sleep(0.2)
                    else:
                        break
                else:
                    if server.poll() is None:
                        pytest.fail('Server is not responding to requests')
                    else:
                        # NOTE(kgriffs): The server did not start up; probably due to
                        #   the port being in use. We could check the output but
                        #   capsys fixture may not have buffered the error output
                        #   yet, so we just retry.
                        continue
    
                yield base_url
    
            assert server.returncode == 0
    
            break
    
        else:
>           pytest.fail('Could not start server')
E           Failed: Could not start server

tests/asgi/test_asgi_servers.py:628: Failed
_ ERROR at setup of TestWebSocket.test_close_code_on_unhandled_http_error[_uvicorn_factory] _

request = <SubRequest 'server_base_url' for <Function test_close_code_on_unhandled_http_error[_uvicorn_factory]>>

    @pytest.fixture(params=[_uvicorn_factory, _daphne_factory, _hypercorn_factory])
    def server_base_url(request):
        process_factory = request.param
        _can_run(process_factory)
    
        for i in range(3):
            server_port = testing.get_unused_port()
            base_url = 'http://{}:{}/'.format(_SERVER_HOST, server_port)
    
            with _run_server_isolated(process_factory, _SERVER_HOST, server_port) as server:
                # NOTE(kgriffs): Let the server start up. Give up after 5 seconds.
                start_ts = time.time()
                while (time.time() - start_ts) < 5:
                    try:
                        requests.get(base_url, timeout=0.2)
                    except (
                        requests.exceptions.Timeout,
                        requests.exceptions.ConnectionError,
                    ):
                        time.sleep(0.2)
                    else:
                        break
                else:
                    if server.poll() is None:
                        pytest.fail('Server is not responding to requests')
                    else:
                        # NOTE(kgriffs): The server did not start up; probably due to
                        #   the port being in use. We could check the output but
                        #   capsys fixture may not have buffered the error output
                        #   yet, so we just retry.
                        continue
    
                yield base_url
    
            assert server.returncode == 0
    
            break
    
        else:
>           pytest.fail('Could not start server')
E           Failed: Could not start server

tests/asgi/test_asgi_servers.py:628: Failed
_ ERROR at setup of TestWebSocket.test_close_code_on_unhandled_error[_uvicorn_factory] _

request = <SubRequest 'server_base_url' for <Function test_close_code_on_unhandled_error[_uvicorn_factory]>>

    @pytest.fixture(params=[_uvicorn_factory, _daphne_factory, _hypercorn_factory])
    def server_base_url(request):
        process_factory = request.param
        _can_run(process_factory)
    
        for i in range(3):
            server_port = testing.get_unused_port()
            base_url = 'http://{}:{}/'.format(_SERVER_HOST, server_port)
    
            with _run_server_isolated(process_factory, _SERVER_HOST, server_port) as server:
                # NOTE(kgriffs): Let the server start up. Give up after 5 seconds.
                start_ts = time.time()
                while (time.time() - start_ts) < 5:
                    try:
                        requests.get(base_url, timeout=0.2)
                    except (
                        requests.exceptions.Timeout,
                        requests.exceptions.ConnectionError,
                    ):
                        time.sleep(0.2)
                    else:
                        break
                else:
                    if server.poll() is None:
                        pytest.fail('Server is not responding to requests')
                    else:
                        # NOTE(kgriffs): The server did not start up; probably due to
                        #   the port being in use. We could check the output but
                        #   capsys fixture may not have buffered the error output
                        #   yet, so we just retry.
                        continue
    
                yield base_url
    
            assert server.returncode == 0
    
            break
    
        else:
>           pytest.fail('Could not start server')
E           Failed: Could not start server

tests/asgi/test_asgi_servers.py:628: Failed
__ ERROR at setup of TestWebSocket.test_rejected[_uvicorn_factory-4040-True] ___

request = <SubRequest 'server_base_url' for <Function test_rejected[_uvicorn_factory-4040-True]>>

    @pytest.fixture(params=[_uvicorn_factory, _daphne_factory, _hypercorn_factory])
    def server_base_url(request):
        process_factory = request.param
        _can_run(process_factory)
    
        for i in range(3):
            server_port = testing.get_unused_port()
            base_url = 'http://{}:{}/'.format(_SERVER_HOST, server_port)
    
            with _run_server_isolated(process_factory, _SERVER_HOST, server_port) as server:
                # NOTE(kgriffs): Let the server start up. Give up after 5 seconds.
                start_ts = time.time()
                while (time.time() - start_ts) < 5:
                    try:
                        requests.get(base_url, timeout=0.2)
                    except (
                        requests.exceptions.Timeout,
                        requests.exceptions.ConnectionError,
                    ):
                        time.sleep(0.2)
                    else:
                        break
                else:
                    if server.poll() is None:
                        pytest.fail('Server is not responding to requests')
                    else:
                        # NOTE(kgriffs): The server did not start up; probably due to
                        #   the port being in use. We could check the output but
                        #   capsys fixture may not have buffered the error output
                        #   yet, so we just retry.
                        continue
    
                yield base_url
    
            assert server.returncode == 0
    
            break
    
        else:
>           pytest.fail('Could not start server')
E           Failed: Could not start server

tests/asgi/test_asgi_servers.py:628: Failed
____ ERROR at setup of TestWebSocket.test_hello[_uvicorn_factory-None-True] ____

request = <SubRequest 'server_base_url' for <Function test_hello[_uvicorn_factory-None-True]>>

    @pytest.fixture(params=[_uvicorn_factory, _daphne_factory, _hypercorn_factory])
    def server_base_url(request):
        process_factory = request.param
        _can_run(process_factory)
    
        for i in range(3):
            server_port = testing.get_unused_port()
            base_url = 'http://{}:{}/'.format(_SERVER_HOST, server_port)
    
            with _run_server_isolated(process_factory, _SERVER_HOST, server_port) as server:
                # NOTE(kgriffs): Let the server start up. Give up after 5 seconds.
                start_ts = time.time()
                while (time.time() - start_ts) < 5:
                    try:
                        requests.get(base_url, timeout=0.2)
                    except (
                        requests.exceptions.Timeout,
                        requests.exceptions.ConnectionError,
                    ):
                        time.sleep(0.2)
                    else:
                        break
                else:
                    if server.poll() is None:
                        pytest.fail('Server is not responding to requests')
                    else:
                        # NOTE(kgriffs): The server did not start up; probably due to
                        #   the port being in use. We could check the output but
                        #   capsys fixture may not have buffered the error output
                        #   yet, so we just retry.
                        continue
    
                yield base_url
    
            assert server.returncode == 0
    
            break
    
        else:
>           pytest.fail('Could not start server')
E           Failed: Could not start server

tests/asgi/test_asgi_servers.py:628: Failed
__ ERROR at setup of TestWebSocket.test_invalid_close_code[_uvicorn_factory] ___

request = <SubRequest 'server_base_url' for <Function test_invalid_close_code[_uvicorn_factory]>>

    @pytest.fixture(params=[_uvicorn_factory, _daphne_factory, _hypercorn_factory])
    def server_base_url(request):
        process_factory = request.param
        _can_run(process_factory)
    
        for i in range(3):
            server_port = testing.get_unused_port()
            base_url = 'http://{}:{}/'.format(_SERVER_HOST, server_port)
    
            with _run_server_isolated(process_factory, _SERVER_HOST, server_port) as server:
                # NOTE(kgriffs): Let the server start up. Give up after 5 seconds.
                start_ts = time.time()
                while (time.time() - start_ts) < 5:
                    try:
                        requests.get(base_url, timeout=0.2)
                    except (
                        requests.exceptions.Timeout,
                        requests.exceptions.ConnectionError,
                    ):
                        time.sleep(0.2)
                    else:
                        break
                else:
                    if server.poll() is None:
                        pytest.fail('Server is not responding to requests')
                    else:
                        # NOTE(kgriffs): The server did not start up; probably due to
                        #   the port being in use. We could check the output but
                        #   capsys fixture may not have buffered the error output
                        #   yet, so we just retry.
                        continue
    
                yield base_url
    
            assert server.returncode == 0
    
            break
    
        else:
>           pytest.fail('Could not start server')
E           Failed: Could not start server

tests/asgi/test_asgi_servers.py:628: Failed
_ ERROR at setup of TestWebSocket.test_select_subprotocol_unknown[_uvicorn_factory] _

request = <SubRequest 'server_base_url' for <Function test_select_subprotocol_unknown[_uvicorn_factory]>>

    @pytest.fixture(params=[_uvicorn_factory, _daphne_factory, _hypercorn_factory])
    def server_base_url(request):
        process_factory = request.param
        _can_run(process_factory)
    
        for i in range(3):
            server_port = testing.get_unused_port()
            base_url = 'http://{}:{}/'.format(_SERVER_HOST, server_port)
    
            with _run_server_isolated(process_factory, _SERVER_HOST, server_port) as server:
                # NOTE(kgriffs): Let the server start up. Give up after 5 seconds.
                start_ts = time.time()
                while (time.time() - start_ts) < 5:
                    try:
                        requests.get(base_url, timeout=0.2)
                    except (
                        requests.exceptions.Timeout,
                        requests.exceptions.ConnectionError,
                    ):
                        time.sleep(0.2)
                    else:
                        break
                else:
                    if server.poll() is None:
                        pytest.fail('Server is not responding to requests')
                    else:
                        # NOTE(kgriffs): The server did not start up; probably due to
                        #   the port being in use. We could check the output but
                        #   capsys fixture may not have buffered the error output
                        #   yet, so we just retry.
                        continue
    
                yield base_url
    
            assert server.returncode == 0
    
            break
    
        else:
>           pytest.fail('Could not start server')
E           Failed: Could not start server

tests/asgi/test_asgi_servers.py:628: Failed
___ ERROR at setup of TestWebSocket.test_hello[_uvicorn_factory-4321-False] ____

request = <SubRequest 'server_base_url' for <Function test_hello[_uvicorn_factory-4321-False]>>

    @pytest.fixture(params=[_uvicorn_factory, _daphne_factory, _hypercorn_factory])
    def server_base_url(request):
        process_factory = request.param
        _can_run(process_factory)
    
        for i in range(3):
            server_port = testing.get_unused_port()
            base_url = 'http://{}:{}/'.format(_SERVER_HOST, server_port)
    
            with _run_server_isolated(process_factory, _SERVER_HOST, server_port) as server:
                # NOTE(kgriffs): Let the server start up. Give up after 5 seconds.
                start_ts = time.time()
                while (time.time() - start_ts) < 5:
                    try:
                        requests.get(base_url, timeout=0.2)
                    except (
                        requests.exceptions.Timeout,
                        requests.exceptions.ConnectionError,
                    ):
                        time.sleep(0.2)
                    else:
                        break
                else:
                    if server.poll() is None:
                        pytest.fail('Server is not responding to requests')
                    else:
                        # NOTE(kgriffs): The server did not start up; probably due to
                        #   the port being in use. We could check the output but
                        #   capsys fixture may not have buffered the error output
                        #   yet, so we just retry.
                        continue
    
                yield base_url
    
            assert server.returncode == 0
    
            break
    
        else:
>           pytest.fail('Could not start server')
E           Failed: Could not start server

tests/asgi/test_asgi_servers.py:628: Failed
__ ERROR at setup of TestWebSocket.test_rejected[_uvicorn_factory-4040-False] __

request = <SubRequest 'server_base_url' for <Function test_rejected[_uvicorn_factory-4040-False]>>

    @pytest.fixture(params=[_uvicorn_factory, _daphne_factory, _hypercorn_factory])
    def server_base_url(request):
        process_factory = request.param
        _can_run(process_factory)
    
        for i in range(3):
            server_port = testing.get_unused_port()
            base_url = 'http://{}:{}/'.format(_SERVER_HOST, server_port)
    
            with _run_server_isolated(process_factory, _SERVER_HOST, server_port) as server:
                # NOTE(kgriffs): Let the server start up. Give up after 5 seconds.
                start_ts = time.time()
                while (time.time() - start_ts) < 5:
                    try:
                        requests.get(base_url, timeout=0.2)
                    except (
                        requests.exceptions.Timeout,
                        requests.exceptions.ConnectionError,
                    ):
                        time.sleep(0.2)
                    else:
                        break
                else:
                    if server.poll() is None:
                        pytest.fail('Server is not responding to requests')
                    else:
                        # NOTE(kgriffs): The server did not start up; probably due to
                        #   the port being in use. We could check the output but
                        #   capsys fixture may not have buffered the error output
                        #   yet, so we just retry.
                        continue
    
                yield base_url
    
            assert server.returncode == 0
    
            break
    
        else:
>           pytest.fail('Could not start server')
E           Failed: Could not start server

tests/asgi/test_asgi_servers.py:628: Failed
_ ERROR at setup of TestWebSocket.test_type_mismatch[_uvicorn_factory-data-recv] _

request = <SubRequest 'server_base_url' for <Function test_type_mismatch[_uvicorn_factory-data-recv]>>

    @pytest.fixture(params=[_uvicorn_factory, _daphne_factory, _hypercorn_factory])
    def server_base_url(request):
        process_factory = request.param
        _can_run(process_factory)
    
        for i in range(3):
            server_port = testing.get_unused_port()
            base_url = 'http://{}:{}/'.format(_SERVER_HOST, server_port)
    
            with _run_server_isolated(process_factory, _SERVER_HOST, server_port) as server:
                # NOTE(kgriffs): Let the server start up. Give up after 5 seconds.
                start_ts = time.time()
                while (time.time() - start_ts) < 5:
                    try:
                        requests.get(base_url, timeout=0.2)
                    except (
                        requests.exceptions.Timeout,
                        requests.exceptions.ConnectionError,
                    ):
                        time.sleep(0.2)
                    else:
                        break
                else:
                    if server.poll() is None:
                        pytest.fail('Server is not responding to requests')
                    else:
                        # NOTE(kgriffs): The server did not start up; probably due to
                        #   the port being in use. We could check the output but
                        #   capsys fixture may not have buffered the error output
                        #   yet, so we just retry.
                        continue
    
                yield base_url
    
            assert server.returncode == 0
    
            break
    
        else:
>           pytest.fail('Could not start server')
E           Failed: Could not start server

tests/asgi/test_asgi_servers.py:628: Failed
_ ERROR at setup of TestWebSocket.test_disconnecting_client_early[_uvicorn_factory] _

request = <SubRequest 'server_base_url' for <Function test_disconnecting_client_early[_uvicorn_factory]>>

    @pytest.fixture(params=[_uvicorn_factory, _daphne_factory, _hypercorn_factory])
    def server_base_url(request):
        process_factory = request.param
        _can_run(process_factory)
    
        for i in range(3):
            server_port = testing.get_unused_port()
            base_url = 'http://{}:{}/'.format(_SERVER_HOST, server_port)
    
            with _run_server_isolated(process_factory, _SERVER_HOST, server_port) as server:
                # NOTE(kgriffs): Let the server start up. Give up after 5 seconds.
                start_ts = time.time()
                while (time.time() - start_ts) < 5:
                    try:
                        requests.get(base_url, timeout=0.2)
                    except (
                        requests.exceptions.Timeout,
                        requests.exceptions.ConnectionError,
                    ):
                        time.sleep(0.2)
                    else:
                        break
                else:
                    if server.poll() is None:
                        pytest.fail('Server is not responding to requests')
                    else:
                        # NOTE(kgriffs): The server did not start up; probably due to
                        #   the port being in use. We could check the output but
                        #   capsys fixture may not have buffered the error output
                        #   yet, so we just retry.
                        continue
    
                yield base_url
    
            assert server.returncode == 0
    
            break
    
        else:
>           pytest.fail('Could not start server')
E           Failed: Could not start server

tests/asgi/test_asgi_servers.py:628: Failed
__ ERROR at setup of TestWebSocket.test_send_before_accept[_uvicorn_factory] ___

request = <SubRequest 'server_base_url' for <Function test_send_before_accept[_uvicorn_factory]>>

    @pytest.fixture(params=[_uvicorn_factory, _daphne_factory, _hypercorn_factory])
    def server_base_url(request):
        process_factory = request.param
        _can_run(process_factory)
    
        for i in range(3):
            server_port = testing.get_unused_port()
            base_url = 'http://{}:{}/'.format(_SERVER_HOST, server_port)
    
            with _run_server_isolated(process_factory, _SERVER_HOST, server_port) as server:
                # NOTE(kgriffs): Let the server start up. Give up after 5 seconds.
                start_ts = time.time()
                while (time.time() - start_ts) < 5:
                    try:
                        requests.get(base_url, timeout=0.2)
                    except (
                        requests.exceptions.Timeout,
                        requests.exceptions.ConnectionError,
                    ):
                        time.sleep(0.2)
                    else:
                        break
                else:
                    if server.poll() is None:
                        pytest.fail('Server is not responding to requests')
                    else:
                        # NOTE(kgriffs): The server did not start up; probably due to
                        #   the port being in use. We could check the output but
                        #   capsys fixture may not have buffered the error output
                        #   yet, so we just retry.
                        continue
    
                yield base_url
    
            assert server.returncode == 0
    
            break
    
        else:
>           pytest.fail('Could not start server')
E           Failed: Could not start server

tests/asgi/test_asgi_servers.py:628: Failed
_ ERROR at setup of TestWebSocket.test_select_subprotocol_known[_uvicorn_factory-*-amqp] _

request = <SubRequest 'server_base_url' for <Function test_select_subprotocol_known[_uvicorn_factory-*-amqp]>>

    @pytest.fixture(params=[_uvicorn_factory, _daphne_factory, _hypercorn_factory])
    def server_base_url(request):
        process_factory = request.param
        _can_run(process_factory)
    
        for i in range(3):
            server_port = testing.get_unused_port()
            base_url = 'http://{}:{}/'.format(_SERVER_HOST, server_port)
    
            with _run_server_isolated(process_factory, _SERVER_HOST, server_port) as server:
                # NOTE(kgriffs): Let the server start up. Give up after 5 seconds.
                start_ts = time.time()
                while (time.time() - start_ts) < 5:
                    try:
                        requests.get(base_url, timeout=0.2)
                    except (
                        requests.exceptions.Timeout,
                        requests.exceptions.ConnectionError,
                    ):
                        time.sleep(0.2)
                    else:
                        break
                else:
                    if server.poll() is None:
                        pytest.fail('Server is not responding to requests')
                    else:
                        # NOTE(kgriffs): The server did not start up; probably due to
                        #   the port being in use. We could check the output but
                        #   capsys fixture may not have buffered the error output
                        #   yet, so we just retry.
                        continue
    
                yield base_url
    
            assert server.returncode == 0
    
            break
    
        else:
>           pytest.fail('Could not start server')
E           Failed: Could not start server

tests/asgi/test_asgi_servers.py:628: Failed
___ ERROR at setup of TestWebSocket.test_missing_responder[_uvicorn_factory] ___

request = <SubRequest 'server_base_url' for <Function test_missing_responder[_uvicorn_factory]>>

    @pytest.fixture(params=[_uvicorn_factory, _daphne_factory, _hypercorn_factory])
    def server_base_url(request):
        process_factory = request.param
        _can_run(process_factory)
    
        for i in range(3):
            server_port = testing.get_unused_port()
            base_url = 'http://{}:{}/'.format(_SERVER_HOST, server_port)
    
            with _run_server_isolated(process_factory, _SERVER_HOST, server_port) as server:
                # NOTE(kgriffs): Let the server start up. Give up after 5 seconds.
                start_ts = time.time()
                while (time.time() - start_ts) < 5:
                    try:
                        requests.get(base_url, timeout=0.2)
                    except (
                        requests.exceptions.Timeout,
                        requests.exceptions.ConnectionError,
                    ):
                        time.sleep(0.2)
                    else:
                        break
                else:
                    if server.poll() is None:
                        pytest.fail('Server is not responding to requests')
                    else:
                        # NOTE(kgriffs): The server did not start up; probably due to
                        #   the port being in use. We could check the output but
                        #   capsys fixture may not have buffered the error output
                        #   yet, so we just retry.
                        continue
    
                yield base_url
    
            assert server.returncode == 0
    
            break
    
        else:
>           pytest.fail('Could not start server')
E           Failed: Could not start server

tests/asgi/test_asgi_servers.py:628: Failed
__ ERROR at setup of TestWebSocket.test_recv_before_accept[_uvicorn_factory] ___

request = <SubRequest 'server_base_url' for <Function test_recv_before_accept[_uvicorn_factory]>>

    @pytest.fixture(params=[_uvicorn_factory, _daphne_factory, _hypercorn_factory])
    def server_base_url(request):
        process_factory = request.param
        _can_run(process_factory)
    
        for i in range(3):
            server_port = testing.get_unused_port()
            base_url = 'http://{}:{}/'.format(_SERVER_HOST, server_port)
    
            with _run_server_isolated(process_factory, _SERVER_HOST, server_port) as server:
                # NOTE(kgriffs): Let the server start up. Give up after 5 seconds.
                start_ts = time.time()
                while (time.time() - start_ts) < 5:
                    try:
                        requests.get(base_url, timeout=0.2)
                    except (
                        requests.exceptions.Timeout,
                        requests.exceptions.ConnectionError,
                    ):
                        time.sleep(0.2)
                    else:
                        break
                else:
                    if server.poll() is None:
                        pytest.fail('Server is not responding to requests')
                    else:
                        # NOTE(kgriffs): The server did not start up; probably due to
                        #   the port being in use. We could check the output but
                        #   capsys fixture may not have buffered the error output
                        #   yet, so we just retry.
                        continue
    
                yield base_url
    
            assert server.returncode == 0
    
            break
    
        else:
>           pytest.fail('Could not start server')
E           Failed: Could not start server

tests/asgi/test_asgi_servers.py:628: Failed
__ ERROR at setup of TestWebSocket.test_passing_path_params[_uvicorn_factory] __

request = <SubRequest 'server_base_url' for <Function test_passing_path_params[_uvicorn_factory]>>

    @pytest.fixture(params=[_uvicorn_factory, _daphne_factory, _hypercorn_factory])
    def server_base_url(request):
        process_factory = request.param
        _can_run(process_factory)
    
        for i in range(3):
            server_port = testing.get_unused_port()
            base_url = 'http://{}:{}/'.format(_SERVER_HOST, server_port)
    
            with _run_server_isolated(process_factory, _SERVER_HOST, server_port) as server:
                # NOTE(kgriffs): Let the server start up. Give up after 5 seconds.
                start_ts = time.time()
                while (time.time() - start_ts) < 5:
                    try:
                        requests.get(base_url, timeout=0.2)
                    except (
                        requests.exceptions.Timeout,
                        requests.exceptions.ConnectionError,
                    ):
                        time.sleep(0.2)
                    else:
                        break
                else:
                    if server.poll() is None:
                        pytest.fail('Server is not responding to requests')
                    else:
                        # NOTE(kgriffs): The server did not start up; probably due to
                        #   the port being in use. We could check the output but
                        #   capsys fixture may not have buffered the error output
                        #   yet, so we just retry.
                        continue
    
                yield base_url
    
            assert server.returncode == 0
    
            break
    
        else:
>           pytest.fail('Could not start server')
E           Failed: Could not start server

tests/asgi/test_asgi_servers.py:628: Failed
_ ERROR at setup of TestWebSocket.test_type_mismatch[_uvicorn_factory-data-send] _

request = <SubRequest 'server_base_url' for <Function test_type_mismatch[_uvicorn_factory-data-send]>>

    @pytest.fixture(params=[_uvicorn_factory, _daphne_factory, _hypercorn_factory])
    def server_base_url(request):
        process_factory = request.param
        _can_run(process_factory)
    
        for i in range(3):
            server_port = testing.get_unused_port()
            base_url = 'http://{}:{}/'.format(_SERVER_HOST, server_port)
    
            with _run_server_isolated(process_factory, _SERVER_HOST, server_port) as server:
                # NOTE(kgriffs): Let the server start up. Give up after 5 seconds.
                start_ts = time.time()
                while (time.time() - start_ts) < 5:
                    try:
                        requests.get(base_url, timeout=0.2)
                    except (
                        requests.exceptions.Timeout,
                        requests.exceptions.ConnectionError,
                    ):
                        time.sleep(0.2)
                    else:
                        break
                else:
                    if server.poll() is None:
                        pytest.fail('Server is not responding to requests')
                    else:
                        # NOTE(kgriffs): The server did not start up; probably due to
                        #   the port being in use. We could check the output but
                        #   capsys fixture may not have buffered the error output
                        #   yet, so we just retry.
                        continue
    
                yield base_url
    
            assert server.returncode == 0
    
            break
    
        else:
>           pytest.fail('Could not start server')
E           Failed: Could not start server

tests/asgi/test_asgi_servers.py:628: Failed
_ ERROR at setup of TestRedirects.test_redirect_with_headers[asgi-PUT-303 See Other-/see/other] _

asgi = True

    @pytest.fixture
    def client_exercising_headers(asgi):
        app = create_app(asgi)
    
        resource = RedirectingResourceWithHeaders()
>       app.add_route('/', resource)

tests/test_redirects.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a89b6730>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78112d0>, 'CHECK...12d0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78112d0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method RedirectingResourceWithHeaders.on_delete of <test_redirects.RedirectingResourceWithHeaders object at 0x7f029d5380d0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
=================================== FAILURES ===================================
_________________ TestCythonized.test_stream_has_private_read __________________

self = <test_cython.TestCythonized object at 0x7f026979c820>

    def test_stream_has_private_read(self):
        stream = falcon.util.BufferedReader(io.BytesIO().read, 8)
    
        if has_cython and falcon.util.IS_64_BITS:
>           assert not hasattr(stream, '_read')
E           AssertionError: assert not True
E            +  where True = hasattr(<falcon.util.reader.BufferedReader object at 0x7f0254b886d0>, '_read')

tests/test_cython.py:20: AssertionError
_________________ TestCythonized.test_imported_from_c_modules __________________

self = <test_cython.TestCythonized object at 0x7f026979c670>

    @pytest.mark.skipif(not has_cython, reason='Cython not installed')
    def test_imported_from_c_modules(self):
>       assert 'falcon/app.py' not in str(falcon.app)
E       assert 'falcon/app.py' not in "<module 'fa...con/app.py'>"
E         'falcon/app.py' is contained here:
E           ts/falcon/falcon/app.py'>

tests/test_cython.py:14: AssertionError
__________________________________ test_hooks __________________________________

client = <falcon.testing.client.TestClient object at 0x7f02690783a0>

    @pytest.mark.skipif(not pyximport, reason='Cython not installed')
    def test_hooks(client):
        with disable_asgi_non_coroutine_wrapping():
            if CYTHON_COROUTINE_HINT:
>               client.app.add_route('/', _cythonized.TestResourceWithHooksNoHint())

tests/asgi/test_cythonized_asgi.py:132: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f0254b85930>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f036c291d80>, 'CHECK...1d80>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f036c291d80>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method TestResourceWithHooksNoHint.on_get of <asgi._cythonized.TestResourceWithHooksNoHint object at 0x7f03a8cdc6a0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
___________________________ test_jsonchema_validator ___________________________

client = <falcon.testing.client.TestClient object at 0x7f03a8cd5c00>

    @pytest.mark.skipif(not pyximport, reason='Cython not installed')
    def test_jsonchema_validator(client):
        with disable_asgi_non_coroutine_wrapping():
            if CYTHON_COROUTINE_HINT:
>               client.app.add_route('/', _cythonized.TestResourceWithValidationNoHint())

tests/asgi/test_cythonized_asgi.py:89: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a8c47760>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f0254b493f0>, 'CHECK...93f0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f0254b493f0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method TestResourceWithValidationNoHint.on_get of <asgi._cythonized.TestResourceWithValidationNoHint object at 0x7f03a8cd7250>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_______________ TestMain.test_routes_only[internal-not-verbose] ________________

self = <test_cmd_inspect_app.TestMain object at 0x7f02755a2b00>, verbose = False
internal = True
monkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x7f0268fbe890>

    def test_routes_only(self, verbose, internal, monkeypatch):
        args = ['some-file.py', '{}:{}'.format(_MODULE, '_APP'), '-r']
        if verbose:
            args.append('-v')
        if internal:
            args.append('-i')
        monkeypatch.setattr('sys.argv', args)
        output = io.StringIO()
        with redirected(stdout=output):
>           inspect_app.main()

tests/test_cmd_inspect_app.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/cmd/inspect_app.py:100: in main
    app = load_app(parser, args)
falcon/cmd/inspect_app.py:70: in load_app
    app = getattr(importlib.import_module(module), instance)
/usr/lib/python3.10/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
<frozen importlib._bootstrap>:1050: in _gcd_import
    ???
<frozen importlib._bootstrap>:1027: in _find_and_load
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

name = 'tests.test_cmd_inspect_app'
import_ = <function _gcd_import at 0x7f03ad11b400>

>   ???
E   ModuleNotFoundError: No module named 'tests.test_cmd_inspect_app'

<frozen importlib._bootstrap>:1004: ModuleNotFoundError
_________________ TestMain.test_inspect[not-internal-verbose] __________________

self = <test_cmd_inspect_app.TestMain object at 0x7f02755a2f80>, verbose = True
internal = False
monkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x7f03a8a82d70>

    def test_inspect(self, verbose, internal, monkeypatch):
        args = ['some-file.py', '{}:{}'.format(_MODULE, '_APP')]
        if verbose:
            args.append('-v')
        if internal:
            args.append('-i')
        monkeypatch.setattr('sys.argv', args)
        output = io.StringIO()
        with redirected(stdout=output):
>           inspect_app.main()

tests/test_cmd_inspect_app.py:178: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/cmd/inspect_app.py:100: in main
    app = load_app(parser, args)
falcon/cmd/inspect_app.py:70: in load_app
    app = getattr(importlib.import_module(module), instance)
/usr/lib/python3.10/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
<frozen importlib._bootstrap>:1050: in _gcd_import
    ???
<frozen importlib._bootstrap>:1027: in _find_and_load
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

name = 'tests.test_cmd_inspect_app'
import_ = <function _gcd_import at 0x7f03ad11b400>

>   ???
E   ModuleNotFoundError: No module named 'tests.test_cmd_inspect_app'

<frozen importlib._bootstrap>:1004: ModuleNotFoundError
_________________ TestMain.test_routes_only[internal-verbose] __________________

self = <test_cmd_inspect_app.TestMain object at 0x7f02755a2a70>, verbose = True
internal = True
monkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x7f03a84d9900>

    def test_routes_only(self, verbose, internal, monkeypatch):
        args = ['some-file.py', '{}:{}'.format(_MODULE, '_APP'), '-r']
        if verbose:
            args.append('-v')
        if internal:
            args.append('-i')
        monkeypatch.setattr('sys.argv', args)
        output = io.StringIO()
        with redirected(stdout=output):
>           inspect_app.main()

tests/test_cmd_inspect_app.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/cmd/inspect_app.py:100: in main
    app = load_app(parser, args)
falcon/cmd/inspect_app.py:70: in load_app
    app = getattr(importlib.import_module(module), instance)
/usr/lib/python3.10/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
<frozen importlib._bootstrap>:1050: in _gcd_import
    ???
<frozen importlib._bootstrap>:1027: in _find_and_load
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

name = 'tests.test_cmd_inspect_app'
import_ = <function _gcd_import at 0x7f03ad11b400>

>   ???
E   ModuleNotFoundError: No module named 'tests.test_cmd_inspect_app'

<frozen importlib._bootstrap>:1004: ModuleNotFoundError
_____________ TestMain.test_routes_only[not-internal-not-verbose] ______________

self = <test_cmd_inspect_app.TestMain object at 0x7f02755a2c20>, verbose = False
internal = False
monkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x7f03a8362bf0>

    def test_routes_only(self, verbose, internal, monkeypatch):
        args = ['some-file.py', '{}:{}'.format(_MODULE, '_APP'), '-r']
        if verbose:
            args.append('-v')
        if internal:
            args.append('-i')
        monkeypatch.setattr('sys.argv', args)
        output = io.StringIO()
        with redirected(stdout=output):
>           inspect_app.main()

tests/test_cmd_inspect_app.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/cmd/inspect_app.py:100: in main
    app = load_app(parser, args)
falcon/cmd/inspect_app.py:70: in load_app
    app = getattr(importlib.import_module(module), instance)
/usr/lib/python3.10/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
<frozen importlib._bootstrap>:1050: in _gcd_import
    ???
<frozen importlib._bootstrap>:1027: in _find_and_load
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

name = 'tests.test_cmd_inspect_app'
import_ = <function _gcd_import at 0x7f03ad11b400>

>   ???
E   ModuleNotFoundError: No module named 'tests.test_cmd_inspect_app'

<frozen importlib._bootstrap>:1004: ModuleNotFoundError
_______________ TestMain.test_inspect[not-internal-not-verbose] ________________

self = <test_cmd_inspect_app.TestMain object at 0x7f02755a3010>, verbose = False
internal = False
monkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x7f03a83b8370>

    def test_inspect(self, verbose, internal, monkeypatch):
        args = ['some-file.py', '{}:{}'.format(_MODULE, '_APP')]
        if verbose:
            args.append('-v')
        if internal:
            args.append('-i')
        monkeypatch.setattr('sys.argv', args)
        output = io.StringIO()
        with redirected(stdout=output):
>           inspect_app.main()

tests/test_cmd_inspect_app.py:178: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/cmd/inspect_app.py:100: in main
    app = load_app(parser, args)
falcon/cmd/inspect_app.py:70: in load_app
    app = getattr(importlib.import_module(module), instance)
/usr/lib/python3.10/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
<frozen importlib._bootstrap>:1050: in _gcd_import
    ???
<frozen importlib._bootstrap>:1027: in _find_and_load
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

name = 'tests.test_cmd_inspect_app'
import_ = <function _gcd_import at 0x7f03ad11b400>

>   ???
E   ModuleNotFoundError: No module named 'tests.test_cmd_inspect_app'

<frozen importlib._bootstrap>:1004: ModuleNotFoundError
_______________ TestMain.test_routes_only[not-internal-verbose] ________________

self = <test_cmd_inspect_app.TestMain object at 0x7f02755a2b90>, verbose = True
internal = False
monkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x7f03a85dd090>

    def test_routes_only(self, verbose, internal, monkeypatch):
        args = ['some-file.py', '{}:{}'.format(_MODULE, '_APP'), '-r']
        if verbose:
            args.append('-v')
        if internal:
            args.append('-i')
        monkeypatch.setattr('sys.argv', args)
        output = io.StringIO()
        with redirected(stdout=output):
>           inspect_app.main()

tests/test_cmd_inspect_app.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/cmd/inspect_app.py:100: in main
    app = load_app(parser, args)
falcon/cmd/inspect_app.py:70: in load_app
    app = getattr(importlib.import_module(module), instance)
/usr/lib/python3.10/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
<frozen importlib._bootstrap>:1050: in _gcd_import
    ???
<frozen importlib._bootstrap>:1027: in _find_and_load
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

name = 'tests.test_cmd_inspect_app'
import_ = <function _gcd_import at 0x7f03ad11b400>

>   ???
E   ModuleNotFoundError: No module named 'tests.test_cmd_inspect_app'

<frozen importlib._bootstrap>:1004: ModuleNotFoundError
_________________ TestMain.test_inspect[internal-not-verbose] __________________

self = <test_cmd_inspect_app.TestMain object at 0x7f02755a2ef0>, verbose = False
internal = True
monkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x7f03a8360160>

    def test_inspect(self, verbose, internal, monkeypatch):
        args = ['some-file.py', '{}:{}'.format(_MODULE, '_APP')]
        if verbose:
            args.append('-v')
        if internal:
            args.append('-i')
        monkeypatch.setattr('sys.argv', args)
        output = io.StringIO()
        with redirected(stdout=output):
>           inspect_app.main()

tests/test_cmd_inspect_app.py:178: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/cmd/inspect_app.py:100: in main
    app = load_app(parser, args)
falcon/cmd/inspect_app.py:70: in load_app
    app = getattr(importlib.import_module(module), instance)
/usr/lib/python3.10/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
<frozen importlib._bootstrap>:1050: in _gcd_import
    ???
<frozen importlib._bootstrap>:1027: in _find_and_load
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

name = 'tests.test_cmd_inspect_app'
import_ = <function _gcd_import at 0x7f03ad11b400>

>   ???
E   ModuleNotFoundError: No module named 'tests.test_cmd_inspect_app'

<frozen importlib._bootstrap>:1004: ModuleNotFoundError
___________________ TestMain.test_inspect[internal-verbose] ____________________

self = <test_cmd_inspect_app.TestMain object at 0x7f02755a2e60>, verbose = True
internal = True
monkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x7f03a8318d60>

    def test_inspect(self, verbose, internal, monkeypatch):
        args = ['some-file.py', '{}:{}'.format(_MODULE, '_APP')]
        if verbose:
            args.append('-v')
        if internal:
            args.append('-i')
        monkeypatch.setattr('sys.argv', args)
        output = io.StringIO()
        with redirected(stdout=output):
>           inspect_app.main()

tests/test_cmd_inspect_app.py:178: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/cmd/inspect_app.py:100: in main
    app = load_app(parser, args)
falcon/cmd/inspect_app.py:70: in load_app
    app = getattr(importlib.import_module(module), instance)
/usr/lib/python3.10/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
<frozen importlib._bootstrap>:1050: in _gcd_import
    ???
<frozen importlib._bootstrap>:1027: in _find_and_load
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

name = 'tests.test_cmd_inspect_app'
import_ = <function _gcd_import at 0x7f03ad11b400>

>   ???
E   ModuleNotFoundError: No module named 'tests.test_cmd_inspect_app'

<frozen importlib._bootstrap>:1004: ModuleNotFoundError
________________ TestLoadApp.test_load_app_error[DummyResource] ________________

self = <test_cmd_inspect_app.TestLoadApp object at 0x7f02755a2650>
name = 'DummyResource'

    @pytest.mark.parametrize(
        'name',
        (
            'foo',  # not exists
            '_MODULE',  # not callable and not app
            'DummyResource',  # callable and not app
        ),
    )
    def test_load_app_error(self, name):
        parser = inspect_app.make_parser()
        args = Namespace(
            app_module='{}:{}'.format(_MODULE, name), route_only=False, verbose=False
        )
        with pytest.raises(SystemExit):
>           inspect_app.load_app(parser, args)

tests/test_cmd_inspect_app.py:134: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/cmd/inspect_app.py:70: in load_app
    app = getattr(importlib.import_module(module), instance)
/usr/lib/python3.10/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
<frozen importlib._bootstrap>:1050: in _gcd_import
    ???
<frozen importlib._bootstrap>:1027: in _find_and_load
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

name = 'tests.test_cmd_inspect_app'
import_ = <function _gcd_import at 0x7f03ad11b400>

>   ???
E   ModuleNotFoundError: No module named 'tests.test_cmd_inspect_app'

<frozen importlib._bootstrap>:1004: ModuleNotFoundError
_______________________ TestLoadApp.test_load_app[_APP] ________________________

self = <test_cmd_inspect_app.TestLoadApp object at 0x7f02755a22f0>
name = '_APP'

    @pytest.mark.parametrize('name', ('_APP', 'make_app'))
    def test_load_app(self, name):
        parser = inspect_app.make_parser()
        args = Namespace(
            app_module='{}:{}'.format(_MODULE, name), route_only=False, verbose=False
        )
>       app = inspect_app.load_app(parser, args)

tests/test_cmd_inspect_app.py:116: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/cmd/inspect_app.py:70: in load_app
    app = getattr(importlib.import_module(module), instance)
/usr/lib/python3.10/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
<frozen importlib._bootstrap>:1050: in _gcd_import
    ???
<frozen importlib._bootstrap>:1027: in _find_and_load
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

name = 'tests.test_cmd_inspect_app'
import_ = <function _gcd_import at 0x7f03ad11b400>

>   ???
E   ModuleNotFoundError: No module named 'tests.test_cmd_inspect_app'

<frozen importlib._bootstrap>:1004: ModuleNotFoundError
_____________________ TestLoadApp.test_load_app_error[foo] _____________________

self = <test_cmd_inspect_app.TestLoadApp object at 0x7f02755a2530>, name = 'foo'

    @pytest.mark.parametrize(
        'name',
        (
            'foo',  # not exists
            '_MODULE',  # not callable and not app
            'DummyResource',  # callable and not app
        ),
    )
    def test_load_app_error(self, name):
        parser = inspect_app.make_parser()
        args = Namespace(
            app_module='{}:{}'.format(_MODULE, name), route_only=False, verbose=False
        )
        with pytest.raises(SystemExit):
>           inspect_app.load_app(parser, args)

tests/test_cmd_inspect_app.py:134: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/cmd/inspect_app.py:70: in load_app
    app = getattr(importlib.import_module(module), instance)
/usr/lib/python3.10/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
<frozen importlib._bootstrap>:1050: in _gcd_import
    ???
<frozen importlib._bootstrap>:1027: in _find_and_load
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

name = 'tests.test_cmd_inspect_app'
import_ = <function _gcd_import at 0x7f03ad11b400>

>   ???
E   ModuleNotFoundError: No module named 'tests.test_cmd_inspect_app'

<frozen importlib._bootstrap>:1004: ModuleNotFoundError
___________________ TestLoadApp.test_load_app_error[_MODULE] ___________________

self = <test_cmd_inspect_app.TestLoadApp object at 0x7f02755a25c0>
name = '_MODULE'

    @pytest.mark.parametrize(
        'name',
        (
            'foo',  # not exists
            '_MODULE',  # not callable and not app
            'DummyResource',  # callable and not app
        ),
    )
    def test_load_app_error(self, name):
        parser = inspect_app.make_parser()
        args = Namespace(
            app_module='{}:{}'.format(_MODULE, name), route_only=False, verbose=False
        )
        with pytest.raises(SystemExit):
>           inspect_app.load_app(parser, args)

tests/test_cmd_inspect_app.py:134: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/cmd/inspect_app.py:70: in load_app
    app = getattr(importlib.import_module(module), instance)
/usr/lib/python3.10/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
<frozen importlib._bootstrap>:1050: in _gcd_import
    ???
<frozen importlib._bootstrap>:1027: in _find_and_load
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

name = 'tests.test_cmd_inspect_app'
import_ = <function _gcd_import at 0x7f03ad11b400>

>   ???
E   ModuleNotFoundError: No module named 'tests.test_cmd_inspect_app'

<frozen importlib._bootstrap>:1004: ModuleNotFoundError
_____________________ TestLoadApp.test_load_app[make_app] ______________________

self = <test_cmd_inspect_app.TestLoadApp object at 0x7f02755a2380>
name = 'make_app'

    @pytest.mark.parametrize('name', ('_APP', 'make_app'))
    def test_load_app(self, name):
        parser = inspect_app.make_parser()
        args = Namespace(
            app_module='{}:{}'.format(_MODULE, name), route_only=False, verbose=False
        )
>       app = inspect_app.load_app(parser, args)

tests/test_cmd_inspect_app.py:116: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/cmd/inspect_app.py:70: in load_app
    app = getattr(importlib.import_module(module), instance)
/usr/lib/python3.10/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
<frozen importlib._bootstrap>:1050: in _gcd_import
    ???
<frozen importlib._bootstrap>:1027: in _find_and_load
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

name = 'tests.test_cmd_inspect_app'
import_ = <function _gcd_import at 0x7f03ad11b400>

>   ???
E   ModuleNotFoundError: No module named 'tests.test_cmd_inspect_app'

<frozen importlib._bootstrap>:1004: ModuleNotFoundError
____________________ test_wrapped_resource[asgi-resource1] _____________________

client = <falcon.testing.client.TestClient object at 0x7f0268bc4dc0>
resource = <test_after_hooks.WrappedClassResourceChild object at 0x7f02756d4d60>

    @pytest.mark.parametrize(
        'resource', [WrappedClassResource(), WrappedClassResourceChild()]
    )
    def test_wrapped_resource(client, resource):
>       client.app.add_route('/wrapped', resource)

tests/test_after_hooks.py:293: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a888d9a0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a8391870>, 'CHECK...1870>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a8391870>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method WrappedClassResource.on_get of <test_after_hooks.WrappedClassResourceChild object at 0x7f02756d4d60>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
____________________ test_wrapped_resource[asgi-resource0] _____________________

client = <falcon.testing.client.TestClient object at 0x7f03a84f3ca0>
resource = <test_after_hooks.WrappedClassResource object at 0x7f02756d4460>

    @pytest.mark.parametrize(
        'resource', [WrappedClassResource(), WrappedClassResourceChild()]
    )
    def test_wrapped_resource(client, resource):
>       client.app.add_route('/wrapped', resource)

tests/test_after_hooks.py:293: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a888e110>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a8529090>, 'CHECK...9090>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a8529090>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method WrappedClassResource.on_get of <test_after_hooks.WrappedClassResource object at 0x7f02756d4460>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
___________ test_wrapped_resource_with_hooks_aware_of_resource[asgi] ___________

client = <falcon.testing.client.TestClient object at 0x7f03a8361360>
wrapped_resource_aware = <test_after_hooks.ClassResourceWithAwareHooks object at 0x7f03a8360280>

    def test_wrapped_resource_with_hooks_aware_of_resource(client, wrapped_resource_aware):
>       client.app.add_route('/wrapped_aware', wrapped_resource_aware)

tests/test_after_hooks.py:319: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a886c200>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a8393400>, 'CHECK...3400>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a8393400>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method ClassResourceWithAwareHooks.on_get of <test_after_hooks.ClassResourceWithAwareHooks object at 0x7f03a8360280>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
________________ test_resource_with_uri_fields[asgi-resource1] _________________

client = <falcon.testing.client.TestClient object at 0x7f03a83aead0>
resource = <test_after_hooks.ClassResourceWithURIFieldsChild object at 0x7f02756d4c40>

    @pytest.mark.parametrize(
        'resource', [ClassResourceWithURIFields(), ClassResourceWithURIFieldsChild()]
    )
    def test_resource_with_uri_fields(client, resource):
>       client.app.add_route('/{field1}/{field2}', resource)

tests/test_after_hooks.py:255: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a886e030>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a857bf40>, 'CHECK...bf40>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a857bf40>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method ClassResourceWithURIFieldsChild.on_get of <test_after_hooks.ClassResourceWithURIFieldsChild object at 0x7f02756d4c40>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
________________ test_resource_with_uri_fields[asgi-resource0] _________________

client = <falcon.testing.client.TestClient object at 0x7f03a84d8130>
resource = <test_after_hooks.ClassResourceWithURIFields object at 0x7f02756d4d30>

    @pytest.mark.parametrize(
        'resource', [ClassResourceWithURIFields(), ClassResourceWithURIFieldsChild()]
    )
    def test_resource_with_uri_fields(client, resource):
>       client.app.add_route('/{field1}/{field2}', resource)

tests/test_after_hooks.py:255: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a886eb20>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a8392dd0>, 'CHECK...2dd0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a8392dd0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method ClassResourceWithURIFields.on_get of <test_after_hooks.ClassResourceWithURIFields object at 0x7f02756d4d30>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
___________________ test_response_body_rendition_error[asgi] ___________________

asgi = True

    def test_response_body_rendition_error(asgi):
        class MalbolgeHandler(falcon.media.BaseHandler):
            def serialize(self, media, content_type):
                raise falcon.HTTPError(falcon.HTTP_753)
    
        app = create_app(asgi)
        app.resp_options.media_handlers['text/x-malbolge'] = MalbolgeHandler()
>       app.add_route('/test.mal', CodeResource())

tests/test_response_body.py:125: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a88f9380>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7845630>, 'CHECK...5630>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7845630>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method CodeResource.on_get of <test_response_body.CodeResource object at 0x7f0268bf6920>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
______________ test_content_length_set_on_head_with_no_body[asgi] ______________

asgi = True

    def test_content_length_set_on_head_with_no_body(asgi):
        class NoBody:
            def on_get(self, req, resp):
                pass
    
            on_head = on_get
    
        app = create_app(asgi)
>       app.add_route('/', NoBody())

tests/test_response_body.py:47: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a886e490>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7844430>, 'CHECK...4430>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7844430>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method test_content_length_set_on_head_with_no_body.<locals>.NoBody.on_get of <test_response_body.test_content_length_set_on_head_with_no_body.<locals>.NoBody object at 0x7f03a836f3d0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_________________ test_unsupported_response_content_type[asgi] _________________

asgi = True

    def test_unsupported_response_content_type(asgi):
        app = create_app(asgi)
>       app.add_route('/test.mal', CodeResource())

tests/test_response_body.py:112: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a886f1b0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7845ab0>, 'CHECK...5ab0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7845ab0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method CodeResource.on_get of <test_response_body.CodeResource object at 0x7f029d53a230>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
________ TestFalconTestingUtils.test_simulate_remote_addr[asgi-8.8.8.8] ________

self = <test_utils.TestFalconTestingUtils object at 0x7f0268b547c0>
app = <falcon.asgi.app.App object at 0x7f03a8a52ec0>, remote_addr = '8.8.8.8'

    @pytest.mark.parametrize(
        'remote_addr',
        [
            None,
            '127.0.0.1',
            '8.8.8.8',
            '104.24.101.85',
            '2606:4700:30::6818:6455',
        ],
    )
    def test_simulate_remote_addr(self, app, remote_addr):
        class ShowMyIPResource:
            def on_get(self, req, resp):
                resp.text = req.remote_addr
                resp.content_type = falcon.MEDIA_TEXT
    
>       app.add_route('/', ShowMyIPResource())

tests/test_utils.py:1002: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a886fca0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78456c0>, 'CHECK...56c0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78456c0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method TestFalconTestingUtils.test_simulate_remote_addr.<locals>.ShowMyIPResource.on_get of <test_utils.TestFalconTestingUtils.test_simulate_remote_addr.<locals>.ShowMyIPResource object at 0x7f03a836d330>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_________ TestFalconTestingUtils.test_path_must_start_with_slash[asgi] _________

self = <test_utils.TestFalconTestingUtils object at 0x7f0268b16da0>
app = <falcon.asgi.app.App object at 0x7f02554a25c0>

    def test_path_must_start_with_slash(self, app):
>       app.add_route('/', testing.SimpleTestResource())

tests/test_utils.py:848: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a8885ee0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a8578700>, 'CHECK...8700>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a8578700>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method SimpleTestResource.on_get of <falcon.testing.resource.SimpleTestResource object at 0x7f03a8850b20>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
___________________ TestFalconTestingUtils.test_status[asgi] ___________________

self = <test_utils.TestFalconTestingUtils object at 0x7f0268b16110>
app = <falcon.asgi.app.App object at 0x7f02554a10c0>

    def test_status(self, app):
        resource = testing.SimpleTestResource(status=falcon.HTTP_702)
>       app.add_route('/', resource)

tests/test_utils.py:777: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a88862d0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7844700>, 'CHECK...4700>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7844700>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method SimpleTestResource.on_get of <falcon.testing.resource.SimpleTestResource object at 0x7f03a83a98d0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_______ TestFalconTestingUtils.test_simulate_remote_addr[asgi-127.0.0.1] _______

self = <test_utils.TestFalconTestingUtils object at 0x7f0268b16f80>
app = <falcon.asgi.app.App object at 0x7f02554a04c0>, remote_addr = '127.0.0.1'

    @pytest.mark.parametrize(
        'remote_addr',
        [
            None,
            '127.0.0.1',
            '8.8.8.8',
            '104.24.101.85',
            '2606:4700:30::6818:6455',
        ],
    )
    def test_simulate_remote_addr(self, app, remote_addr):
        class ShowMyIPResource:
            def on_get(self, req, resp):
                resp.text = req.remote_addr
                resp.content_type = falcon.MEDIA_TEXT
    
>       app.add_route('/', ShowMyIPResource())

tests/test_utils.py:1002: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a8884350>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7845bd0>, 'CHECK...5bd0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7845bd0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method TestFalconTestingUtils.test_simulate_remote_addr.<locals>.ShowMyIPResource.on_get of <test_utils.TestFalconTestingUtils.test_simulate_remote_addr.<locals>.ShowMyIPResource object at 0x7f03a7705c90>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
________________ TestFalconTestingUtils.test_query_string[asgi] ________________

self = <test_utils.TestFalconTestingUtils object at 0x7f0268b176d0>
app = <falcon.asgi.app.App object at 0x7f03a8a531c0>

    def test_query_string(self, app):
        class SomeResource:
            def on_get(self, req, resp):
                doc = {}
    
                doc['oid'] = req.get_param_as_int('oid')
                doc['detailed'] = req.get_param_as_bool('detailed')
                doc['things'] = req.get_param_as_list('things', int)
                doc['query_string'] = req.query_string
    
                resp.text = json.dumps(doc)
    
        app.req_options.auto_parse_qs_csv = True
>       app.add_route('/', SomeResource())

tests/test_utils.py:884: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a8884b30>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7845f30>, 'CHECK...5f30>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7845f30>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method TestFalconTestingUtils.test_query_string.<locals>.SomeResource.on_get of <test_utils.TestFalconTestingUtils.test_query_string.<locals>.SomeResource object at 0x7f029d396d40>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_____ TestFalconTestingUtils.test_simulate_remote_addr[asgi-104.24.101.85] _____

self = <test_utils.TestFalconTestingUtils object at 0x7f0268b54940>
app = <falcon.asgi.app.App object at 0x7f03a8a53280>
remote_addr = '104.24.101.85'

    @pytest.mark.parametrize(
        'remote_addr',
        [
            None,
            '127.0.0.1',
            '8.8.8.8',
            '104.24.101.85',
            '2606:4700:30::6818:6455',
        ],
    )
    def test_simulate_remote_addr(self, app, remote_addr):
        class ShowMyIPResource:
            def on_get(self, req, resp):
                resp.text = req.remote_addr
                resp.content_type = falcon.MEDIA_TEXT
    
>       app.add_route('/', ShowMyIPResource())

tests/test_utils.py:1002: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a88857e0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7847be0>, 'CHECK...7be0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7847be0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method TestFalconTestingUtils.test_simulate_remote_addr.<locals>.ShowMyIPResource.on_get of <test_utils.TestFalconTestingUtils.test_simulate_remote_addr.<locals>.ShowMyIPResource object at 0x7f029d5526e0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_____________ TestFalconTestingUtils.test_simulate_hostname[asgi] ______________

self = <test_utils.TestFalconTestingUtils object at 0x7f0268b54d60>
app = <falcon.asgi.app.App object at 0x7f03a8a528c0>

    def test_simulate_hostname(self, app):
        resource = testing.SimpleTestResource()
>       app.add_route('/', resource)

tests/test_utils.py:1015: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a886ceb0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7845870>, 'CHECK...5870>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7845870>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method SimpleTestResource.on_get of <falcon.testing.resource.SimpleTestResource object at 0x7f03a83c6f20>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
___________ TestFalconTestingUtils.test_cached_text_in_result[asgi] ____________

self = <test_utils.TestFalconTestingUtils object at 0x7f0268b17130>
app = <falcon.asgi.app.App object at 0x7f02554a04c0>

    def test_cached_text_in_result(self, app):
>       app.add_route('/', testing.SimpleTestResource(body='test'))

tests/test_utils.py:854: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a88face0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a857b1c0>, 'CHECK...b1c0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a857b1c0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method SimpleTestResource.on_get of <falcon.testing.resource.SimpleTestResource object at 0x7f03a84c79d0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
____________ TestFalconTestingUtils.test_query_string_in_path[asgi] ____________

self = <test_utils.TestFalconTestingUtils object at 0x7f0268b178b0>
app = <falcon.asgi.app.App object at 0x7f02554a25c0>

    def test_query_string_in_path(self, app):
        resource = testing.SimpleTestResource()
>       app.add_route('/thing', resource)

tests/test_utils.py:920: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a8884ac0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7844820>, 'CHECK...4820>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7844820>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method SimpleTestResource.on_get of <falcon.testing.resource.SimpleTestResource object at 0x7f03a83bbdc0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
________ TestFalconTestingUtils.test_override_method_with_extras[asgi] _________

self = <test_utils.TestFalconTestingUtils object at 0x7f0268b55000>, asgi = True

    def test_override_method_with_extras(self, asgi):
        app = create_app(asgi)
>       app.add_route('/', testing.SimpleTestResource(body='test'))

tests/test_utils.py:1047: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a88849e0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78443a0>, 'CHECK...43a0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78443a0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method SimpleTestResource.on_get of <falcon.testing.resource.SimpleTestResource object at 0x7f03a88e08e0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_______ TestFalconTestingUtils.test_default_headers_with_override[asgi] ________

self = <test_utils.TestFalconTestingUtils object at 0x7f0268b15ed0>
app = <falcon.asgi.app.App object at 0x7f03a8a53280>

    def test_default_headers_with_override(self, app):
        resource = testing.SimpleTestResource()
>       app.add_route('/', resource)

tests/test_utils.py:757: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a8886030>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7844f70>, 'CHECK...4f70>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7844f70>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method SimpleTestResource.on_get of <falcon.testing.resource.SimpleTestResource object at 0x7f03a8484520>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
__________ TestFalconTestingUtils.test_query_string_no_question[asgi] __________

self = <test_utils.TestFalconTestingUtils object at 0x7f0268b16fe0>
app = <falcon.asgi.app.App object at 0x7f03a8a51a80>

    def test_query_string_no_question(self, app):
>       app.add_route('/', testing.SimpleTestResource())

tests/test_utils.py:913: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a886e030>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7847be0>, 'CHECK...7be0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7847be0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method SimpleTestResource.on_get of <falcon.testing.resource.SimpleTestResource object at 0x7f029d553340>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestFalconTestingUtils.test_simulate_remote_addr[asgi-2606:4700:30::6818:6455] _

self = <test_utils.TestFalconTestingUtils object at 0x7f0268b549d0>
app = <falcon.asgi.app.App object at 0x7f03a8a52d40>
remote_addr = '2606:4700:30::6818:6455'

    @pytest.mark.parametrize(
        'remote_addr',
        [
            None,
            '127.0.0.1',
            '8.8.8.8',
            '104.24.101.85',
            '2606:4700:30::6818:6455',
        ],
    )
    def test_simulate_remote_addr(self, app, remote_addr):
        class ShowMyIPResource:
            def on_get(self, req, resp):
                resp.text = req.remote_addr
                resp.content_type = falcon.MEDIA_TEXT
    
>       app.add_route('/', ShowMyIPResource())

tests/test_utils.py:1002: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a886f1b0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7847b50>, 'CHECK...7b50>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7847b50>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method TestFalconTestingUtils.test_simulate_remote_addr.<locals>.ShowMyIPResource.on_get of <test_utils.TestFalconTestingUtils.test_simulate_remote_addr.<locals>.ShowMyIPResource object at 0x7f029d834c10>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
______________ TestFalconTestingUtils.test_default_headers[asgi] _______________

self = <test_utils.TestFalconTestingUtils object at 0x7f0268b15b10>
app = <falcon.asgi.app.App object at 0x7f03a8a51d80>

    def test_default_headers(self, app):
        resource = testing.SimpleTestResource()
>       app.add_route('/', resource)

tests/test_utils.py:741: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a8829690>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7844430>, 'CHECK...4430>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7844430>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method SimpleTestResource.on_get of <falcon.testing.resource.SimpleTestResource object at 0x7f029d56fd30>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_________ TestFalconTestingUtils.test_simulate_remote_addr[asgi-None] __________

self = <test_utils.TestFalconTestingUtils object at 0x7f0268b17ac0>
app = <falcon.asgi.app.App object at 0x7f02554a25c0>, remote_addr = None

    @pytest.mark.parametrize(
        'remote_addr',
        [
            None,
            '127.0.0.1',
            '8.8.8.8',
            '104.24.101.85',
            '2606:4700:30::6818:6455',
        ],
    )
    def test_simulate_remote_addr(self, app, remote_addr):
        class ShowMyIPResource:
            def on_get(self, req, resp):
                resp.text = req.remote_addr
                resp.content_type = falcon.MEDIA_TEXT
    
>       app.add_route('/', ShowMyIPResource())

tests/test_utils.py:1002: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a8828ba0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a83f77f0>, 'CHECK...77f0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a83f77f0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method TestFalconTestingUtils.test_simulate_remote_addr.<locals>.ShowMyIPResource.on_get of <test_utils.TestFalconTestingUtils.test_simulate_remote_addr.<locals>.ShowMyIPResource object at 0x7f03a83aed70>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_option_auto_parse_qs_csv_multiple_fields_true[simulate_request_post_query_params-asgi-t=1,,2&t=3,4-True-expected4] _

self = <test_query_params.TestQueryParams object at 0x7f02691ac910>
simulate_request = <function simulate_request_post_query_params at 0x7f0269180ca0>
client = <falcon.testing.client.TestClient object at 0x7f03a83c71f0>
resource = <test_query_params.Resource object at 0x7f03a83c5d20>
qs = 't=1,,2&t=3,4', keep_blank = True, expected = ['1', '', '2', '3', '4']

    @pytest.mark.parametrize(
        'qs, keep_blank, expected',
        [
            ('t=1&t=3,4', False, ['1', '3', '4']),
            ('t=1&t=2&t=3,4', False, ['1', '2', '3', '4']),
            ('t=1,2&t=3,4', False, ['1', '2', '3', '4']),
            ('t=1,,2&t=3,4', False, ['1', '2', '3', '4']),
            ('t=1,,2&t=3,4', True, ['1', '', '2', '3', '4']),
            ('t=1,2&t=3,4,,5', False, ['1', '2', '3', '4', '5']),
            ('t=1&t=,1,4,,5', False, ['1', '1', '4', '5']),
            ('t=1&t=,1,4,,5', True, ['1', '', '1', '4', '', '5']),
            (
                't=1&t=,1,4,,5&t=a,b,c',
                True,
                ['1', '', '1', '4', '', '5', 'a', 'b', 'c'],
            ),
        ],
    )
    def test_option_auto_parse_qs_csv_multiple_fields_true(
        self,
        simulate_request,
        client,
        resource,
        qs,
        keep_blank,
        expected,
    ):
>       client.app.add_route('/', resource)

tests/test_query_params.py:229: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a88294d0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a83f5ea0>, 'CHECK...5ea0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a83f5ea0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a83c5d20>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_get_datetime_missing_param[simulate_request_post_query_params-asgi] _

self = <test_query_params.TestQueryParams object at 0x7f0268ff3b20>
simulate_request = <function simulate_request_post_query_params at 0x7f0269180ca0>
client = <falcon.testing.client.TestClient object at 0x7f029d551f60>
resource = <test_query_params.Resource object at 0x7f029d552ef0>

    def test_get_datetime_missing_param(self, simulate_request, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:853: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a881dbd0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a8a9f2e0>, 'CHECK...f2e0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a8a9f2e0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f029d552ef0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_option_auto_parse_qs_csv_simple_true[simulate_request_get_query_params-asgi] _

self = <test_query_params.TestQueryParams object at 0x7f02691770a0>
simulate_request = <function simulate_request_get_query_params at 0x7f0269180c10>
client = <falcon.testing.client.TestClient object at 0x7f03a833b490>
resource = <test_query_params.Resource object at 0x7f03a833b160>

    def test_option_auto_parse_qs_csv_simple_true(
        self, simulate_request, client, resource
    ):
>       client.app.add_route('/', resource)

tests/test_query_params.py:175: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a881f290>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a83f48b0>, 'CHECK...48b0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a83f48b0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a833b160>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_get_datetime_missing_param[simulate_request_get_query_params-asgi] _

self = <test_query_params.TestQueryParams object at 0x7f0268ff34f0>
simulate_request = <function simulate_request_get_query_params at 0x7f0269180c10>
client = <falcon.testing.client.TestClient object at 0x7f03a8806140>
resource = <test_query_params.Resource object at 0x7f03a8807250>

    def test_get_datetime_missing_param(self, simulate_request, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:853: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a78944a0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a83f5120>, 'CHECK...5120>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a83f5120>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a8807250>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_____ TestQueryParams.test_blank[simulate_request_post_query_params-asgi] ______

self = <test_query_params.TestQueryParams object at 0x7f02691767d0>
simulate_request = <function simulate_request_post_query_params at 0x7f0269180ca0>
client = <falcon.testing.client.TestClient object at 0x7f03a83c7340>
resource = <test_query_params.Resource object at 0x7f03a83c71c0>

    def test_blank(self, simulate_request, client, resource):
        query_string = 'marker='
>       client.app.add_route('/', resource)

tests/test_query_params.py:118: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a7894190>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7847250>, 'CHECK...7250>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7847250>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a83c71c0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_option_auto_parse_qs_csv_multiple_fields_true[simulate_request_post_query_params-asgi-t=1&t=3,4-False-expected0] _

self = <test_query_params.TestQueryParams object at 0x7f02691ac6d0>
simulate_request = <function simulate_request_post_query_params at 0x7f0269180ca0>
client = <falcon.testing.client.TestClient object at 0x7f029d51b010>
resource = <test_query_params.Resource object at 0x7f029d518040>
qs = 't=1&t=3,4', keep_blank = False, expected = ['1', '3', '4']

    @pytest.mark.parametrize(
        'qs, keep_blank, expected',
        [
            ('t=1&t=3,4', False, ['1', '3', '4']),
            ('t=1&t=2&t=3,4', False, ['1', '2', '3', '4']),
            ('t=1,2&t=3,4', False, ['1', '2', '3', '4']),
            ('t=1,,2&t=3,4', False, ['1', '2', '3', '4']),
            ('t=1,,2&t=3,4', True, ['1', '', '2', '3', '4']),
            ('t=1,2&t=3,4,,5', False, ['1', '2', '3', '4', '5']),
            ('t=1&t=,1,4,,5', False, ['1', '1', '4', '5']),
            ('t=1&t=,1,4,,5', True, ['1', '', '1', '4', '', '5']),
            (
                't=1&t=,1,4,,5&t=a,b,c',
                True,
                ['1', '', '1', '4', '', '5', 'a', 'b', 'c'],
            ),
        ],
    )
    def test_option_auto_parse_qs_csv_multiple_fields_true(
        self,
        simulate_request,
        client,
        resource,
        qs,
        keep_blank,
        expected,
    ):
>       client.app.add_route('/', resource)

tests/test_query_params.py:229: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a78970d0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a782a7a0>, 'CHECK...a7a0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a782a7a0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f029d518040>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_multiple_keys_as_bool[simulate_request_post_query_params-asgi] _

self = <test_query_params.TestQueryParams object at 0x7f0268ff1720>
simulate_request = <function simulate_request_post_query_params at 0x7f0269180ca0>
client = <falcon.testing.client.TestClient object at 0x7f03a8339990>
resource = <test_query_params.Resource object at 0x7f03a833afe0>

    def test_multiple_keys_as_bool(self, simulate_request, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:765: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a7895000>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a857b400>, 'CHECK...b400>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a857b400>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a833afe0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_option_auto_parse_qs_csv_multiple_fields_true[simulate_request_get_query_params-asgi-t=1&t=,1,4,,5-True-expected7] _

self = <test_query_params.TestQueryParams object at 0x7f02691ac100>
simulate_request = <function simulate_request_get_query_params at 0x7f0269180c10>
client = <falcon.testing.client.TestClient object at 0x7f029d51bee0>
resource = <test_query_params.Resource object at 0x7f029d51a9b0>
qs = 't=1&t=,1,4,,5', keep_blank = True, expected = ['1', '', '1', '4', '', '5']

    @pytest.mark.parametrize(
        'qs, keep_blank, expected',
        [
            ('t=1&t=3,4', False, ['1', '3', '4']),
            ('t=1&t=2&t=3,4', False, ['1', '2', '3', '4']),
            ('t=1,2&t=3,4', False, ['1', '2', '3', '4']),
            ('t=1,,2&t=3,4', False, ['1', '2', '3', '4']),
            ('t=1,,2&t=3,4', True, ['1', '', '2', '3', '4']),
            ('t=1,2&t=3,4,,5', False, ['1', '2', '3', '4', '5']),
            ('t=1&t=,1,4,,5', False, ['1', '1', '4', '5']),
            ('t=1&t=,1,4,,5', True, ['1', '', '1', '4', '', '5']),
            (
                't=1&t=,1,4,,5&t=a,b,c',
                True,
                ['1', '', '1', '4', '', '5', 'a', 'b', 'c'],
            ),
        ],
    )
    def test_option_auto_parse_qs_csv_multiple_fields_true(
        self,
        simulate_request,
        client,
        resource,
        qs,
        keep_blank,
        expected,
    ):
>       client.app.add_route('/', resource)

tests/test_query_params.py:229: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a78954d0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a83f6680>, 'CHECK...6680>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a83f6680>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f029d51a9b0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_percent_encoded[simulate_request_post_query_params-asgi] _

self = <test_query_params.TestQueryParams object at 0x7f0269176f50>
simulate_request = <function simulate_request_post_query_params at 0x7f0269180ca0>
client = <falcon.testing.client.TestClient object at 0x7f03a8851660>
resource = <test_query_params.Resource object at 0x7f03a8853700>

    def test_percent_encoded(self, simulate_request, client, resource):
        query_string = 'id=23,42&q=%e8%b1%86+%e7%93%a3'
>       client.app.add_route('/', resource)

tests/test_query_params.py:144: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a78944a0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a83f65f0>, 'CHECK...65f0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a83f65f0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a8853700>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_list_type_blank[simulate_request_post_query_params-asgi] _

self = <test_query_params.TestQueryParams object at 0x7f0268ff0a60>
simulate_request = <function simulate_request_post_query_params at 0x7f0269180ca0>
client = <falcon.testing.client.TestClient object at 0x7f03a839efb0>
resource = <test_query_params.Resource object at 0x7f03a839e4d0>

    def test_list_type_blank(self, simulate_request, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:652: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a881f760>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7846710>, 'CHECK...6710>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7846710>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a839e4d0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_required[simulate_request_post_query_params-asgi-get_param_as_bool] _

self = <test_query_params.TestQueryParams object at 0x7f02691aeb00>
simulate_request = <function simulate_request_post_query_params at 0x7f0269180ca0>
client = <falcon.testing.client.TestClient object at 0x7f03a88e29e0>
resource = <test_query_params.Resource object at 0x7f03a88e1b70>
method_name = 'get_param_as_bool'

    @pytest.mark.parametrize(
        'method_name',
        [
            'get_param',
            'get_param_as_int',
            'get_param_as_float',
            'get_param_as_uuid',
            'get_param_as_bool',
            'get_param_as_list',
        ],
    )
    def test_required(self, simulate_request, client, resource, method_name):
>       client.app.add_route('/', resource)

tests/test_query_params.py:334: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a8828a50>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78475b0>, 'CHECK...75b0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78475b0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a88e1b70>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_get_dict_valid[simulate_request_post_query_params-asgi] _

self = <test_query_params.TestQueryParams object at 0x7f0269038880>
simulate_request = <function simulate_request_post_query_params at 0x7f0269180ca0>
client = <falcon.testing.client.TestClient object at 0x7f03a84d8a90>
resource = <test_query_params.Resource object at 0x7f03a84da200>

    def test_get_dict_valid(self, simulate_request, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:892: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a8828cf0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a782b2e0>, 'CHECK...b2e0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a782b2e0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a84da200>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_percent_encoded[simulate_request_get_query_params-asgi] _

self = <test_query_params.TestQueryParams object at 0x7f0269176920>
simulate_request = <function simulate_request_get_query_params at 0x7f0269180c10>
client = <falcon.testing.client.TestClient object at 0x7f029d4fc1f0>
resource = <test_query_params.Resource object at 0x7f029d4ff670>

    def test_percent_encoded(self, simulate_request, client, resource):
        query_string = 'id=23,42&q=%e8%b1%86+%e7%93%a3'
>       client.app.add_route('/', resource)

tests/test_query_params.py:144: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a78d4120>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7829480>, 'CHECK...9480>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7829480>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f029d4ff670>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_list_transformer[simulate_request_post_query_params-asgi] _

self = <test_query_params.TestQueryParams object at 0x7f0268ff0e20>
simulate_request = <function simulate_request_post_query_params at 0x7f0269180ca0>
client = <falcon.testing.client.TestClient object at 0x7f029d3968c0>
resource = <test_query_params.Resource object at 0x7f029d397010>

    def test_list_transformer(self, simulate_request, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:702: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a78d5fc0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a83f77f0>, 'CHECK...77f0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a83f77f0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f029d397010>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_default_auto_parse_csv_behaviour[simulate_request_get_query_params-asgi] _

self = <test_query_params.TestQueryParams object at 0x7f02691ad150>
simulate_request = <function simulate_request_get_query_params at 0x7f0269180c10>
client = <falcon.testing.client.TestClient object at 0x7f029d550310>
resource = <test_query_params.Resource object at 0x7f029d553430>

    def test_default_auto_parse_csv_behaviour(self, simulate_request, client, resource):
>       client.app.add_route('/', resource=resource)

tests/test_query_params.py:279: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a78d4eb0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7844670>, 'CHECK...4670>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7844670>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f029d553430>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_multiple_form_keys_as_list[simulate_request_post_query_params-asgi] _

self = <test_query_params.TestQueryParams object at 0x7f0268ff2260>
simulate_request = <function simulate_request_post_query_params at 0x7f0269180ca0>
client = <falcon.testing.client.TestClient object at 0x7f029d4e2ef0>
resource = <test_query_params.Resource object at 0x7f029d4e1a50>

    def test_multiple_form_keys_as_list(self, simulate_request, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:786: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a78d5310>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7845870>, 'CHECK...5870>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7845870>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f029d4e1a50>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_get_dict_missing_param[simulate_request_get_query_params-asgi] _

self = <test_query_params.TestQueryParams object at 0x7f0269038610>
simulate_request = <function simulate_request_get_query_params at 0x7f0269180c10>
client = <falcon.testing.client.TestClient object at 0x7f03a886a5f0>
resource = <test_query_params.Resource object at 0x7f03a886ae60>

    def test_get_dict_missing_param(self, simulate_request, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:900: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a78d7290>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7828d30>, 'CHECK...8d30>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7828d30>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a886ae60>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_option_auto_parse_qs_csv_multiple_fields_true[simulate_request_get_query_params-asgi-t=1,,2&t=3,4-True-expected4] _

self = <test_query_params.TestQueryParams object at 0x7f0269177f10>
simulate_request = <function simulate_request_get_query_params at 0x7f0269180c10>
client = <falcon.testing.client.TestClient object at 0x7f03a841efb0>
resource = <test_query_params.Resource object at 0x7f03a841fa30>
qs = 't=1,,2&t=3,4', keep_blank = True, expected = ['1', '', '2', '3', '4']

    @pytest.mark.parametrize(
        'qs, keep_blank, expected',
        [
            ('t=1&t=3,4', False, ['1', '3', '4']),
            ('t=1&t=2&t=3,4', False, ['1', '2', '3', '4']),
            ('t=1,2&t=3,4', False, ['1', '2', '3', '4']),
            ('t=1,,2&t=3,4', False, ['1', '2', '3', '4']),
            ('t=1,,2&t=3,4', True, ['1', '', '2', '3', '4']),
            ('t=1,2&t=3,4,,5', False, ['1', '2', '3', '4', '5']),
            ('t=1&t=,1,4,,5', False, ['1', '1', '4', '5']),
            ('t=1&t=,1,4,,5', True, ['1', '', '1', '4', '', '5']),
            (
                't=1&t=,1,4,,5&t=a,b,c',
                True,
                ['1', '', '1', '4', '', '5', 'a', 'b', 'c'],
            ),
        ],
    )
    def test_option_auto_parse_qs_csv_multiple_fields_true(
        self,
        simulate_request,
        client,
        resource,
        qs,
        keep_blank,
        expected,
    ):
>       client.app.add_route('/', resource)

tests/test_query_params.py:229: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a881f8b0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a782bac0>, 'CHECK...bac0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a782bac0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a841fa30>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_get_datetime_invalid[simulate_request_get_query_params-asgi] _

self = <test_query_params.TestQueryParams object at 0x7f0269038250>
simulate_request = <function simulate_request_get_query_params at 0x7f0269180c10>
client = <falcon.testing.client.TestClient object at 0x7f03a84ce650>
resource = <test_query_params.Resource object at 0x7f03a84ce290>

    def test_get_datetime_invalid(self, simulate_request, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:882: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a7895af0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a782b760>, 'CHECK...b760>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a782b760>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a84ce290>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_multiple_form_keys_as_list[simulate_request_get_query_params-asgi] _

self = <test_query_params.TestQueryParams object at 0x7f0268ff1c30>
simulate_request = <function simulate_request_get_query_params at 0x7f0269180c10>
client = <falcon.testing.client.TestClient object at 0x7f03a83c9b10>
resource = <test_query_params.Resource object at 0x7f03a83ca230>

    def test_multiple_form_keys_as_list(self, simulate_request, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:786: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a7894d60>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78475b0>, 'CHECK...75b0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78475b0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a83ca230>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
______ TestQueryParams.test_none[simulate_request_post_query_params-asgi] ______

self = <test_query_params.TestQueryParams object at 0x7f02691760b0>
simulate_request = <function simulate_request_post_query_params at 0x7f0269180ca0>
client = <falcon.testing.client.TestClient object at 0x7f03a886b3d0>
resource = <test_query_params.Resource object at 0x7f03a8869990>

    def test_none(self, simulate_request, client, resource):
        query_string = ''
>       client.app.add_route('/', resource)  # TODO: DRY up this setup logic

tests/test_query_params.py:87: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a881d930>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78280d0>, 'CHECK...80d0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78280d0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a8869990>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_get_datetime_store[simulate_request_get_query_params-asgi] _

self = <test_query_params.TestQueryParams object at 0x7f0268ff2d40>
simulate_request = <function simulate_request_get_query_params at 0x7f0269180c10>
client = <falcon.testing.client.TestClient object at 0x7f029d51afb0>
resource = <test_query_params.Resource object at 0x7f029d51aaa0>

    def test_get_datetime_store(self, simulate_request, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:871: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a78d7ca0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7828280>, 'CHECK...8280>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7828280>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f029d51aaa0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_get_date_store[simulate_request_post_query_params-asgi] _

self = <test_query_params.TestQueryParams object at 0x7f0268ff2fe0>
simulate_request = <function simulate_request_post_query_params at 0x7f0269180ca0>
client = <falcon.testing.client.TestClient object at 0x7f03a84873a0>
resource = <test_query_params.Resource object at 0x7f03a8484640>

    def test_get_date_store(self, simulate_request, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:825: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a78d44a0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a782b130>, 'CHECK...b130>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a782b130>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a8484640>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_option_auto_parse_qs_csv_complex_false[simulate_request_post_query_params-asgi] _

self = <test_query_params.TestQueryParams object at 0x7f02691ad390>
simulate_request = <function simulate_request_post_query_params at 0x7f0269180ca0>
client = <falcon.testing.client.TestClient object at 0x7f029d4e1b10>
resource = <test_query_params.Resource object at 0x7f029d4e1db0>

    def test_option_auto_parse_qs_csv_complex_false(
        self, simulate_request, client, resource
    ):
>       client.app.add_route('/', resource)

tests/test_query_params.py:245: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a78d4970>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7829990>, 'CHECK...9990>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7829990>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f029d4e1db0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_get_dict_store[simulate_request_get_query_params-asgi] __

self = <test_query_params.TestQueryParams object at 0x7f0268ff29e0>
simulate_request = <function simulate_request_get_query_params at 0x7f0269180c10>
client = <falcon.testing.client.TestClient object at 0x7f03a8348b50>
resource = <test_query_params.Resource object at 0x7f03a834bb50>

    def test_get_dict_store(self, simulate_request, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:908: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a78d6b20>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7812c20>, 'CHECK...2c20>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7812c20>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a834bb50>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
____ TestQueryParams.test_default[simulate_request_post_query_params-asgi] _____

self = <test_query_params.TestQueryParams object at 0x7f0269175e70>
simulate_request = <function simulate_request_post_query_params at 0x7f0269180ca0>
client = <falcon.testing.client.TestClient object at 0x7f03a830a350>
resource = <test_query_params.Resource object at 0x7f03a8308880>

    def test_default(self, simulate_request, client, resource):
        default = 'foobar'
        query_string = ''
>       client.app.add_route('/', resource)  # TODO: DRY up this setup logic

tests/test_query_params.py:103: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a7890350>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a782a950>, 'CHECK...a950>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a782a950>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a8308880>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_get_datetime_valid_with_format[simulate_request_post_query_params-asgi] _

self = <test_query_params.TestQueryParams object at 0x7f0268ff3d00>
simulate_request = <function simulate_request_post_query_params at 0x7f0269180ca0>
client = <falcon.testing.client.TestClient object at 0x7f03a84c7850>
resource = <test_query_params.Resource object at 0x7f03a84c5f30>

    def test_get_datetime_valid_with_format(self, simulate_request, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:860: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a7890ac0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78283a0>, 'CHECK...83a0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78283a0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a84c5f30>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_____ TestQueryParams.test_simple[simulate_request_post_query_params-asgi] _____

self = <test_query_params.TestQueryParams object at 0x7f0269176b90>
simulate_request = <function simulate_request_post_query_params at 0x7f0269180ca0>
client = <falcon.testing.client.TestClient object at 0x7f03a84ab280>
resource = <test_query_params.Resource object at 0x7f03a84a8c70>

    def test_simple(self, simulate_request, client, resource):
        query_string = 'marker=deadbeef&limit=25'
>       client.app.add_route('/', resource)

tests/test_query_params.py:131: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a78d6b90>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7829990>, 'CHECK...9990>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7829990>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a84a8c70>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
____ TestQueryParams.test_has_param[simulate_request_get_query_params-asgi] ____

self = <test_query_params.TestQueryParams object at 0x7f02690395a0>
simulate_request = <function simulate_request_get_query_params at 0x7f0269180c10>
client = <falcon.testing.client.TestClient object at 0x7f03a84f3370>
resource = <test_query_params.Resource object at 0x7f03a84f1150>

    def test_has_param(self, simulate_request, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:947: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a881e880>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a782a290>, 'CHECK...a290>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a782a290>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a84f1150>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_required[simulate_request_post_query_params-asgi-get_param_as_list] _

self = <test_query_params.TestQueryParams object at 0x7f02691aeb90>
simulate_request = <function simulate_request_post_query_params at 0x7f0269180ca0>
client = <falcon.testing.client.TestClient object at 0x7f03a78e2620>
resource = <test_query_params.Resource object at 0x7f03a78e1f90>
method_name = 'get_param_as_list'

    @pytest.mark.parametrize(
        'method_name',
        [
            'get_param',
            'get_param_as_int',
            'get_param_as_float',
            'get_param_as_uuid',
            'get_param_as_bool',
            'get_param_as_list',
        ],
    )
    def test_required(self, simulate_request, client, resource, method_name):
>       client.app.add_route('/', resource)

tests/test_query_params.py:334: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a78959a0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78127a0>, 'CHECK...27a0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78127a0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a78e1f90>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_____ TestQueryParams.test_int_neg[simulate_request_get_query_params-asgi] _____

self = <test_query_params.TestQueryParams object at 0x7f02691aef50>
simulate_request = <function simulate_request_get_query_params at 0x7f0269180c10>
client = <falcon.testing.client.TestClient object at 0x7f029d56c190>
resource = <test_query_params.Resource object at 0x7f029d56e830>

    def test_int_neg(self, simulate_request, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:402: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a8829bd0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7813400>, 'CHECK...3400>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7813400>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f029d56e830>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_list_transformer[simulate_request_get_query_params-asgi] _

self = <test_query_params.TestQueryParams object at 0x7f0268ff07f0>
simulate_request = <function simulate_request_get_query_params at 0x7f0269180c10>
client = <falcon.testing.client.TestClient object at 0x7f029d552320>
resource = <test_query_params.Resource object at 0x7f029d552f50>

    def test_list_transformer(self, simulate_request, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:702: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a7892570>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7812830>, 'CHECK...2830>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7812830>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f029d552f50>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_option_auto_parse_qs_csv_multiple_fields_true[simulate_request_post_query_params-asgi-t=1,2&t=3,4-False-expected2] _

self = <test_query_params.TestQueryParams object at 0x7f02691ac7f0>
simulate_request = <function simulate_request_post_query_params at 0x7f0269180ca0>
client = <falcon.testing.client.TestClient object at 0x7f03a84f3ee0>
resource = <test_query_params.Resource object at 0x7f03a84f13c0>
qs = 't=1,2&t=3,4', keep_blank = False, expected = ['1', '2', '3', '4']

    @pytest.mark.parametrize(
        'qs, keep_blank, expected',
        [
            ('t=1&t=3,4', False, ['1', '3', '4']),
            ('t=1&t=2&t=3,4', False, ['1', '2', '3', '4']),
            ('t=1,2&t=3,4', False, ['1', '2', '3', '4']),
            ('t=1,,2&t=3,4', False, ['1', '2', '3', '4']),
            ('t=1,,2&t=3,4', True, ['1', '', '2', '3', '4']),
            ('t=1,2&t=3,4,,5', False, ['1', '2', '3', '4', '5']),
            ('t=1&t=,1,4,,5', False, ['1', '1', '4', '5']),
            ('t=1&t=,1,4,,5', True, ['1', '', '1', '4', '', '5']),
            (
                't=1&t=,1,4,,5&t=a,b,c',
                True,
                ['1', '', '1', '4', '', '5', 'a', 'b', 'c'],
            ),
        ],
    )
    def test_option_auto_parse_qs_csv_multiple_fields_true(
        self,
        simulate_request,
        client,
        resource,
        qs,
        keep_blank,
        expected,
    ):
>       client.app.add_route('/', resource)

tests/test_query_params.py:229: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a78934c0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7810670>, 'CHECK...0670>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7810670>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a84f13c0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_get_date_missing_param[simulate_request_post_query_params-asgi] _

self = <test_query_params.TestQueryParams object at 0x7f0268ff2860>
simulate_request = <function simulate_request_post_query_params at 0x7f0269180ca0>
client = <falcon.testing.client.TestClient object at 0x7f03a83af6a0>
resource = <test_query_params.Resource object at 0x7f03a83aefb0>

    def test_get_date_missing_param(self, simulate_request, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:807: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a7894740>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78115a0>, 'CHECK...15a0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78115a0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a83aefb0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_option_auto_parse_qs_csv_simple_false[simulate_request_get_query_params-asgi] _

self = <test_query_params.TestQueryParams object at 0x7f0269176ce0>
simulate_request = <function simulate_request_get_query_params at 0x7f0269180c10>
client = <falcon.testing.client.TestClient object at 0x7f03a83a9d80>
resource = <test_query_params.Resource object at 0x7f03a83a8ee0>

    def test_option_auto_parse_qs_csv_simple_false(
        self, simulate_request, client, resource
    ):
>       client.app.add_route('/', resource)

tests/test_query_params.py:160: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a78d58c0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7828ee0>, 'CHECK...8ee0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7828ee0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a83a8ee0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_bad_percentage[simulate_request_post_query_params-asgi] _

self = <test_query_params.TestQueryParams object at 0x7f02691ad510>
simulate_request = <function simulate_request_post_query_params at 0x7f0269180ca0>
client = <falcon.testing.client.TestClient object at 0x7f03a88a98a0>
resource = <test_query_params.Resource object at 0x7f03a88ab040>

    def test_bad_percentage(self, simulate_request, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:290: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a7893c30>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a782b880>, 'CHECK...b880>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a782b880>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a88ab040>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_option_auto_parse_qs_csv_multiple_fields_true[simulate_request_post_query_params-asgi-t=1&t=,1,4,,5-True-expected7] _

self = <test_query_params.TestQueryParams object at 0x7f02691acac0>
simulate_request = <function simulate_request_post_query_params at 0x7f0269180ca0>
client = <falcon.testing.client.TestClient object at 0x7f029d553af0>
resource = <test_query_params.Resource object at 0x7f029d550cd0>
qs = 't=1&t=,1,4,,5', keep_blank = True, expected = ['1', '', '1', '4', '', '5']

    @pytest.mark.parametrize(
        'qs, keep_blank, expected',
        [
            ('t=1&t=3,4', False, ['1', '3', '4']),
            ('t=1&t=2&t=3,4', False, ['1', '2', '3', '4']),
            ('t=1,2&t=3,4', False, ['1', '2', '3', '4']),
            ('t=1,,2&t=3,4', False, ['1', '2', '3', '4']),
            ('t=1,,2&t=3,4', True, ['1', '', '2', '3', '4']),
            ('t=1,2&t=3,4,,5', False, ['1', '2', '3', '4', '5']),
            ('t=1&t=,1,4,,5', False, ['1', '1', '4', '5']),
            ('t=1&t=,1,4,,5', True, ['1', '', '1', '4', '', '5']),
            (
                't=1&t=,1,4,,5&t=a,b,c',
                True,
                ['1', '', '1', '4', '', '5', 'a', 'b', 'c'],
            ),
        ],
    )
    def test_option_auto_parse_qs_csv_multiple_fields_true(
        self,
        simulate_request,
        client,
        resource,
        qs,
        keep_blank,
        expected,
    ):
>       client.app.add_route('/', resource)

tests/test_query_params.py:229: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a7890200>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7811900>, 'CHECK...1900>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7811900>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f029d550cd0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_multiple_keys_as_int[simulate_request_get_query_params-asgi] _

self = <test_query_params.TestQueryParams object at 0x7f0268ff14e0>
simulate_request = <function simulate_request_get_query_params at 0x7f0269180c10>
client = <falcon.testing.client.TestClient object at 0x7f029d4fc550>
resource = <test_query_params.Resource object at 0x7f029d4fee30>

    def test_multiple_keys_as_int(self, simulate_request, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:772: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a7890190>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7811e10>, 'CHECK...1e10>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7811e10>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f029d4fee30>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_required[simulate_request_post_query_params-asgi-get_param_as_float] _

self = <test_query_params.TestQueryParams object at 0x7f02691ae9e0>
simulate_request = <function simulate_request_post_query_params at 0x7f0269180ca0>
client = <falcon.testing.client.TestClient object at 0x7f03a8407cd0>
resource = <test_query_params.Resource object at 0x7f03a8407010>
method_name = 'get_param_as_float'

    @pytest.mark.parametrize(
        'method_name',
        [
            'get_param',
            'get_param_as_int',
            'get_param_as_float',
            'get_param_as_uuid',
            'get_param_as_bool',
            'get_param_as_list',
        ],
    )
    def test_required(self, simulate_request, client, resource, method_name):
>       client.app.add_route('/', resource)

tests/test_query_params.py:334: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a7872ff0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7813b50>, 'CHECK...3b50>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7813b50>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a8407010>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_multiple_form_keys[simulate_request_get_query_params-asgi] _

self = <test_query_params.TestQueryParams object at 0x7f02691adf90>
simulate_request = <function simulate_request_get_query_params at 0x7f0269180c10>
client = <falcon.testing.client.TestClient object at 0x7f03a841eb60>
resource = <test_query_params.Resource object at 0x7f03a841fcd0>

    def test_multiple_form_keys(self, simulate_request, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:751: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a7872110>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7813370>, 'CHECK...3370>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7813370>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a841fcd0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_bad_percentage[simulate_request_get_query_params-asgi] __

self = <test_query_params.TestQueryParams object at 0x7f02691ad4e0>
simulate_request = <function simulate_request_get_query_params at 0x7f0269180c10>
client = <falcon.testing.client.TestClient object at 0x7f03a8804880>
resource = <test_query_params.Resource object at 0x7f03a8804070>

    def test_bad_percentage(self, simulate_request, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:290: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a881e500>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78109d0>, 'CHECK...09d0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78109d0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a8804070>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_required[simulate_request_get_query_params-asgi-get_param_as_uuid] _

self = <test_query_params.TestQueryParams object at 0x7f02691ae3b0>
simulate_request = <function simulate_request_get_query_params at 0x7f0269180c10>
client = <falcon.testing.client.TestClient object at 0x7f03a83487c0>
resource = <test_query_params.Resource object at 0x7f03a83480a0>
method_name = 'get_param_as_uuid'

    @pytest.mark.parametrize(
        'method_name',
        [
            'get_param',
            'get_param_as_int',
            'get_param_as_float',
            'get_param_as_uuid',
            'get_param_as_bool',
            'get_param_as_list',
        ],
    )
    def test_required(self, simulate_request, client, resource, method_name):
>       client.app.add_route('/', resource)

tests/test_query_params.py:334: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a7890900>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7810310>, 'CHECK...0310>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7810310>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a83480a0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_option_auto_parse_qs_csv_multiple_fields_true[simulate_request_get_query_params-asgi-t=1&t=,1,4,,5-False-expected6] _

self = <test_query_params.TestQueryParams object at 0x7f02691ac070>
simulate_request = <function simulate_request_get_query_params at 0x7f0269180c10>
client = <falcon.testing.client.TestClient object at 0x7f03a8850940>
resource = <test_query_params.Resource object at 0x7f03a8851e70>
qs = 't=1&t=,1,4,,5', keep_blank = False, expected = ['1', '1', '4', '5']

    @pytest.mark.parametrize(
        'qs, keep_blank, expected',
        [
            ('t=1&t=3,4', False, ['1', '3', '4']),
            ('t=1&t=2&t=3,4', False, ['1', '2', '3', '4']),
            ('t=1,2&t=3,4', False, ['1', '2', '3', '4']),
            ('t=1,,2&t=3,4', False, ['1', '2', '3', '4']),
            ('t=1,,2&t=3,4', True, ['1', '', '2', '3', '4']),
            ('t=1,2&t=3,4,,5', False, ['1', '2', '3', '4', '5']),
            ('t=1&t=,1,4,,5', False, ['1', '1', '4', '5']),
            ('t=1&t=,1,4,,5', True, ['1', '', '1', '4', '', '5']),
            (
                't=1&t=,1,4,,5&t=a,b,c',
                True,
                ['1', '', '1', '4', '', '5', 'a', 'b', 'c'],
            ),
        ],
    )
    def test_option_auto_parse_qs_csv_multiple_fields_true(
        self,
        simulate_request,
        client,
        resource,
        qs,
        keep_blank,
        expected,
    ):
>       client.app.add_route('/', resource)

tests/test_query_params.py:229: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a7890200>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78115a0>, 'CHECK...15a0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78115a0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a8851e70>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_option_auto_parse_qs_csv_multiple_fields_true[simulate_request_post_query_params-asgi-t=1&t=2&t=3,4-False-expected1] _

self = <test_query_params.TestQueryParams object at 0x7f02691ac760>
simulate_request = <function simulate_request_post_query_params at 0x7f0269180ca0>
client = <falcon.testing.client.TestClient object at 0x7f029d4e1a20>
resource = <test_query_params.Resource object at 0x7f029d4e1930>
qs = 't=1&t=2&t=3,4', keep_blank = False, expected = ['1', '2', '3', '4']

    @pytest.mark.parametrize(
        'qs, keep_blank, expected',
        [
            ('t=1&t=3,4', False, ['1', '3', '4']),
            ('t=1&t=2&t=3,4', False, ['1', '2', '3', '4']),
            ('t=1,2&t=3,4', False, ['1', '2', '3', '4']),
            ('t=1,,2&t=3,4', False, ['1', '2', '3', '4']),
            ('t=1,,2&t=3,4', True, ['1', '', '2', '3', '4']),
            ('t=1,2&t=3,4,,5', False, ['1', '2', '3', '4', '5']),
            ('t=1&t=,1,4,,5', False, ['1', '1', '4', '5']),
            ('t=1&t=,1,4,,5', True, ['1', '', '1', '4', '', '5']),
            (
                't=1&t=,1,4,,5&t=a,b,c',
                True,
                ['1', '', '1', '4', '', '5', 'a', 'b', 'c'],
            ),
        ],
    )
    def test_option_auto_parse_qs_csv_multiple_fields_true(
        self,
        simulate_request,
        client,
        resource,
        qs,
        keep_blank,
        expected,
    ):
>       client.app.add_route('/', resource)

tests/test_query_params.py:229: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a78726c0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7813a30>, 'CHECK...3a30>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7813a30>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f029d4e1930>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
______ TestQueryParams.test_uuid[simulate_request_get_query_params-asgi] _______

self = <test_query_params.TestQueryParams object at 0x7f02691afa90>
simulate_request = <function simulate_request_get_query_params at 0x7f0269180c10>
client = <falcon.testing.client.TestClient object at 0x7f029d4838e0>
resource = <test_query_params.Resource object at 0x7f029d480400>

    def test_uuid(self, simulate_request, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:502: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a7872b90>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a88b8700>, 'CHECK...8700>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a88b8700>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f029d480400>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_get_date_valid[simulate_request_post_query_params-asgi] _

self = <test_query_params.TestQueryParams object at 0x7f0268ff2620>
simulate_request = <function simulate_request_post_query_params at 0x7f0269180ca0>
client = <falcon.testing.client.TestClient object at 0x7f03a775f8e0>
resource = <test_query_params.Resource object at 0x7f03a775e920>

    def test_get_date_valid(self, simulate_request, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:799: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a7884a50>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7811cf0>, 'CHECK...1cf0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7811cf0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a775e920>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_boolean_blank[simulate_request_post_query_params-asgi] __

self = <test_query_params.TestQueryParams object at 0x7f0268ff02e0>
simulate_request = <function simulate_request_post_query_params at 0x7f0269180ca0>
client = <falcon.testing.client.TestClient object at 0x7f03a83604c0>
resource = <test_query_params.Resource object at 0x7f03a8362a70>

    def test_boolean_blank(self, simulate_request, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:591: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a7885000>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a88b9120>, 'CHECK...9120>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a88b9120>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a8362a70>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_required[simulate_request_get_query_params-asgi-get_param_as_int] _

self = <test_query_params.TestQueryParams object at 0x7f02691ae290>
simulate_request = <function simulate_request_get_query_params at 0x7f0269180c10>
client = <falcon.testing.client.TestClient object at 0x7f03a830a380>
resource = <test_query_params.Resource object at 0x7f03a830b670>
method_name = 'get_param_as_int'

    @pytest.mark.parametrize(
        'method_name',
        [
            'get_param',
            'get_param_as_int',
            'get_param_as_float',
            'get_param_as_uuid',
            'get_param_as_bool',
            'get_param_as_list',
        ],
    )
    def test_required(self, simulate_request, client, resource, method_name):
>       client.app.add_route('/', resource)

tests/test_query_params.py:334: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a7887300>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7810310>, 'CHECK...0310>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7810310>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a830b670>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_get_dict_invalid[simulate_request_get_query_params-asgi] _

self = <test_query_params.TestQueryParams object at 0x7f02690385e0>
simulate_request = <function simulate_request_get_query_params at 0x7f0269180c10>
client = <falcon.testing.client.TestClient object at 0x7f03a84cf9a0>
resource = <test_query_params.Resource object at 0x7f03a84cff70>

    def test_get_dict_invalid(self, simulate_request, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:918: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a7884350>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7811cf0>, 'CHECK...1cf0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7811cf0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a84cff70>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
__________ TestQueryParams.test_get_param_as_json_handler_json[asgi] ___________

self = <test_query_params.TestQueryParams object at 0x7f0269038220>
client = <falcon.testing.client.TestClient object at 0x7f03a833b9a0>
resource = <test_query_params.Resource object at 0x7f03a833a6e0>

    def test_get_param_as_json_handler_json(self, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:927: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a78923b0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a88b81f0>, 'CHECK...81f0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a88b81f0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a833a6e0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
___ TestQueryParams.test_float_neg[simulate_request_post_query_params-asgi] ____

self = <test_query_params.TestQueryParams object at 0x7f02691afd00>
simulate_request = <function simulate_request_post_query_params at 0x7f0269180ca0>
client = <falcon.testing.client.TestClient object at 0x7f029d4e03d0>
resource = <test_query_params.Resource object at 0x7f029d4e01f0>

    def test_float_neg(self, simulate_request, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:478: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a78d6500>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a88b8700>, 'CHECK...8700>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a88b8700>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f029d4e01f0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_____ TestQueryParams.test_boolean[simulate_request_get_query_params-asgi] _____

self = <test_query_params.TestQueryParams object at 0x7f0269175cc0>
simulate_request = <function simulate_request_get_query_params at 0x7f0269180c10>
client = <falcon.testing.client.TestClient object at 0x7f03a83b9090>
resource = <test_query_params.Resource object at 0x7f03a83bb040>

    def test_boolean(self, simulate_request, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:531: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a7873290>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7813a30>, 'CHECK...3a30>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7813a30>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a83bb040>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_required[simulate_request_get_query_params-asgi-get_param_as_float] _

self = <test_query_params.TestQueryParams object at 0x7f02691ae320>
simulate_request = <function simulate_request_get_query_params at 0x7f0269180c10>
client = <falcon.testing.client.TestClient object at 0x7f03a88aaef0>
resource = <test_query_params.Resource object at 0x7f03a88a9780>
method_name = 'get_param_as_float'

    @pytest.mark.parametrize(
        'method_name',
        [
            'get_param',
            'get_param_as_int',
            'get_param_as_float',
            'get_param_as_uuid',
            'get_param_as_bool',
            'get_param_as_list',
        ],
    )
    def test_required(self, simulate_request, client, resource, method_name):
>       client.app.add_route('/', resource)

tests/test_query_params.py:334: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a7871a80>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a88baf80>, 'CHECK...af80>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a88baf80>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a88a9780>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
____ TestQueryParams.test_boolean[simulate_request_post_query_params-asgi] _____

self = <test_query_params.TestQueryParams object at 0x7f02693feb30>
simulate_request = <function simulate_request_post_query_params at 0x7f0269180ca0>
client = <falcon.testing.client.TestClient object at 0x7f03a83caef0>
resource = <test_query_params.Resource object at 0x7f03a83c9cf0>

    def test_boolean(self, simulate_request, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:531: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a78737d0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7813250>, 'CHECK...3250>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7813250>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a83c9cf0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_get_datetime_valid_with_format[simulate_request_get_query_params-asgi] _

self = <test_query_params.TestQueryParams object at 0x7f0268ff38b0>
simulate_request = <function simulate_request_get_query_params at 0x7f0269180c10>
client = <falcon.testing.client.TestClient object at 0x7f029d3be680>
resource = <test_query_params.Resource object at 0x7f029d3bec80>

    def test_get_datetime_valid_with_format(self, simulate_request, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:860: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a78d6ff0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a88f04c0>, 'CHECK...04c0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a88f04c0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f029d3bec80>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_multiple_keys_as_float[simulate_request_get_query_params-asgi] _

self = <test_query_params.TestQueryParams object at 0x7f0268ff1870>
simulate_request = <function simulate_request_get_query_params at 0x7f0269180c10>
client = <falcon.testing.client.TestClient object at 0x7f03a83ec880>
resource = <test_query_params.Resource object at 0x7f03a83ed4e0>

    def test_multiple_keys_as_float(self, simulate_request, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:779: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a78915b0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a88f30a0>, 'CHECK...30a0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a88f30a0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a83ed4e0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_____ TestQueryParams.test_default[simulate_request_get_query_params-asgi] _____

self = <test_query_params.TestQueryParams object at 0x7f0269175e40>
simulate_request = <function simulate_request_get_query_params at 0x7f0269180c10>
client = <falcon.testing.client.TestClient object at 0x7f03a839c3d0>
resource = <test_query_params.Resource object at 0x7f03a839e830>

    def test_default(self, simulate_request, client, resource):
        default = 'foobar'
        query_string = ''
>       client.app.add_route('/', resource)  # TODO: DRY up this setup logic

tests/test_query_params.py:103: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a7887450>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a88f2ef0>, 'CHECK...2ef0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a88f2ef0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a839e830>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
______ TestQueryParams.test_none[simulate_request_get_query_params-asgi] _______

self = <test_query_params.TestQueryParams object at 0x7f0269175de0>
simulate_request = <function simulate_request_get_query_params at 0x7f0269180c10>
client = <falcon.testing.client.TestClient object at 0x7f029d4fde10>
resource = <test_query_params.Resource object at 0x7f029d4fef20>

    def test_none(self, simulate_request, client, resource):
        query_string = ''
>       client.app.add_route('/', resource)  # TODO: DRY up this setup logic

tests/test_query_params.py:87: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a7886960>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a8529090>, 'CHECK...9090>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a8529090>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f029d4fef20>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_get_dict_missing_param[simulate_request_post_query_params-asgi] _

self = <test_query_params.TestQueryParams object at 0x7f0269038c40>
simulate_request = <function simulate_request_post_query_params at 0x7f0269180ca0>
client = <falcon.testing.client.TestClient object at 0x7f03a84f2b90>
resource = <test_query_params.Resource object at 0x7f03a84f3130>

    def test_get_dict_missing_param(self, simulate_request, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:900: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a7884740>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a852b5b0>, 'CHECK...b5b0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a852b5b0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a84f3130>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_option_auto_parse_qs_csv_multiple_fields_true[simulate_request_post_query_params-asgi-t=1,2&t=3,4,,5-False-expected5] _

self = <test_query_params.TestQueryParams object at 0x7f02691ac9a0>
simulate_request = <function simulate_request_post_query_params at 0x7f0269180ca0>
client = <falcon.testing.client.TestClient object at 0x7f029d53bd60>
resource = <test_query_params.Resource object at 0x7f029d53b310>
qs = 't=1,2&t=3,4,,5', keep_blank = False, expected = ['1', '2', '3', '4', '5']

    @pytest.mark.parametrize(
        'qs, keep_blank, expected',
        [
            ('t=1&t=3,4', False, ['1', '3', '4']),
            ('t=1&t=2&t=3,4', False, ['1', '2', '3', '4']),
            ('t=1,2&t=3,4', False, ['1', '2', '3', '4']),
            ('t=1,,2&t=3,4', False, ['1', '2', '3', '4']),
            ('t=1,,2&t=3,4', True, ['1', '', '2', '3', '4']),
            ('t=1,2&t=3,4,,5', False, ['1', '2', '3', '4', '5']),
            ('t=1&t=,1,4,,5', False, ['1', '1', '4', '5']),
            ('t=1&t=,1,4,,5', True, ['1', '', '1', '4', '', '5']),
            (
                't=1&t=,1,4,,5&t=a,b,c',
                True,
                ['1', '', '1', '4', '', '5', 'a', 'b', 'c'],
            ),
        ],
    )
    def test_option_auto_parse_qs_csv_multiple_fields_true(
        self,
        simulate_request,
        client,
        resource,
        qs,
        keep_blank,
        expected,
    ):
>       client.app.add_route('/', resource)

tests/test_query_params.py:229: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a786c5f0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a88f3d90>, 'CHECK...3d90>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a88f3d90>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f029d53b310>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_option_auto_parse_qs_csv_multiple_fields_true[simulate_request_get_query_params-asgi-t=1,2&t=3,4-False-expected2] _

self = <test_query_params.TestQueryParams object at 0x7f0269177df0>
simulate_request = <function simulate_request_get_query_params at 0x7f0269180c10>
client = <falcon.testing.client.TestClient object at 0x7f03a84d8880>
resource = <test_query_params.Resource object at 0x7f03a84d8b50>
qs = 't=1,2&t=3,4', keep_blank = False, expected = ['1', '2', '3', '4']

    @pytest.mark.parametrize(
        'qs, keep_blank, expected',
        [
            ('t=1&t=3,4', False, ['1', '3', '4']),
            ('t=1&t=2&t=3,4', False, ['1', '2', '3', '4']),
            ('t=1,2&t=3,4', False, ['1', '2', '3', '4']),
            ('t=1,,2&t=3,4', False, ['1', '2', '3', '4']),
            ('t=1,,2&t=3,4', True, ['1', '', '2', '3', '4']),
            ('t=1,2&t=3,4,,5', False, ['1', '2', '3', '4', '5']),
            ('t=1&t=,1,4,,5', False, ['1', '1', '4', '5']),
            ('t=1&t=,1,4,,5', True, ['1', '', '1', '4', '', '5']),
            (
                't=1&t=,1,4,,5&t=a,b,c',
                True,
                ['1', '', '1', '4', '', '5', 'a', 'b', 'c'],
            ),
        ],
    )
    def test_option_auto_parse_qs_csv_multiple_fields_true(
        self,
        simulate_request,
        client,
        resource,
        qs,
        keep_blank,
        expected,
    ):
>       client.app.add_route('/', resource)

tests/test_query_params.py:229: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a786c430>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a852bf40>, 'CHECK...bf40>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a852bf40>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a84d8b50>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_default_auto_parse_csv_behaviour[simulate_request_post_query_params-asgi] _

self = <test_query_params.TestQueryParams object at 0x7f02691ad750>
simulate_request = <function simulate_request_post_query_params at 0x7f0269180ca0>
client = <falcon.testing.client.TestClient object at 0x7f03a8406440>
resource = <test_query_params.Resource object at 0x7f03a8407340>

    def test_default_auto_parse_csv_behaviour(self, simulate_request, client, resource):
>       client.app.add_route('/', resource=resource)

tests/test_query_params.py:279: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a786cc80>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a852a560>, 'CHECK...a560>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a852a560>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a8407340>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_option_auto_parse_qs_csv_multiple_fields_true[simulate_request_get_query_params-asgi-t=1&t=2&t=3,4-False-expected1] _

self = <test_query_params.TestQueryParams object at 0x7f0269177d60>
simulate_request = <function simulate_request_get_query_params at 0x7f0269180c10>
client = <falcon.testing.client.TestClient object at 0x7f03a7866a10>
resource = <test_query_params.Resource object at 0x7f03a7866920>
qs = 't=1&t=2&t=3,4', keep_blank = False, expected = ['1', '2', '3', '4']

    @pytest.mark.parametrize(
        'qs, keep_blank, expected',
        [
            ('t=1&t=3,4', False, ['1', '3', '4']),
            ('t=1&t=2&t=3,4', False, ['1', '2', '3', '4']),
            ('t=1,2&t=3,4', False, ['1', '2', '3', '4']),
            ('t=1,,2&t=3,4', False, ['1', '2', '3', '4']),
            ('t=1,,2&t=3,4', True, ['1', '', '2', '3', '4']),
            ('t=1,2&t=3,4,,5', False, ['1', '2', '3', '4', '5']),
            ('t=1&t=,1,4,,5', False, ['1', '1', '4', '5']),
            ('t=1&t=,1,4,,5', True, ['1', '', '1', '4', '', '5']),
            (
                't=1&t=,1,4,,5&t=a,b,c',
                True,
                ['1', '', '1', '4', '', '5', 'a', 'b', 'c'],
            ),
        ],
    )
    def test_option_auto_parse_qs_csv_multiple_fields_true(
        self,
        simulate_request,
        client,
        resource,
        qs,
        keep_blank,
        expected,
    ):
>       client.app.add_route('/', resource)

tests/test_query_params.py:229: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a786d700>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7811a20>, 'CHECK...1a20>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7811a20>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a7866920>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_____ TestQueryParams.test_float[simulate_request_post_query_params-asgi] ______

self = <test_query_params.TestQueryParams object at 0x7f02691af940>
simulate_request = <function simulate_request_post_query_params at 0x7f0269180ca0>
client = <falcon.testing.client.TestClient object at 0x7f029d551b10>
resource = <test_query_params.Resource object at 0x7f029d553bb0>

    def test_float(self, simulate_request, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:426: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a7887290>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a85e51b0>, 'CHECK...51b0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a85e51b0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f029d553bb0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_get_datetime_invalid[simulate_request_post_query_params-asgi] _

self = <test_query_params.TestQueryParams object at 0x7f02690384c0>
simulate_request = <function simulate_request_post_query_params at 0x7f0269180ca0>
client = <falcon.testing.client.TestClient object at 0x7f029d51a890>
resource = <test_query_params.Resource object at 0x7f029d5199c0>

    def test_get_datetime_invalid(self, simulate_request, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:882: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a7885e70>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a88f31c0>, 'CHECK...31c0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a88f31c0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f029d5199c0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_get_datetime_valid[simulate_request_post_query_params-asgi] _

self = <test_query_params.TestQueryParams object at 0x7f0268ff3760>
simulate_request = <function simulate_request_post_query_params at 0x7f0269180ca0>
client = <falcon.testing.client.TestClient object at 0x7f03a8495180>
resource = <test_query_params.Resource object at 0x7f03a8494dc0>

    def test_get_datetime_valid(self, simulate_request, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:845: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a7890970>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a88ba4d0>, 'CHECK...a4d0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a88ba4d0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a8494dc0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_required[simulate_request_post_query_params-asgi-get_param_as_int] _

self = <test_query_params.TestQueryParams object at 0x7f02691ae950>
simulate_request = <function simulate_request_post_query_params at 0x7f0269180ca0>
client = <falcon.testing.client.TestClient object at 0x7f029d68df60>
resource = <test_query_params.Resource object at 0x7f029d68f9a0>
method_name = 'get_param_as_int'

    @pytest.mark.parametrize(
        'method_name',
        [
            'get_param',
            'get_param_as_int',
            'get_param_as_float',
            'get_param_as_uuid',
            'get_param_as_bool',
            'get_param_as_list',
        ],
    )
    def test_required(self, simulate_request, client, resource, method_name):
>       client.app.add_route('/', resource)

tests/test_query_params.py:334: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a78734c0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a83903a0>, 'CHECK...03a0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a83903a0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f029d68f9a0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_required[simulate_request_get_query_params-asgi-get_param] _

self = <test_query_params.TestQueryParams object at 0x7f02691ae110>
simulate_request = <function simulate_request_get_query_params at 0x7f0269180c10>
client = <falcon.testing.client.TestClient object at 0x7f03a83603d0>
resource = <test_query_params.Resource object at 0x7f03a8362290>
method_name = 'get_param'

    @pytest.mark.parametrize(
        'method_name',
        [
            'get_param',
            'get_param_as_int',
            'get_param_as_float',
            'get_param_as_uuid',
            'get_param_as_bool',
            'get_param_as_list',
        ],
    )
    def test_required(self, simulate_request, client, resource, method_name):
>       client.app.add_route('/', resource)

tests/test_query_params.py:334: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a7871690>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a88b8700>, 'CHECK...8700>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a88b8700>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a8362290>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_get_date_valid_with_format[simulate_request_get_query_params-asgi] _

self = <test_query_params.TestQueryParams object at 0x7f0268ff1fc0>
simulate_request = <function simulate_request_get_query_params at 0x7f0269180c10>
client = <falcon.testing.client.TestClient object at 0x7f03a8347b20>
resource = <test_query_params.Resource object at 0x7f03a8345510>

    def test_get_date_valid_with_format(self, simulate_request, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:814: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a786cf20>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a88b8f70>, 'CHECK...8f70>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a88b8f70>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a8345510>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_____ TestQueryParams.test_simple[simulate_request_get_query_params-asgi] ______

self = <test_query_params.TestQueryParams object at 0x7f0269176560>
simulate_request = <function simulate_request_get_query_params at 0x7f0269180c10>
client = <falcon.testing.client.TestClient object at 0x7f03a7707040>
resource = <test_query_params.Resource object at 0x7f03a7705240>

    def test_simple(self, simulate_request, client, resource):
        query_string = 'marker=deadbeef&limit=25'
>       client.app.add_route('/', resource)

tests/test_query_params.py:131: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a786c0b0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a88bbc70>, 'CHECK...bc70>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a88bbc70>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a7705240>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_option_auto_parse_qs_csv_multiple_fields_true[simulate_request_get_query_params-asgi-t=1&t=3,4-False-expected0] _

self = <test_query_params.TestQueryParams object at 0x7f0269177cd0>
simulate_request = <function simulate_request_get_query_params at 0x7f0269180c10>
client = <falcon.testing.client.TestClient object at 0x7f03a83efe80>
resource = <test_query_params.Resource object at 0x7f03a83edb70>
qs = 't=1&t=3,4', keep_blank = False, expected = ['1', '3', '4']

    @pytest.mark.parametrize(
        'qs, keep_blank, expected',
        [
            ('t=1&t=3,4', False, ['1', '3', '4']),
            ('t=1&t=2&t=3,4', False, ['1', '2', '3', '4']),
            ('t=1,2&t=3,4', False, ['1', '2', '3', '4']),
            ('t=1,,2&t=3,4', False, ['1', '2', '3', '4']),
            ('t=1,,2&t=3,4', True, ['1', '', '2', '3', '4']),
            ('t=1,2&t=3,4,,5', False, ['1', '2', '3', '4', '5']),
            ('t=1&t=,1,4,,5', False, ['1', '1', '4', '5']),
            ('t=1&t=,1,4,,5', True, ['1', '', '1', '4', '', '5']),
            (
                't=1&t=,1,4,,5&t=a,b,c',
                True,
                ['1', '', '1', '4', '', '5', 'a', 'b', 'c'],
            ),
        ],
    )
    def test_option_auto_parse_qs_csv_multiple_fields_true(
        self,
        simulate_request,
        client,
        resource,
        qs,
        keep_blank,
        expected,
    ):
>       client.app.add_route('/', resource)

tests/test_query_params.py:229: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a786c580>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a852bf40>, 'CHECK...bf40>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a852bf40>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a83edb70>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_option_auto_parse_qs_csv_multiple_fields_true[simulate_request_get_query_params-asgi-t=1&t=,1,4,,5&t=a,b,c-True-expected8] _

self = <test_query_params.TestQueryParams object at 0x7f02691ac190>
simulate_request = <function simulate_request_get_query_params at 0x7f0269180c10>
client = <falcon.testing.client.TestClient object at 0x7f03a83af6d0>
resource = <test_query_params.Resource object at 0x7f03a83ad390>
qs = 't=1&t=,1,4,,5&t=a,b,c', keep_blank = True
expected = ['1', '', '1', '4', '', '5', ...]

    @pytest.mark.parametrize(
        'qs, keep_blank, expected',
        [
            ('t=1&t=3,4', False, ['1', '3', '4']),
            ('t=1&t=2&t=3,4', False, ['1', '2', '3', '4']),
            ('t=1,2&t=3,4', False, ['1', '2', '3', '4']),
            ('t=1,,2&t=3,4', False, ['1', '2', '3', '4']),
            ('t=1,,2&t=3,4', True, ['1', '', '2', '3', '4']),
            ('t=1,2&t=3,4,,5', False, ['1', '2', '3', '4', '5']),
            ('t=1&t=,1,4,,5', False, ['1', '1', '4', '5']),
            ('t=1&t=,1,4,,5', True, ['1', '', '1', '4', '', '5']),
            (
                't=1&t=,1,4,,5&t=a,b,c',
                True,
                ['1', '', '1', '4', '', '5', 'a', 'b', 'c'],
            ),
        ],
    )
    def test_option_auto_parse_qs_csv_multiple_fields_true(
        self,
        simulate_request,
        client,
        resource,
        qs,
        keep_blank,
        expected,
    ):
>       client.app.add_route('/', resource)

tests/test_query_params.py:229: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a786bed0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a8390dc0>, 'CHECK...0dc0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a8390dc0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a83ad390>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
______ TestQueryParams.test_int[simulate_request_post_query_params-asgi] _______

self = <test_query_params.TestQueryParams object at 0x7f02691af1c0>
simulate_request = <function simulate_request_post_query_params at 0x7f0269180ca0>
client = <falcon.testing.client.TestClient object at 0x7f03a78f86d0>
resource = <test_query_params.Resource object at 0x7f03a78faf80>

    def test_int(self, simulate_request, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:350: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a7869930>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a85e7130>, 'CHECK...7130>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a85e7130>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a78faf80>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_________ TestQueryParams.test_get_param_as_json_no_handler_json[asgi] _________

self = <test_query_params.TestQueryParams object at 0x7f0269039330>
client = <falcon.testing.client.TestClient object at 0x7f03a88072e0>
resource = <test_query_params.Resource object at 0x7f03a8804c70>

    def test_get_param_as_json_no_handler_json(self, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:938: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a7868430>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a88f3640>, 'CHECK...3640>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a88f3640>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a8804c70>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_multiple_keys_as_float[simulate_request_post_query_params-asgi] _

self = <test_query_params.TestQueryParams object at 0x7f0268ff1ea0>
simulate_request = <function simulate_request_post_query_params at 0x7f0269180ca0>
client = <falcon.testing.client.TestClient object at 0x7f03a84972e0>
resource = <test_query_params.Resource object at 0x7f03a8494b80>

    def test_multiple_keys_as_float(self, simulate_request, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:779: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a786dd90>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7813250>, 'CHECK...3250>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7813250>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a8494b80>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_list_type_blank[simulate_request_get_query_params-asgi] _

self = <test_query_params.TestQueryParams object at 0x7f0268ff0460>
simulate_request = <function simulate_request_get_query_params at 0x7f0269180c10>
client = <falcon.testing.client.TestClient object at 0x7f029d4df340>
resource = <test_query_params.Resource object at 0x7f029d4ddfc0>

    def test_list_type_blank(self, simulate_request, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:652: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a78738b0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7811a20>, 'CHECK...1a20>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7811a20>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f029d4ddfc0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_multiple_keys_as_int[simulate_request_post_query_params-asgi] _

self = <test_query_params.TestQueryParams object at 0x7f0268ff1ae0>
simulate_request = <function simulate_request_post_query_params at 0x7f0269180ca0>
client = <falcon.testing.client.TestClient object at 0x7f03a83b9600>
resource = <test_query_params.Resource object at 0x7f03a83ba500>

    def test_multiple_keys_as_int(self, simulate_request, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:772: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a7887290>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a8391bd0>, 'CHECK...1bd0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a8391bd0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a83ba500>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_param_property[simulate_request_post_query_params-asgi] _

self = <test_query_params.TestQueryParams object at 0x7f0268ff11e0>
simulate_request = <function simulate_request_post_query_params at 0x7f0269180ca0>
client = <falcon.testing.client.TestClient object at 0x7f029d68cb20>
resource = <test_query_params.Resource object at 0x7f029d68e320>

    def test_param_property(self, simulate_request, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:738: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a786bd80>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a83937f0>, 'CHECK...37f0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a83937f0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f029d68e320>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_get_date_valid[simulate_request_get_query_params-asgi] __

self = <test_query_params.TestQueryParams object at 0x7f0268ff1ff0>
simulate_request = <function simulate_request_get_query_params at 0x7f0269180c10>
client = <falcon.testing.client.TestClient object at 0x7f03a819c850>
resource = <test_query_params.Resource object at 0x7f03a819ee30>

    def test_get_date_valid(self, simulate_request, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:799: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a7869700>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a52d0>, 'CHECK...52d0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a52d0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a819ee30>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_get_datetime_store[simulate_request_post_query_params-asgi] _

self = <test_query_params.TestQueryParams object at 0x7f0269038100>
simulate_request = <function simulate_request_post_query_params at 0x7f0269180ca0>
client = <falcon.testing.client.TestClient object at 0x7f03a789b010>
resource = <test_query_params.Resource object at 0x7f03a7898460>

    def test_get_datetime_store(self, simulate_request, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:871: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a7869e00>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a6710>, 'CHECK...6710>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a6710>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a7898460>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_required[simulate_request_post_query_params-asgi-get_param_as_uuid] _

self = <test_query_params.TestQueryParams object at 0x7f02691aea70>
simulate_request = <function simulate_request_post_query_params at 0x7f0269180ca0>
client = <falcon.testing.client.TestClient object at 0x7f03a841f2b0>
resource = <test_query_params.Resource object at 0x7f03a841e230>
method_name = 'get_param_as_uuid'

    @pytest.mark.parametrize(
        'method_name',
        [
            'get_param',
            'get_param_as_int',
            'get_param_as_float',
            'get_param_as_uuid',
            'get_param_as_bool',
            'get_param_as_list',
        ],
    )
    def test_required(self, simulate_request, client, resource, method_name):
>       client.app.add_route('/', resource)

tests/test_query_params.py:334: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a786e030>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a88b9900>, 'CHECK...9900>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a88b9900>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a841e230>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_get_dict_invalid[simulate_request_post_query_params-asgi] _

self = <test_query_params.TestQueryParams object at 0x7f02690391e0>
simulate_request = <function simulate_request_post_query_params at 0x7f0269180ca0>
client = <falcon.testing.client.TestClient object at 0x7f03a84d9690>
resource = <test_query_params.Resource object at 0x7f03a84d8df0>

    def test_get_dict_invalid(self, simulate_request, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:918: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a7887290>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a88f3910>, 'CHECK...3910>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a88f3910>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a84d8df0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
______ TestQueryParams.test_blank[simulate_request_get_query_params-asgi] ______

self = <test_query_params.TestQueryParams object at 0x7f0269176200>
simulate_request = <function simulate_request_get_query_params at 0x7f0269180c10>
client = <falcon.testing.client.TestClient object at 0x7f029d56d600>
resource = <test_query_params.Resource object at 0x7f029d56c2b0>

    def test_blank(self, simulate_request, client, resource):
        query_string = 'marker='
>       client.app.add_route('/', resource)

tests/test_query_params.py:118: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a7869070>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a5ea0>, 'CHECK...5ea0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a5ea0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f029d56c2b0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_option_auto_parse_qs_csv_complex_false[simulate_request_get_query_params-asgi] _

self = <test_query_params.TestQueryParams object at 0x7f02691ad120>
simulate_request = <function simulate_request_get_query_params at 0x7f0269180c10>
client = <falcon.testing.client.TestClient object at 0x7f03a83616f0>
resource = <test_query_params.Resource object at 0x7f03a8362b00>

    def test_option_auto_parse_qs_csv_complex_false(
        self, simulate_request, client, resource
    ):
>       client.app.add_route('/', resource)

tests/test_query_params.py:245: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f029d491310>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a5b40>, 'CHECK...5b40>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a5b40>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a8362b00>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_get_datetime_valid[simulate_request_get_query_params-asgi] _

self = <test_query_params.TestQueryParams object at 0x7f0268ff3130>
simulate_request = <function simulate_request_get_query_params at 0x7f0269180c10>
client = <falcon.testing.client.TestClient object at 0x7f03a775dae0>
resource = <test_query_params.Resource object at 0x7f03a775e9e0>

    def test_get_datetime_valid(self, simulate_request, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:845: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f029d490660>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a6cb0>, 'CHECK...6cb0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a6cb0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a775e9e0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
______ TestQueryParams.test_uuid[simulate_request_post_query_params-asgi] ______

self = <test_query_params.TestQueryParams object at 0x7f02691afa60>
simulate_request = <function simulate_request_post_query_params at 0x7f0269180ca0>
client = <falcon.testing.client.TestClient object at 0x7f03a789bd60>
resource = <test_query_params.Resource object at 0x7f03a789a4a0>

    def test_uuid(self, simulate_request, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:502: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f029d4903c0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a43a0>, 'CHECK...43a0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a43a0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a789a4a0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_get_date_invalid[simulate_request_post_query_params-asgi] _

self = <test_query_params.TestQueryParams object at 0x7f0268ff33a0>
simulate_request = <function simulate_request_post_query_params at 0x7f0269180ca0>
client = <falcon.testing.client.TestClient object at 0x7f03a830b700>
resource = <test_query_params.Resource object at 0x7f03a830b280>

    def test_get_date_invalid(self, simulate_request, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:835: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a7869150>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a4ca0>, 'CHECK...4ca0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a4ca0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a830b280>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_get_dict_store[simulate_request_post_query_params-asgi] _

self = <test_query_params.TestQueryParams object at 0x7f0269038df0>
simulate_request = <function simulate_request_post_query_params at 0x7f0269180ca0>
client = <falcon.testing.client.TestClient object at 0x7f029d4dd0c0>
resource = <test_query_params.Resource object at 0x7f029d4df190>

    def test_get_dict_store(self, simulate_request, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:908: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f029d492c70>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a83901f0>, 'CHECK...01f0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a83901f0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f029d4df190>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_option_auto_parse_qs_csv_multiple_fields_true[simulate_request_get_query_params-asgi-t=1,,2&t=3,4-False-expected3] _

self = <test_query_params.TestQueryParams object at 0x7f0269177e80>
simulate_request = <function simulate_request_get_query_params at 0x7f0269180c10>
client = <falcon.testing.client.TestClient object at 0x7f03a8853730>
resource = <test_query_params.Resource object at 0x7f03a8850280>
qs = 't=1,,2&t=3,4', keep_blank = False, expected = ['1', '2', '3', '4']

    @pytest.mark.parametrize(
        'qs, keep_blank, expected',
        [
            ('t=1&t=3,4', False, ['1', '3', '4']),
            ('t=1&t=2&t=3,4', False, ['1', '2', '3', '4']),
            ('t=1,2&t=3,4', False, ['1', '2', '3', '4']),
            ('t=1,,2&t=3,4', False, ['1', '2', '3', '4']),
            ('t=1,,2&t=3,4', True, ['1', '', '2', '3', '4']),
            ('t=1,2&t=3,4,,5', False, ['1', '2', '3', '4', '5']),
            ('t=1&t=,1,4,,5', False, ['1', '1', '4', '5']),
            ('t=1&t=,1,4,,5', True, ['1', '', '1', '4', '', '5']),
            (
                't=1&t=,1,4,,5&t=a,b,c',
                True,
                ['1', '', '1', '4', '', '5', 'a', 'b', 'c'],
            ),
        ],
    )
    def test_option_auto_parse_qs_csv_multiple_fields_true(
        self,
        simulate_request,
        client,
        resource,
        qs,
        keep_blank,
        expected,
    ):
>       client.app.add_route('/', resource)

tests/test_query_params.py:229: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f029d4905f0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7811360>, 'CHECK...1360>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7811360>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a8850280>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
____ TestQueryParams.test_int_neg[simulate_request_post_query_params-asgi] _____

self = <test_query_params.TestQueryParams object at 0x7f02691af580>
simulate_request = <function simulate_request_post_query_params at 0x7f0269180ca0>
client = <falcon.testing.client.TestClient object at 0x7f03a8349db0>
resource = <test_query_params.Resource object at 0x7f03a83494b0>

    def test_int_neg(self, simulate_request, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:402: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f029d491850>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a48b0>, 'CHECK...48b0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a48b0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a83494b0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
__ TestQueryParams.test_allowed_names[simulate_request_get_query_params-asgi] __

self = <test_query_params.TestQueryParams object at 0x7f02691ad8a0>
simulate_request = <function simulate_request_get_query_params at 0x7f0269180c10>
client = <falcon.testing.client.TestClient object at 0x7f03a78e0070>
resource = <test_query_params.Resource object at 0x7f03a78e0190>

    def test_allowed_names(self, simulate_request, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:301: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a78691c0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a6b00>, 'CHECK...6b00>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a6b00>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a78e0190>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_option_auto_parse_qs_csv_simple_false[simulate_request_post_query_params-asgi] _

self = <test_query_params.TestQueryParams object at 0x7f0269177310>
simulate_request = <function simulate_request_post_query_params at 0x7f0269180ca0>
client = <falcon.testing.client.TestClient object at 0x7f03a8338460>
resource = <test_query_params.Resource object at 0x7f03a833a110>

    def test_option_auto_parse_qs_csv_simple_false(
        self, simulate_request, client, resource
    ):
>       client.app.add_route('/', resource)

tests/test_query_params.py:160: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f029d490820>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a5360>, 'CHECK...5360>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a5360>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a833a110>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_get_date_invalid[simulate_request_get_query_params-asgi] _

self = <test_query_params.TestQueryParams object at 0x7f0268ff2d70>
simulate_request = <function simulate_request_get_query_params at 0x7f0269180c10>
client = <falcon.testing.client.TestClient object at 0x7f03a839f910>
resource = <test_query_params.Resource object at 0x7f03a839e530>

    def test_get_date_invalid(self, simulate_request, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:835: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a7868900>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a6710>, 'CHECK...6710>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a6710>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a839e530>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
__ TestQueryParams.test_boolean_blank[simulate_request_get_query_params-asgi] __

self = <test_query_params.TestQueryParams object at 0x7f026910e980>
simulate_request = <function simulate_request_get_query_params at 0x7f0269180c10>
client = <falcon.testing.client.TestClient object at 0x7f03a8805030>
resource = <test_query_params.Resource object at 0x7f03a8806da0>

    def test_boolean_blank(self, simulate_request, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:591: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f029d52c040>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a68c0>, 'CHECK...68c0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a68c0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a8806da0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_multiple_keys_as_bool[simulate_request_get_query_params-asgi] _

self = <test_query_params.TestQueryParams object at 0x7f0268ff14b0>
simulate_request = <function simulate_request_get_query_params at 0x7f0269180c10>
client = <falcon.testing.client.TestClient object at 0x7f029d3bc4c0>
resource = <test_query_params.Resource object at 0x7f029d3bf040>

    def test_multiple_keys_as_bool(self, simulate_request, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:765: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f029d52c580>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a4700>, 'CHECK...4700>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a4700>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f029d3bf040>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_option_auto_parse_qs_csv_multiple_fields_true[simulate_request_get_query_params-asgi-t=1,2&t=3,4,,5-False-expected5] _

self = <test_query_params.TestQueryParams object at 0x7f0269177fa0>
simulate_request = <function simulate_request_get_query_params at 0x7f0269180c10>
client = <falcon.testing.client.TestClient object at 0x7f03a78d3700>
resource = <test_query_params.Resource object at 0x7f03a78d0520>
qs = 't=1,2&t=3,4,,5', keep_blank = False, expected = ['1', '2', '3', '4', '5']

    @pytest.mark.parametrize(
        'qs, keep_blank, expected',
        [
            ('t=1&t=3,4', False, ['1', '3', '4']),
            ('t=1&t=2&t=3,4', False, ['1', '2', '3', '4']),
            ('t=1,2&t=3,4', False, ['1', '2', '3', '4']),
            ('t=1,,2&t=3,4', False, ['1', '2', '3', '4']),
            ('t=1,,2&t=3,4', True, ['1', '', '2', '3', '4']),
            ('t=1,2&t=3,4,,5', False, ['1', '2', '3', '4', '5']),
            ('t=1&t=,1,4,,5', False, ['1', '1', '4', '5']),
            ('t=1&t=,1,4,,5', True, ['1', '', '1', '4', '', '5']),
            (
                't=1&t=,1,4,,5&t=a,b,c',
                True,
                ['1', '', '1', '4', '', '5', 'a', 'b', 'c'],
            ),
        ],
    )
    def test_option_auto_parse_qs_csv_multiple_fields_true(
        self,
        simulate_request,
        client,
        resource,
        qs,
        keep_blank,
        expected,
    ):
>       client.app.add_route('/', resource)

tests/test_query_params.py:229: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f029d4925e0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a4c10>, 'CHECK...4c10>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a4c10>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a78d0520>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_multiple_form_keys[simulate_request_post_query_params-asgi] _

self = <test_query_params.TestQueryParams object at 0x7f0268ff1360>
simulate_request = <function simulate_request_post_query_params at 0x7f0269180ca0>
client = <falcon.testing.client.TestClient object at 0x7f03a8360970>
resource = <test_query_params.Resource object at 0x7f03a8362860>

    def test_multiple_form_keys(self, simulate_request, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:751: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a7869850>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a7760>, 'CHECK...7760>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a7760>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a8362860>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_get_date_valid_with_format[simulate_request_post_query_params-asgi] _

self = <test_query_params.TestQueryParams object at 0x7f0268ff2c20>
simulate_request = <function simulate_request_post_query_params at 0x7f0269180ca0>
client = <falcon.testing.client.TestClient object at 0x7f029d4fead0>
resource = <test_query_params.Resource object at 0x7f029d4fe950>

    def test_get_date_valid_with_format(self, simulate_request, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:814: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f029d52ece0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a40d0>, 'CHECK...40d0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a40d0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f029d4fe950>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_option_auto_parse_qs_csv_multiple_fields_false[simulate_request_get_query_params-asgi] _

self = <test_query_params.TestQueryParams object at 0x7f0269177460>
simulate_request = <function simulate_request_get_query_params at 0x7f0269180c10>
client = <falcon.testing.client.TestClient object at 0x7f03a77040a0>
resource = <test_query_params.Resource object at 0x7f03a77078b0>

    def test_option_auto_parse_qs_csv_multiple_fields_false(
        self, simulate_request, client, resource
    ):
>       client.app.add_route('/', resource)

tests/test_query_params.py:191: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f029d52ec00>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a2950>, 'CHECK...2950>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a2950>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a77078b0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_param_property[simulate_request_get_query_params-asgi] __

self = <test_query_params.TestQueryParams object at 0x7f0268ff0bb0>
simulate_request = <function simulate_request_get_query_params at 0x7f0269180c10>
client = <falcon.testing.client.TestClient object at 0x7f03a783f790>
resource = <test_query_params.Resource object at 0x7f03a783c550>

    def test_param_property(self, simulate_request, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:738: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f029d52c890>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a0700>, 'CHECK...0700>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a0700>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a783c550>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_option_auto_parse_qs_csv_multiple_fields_true[simulate_request_post_query_params-asgi-t=1,,2&t=3,4-False-expected3] _

self = <test_query_params.TestQueryParams object at 0x7f02691ac880>
simulate_request = <function simulate_request_post_query_params at 0x7f0269180ca0>
client = <falcon.testing.client.TestClient object at 0x7f029d3bd870>
resource = <test_query_params.Resource object at 0x7f029d3bd8d0>
qs = 't=1,,2&t=3,4', keep_blank = False, expected = ['1', '2', '3', '4']

    @pytest.mark.parametrize(
        'qs, keep_blank, expected',
        [
            ('t=1&t=3,4', False, ['1', '3', '4']),
            ('t=1&t=2&t=3,4', False, ['1', '2', '3', '4']),
            ('t=1,2&t=3,4', False, ['1', '2', '3', '4']),
            ('t=1,,2&t=3,4', False, ['1', '2', '3', '4']),
            ('t=1,,2&t=3,4', True, ['1', '', '2', '3', '4']),
            ('t=1,2&t=3,4,,5', False, ['1', '2', '3', '4', '5']),
            ('t=1&t=,1,4,,5', False, ['1', '1', '4', '5']),
            ('t=1&t=,1,4,,5', True, ['1', '', '1', '4', '', '5']),
            (
                't=1&t=,1,4,,5&t=a,b,c',
                True,
                ['1', '', '1', '4', '', '5', 'a', 'b', 'c'],
            ),
        ],
    )
    def test_option_auto_parse_qs_csv_multiple_fields_true(
        self,
        simulate_request,
        client,
        resource,
        qs,
        keep_blank,
        expected,
    ):
>       client.app.add_route('/', resource)

tests/test_query_params.py:229: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f029d490c80>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a6320>, 'CHECK...6320>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a6320>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f029d3bd8d0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_required[simulate_request_get_query_params-asgi-get_param_as_bool] _

self = <test_query_params.TestQueryParams object at 0x7f02691ae440>
simulate_request = <function simulate_request_get_query_params at 0x7f0269180c10>
client = <falcon.testing.client.TestClient object at 0x7f03a83631c0>
resource = <test_query_params.Resource object at 0x7f03a8362590>
method_name = 'get_param_as_bool'

    @pytest.mark.parametrize(
        'method_name',
        [
            'get_param',
            'get_param_as_int',
            'get_param_as_float',
            'get_param_as_uuid',
            'get_param_as_bool',
            'get_param_as_list',
        ],
    )
    def test_required(self, simulate_request, client, resource, method_name):
>       client.app.add_route('/', resource)

tests/test_query_params.py:334: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f029d491930>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a68c0>, 'CHECK...68c0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a68c0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a8362590>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_get_date_store[simulate_request_get_query_params-asgi] __

self = <test_query_params.TestQueryParams object at 0x7f0268ff29b0>
simulate_request = <function simulate_request_get_query_params at 0x7f0269180c10>
client = <falcon.testing.client.TestClient object at 0x7f029d4e1e40>
resource = <test_query_params.Resource object at 0x7f029d4e0a00>

    def test_get_date_store(self, simulate_request, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:825: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f029d52d310>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a2680>, 'CHECK...2680>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a2680>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f029d4e0a00>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
___ TestQueryParams.test_has_param[simulate_request_post_query_params-asgi] ____

self = <test_query_params.TestQueryParams object at 0x7f0269039a80>
simulate_request = <function simulate_request_post_query_params at 0x7f0269180ca0>
client = <falcon.testing.client.TestClient object at 0x7f03a83c9540>
resource = <test_query_params.Resource object at 0x7f03a83cb7f0>

    def test_has_param(self, simulate_request, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:947: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f029d52eff0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a25f0>, 'CHECK...25f0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a25f0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a83cb7f0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_allowed_names[simulate_request_post_query_params-asgi] __

self = <test_query_params.TestQueryParams object at 0x7f02691ade10>
simulate_request = <function simulate_request_post_query_params at 0x7f0269180ca0>
client = <falcon.testing.client.TestClient object at 0x7f03a84f16f0>
resource = <test_query_params.Resource object at 0x7f03a84f3310>

    def test_allowed_names(self, simulate_request, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:301: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f029d52cf20>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a0e50>, 'CHECK...0e50>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a0e50>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a84f3310>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_option_auto_parse_qs_csv_simple_true[simulate_request_post_query_params-asgi] _

self = <test_query_params.TestQueryParams object at 0x7f02691776d0>
simulate_request = <function simulate_request_post_query_params at 0x7f0269180ca0>
client = <falcon.testing.client.TestClient object at 0x7f029d518880>
resource = <test_query_params.Resource object at 0x7f029d51ba00>

    def test_option_auto_parse_qs_csv_simple_true(
        self, simulate_request, client, resource
    ):
>       client.app.add_route('/', resource)

tests/test_query_params.py:175: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a7869b60>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a3c70>, 'CHECK...3c70>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a3c70>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f029d51ba00>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_required[simulate_request_get_query_params-asgi-get_param_as_list] _

self = <test_query_params.TestQueryParams object at 0x7f02691ae4d0>
simulate_request = <function simulate_request_get_query_params at 0x7f0269180c10>
client = <falcon.testing.client.TestClient object at 0x7f03a84f1d80>
resource = <test_query_params.Resource object at 0x7f029d4a45b0>
method_name = 'get_param_as_list'

    @pytest.mark.parametrize(
        'method_name',
        [
            'get_param',
            'get_param_as_int',
            'get_param_as_float',
            'get_param_as_uuid',
            'get_param_as_bool',
            'get_param_as_list',
        ],
    )
    def test_required(self, simulate_request, client, resource, method_name):
>       client.app.add_route('/', resource)

tests/test_query_params.py:334: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f029d545a10>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a3760>, 'CHECK...3760>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a3760>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f029d4a45b0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_get_dict_valid[simulate_request_get_query_params-asgi] __

self = <test_query_params.TestQueryParams object at 0x7f0269038280>
simulate_request = <function simulate_request_get_query_params at 0x7f0269180c10>
client = <falcon.testing.client.TestClient object at 0x7f03a83ef160>
resource = <test_query_params.Resource object at 0x7f03a83efb20>

    def test_get_dict_valid(self, simulate_request, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:892: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f029d5447b0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a20e0>, 'CHECK...20e0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a20e0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a83efb20>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
___ TestQueryParams.test_list_type[simulate_request_post_query_params-asgi] ____

self = <test_query_params.TestQueryParams object at 0x7f0268ff06a0>
simulate_request = <function simulate_request_post_query_params at 0x7f0269180ca0>
client = <falcon.testing.client.TestClient object at 0x7f03a8852080>
resource = <test_query_params.Resource object at 0x7f03a88506d0>

    def test_list_type(self, simulate_request, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:609: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f029d544f90>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a2f80>, 'CHECK...2f80>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a2f80>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a88506d0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_option_auto_parse_qs_csv_multiple_fields_true[simulate_request_post_query_params-asgi-t=1&t=,1,4,,5-False-expected6] _

self = <test_query_params.TestQueryParams object at 0x7f02691aca30>
simulate_request = <function simulate_request_post_query_params at 0x7f0269180ca0>
client = <falcon.testing.client.TestClient object at 0x7f03a84f1f30>
resource = <test_query_params.Resource object at 0x7f03a84f1f00>
qs = 't=1&t=,1,4,,5', keep_blank = False, expected = ['1', '1', '4', '5']

    @pytest.mark.parametrize(
        'qs, keep_blank, expected',
        [
            ('t=1&t=3,4', False, ['1', '3', '4']),
            ('t=1&t=2&t=3,4', False, ['1', '2', '3', '4']),
            ('t=1,2&t=3,4', False, ['1', '2', '3', '4']),
            ('t=1,,2&t=3,4', False, ['1', '2', '3', '4']),
            ('t=1,,2&t=3,4', True, ['1', '', '2', '3', '4']),
            ('t=1,2&t=3,4,,5', False, ['1', '2', '3', '4', '5']),
            ('t=1&t=,1,4,,5', False, ['1', '1', '4', '5']),
            ('t=1&t=,1,4,,5', True, ['1', '', '1', '4', '', '5']),
            (
                't=1&t=,1,4,,5&t=a,b,c',
                True,
                ['1', '', '1', '4', '', '5', 'a', 'b', 'c'],
            ),
        ],
    )
    def test_option_auto_parse_qs_csv_multiple_fields_true(
        self,
        simulate_request,
        client,
        resource,
        qs,
        keep_blank,
        expected,
    ):
>       client.app.add_route('/', resource)

tests/test_query_params.py:229: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f029d546110>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a0160>, 'CHECK...0160>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a0160>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a84f1f00>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
____ TestQueryParams.test_list_type[simulate_request_get_query_params-asgi] ____

self = <test_query_params.TestQueryParams object at 0x7f0268ff0430>
simulate_request = <function simulate_request_get_query_params at 0x7f0269180c10>
client = <falcon.testing.client.TestClient object at 0x7f03a7707850>
resource = <test_query_params.Resource object at 0x7f03a7706e90>

    def test_list_type(self, simulate_request, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:609: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a7869150>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a1ea0>, 'CHECK...1ea0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a1ea0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a7706e90>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_option_auto_parse_qs_csv_multiple_fields_true[simulate_request_post_query_params-asgi-t=1&t=,1,4,,5&t=a,b,c-True-expected8] _

self = <test_query_params.TestQueryParams object at 0x7f02691acb50>
simulate_request = <function simulate_request_post_query_params at 0x7f0269180ca0>
client = <falcon.testing.client.TestClient object at 0x7f03a84c6560>
resource = <test_query_params.Resource object at 0x7f03a8103e50>
qs = 't=1&t=,1,4,,5&t=a,b,c', keep_blank = True
expected = ['1', '', '1', '4', '', '5', ...]

    @pytest.mark.parametrize(
        'qs, keep_blank, expected',
        [
            ('t=1&t=3,4', False, ['1', '3', '4']),
            ('t=1&t=2&t=3,4', False, ['1', '2', '3', '4']),
            ('t=1,2&t=3,4', False, ['1', '2', '3', '4']),
            ('t=1,,2&t=3,4', False, ['1', '2', '3', '4']),
            ('t=1,,2&t=3,4', True, ['1', '', '2', '3', '4']),
            ('t=1,2&t=3,4,,5', False, ['1', '2', '3', '4', '5']),
            ('t=1&t=,1,4,,5', False, ['1', '1', '4', '5']),
            ('t=1&t=,1,4,,5', True, ['1', '', '1', '4', '', '5']),
            (
                't=1&t=,1,4,,5&t=a,b,c',
                True,
                ['1', '', '1', '4', '', '5', 'a', 'b', 'c'],
            ),
        ],
    )
    def test_option_auto_parse_qs_csv_multiple_fields_true(
        self,
        simulate_request,
        client,
        resource,
        qs,
        keep_blank,
        expected,
    ):
>       client.app.add_route('/', resource)

tests/test_query_params.py:229: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f029d492f10>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a2e60>, 'CHECK...2e60>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a2e60>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a8103e50>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
____ TestQueryParams.test_float_neg[simulate_request_get_query_params-asgi] ____

self = <test_query_params.TestQueryParams object at 0x7f02691af6d0>
simulate_request = <function simulate_request_get_query_params at 0x7f0269180c10>
client = <falcon.testing.client.TestClient object at 0x7f03a833a230>
resource = <test_query_params.Resource object at 0x7f03a833a350>

    def test_float_neg(self, simulate_request, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:478: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f029d52ed50>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a1630>, 'CHECK...1630>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a1630>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a833a350>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_option_auto_parse_qs_csv_multiple_fields_false[simulate_request_post_query_params-asgi] _

self = <test_query_params.TestQueryParams object at 0x7f0269177910>
simulate_request = <function simulate_request_post_query_params at 0x7f0269180ca0>
client = <falcon.testing.client.TestClient object at 0x7f03a8404af0>
resource = <test_query_params.Resource object at 0x7f03a8407910>

    def test_option_auto_parse_qs_csv_multiple_fields_false(
        self, simulate_request, client, resource
    ):
>       client.app.add_route('/', resource)

tests/test_query_params.py:191: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f029d492030>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a7760>, 'CHECK...7760>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a7760>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a8407910>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_______ TestQueryParams.test_int[simulate_request_get_query_params-asgi] _______

self = <test_query_params.TestQueryParams object at 0x7f02691ae200>
simulate_request = <function simulate_request_get_query_params at 0x7f0269180c10>
client = <falcon.testing.client.TestClient object at 0x7f03a88054b0>
resource = <test_query_params.Resource object at 0x7f03a8804c40>

    def test_int(self, simulate_request, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:350: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f029d52dee0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a31c0>, 'CHECK...31c0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a31c0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a8804c40>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_get_date_missing_param[simulate_request_get_query_params-asgi] _

self = <test_query_params.TestQueryParams object at 0x7f0268ff23b0>
simulate_request = <function simulate_request_get_query_params at 0x7f0269180c10>
client = <falcon.testing.client.TestClient object at 0x7f03a8495db0>
resource = <test_query_params.Resource object at 0x7f03a8496a70>

    def test_get_date_missing_param(self, simulate_request, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:807: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f029d5458c0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a0c10>, 'CHECK...0c10>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a0c10>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a8496a70>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
______ TestQueryParams.test_float[simulate_request_get_query_params-asgi] ______

self = <test_query_params.TestQueryParams object at 0x7f02691af310>
simulate_request = <function simulate_request_get_query_params at 0x7f0269180c10>
client = <falcon.testing.client.TestClient object at 0x7f03a84f2ce0>
resource = <test_query_params.Resource object at 0x7f03a84f3ac0>

    def test_float(self, simulate_request, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:426: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f029d5111c0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a3760>, 'CHECK...3760>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a3760>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a84f3ac0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ TestQueryParams.test_required[simulate_request_post_query_params-asgi-get_param] _

self = <test_query_params.TestQueryParams object at 0x7f02691ae8c0>
simulate_request = <function simulate_request_post_query_params at 0x7f0269180ca0>
client = <falcon.testing.client.TestClient object at 0x7f03a8495600>
resource = <test_query_params.Resource object at 0x7f03a84972b0>
method_name = 'get_param'

    @pytest.mark.parametrize(
        'method_name',
        [
            'get_param',
            'get_param_as_int',
            'get_param_as_float',
            'get_param_as_uuid',
            'get_param_as_bool',
            'get_param_as_list',
        ],
    )
    def test_required(self, simulate_request, client, resource, method_name):
>       client.app.add_route('/', resource)

tests/test_query_params.py:334: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f029d512f80>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f029d484940>, 'CHECK...4940>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f029d484940>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a84972b0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_________ TestPostQueryParams.test_empty_body_no_content_length[asgi] __________

self = <test_query_params.TestPostQueryParams object at 0x7f026903a860>
client = <falcon.testing.client.TestClient object at 0x7f03a8130670>
resource = <test_query_params.Resource object at 0x7f03a8130be0>

    def test_empty_body_no_content_length(self, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:1006: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f029d5138b0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f029d486320>, 'CHECK...6320>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f029d486320>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a8130be0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
______ TestPostQueryParams.test_http_methods_body_not_expected[asgi-HEAD] ______

self = <test_query_params.TestPostQueryParams object at 0x7f026903a3b0>
client = <falcon.testing.client.TestClient object at 0x7f03a839f280>
resource = <test_query_params.Resource object at 0x7f03a839e4a0>
http_method = 'HEAD'

    @pytest.mark.parametrize('http_method', ('GET', 'HEAD'))
    def test_http_methods_body_not_expected(self, client, resource, http_method):
>       client.app.add_route('/', resource)

tests/test_query_params.py:977: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f029d510c80>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f029d4840d0>, 'CHECK...40d0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f029d4840d0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a839e4a0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_________ TestPostQueryParams.test_explicitly_disable_auto_parse[asgi] _________

self = <test_query_params.TestPostQueryParams object at 0x7f026903aad0>
client = <falcon.testing.client.TestClient object at 0x7f029d68d6c0>
resource = <test_query_params.Resource object at 0x7f029d68e950>

    def test_explicitly_disable_auto_parse(self, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:1013: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f029d513290>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f029d4844c0>, 'CHECK...44c0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f029d4844c0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f029d68e950>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
______ TestPostQueryParams.test_http_methods_body_not_expected[asgi-GET] _______

self = <test_query_params.TestPostQueryParams object at 0x7f026903a380>
client = <falcon.testing.client.TestClient object at 0x7f03a78d0dc0>
resource = <test_query_params.Resource object at 0x7f03a78d1f60>
http_method = 'GET'

    @pytest.mark.parametrize('http_method', ('GET', 'HEAD'))
    def test_http_methods_body_not_expected(self, client, resource, http_method):
>       client.app.add_route('/', resource)

tests/test_query_params.py:977: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f029d510d60>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a7760>, 'CHECK...7760>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a7760>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a78d1f60>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
___________________ TestPostQueryParams.test_non_ascii[asgi] ___________________

self = <test_query_params.TestPostQueryParams object at 0x7f026903a410>
client = <falcon.testing.client.TestClient object at 0x7f029d56e9e0>
resource = <test_query_params.Resource object at 0x7f029d56fc70>

    def test_non_ascii(self, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:988: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f029d510ac0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a1240>, 'CHECK...1240>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a1240>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f029d56fc70>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
________ TestPostQueryParams.test_http_methods_body_expected[asgi-PUT] _________

self = <test_query_params.TestPostQueryParams object at 0x7f0269039de0>
client = <falcon.testing.client.TestClient object at 0x7f03a775c910>
resource = <test_query_params.Resource object at 0x7f03a775d750>
http_method = 'PUT'

    @pytest.mark.parametrize(
        'http_method', ('POST', 'PUT', 'PATCH', 'DELETE', 'OPTIONS')
    )
    def test_http_methods_body_expected(self, client, resource, http_method):
>       client.app.add_route('/', resource)

tests/test_query_params.py:965: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f029d490b30>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a3910>, 'CHECK...3910>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a3910>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a775d750>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
______ TestPostQueryParams.test_http_methods_body_expected[asgi-OPTIONS] _______

self = <test_query_params.TestPostQueryParams object at 0x7f0269039ff0>
client = <falcon.testing.client.TestClient object at 0x7f03a78d0fd0>
resource = <test_query_params.Resource object at 0x7f03a78d0700>
http_method = 'OPTIONS'

    @pytest.mark.parametrize(
        'http_method', ('POST', 'PUT', 'PATCH', 'DELETE', 'OPTIONS')
    )
    def test_http_methods_body_expected(self, client, resource, http_method):
>       client.app.add_route('/', resource)

tests/test_query_params.py:965: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f029d545540>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a37f0>, 'CHECK...37f0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a37f0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a78d0700>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
__________________ TestPostQueryParams.test_asgi_raises_error __________________

self = <test_query_params.TestPostQueryParams object at 0x7f026903ad40>
resource = <test_query_params.Resource object at 0x7f029d4a7f10>

    def test_asgi_raises_error(self, resource):
        app = create_app(asgi=True)
>       app.add_route('/', resource)

tests/test_query_params.py:1022: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f029d5476f0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f029d4871c0>, 'CHECK...71c0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f029d4871c0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f029d4a7f10>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
________ TestPostQueryParams.test_http_methods_body_expected[asgi-POST] ________

self = <test_query_params.TestPostQueryParams object at 0x7f0269039db0>
client = <falcon.testing.client.TestClient object at 0x7f03a7899570>
resource = <test_query_params.Resource object at 0x7f03a7898d30>
http_method = 'POST'

    @pytest.mark.parametrize(
        'http_method', ('POST', 'PUT', 'PATCH', 'DELETE', 'OPTIONS')
    )
    def test_http_methods_body_expected(self, client, resource, http_method):
>       client.app.add_route('/', resource)

tests/test_query_params.py:965: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f029d546ea0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f029d486b00>, 'CHECK...6b00>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f029d486b00>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a7898d30>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_______ TestPostQueryParams.test_http_methods_body_expected[asgi-PATCH] ________

self = <test_query_params.TestPostQueryParams object at 0x7f0269039ed0>
client = <falcon.testing.client.TestClient object at 0x7f03a84db220>
resource = <test_query_params.Resource object at 0x7f03a84da980>
http_method = 'PATCH'

    @pytest.mark.parametrize(
        'http_method', ('POST', 'PUT', 'PATCH', 'DELETE', 'OPTIONS')
    )
    def test_http_methods_body_expected(self, client, resource, http_method):
>       client.app.add_route('/', resource)

tests/test_query_params.py:965: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f029d52d540>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a37f0>, 'CHECK...37f0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a37f0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a84da980>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_______ TestPostQueryParams.test_http_methods_body_expected[asgi-DELETE] _______

self = <test_query_params.TestPostQueryParams object at 0x7f0269039f60>
client = <falcon.testing.client.TestClient object at 0x7f03a8346890>
resource = <test_query_params.Resource object at 0x7f03a83466e0>
http_method = 'DELETE'

    @pytest.mark.parametrize(
        'http_method', ('POST', 'PUT', 'PATCH', 'DELETE', 'OPTIONS')
    )
    def test_http_methods_body_expected(self, client, resource, http_method):
>       client.app.add_route('/', resource)

tests/test_query_params.py:965: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f029d544900>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a4ca0>, 'CHECK...4ca0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a4ca0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a83466e0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
__________________ TestPostQueryParams.test_empty_body[asgi] ___________________

self = <test_query_params.TestPostQueryParams object at 0x7f026903a5f0>
client = <falcon.testing.client.TestClient object at 0x7f03a783d900>
resource = <test_query_params.Resource object at 0x7f03a783f940>

    def test_empty_body(self, client, resource):
>       client.app.add_route('/', resource)

tests/test_query_params.py:999: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f029d547840>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a30a0>, 'CHECK...30a0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a30a0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method Resource.on_delete of <test_query_params.Resource object at 0x7f03a783f940>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
___ TestPostQueryParamsDefaultBehavior.test_dont_auto_parse_by_default[True] ___

self = <test_query_params.TestPostQueryParamsDefaultBehavior object at 0x7f026903b2b0>
asgi = True

    def test_dont_auto_parse_by_default(self, asgi):
        app = create_app(asgi)
        resource = testing.SimpleTestResource()
>       app.add_route('/', resource)

tests/test_query_params.py:1035: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f029d510430>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f029d486c20>, 'CHECK...6c20>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f029d486c20>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method SimpleTestResource.on_get of <falcon.testing.resource.SimpleTestResource object at 0x7f03a83acaf0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ test_datetime_converter[asgi-/{start_year:int}/{timestamp:dt("%Y-%m-%d %H:%M")}-/1961/1969-07-21 14:30-dt_expected2] _

client = <falcon.testing.client.TestClient object at 0x7f029d4e5810>
resource = <falcon.testing.resource.SimpleTestResource object at 0x7f029d4e4b80>
uri_template = '/{start_year:int}/{timestamp:dt("%Y-%m-%d %H:%M")}'
path = '/1961/1969-07-21 14:30'
dt_expected = datetime.datetime(1969, 7, 21, 14, 30)

    @pytest.mark.parametrize(
        'uri_template, path, dt_expected',
        [
            (
                '/{start_year:int}-to-{timestamp:dt}',
                '/1961-to-1969-07-21T02:56:00Z',
                datetime(1969, 7, 21, 2, 56, 0),
            ),
            (
                '/{start_year:int}-to-{timestamp:dt("%Y-%m-%d")}',
                '/1961-to-1969-07-21',
                datetime(1969, 7, 21),
            ),
            (
                '/{start_year:int}/{timestamp:dt("%Y-%m-%d %H:%M")}',
                '/1961/1969-07-21 14:30',
                datetime(1969, 7, 21, 14, 30),
            ),
            ('/{start_year:int}-to-{timestamp:dt("%Y-%m")}', '/1961-to-1969-07-21', None),
        ],
    )
    def test_datetime_converter(client, resource, uri_template, path, dt_expected):
>       client.app.add_route(uri_template, resource)

tests/test_uri_templates.py:301: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f029d510970>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a1d80>, 'CHECK...1d80>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a1d80>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method SimpleTestResource.on_get of <falcon.testing.resource.SimpleTestResource object at 0x7f029d4e4b80>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_______________________ test_adding_suffix_routes[asgi] ________________________

client = <falcon.testing.client.TestClient object at 0x7f03a84c4430>

    def test_adding_suffix_routes(client):
        resource_with_suffix_routes = ResourceWithSuffixRoutes()
>       client.app.add_route(
            '/collections/{collection_id}/items/{item_id}', resource_with_suffix_routes
        )

tests/test_uri_templates.py:530: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a8105e70>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a83f5120>, 'CHECK...5120>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a83f5120>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method ResourceWithSuffixRoutes.on_get of <test_uri_templates.ResourceWithSuffixRoutes object at 0x7f03a84c5f30>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_____________ test_float_converter[asgi-/{id:float(min=1.9)}-1.9] ______________

client = <falcon.testing.client.TestClient object at 0x7f03a818e350>
uri_template = '/{id:float(min=1.9)}', id_value = 1.9

    @pytest.mark.parametrize('id_value', [2, 2.1, 1.9])
    @pytest.mark.parametrize(
        'uri_template,',
        [
            '/{id:float}',
            '/{id:float(1)}',
            '/{id:float(min=1.9)}',
            '/{id:float(min=1.8, max=3)}',
        ],
    )
    def test_float_converter(client, uri_template, id_value):
        resource1 = IDResource()
>       client.app.add_route(uri_template, resource1)

tests/test_uri_templates.py:230: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a8107300>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a85e5240>, 'CHECK...5240>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a85e5240>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method IDResource.on_get of <test_uri_templates.IDResource object at 0x7f03a818df60>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ test_converter_custom[asgi-/{food:spam(")")}:{food_too:spam("()")}-/bacon:eggs-expected1] _

client = <falcon.testing.client.TestClient object at 0x7f03a789bd30>
resource = <falcon.testing.resource.SimpleTestResource object at 0x7f03a7899480>
uri_template = '/{food:spam(")")}:{food_too:spam("()")}', path = '/bacon:eggs'
expected = {'food': 'spam!', 'food_too': 'spam!'}

    @pytest.mark.parametrize(
        'uri_template, path, expected',
        [
            ('/{food:spam}', '/something', {'food': 'spam!'}),
            (
                '/{food:spam(")")}:{food_too:spam("()")}',
                '/bacon:eggs',
                {'food': 'spam!', 'food_too': 'spam!'},
            ),
            (
                '/({food:spam()}){food_too:spam("()")}',
                '/(bacon)eggs',
                {'food': 'spam!', 'food_too': 'spam!'},
            ),
        ],
    )
    def test_converter_custom(client, resource, uri_template, path, expected):
        class SpamConverter:
            def __init__(self, useless_text=None):
                pass
    
            def convert(self, fragment):
                return 'spam!'
    
        client.app.router_options.converters['spam'] = SpamConverter
>       client.app.add_route(uri_template, resource)

tests/test_uri_templates.py:412: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a81184a0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a3c70>, 'CHECK...3c70>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a3c70>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method SimpleTestResource.on_get of <falcon.testing.resource.SimpleTestResource object at 0x7f03a7899480>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
___________ test_float_converter[asgi-/{id:float(min=1.8, max=3)}-2] ___________

client = <falcon.testing.client.TestClient object at 0x7f03a84ccb50>
uri_template = '/{id:float(min=1.8, max=3)}', id_value = 2

    @pytest.mark.parametrize('id_value', [2, 2.1, 1.9])
    @pytest.mark.parametrize(
        'uri_template,',
        [
            '/{id:float}',
            '/{id:float(1)}',
            '/{id:float(min=1.9)}',
            '/{id:float(min=1.8, max=3)}',
        ],
    )
    def test_float_converter(client, uri_template, id_value):
        resource1 = IDResource()
>       client.app.add_route(uri_template, resource1)

tests/test_uri_templates.py:230: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a8118890>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a83f77f0>, 'CHECK...77f0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a83f77f0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method IDResource.on_get of <test_uri_templates.IDResource object at 0x7f03a84cf9a0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
________ test_converter_custom[asgi-/{food:spam}-/something-expected0] _________

client = <falcon.testing.client.TestClient object at 0x7f03a84c5480>
resource = <falcon.testing.resource.SimpleTestResource object at 0x7f03a84c5e40>
uri_template = '/{food:spam}', path = '/something', expected = {'food': 'spam!'}

    @pytest.mark.parametrize(
        'uri_template, path, expected',
        [
            ('/{food:spam}', '/something', {'food': 'spam!'}),
            (
                '/{food:spam(")")}:{food_too:spam("()")}',
                '/bacon:eggs',
                {'food': 'spam!', 'food_too': 'spam!'},
            ),
            (
                '/({food:spam()}){food_too:spam("()")}',
                '/(bacon)eggs',
                {'food': 'spam!', 'food_too': 'spam!'},
            ),
        ],
    )
    def test_converter_custom(client, resource, uri_template, path, expected):
        class SpamConverter:
            def __init__(self, useless_text=None):
                pass
    
            def convert(self, fragment):
                return 'spam!'
    
        client.app.router_options.converters['spam'] = SpamConverter
>       client.app.add_route(uri_template, resource)

tests/test_uri_templates.py:412: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a8119150>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a88f3f40>, 'CHECK...3f40>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a88f3f40>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method SimpleTestResource.on_get of <falcon.testing.resource.SimpleTestResource object at 0x7f03a84c5e40>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
____________ test_int_converter_rejections[asgi-/{id:int(min=124)}] ____________

client = <falcon.testing.client.TestClient object at 0x7f03a78faf20>
uri_template = '/{id:int(min=124)}'

    @pytest.mark.parametrize(
        'uri_template,',
        [
            '/{id:int(2)}',
            '/{id:int(min=124)}',
            '/{id:int(num_digits=3, max=100)}',
        ],
    )
    def test_int_converter_rejections(client, uri_template):
        resource1 = IDResource()
>       client.app.add_route(uri_template, resource1)

tests/test_uri_templates.py:271: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a81197e0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a88f24d0>, 'CHECK...24d0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a88f24d0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method IDResource.on_get of <test_uri_templates.IDResource object at 0x7f03a78f90f0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ test_uuid_converter[asgi-/versions/diff/{left:uuid}...{right:uuid()}-/versions/diff/4dc62bd0-421d-40ec-a1c1-349690fc17ba...5c335d2f-2097-4dd8-8bad-b5bacc3954a7-expected3] _

client = <falcon.testing.client.TestClient object at 0x7f03a8339e40>
resource = <falcon.testing.resource.SimpleTestResource object at 0x7f03a833a980>
uri_template = '/versions/diff/{left:uuid}...{right:uuid()}'
path = '/versions/diff/4dc62bd0-421d-40ec-a1c1-349690fc17ba...5c335d2f-2097-4dd8-8bad-b5bacc3954a7'
expected = {'left': UUID('4dc62bd0-421d-40ec-a1c1-349690fc17ba'), 'right': UUID('5c335d2f-2097-4dd8-8bad-b5bacc3954a7')}

    @pytest.mark.parametrize(
        'uri_template, path, expected',
        [
            (
                '/widgets/{widget_id:uuid}',
                '/widgets/' + _TEST_UUID_STR,
                {'widget_id': _TEST_UUID},
            ),
            (
                '/widgets/{widget_id:uuid}/orders',
                '/widgets/' + _TEST_UUID_STR_SANS_HYPHENS + '/orders',
                {'widget_id': _TEST_UUID},
            ),
            (
                '/versions/diff/{left:uuid()}...{right:uuid()}',
                '/versions/diff/{}...{}'.format(_TEST_UUID_STR, _TEST_UUID_STR_2),
                {
                    'left': _TEST_UUID,
                    'right': _TEST_UUID_2,
                },
            ),
            (
                '/versions/diff/{left:uuid}...{right:uuid()}',
                '/versions/diff/{}...{}'.format(_TEST_UUID_STR, _TEST_UUID_STR_2),
                {
                    'left': _TEST_UUID,
                    'right': _TEST_UUID_2,
                },
            ),
            (
                '/versions/diff/{left:uuid()}...{right:uuid}',
                '/versions/diff/{}...{}'.format(_TEST_UUID_STR, _TEST_UUID_STR_2),
                {
                    'left': _TEST_UUID,
                    'right': _TEST_UUID_2,
                },
            ),
            (
                '/widgets/{widget_id:uuid}/orders',
                '/widgets/' + _TEST_UUID_STR_SANS_HYPHENS[:-1] + '/orders',
                None,
            ),
        ],
    )
    def test_uuid_converter(client, resource, uri_template, path, expected):
>       client.app.add_route(uri_template, resource)

tests/test_uri_templates.py:360: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a811b760>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a0c10>, 'CHECK...0c10>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a0c10>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method SimpleTestResource.on_get of <falcon.testing.resource.SimpleTestResource object at 0x7f03a833a980>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ test_datetime_converter[asgi-/{start_year:int}-to-{timestamp:dt("%Y-%m-%d")}-/1961-to-1969-07-21-dt_expected1] _

client = <falcon.testing.client.TestClient object at 0x7f029d482710>
resource = <falcon.testing.resource.SimpleTestResource object at 0x7f029d483790>
uri_template = '/{start_year:int}-to-{timestamp:dt("%Y-%m-%d")}'
path = '/1961-to-1969-07-21', dt_expected = datetime.datetime(1969, 7, 21, 0, 0)

    @pytest.mark.parametrize(
        'uri_template, path, dt_expected',
        [
            (
                '/{start_year:int}-to-{timestamp:dt}',
                '/1961-to-1969-07-21T02:56:00Z',
                datetime(1969, 7, 21, 2, 56, 0),
            ),
            (
                '/{start_year:int}-to-{timestamp:dt("%Y-%m-%d")}',
                '/1961-to-1969-07-21',
                datetime(1969, 7, 21),
            ),
            (
                '/{start_year:int}/{timestamp:dt("%Y-%m-%d %H:%M")}',
                '/1961/1969-07-21 14:30',
                datetime(1969, 7, 21, 14, 30),
            ),
            ('/{start_year:int}-to-{timestamp:dt("%Y-%m")}', '/1961-to-1969-07-21', None),
        ],
    )
    def test_datetime_converter(client, resource, uri_template, path, dt_expected):
>       client.app.add_route(uri_template, resource)

tests/test_uri_templates.py:301: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a8106f10>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a1a20>, 'CHECK...1a20>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a1a20>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method SimpleTestResource.on_get of <falcon.testing.resource.SimpleTestResource object at 0x7f029d483790>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
__________________ test_float_converter[asgi-/{id:float}-2.1] __________________

client = <falcon.testing.client.TestClient object at 0x7f03a83af220>
uri_template = '/{id:float}', id_value = 2.1

    @pytest.mark.parametrize('id_value', [2, 2.1, 1.9])
    @pytest.mark.parametrize(
        'uri_template,',
        [
            '/{id:float}',
            '/{id:float(1)}',
            '/{id:float(min=1.9)}',
            '/{id:float(min=1.8, max=3)}',
        ],
    )
    def test_float_converter(client, uri_template, id_value):
        resource1 = IDResource()
>       client.app.add_route(uri_template, resource1)

tests/test_uri_templates.py:230: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f029d510970>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a3d00>, 'CHECK...3d00>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a3d00>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method IDResource.on_get of <test_uri_templates.IDResource object at 0x7f03a83af9d0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_______________ test_with_and_without_trailing_slash[asgi-True] ________________

client = <falcon.testing.client.TestClient object at 0x7f03a84f1120>
reverse = True

    @pytest.mark.parametrize('reverse', [True, False])
    def test_with_and_without_trailing_slash(client, reverse):
        routes = [
            ('/kitchen', KitchenSinkResource()),
            ('/kitchen/', KitchenSinkResource()),
            ('/kitchen/{item}', KitchenSinkResource()),
            ('/kitchen/{item}/', KitchenSinkResource()),
            ('/kitchen/sink', KitchenSinkResource()),
            ('/kitchen/sink/', KitchenSinkResource()),
        ]
        if reverse:
            routes.reverse()
    
        for route in routes:
>           client.app.add_route(*route)

tests/test_uri_templates.py:575: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f029d52e5e0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a28c0>, 'CHECK...28c0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a28c0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method KitchenSinkResource.on_get of <test_uri_templates.KitchenSinkResource object at 0x7f03a84f2560>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
___________________________ test_special_chars[asgi] ___________________________

client = <falcon.testing.client.TestClient object at 0x7f03a88074f0>
resource = <falcon.testing.resource.SimpleTestResource object at 0x7f03a8806920>

    def test_special_chars(client, resource):
>       client.app.add_route('/hello/world.json', resource)

tests/test_uri_templates.py:155: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f029d544900>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a2320>, 'CHECK...2320>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a2320>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method SimpleTestResource.on_get of <falcon.testing.resource.SimpleTestResource object at 0x7f03a8806920>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_______________ test_float_converter_non_finite_disallowed[asgi] _______________

client = <falcon.testing.client.TestClient object at 0x7f029d3bebf0>

    def test_float_converter_non_finite_disallowed(client):
        resource1 = IDResource()
>       client.app.add_route('/{id:float}', resource1)

tests/test_uri_templates.py:254: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a8134510>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a5a20>, 'CHECK...5a20>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a5a20>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method IDResource.on_get of <test_uri_templates.IDResource object at 0x7f029d3bca30>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
______________ test_float_converter_non_finite_allowed[asgi-nan] _______________

value = 'nan'
client = <falcon.testing.client.TestClient object at 0x7f03a84dabf0>

    @pytest.mark.parametrize('value', ['nan', '-inf', 'inf'])
    def test_float_converter_non_finite_allowed(value, client):
        resource1 = IDResource()
>       client.app.add_route('/{id:float(finite=False)}', resource1)

tests/test_uri_templates.py:243: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a8135c40>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a51b0>, 'CHECK...51b0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a51b0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method IDResource.on_get of <test_uri_templates.IDResource object at 0x7f029d68dfc0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_______________ test_int_converter_rejections[asgi-/{id:int(2)}] _______________

client = <falcon.testing.client.TestClient object at 0x7f03a88a8bb0>
uri_template = '/{id:int(2)}'

    @pytest.mark.parametrize(
        'uri_template,',
        [
            '/{id:int(2)}',
            '/{id:int(min=124)}',
            '/{id:int(num_digits=3, max=100)}',
        ],
    )
    def test_int_converter_rejections(client, uri_template):
        resource1 = IDResource()
>       client.app.add_route(uri_template, resource1)

tests/test_uri_templates.py:271: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a8136810>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a88b9990>, 'CHECK...9990>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a88b9990>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method IDResource.on_get of <test_uri_templates.IDResource object at 0x7f03a88aa200>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_____ test_int_converter_rejections[asgi-/{id:int(num_digits=3, max=100)}] _____

client = <falcon.testing.client.TestClient object at 0x7f03a88e09d0>
uri_template = '/{id:int(num_digits=3, max=100)}'

    @pytest.mark.parametrize(
        'uri_template,',
        [
            '/{id:int(2)}',
            '/{id:int(min=124)}',
            '/{id:int(num_digits=3, max=100)}',
        ],
    )
    def test_int_converter_rejections(client, uri_template):
        resource1 = IDResource()
>       client.app.add_route(uri_template, resource1)

tests/test_uri_templates.py:271: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a8134820>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a7640>, 'CHECK...7640>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a7640>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method IDResource.on_get of <test_uri_templates.IDResource object at 0x7f03a88e0a60>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ test_uuid_converter[asgi-/versions/diff/{left:uuid()}...{right:uuid()}-/versions/diff/4dc62bd0-421d-40ec-a1c1-349690fc17ba...5c335d2f-2097-4dd8-8bad-b5bacc3954a7-expected2] _

client = <falcon.testing.client.TestClient object at 0x7f029d56ca90>
resource = <falcon.testing.resource.SimpleTestResource object at 0x7f029d56e410>
uri_template = '/versions/diff/{left:uuid()}...{right:uuid()}'
path = '/versions/diff/4dc62bd0-421d-40ec-a1c1-349690fc17ba...5c335d2f-2097-4dd8-8bad-b5bacc3954a7'
expected = {'left': UUID('4dc62bd0-421d-40ec-a1c1-349690fc17ba'), 'right': UUID('5c335d2f-2097-4dd8-8bad-b5bacc3954a7')}

    @pytest.mark.parametrize(
        'uri_template, path, expected',
        [
            (
                '/widgets/{widget_id:uuid}',
                '/widgets/' + _TEST_UUID_STR,
                {'widget_id': _TEST_UUID},
            ),
            (
                '/widgets/{widget_id:uuid}/orders',
                '/widgets/' + _TEST_UUID_STR_SANS_HYPHENS + '/orders',
                {'widget_id': _TEST_UUID},
            ),
            (
                '/versions/diff/{left:uuid()}...{right:uuid()}',
                '/versions/diff/{}...{}'.format(_TEST_UUID_STR, _TEST_UUID_STR_2),
                {
                    'left': _TEST_UUID,
                    'right': _TEST_UUID_2,
                },
            ),
            (
                '/versions/diff/{left:uuid}...{right:uuid()}',
                '/versions/diff/{}...{}'.format(_TEST_UUID_STR, _TEST_UUID_STR_2),
                {
                    'left': _TEST_UUID,
                    'right': _TEST_UUID_2,
                },
            ),
            (
                '/versions/diff/{left:uuid()}...{right:uuid}',
                '/versions/diff/{}...{}'.format(_TEST_UUID_STR, _TEST_UUID_STR_2),
                {
                    'left': _TEST_UUID,
                    'right': _TEST_UUID_2,
                },
            ),
            (
                '/widgets/{widget_id:uuid}/orders',
                '/widgets/' + _TEST_UUID_STR_SANS_HYPHENS[:-1] + '/orders',
                None,
            ),
        ],
    )
    def test_uuid_converter(client, resource, uri_template, path, expected):
>       client.app.add_route(uri_template, resource)

tests/test_uri_templates.py:360: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a8135000>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a7ac0>, 'CHECK...7ac0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a7ac0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method SimpleTestResource.on_get of <falcon.testing.resource.SimpleTestResource object at 0x7f029d56e410>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
__________ test_float_converter[asgi-/{id:float(min=1.8, max=3)}-2.1] __________

client = <falcon.testing.client.TestClient object at 0x7f03a84c0370>
uri_template = '/{id:float(min=1.8, max=3)}', id_value = 2.1

    @pytest.mark.parametrize('id_value', [2, 2.1, 1.9])
    @pytest.mark.parametrize(
        'uri_template,',
        [
            '/{id:float}',
            '/{id:float(1)}',
            '/{id:float(min=1.9)}',
            '/{id:float(min=1.8, max=3)}',
        ],
    )
    def test_float_converter(client, uri_template, id_value):
        resource1 = IDResource()
>       client.app.add_route(uri_template, resource1)

tests/test_uri_templates.py:230: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a81368f0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a7010>, 'CHECK...7010>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a7010>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method IDResource.on_get of <test_uri_templates.IDResource object at 0x7f03a84c0dc0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_______________ test_with_and_without_trailing_slash[asgi-False] _______________

client = <falcon.testing.client.TestClient object at 0x7f03a83ac2b0>
reverse = False

    @pytest.mark.parametrize('reverse', [True, False])
    def test_with_and_without_trailing_slash(client, reverse):
        routes = [
            ('/kitchen', KitchenSinkResource()),
            ('/kitchen/', KitchenSinkResource()),
            ('/kitchen/{item}', KitchenSinkResource()),
            ('/kitchen/{item}/', KitchenSinkResource()),
            ('/kitchen/sink', KitchenSinkResource()),
            ('/kitchen/sink/', KitchenSinkResource()),
        ]
        if reverse:
            routes.reverse()
    
        for route in routes:
>           client.app.add_route(*route)

tests/test_uri_templates.py:575: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f029d544eb0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a5d80>, 'CHECK...5d80>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a5d80>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method KitchenSinkResource.on_get of <test_uri_templates.KitchenSinkResource object at 0x7f03a83ad5a0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
__________ test_float_converter[asgi-/{id:float(min=1.8, max=3)}-1.9] __________

client = <falcon.testing.client.TestClient object at 0x7f03a8187c10>
uri_template = '/{id:float(min=1.8, max=3)}', id_value = 1.9

    @pytest.mark.parametrize('id_value', [2, 2.1, 1.9])
    @pytest.mark.parametrize(
        'uri_template,',
        [
            '/{id:float}',
            '/{id:float(1)}',
            '/{id:float(min=1.9)}',
            '/{id:float(min=1.8, max=3)}',
        ],
    )
    def test_float_converter(client, uri_template, id_value):
        resource1 = IDResource()
>       client.app.add_route(uri_template, resource1)

tests/test_uri_templates.py:230: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f029d5102e0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a5f30>, 'CHECK...5f30>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a5f30>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method IDResource.on_get of <test_uri_templates.IDResource object at 0x7f03a8184190>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ test_datetime_converter[asgi-/{start_year:int}-to-{timestamp:dt}-/1961-to-1969-07-21T02:56:00Z-dt_expected0] _

client = <falcon.testing.client.TestClient object at 0x7f03a8308550>
resource = <falcon.testing.resource.SimpleTestResource object at 0x7f03a8309840>
uri_template = '/{start_year:int}-to-{timestamp:dt}'
path = '/1961-to-1969-07-21T02:56:00Z'
dt_expected = datetime.datetime(1969, 7, 21, 2, 56)

    @pytest.mark.parametrize(
        'uri_template, path, dt_expected',
        [
            (
                '/{start_year:int}-to-{timestamp:dt}',
                '/1961-to-1969-07-21T02:56:00Z',
                datetime(1969, 7, 21, 2, 56, 0),
            ),
            (
                '/{start_year:int}-to-{timestamp:dt("%Y-%m-%d")}',
                '/1961-to-1969-07-21',
                datetime(1969, 7, 21),
            ),
            (
                '/{start_year:int}/{timestamp:dt("%Y-%m-%d %H:%M")}',
                '/1961/1969-07-21 14:30',
                datetime(1969, 7, 21, 14, 30),
            ),
            ('/{start_year:int}-to-{timestamp:dt("%Y-%m")}', '/1961-to-1969-07-21', None),
        ],
    )
    def test_datetime_converter(client, resource, uri_template, path, dt_expected):
>       client.app.add_route(uri_template, resource)

tests/test_uri_templates.py:301: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a811aa40>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a5e10>, 'CHECK...5e10>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a5e10>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method SimpleTestResource.on_get of <falcon.testing.resource.SimpleTestResource object at 0x7f03a8309840>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
__________________ test_uuid_converter_complex_segment[asgi] ___________________

client = <falcon.testing.client.TestClient object at 0x7f029d4fe5c0>
resource = <falcon.testing.resource.SimpleTestResource object at 0x7f029d4fd6c0>

    def test_uuid_converter_complex_segment(client, resource):
>       client.app.add_route('/pages/{first:uuid}...{last:uuid}', resource)

tests/test_uri_templates.py:374: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a811a1f0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a00d0>, 'CHECK...00d0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a00d0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method SimpleTestResource.on_get of <falcon.testing.resource.SimpleTestResource object at 0x7f029d4fd6c0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
______________ test_float_converter_non_finite_allowed[asgi-inf] _______________

value = 'inf'
client = <falcon.testing.client.TestClient object at 0x7f03a83eded0>

    @pytest.mark.parametrize('value', ['nan', '-inf', 'inf'])
    def test_float_converter_non_finite_allowed(value, client):
        resource1 = IDResource()
>       client.app.add_route('/{id:float(finite=False)}', resource1)

tests/test_uri_templates.py:243: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a811b1b0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a2050>, 'CHECK...2050>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a2050>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method IDResource.on_get of <test_uri_templates.IDResource object at 0x7f03a83eeb60>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_________________ test_int_converter[asgi-/{id:int(min=123)}] __________________

client = <falcon.testing.client.TestClient object at 0x7f03a78646a0>
uri_template = '/{id:int(min=123)}'

    @pytest.mark.parametrize(
        'uri_template,',
        [
            '/{id:int}',
            '/{id:int(3)}',
            '/{id:int(min=123)}',
            '/{id:int(min=123, max=123)}',
        ],
    )
    def test_int_converter(client, uri_template):
        resource1 = IDResource()
>       client.app.add_route(uri_template, resource1)

tests/test_uri_templates.py:208: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a8107ed0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a28c0>, 'CHECK...28c0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a28c0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method IDResource.on_get of <test_uri_templates.IDResource object at 0x7f03a78672b0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
________________ test_float_converter[asgi-/{id:float(1)}-1.9] _________________

client = <falcon.testing.client.TestClient object at 0x7f03a83ac370>
uri_template = '/{id:float(1)}', id_value = 1.9

    @pytest.mark.parametrize('id_value', [2, 2.1, 1.9])
    @pytest.mark.parametrize(
        'uri_template,',
        [
            '/{id:float}',
            '/{id:float(1)}',
            '/{id:float(min=1.9)}',
            '/{id:float(min=1.8, max=3)}',
        ],
    )
    def test_float_converter(client, uri_template, id_value):
        resource1 = IDResource()
>       client.app.add_route(uri_template, resource1)

tests/test_uri_templates.py:230: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a81683c0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a88f36d0>, 'CHECK...36d0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a88f36d0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method IDResource.on_get of <test_uri_templates.IDResource object at 0x7f03a83afa00>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_______________________ test_single_trailing_slash[asgi] _______________________

client = <falcon.testing.client.TestClient object at 0x7f03a88aa920>

    def test_single_trailing_slash(client):
        resource1 = IDResource()
>       client.app.add_route('/1/{id}/', resource1)

tests/test_uri_templates.py:423: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a81686d0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a4ca0>, 'CHECK...4ca0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a4ca0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method IDResource.on_get of <test_uri_templates.IDResource object at 0x7f03a88aa320>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_____________________________ test_multiple[asgi] ______________________________

client = <falcon.testing.client.TestClient object at 0x7f029d4a61a0>

    def test_multiple(client):
        resource = NameResource()
>       client.app.add_route('/messages/{id}/names/{name}', resource)

tests/test_uri_templates.py:458: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a8168c80>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a6710>, 'CHECK...6710>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a6710>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method NameResource.on_get of <test_uri_templates.NameResource object at 0x7f029d4a4970>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ test_datetime_converter[asgi-/{start_year:int}-to-{timestamp:dt("%Y-%m")}-/1961-to-1969-07-21-None] _

client = <falcon.testing.client.TestClient object at 0x7f029d3b3010>
resource = <falcon.testing.resource.SimpleTestResource object at 0x7f029d3b2470>
uri_template = '/{start_year:int}-to-{timestamp:dt("%Y-%m")}'
path = '/1961-to-1969-07-21', dt_expected = None

    @pytest.mark.parametrize(
        'uri_template, path, dt_expected',
        [
            (
                '/{start_year:int}-to-{timestamp:dt}',
                '/1961-to-1969-07-21T02:56:00Z',
                datetime(1969, 7, 21, 2, 56, 0),
            ),
            (
                '/{start_year:int}-to-{timestamp:dt("%Y-%m-%d")}',
                '/1961-to-1969-07-21',
                datetime(1969, 7, 21),
            ),
            (
                '/{start_year:int}/{timestamp:dt("%Y-%m-%d %H:%M")}',
                '/1961/1969-07-21 14:30',
                datetime(1969, 7, 21, 14, 30),
            ),
            ('/{start_year:int}-to-{timestamp:dt("%Y-%m")}', '/1961-to-1969-07-21', None),
        ],
    )
    def test_datetime_converter(client, resource, uri_template, path, dt_expected):
>       client.app.add_route(uri_template, resource)

tests/test_uri_templates.py:301: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a8169150>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a7b50>, 'CHECK...7b50>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a7b50>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method SimpleTestResource.on_get of <falcon.testing.resource.SimpleTestResource object at 0x7f029d3b2470>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
______________________________ test_no_vars[asgi] ______________________________

client = <falcon.testing.client.TestClient object at 0x7f029d4ddf60>
resource = <falcon.testing.resource.SimpleTestResource object at 0x7f029d4dcd90>

    def test_no_vars(client, resource):
>       client.app.add_route('/hello/world', resource)

tests/test_uri_templates.py:149: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a816a730>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a53f0>, 'CHECK...53f0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a53f0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method SimpleTestResource.on_get of <falcon.testing.resource.SimpleTestResource object at 0x7f029d4dcd90>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
____________________ test_int_converter[asgi-/{id:int(3)}] _____________________

client = <falcon.testing.client.TestClient object at 0x7f03a81037c0>
uri_template = '/{id:int(3)}'

    @pytest.mark.parametrize(
        'uri_template,',
        [
            '/{id:int}',
            '/{id:int(3)}',
            '/{id:int(min=123)}',
            '/{id:int(min=123, max=123)}',
        ],
    )
    def test_int_converter(client, uri_template):
        resource1 = IDResource()
>       client.app.add_route(uri_template, resource1)

tests/test_uri_templates.py:208: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a811b450>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a0430>, 'CHECK...0430>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a0430>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method IDResource.on_get of <test_uri_templates.IDResource object at 0x7f03a81006a0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ test_uuid_converter[asgi-/widgets/{widget_id:uuid}-/widgets/4dc62bd0-421d-40ec-a1c1-349690fc17ba-expected0] _

client = <falcon.testing.client.TestClient object at 0x7f03a84042e0>
resource = <falcon.testing.resource.SimpleTestResource object at 0x7f03a8407c70>
uri_template = '/widgets/{widget_id:uuid}'
path = '/widgets/4dc62bd0-421d-40ec-a1c1-349690fc17ba'
expected = {'widget_id': UUID('4dc62bd0-421d-40ec-a1c1-349690fc17ba')}

    @pytest.mark.parametrize(
        'uri_template, path, expected',
        [
            (
                '/widgets/{widget_id:uuid}',
                '/widgets/' + _TEST_UUID_STR,
                {'widget_id': _TEST_UUID},
            ),
            (
                '/widgets/{widget_id:uuid}/orders',
                '/widgets/' + _TEST_UUID_STR_SANS_HYPHENS + '/orders',
                {'widget_id': _TEST_UUID},
            ),
            (
                '/versions/diff/{left:uuid()}...{right:uuid()}',
                '/versions/diff/{}...{}'.format(_TEST_UUID_STR, _TEST_UUID_STR_2),
                {
                    'left': _TEST_UUID,
                    'right': _TEST_UUID_2,
                },
            ),
            (
                '/versions/diff/{left:uuid}...{right:uuid()}',
                '/versions/diff/{}...{}'.format(_TEST_UUID_STR, _TEST_UUID_STR_2),
                {
                    'left': _TEST_UUID,
                    'right': _TEST_UUID_2,
                },
            ),
            (
                '/versions/diff/{left:uuid()}...{right:uuid}',
                '/versions/diff/{}...{}'.format(_TEST_UUID_STR, _TEST_UUID_STR_2),
                {
                    'left': _TEST_UUID,
                    'right': _TEST_UUID_2,
                },
            ),
            (
                '/widgets/{widget_id:uuid}/orders',
                '/widgets/' + _TEST_UUID_STR_SANS_HYPHENS[:-1] + '/orders',
                None,
            ),
        ],
    )
    def test_uuid_converter(client, resource, uri_template, path, expected):
>       client.app.add_route(uri_template, resource)

tests/test_uri_templates.py:360: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a811be60>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a27a0>, 'CHECK...27a0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a27a0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method SimpleTestResource.on_get of <falcon.testing.resource.SimpleTestResource object at 0x7f03a8407c70>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_____________________________ test_single[asgi-id] _____________________________

client = <falcon.testing.client.TestClient object at 0x7f03a819ec20>
resource = <falcon.testing.resource.SimpleTestResource object at 0x7f03a819c280>
field_name = 'id'

    @pytest.mark.parametrize(
        'field_name',
        [
            'id',
            'id123',
            'widget_id',
        ],
    )
    def test_single(client, resource, field_name):
        template = '/widgets/{{{}}}'.format(field_name)
    
>       client.app.add_route(template, resource)

tests/test_uri_templates.py:182: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f029d546500>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a1990>, 'CHECK...1990>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a1990>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method SimpleTestResource.on_get of <falcon.testing.resource.SimpleTestResource object at 0x7f03a819c280>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
______________ test_float_converter[asgi-/{id:float(min=1.9)}-2] _______________

client = <falcon.testing.client.TestClient object at 0x7f029d3bd6f0>
uri_template = '/{id:float(min=1.9)}', id_value = 2

    @pytest.mark.parametrize('id_value', [2, 2.1, 1.9])
    @pytest.mark.parametrize(
        'uri_template,',
        [
            '/{id:float}',
            '/{id:float(1)}',
            '/{id:float(min=1.9)}',
            '/{id:float(min=1.8, max=3)}',
        ],
    )
    def test_float_converter(client, uri_template, id_value):
        resource1 = IDResource()
>       client.app.add_route(uri_template, resource1)

tests/test_uri_templates.py:230: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a81355b0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a88bbd00>, 'CHECK...bd00>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a88bbd00>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method IDResource.on_get of <test_uri_templates.IDResource object at 0x7f029d3bc8e0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
___________________ test_float_converter[asgi-/{id:float}-2] ___________________

client = <falcon.testing.client.TestClient object at 0x7f03a831a2c0>
uri_template = '/{id:float}', id_value = 2

    @pytest.mark.parametrize('id_value', [2, 2.1, 1.9])
    @pytest.mark.parametrize(
        'uri_template,',
        [
            '/{id:float}',
            '/{id:float(1)}',
            '/{id:float(min=1.9)}',
            '/{id:float(min=1.8, max=3)}',
        ],
    )
    def test_float_converter(client, uri_template, id_value):
        resource1 = IDResource()
>       client.app.add_route(uri_template, resource1)

tests/test_uri_templates.py:230: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a8137290>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78128c0>, 'CHECK...28c0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78128c0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method IDResource.on_get of <test_uri_templates.IDResource object at 0x7f03a8318220>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
________________________ test_single_path_segment[asgi] ________________________

client = <falcon.testing.client.TestClient object at 0x7f03a8153010>

    def test_single_path_segment(client):
        id_resource = IDResource()
    
>       client.app.add_route('/thing-{id}', id_resource)

tests/test_uri_templates.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a81d9620>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a88b9ab0>, 'CHECK...9ab0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a88b9ab0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method IDResource.on_get of <test_uri_templates.IDResource object at 0x7f03a8152740>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_________________________ test_single[asgi-widget_id] __________________________

client = <falcon.testing.client.TestClient object at 0x7f029d835810>
resource = <falcon.testing.resource.SimpleTestResource object at 0x7f029d8362c0>
field_name = 'widget_id'

    @pytest.mark.parametrize(
        'field_name',
        [
            'id',
            'id123',
            'widget_id',
        ],
    )
    def test_single(client, resource, field_name):
        template = '/widgets/{{{}}}'.format(field_name)
    
>       client.app.add_route(template, resource)

tests/test_uri_templates.py:182: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a81d8200>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7813880>, 'CHECK...3880>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7813880>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method SimpleTestResource.on_get of <falcon.testing.resource.SimpleTestResource object at 0x7f029d8362c0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ test_uuid_converter[asgi-/versions/diff/{left:uuid()}...{right:uuid}-/versions/diff/4dc62bd0-421d-40ec-a1c1-349690fc17ba...5c335d2f-2097-4dd8-8bad-b5bacc3954a7-expected4] _

client = <falcon.testing.client.TestClient object at 0x7f03a789b130>
resource = <falcon.testing.resource.SimpleTestResource object at 0x7f03a789a590>
uri_template = '/versions/diff/{left:uuid()}...{right:uuid}'
path = '/versions/diff/4dc62bd0-421d-40ec-a1c1-349690fc17ba...5c335d2f-2097-4dd8-8bad-b5bacc3954a7'
expected = {'left': UUID('4dc62bd0-421d-40ec-a1c1-349690fc17ba'), 'right': UUID('5c335d2f-2097-4dd8-8bad-b5bacc3954a7')}

    @pytest.mark.parametrize(
        'uri_template, path, expected',
        [
            (
                '/widgets/{widget_id:uuid}',
                '/widgets/' + _TEST_UUID_STR,
                {'widget_id': _TEST_UUID},
            ),
            (
                '/widgets/{widget_id:uuid}/orders',
                '/widgets/' + _TEST_UUID_STR_SANS_HYPHENS + '/orders',
                {'widget_id': _TEST_UUID},
            ),
            (
                '/versions/diff/{left:uuid()}...{right:uuid()}',
                '/versions/diff/{}...{}'.format(_TEST_UUID_STR, _TEST_UUID_STR_2),
                {
                    'left': _TEST_UUID,
                    'right': _TEST_UUID_2,
                },
            ),
            (
                '/versions/diff/{left:uuid}...{right:uuid()}',
                '/versions/diff/{}...{}'.format(_TEST_UUID_STR, _TEST_UUID_STR_2),
                {
                    'left': _TEST_UUID,
                    'right': _TEST_UUID_2,
                },
            ),
            (
                '/versions/diff/{left:uuid()}...{right:uuid}',
                '/versions/diff/{}...{}'.format(_TEST_UUID_STR, _TEST_UUID_STR_2),
                {
                    'left': _TEST_UUID,
                    'right': _TEST_UUID_2,
                },
            ),
            (
                '/widgets/{widget_id:uuid}/orders',
                '/widgets/' + _TEST_UUID_STR_SANS_HYPHENS[:-1] + '/orders',
                None,
            ),
        ],
    )
    def test_uuid_converter(client, resource, uri_template, path, expected):
>       client.app.add_route(uri_template, resource)

tests/test_uri_templates.py:360: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a81dace0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7810430>, 'CHECK...0430>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7810430>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method SimpleTestResource.on_get of <falcon.testing.resource.SimpleTestResource object at 0x7f03a789a590>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_________________ test_float_converter[asgi-/{id:float(1)}-2] __________________

client = <falcon.testing.client.TestClient object at 0x7f03a78648b0>
uri_template = '/{id:float(1)}', id_value = 2

    @pytest.mark.parametrize('id_value', [2, 2.1, 1.9])
    @pytest.mark.parametrize(
        'uri_template,',
        [
            '/{id:float}',
            '/{id:float(1)}',
            '/{id:float(min=1.9)}',
            '/{id:float(min=1.8, max=3)}',
        ],
    )
    def test_float_converter(client, uri_template, id_value):
        resource1 = IDResource()
>       client.app.add_route(uri_template, resource1)

tests/test_uri_templates.py:230: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a81d8f20>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7810700>, 'CHECK...0700>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7810700>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method IDResource.on_get of <test_uri_templates.IDResource object at 0x7f03a7866380>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
______________________ test_int_converter[asgi-/{id:int}] ______________________

client = <falcon.testing.client.TestClient object at 0x7f029d483190>
uri_template = '/{id:int}'

    @pytest.mark.parametrize(
        'uri_template,',
        [
            '/{id:int}',
            '/{id:int(3)}',
            '/{id:int(min=123)}',
            '/{id:int(min=123, max=123)}',
        ],
    )
    def test_int_converter(client, uri_template):
        resource1 = IDResource()
>       client.app.add_route(uri_template, resource1)

tests/test_uri_templates.py:208: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a81daea0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a51b0>, 'CHECK...51b0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a51b0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method IDResource.on_get of <test_uri_templates.IDResource object at 0x7f029d481510>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
___________________ test_same_level_complex_var[asgi-False] ____________________

client = <falcon.testing.client.TestClient object at 0x7f03a83ed7e0>
reverse = False

    @pytest.mark.parametrize('reverse', [True, False])
    def test_same_level_complex_var(client, reverse):
        file_resource = FileResource()
        details_resource = FileDetailsResource()
    
        routes = [
            ('/files/{file_id}', file_resource),
            ('/files/{file_id}.{ext}', details_resource),
        ]
        if reverse:
            routes.reverse()
    
        for uri_template, resource in routes:
>           client.app.add_route(uri_template, resource)

tests/test_uri_templates.py:510: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a8135bd0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a6c20>, 'CHECK...6c20>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a6c20>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method FileResource.on_get of <test_uri_templates.FileResource object at 0x7f03a83ed360>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
________________ test_float_converter[asgi-/{id:float(1)}-2.1] _________________

client = <falcon.testing.client.TestClient object at 0x7f03a8348d60>
uri_template = '/{id:float(1)}', id_value = 2.1

    @pytest.mark.parametrize('id_value', [2, 2.1, 1.9])
    @pytest.mark.parametrize(
        'uri_template,',
        [
            '/{id:float}',
            '/{id:float(1)}',
            '/{id:float(min=1.9)}',
            '/{id:float(min=1.8, max=3)}',
        ],
    )
    def test_float_converter(client, uri_template, id_value):
        resource1 = IDResource()
>       client.app.add_route(uri_template, resource1)

tests/test_uri_templates.py:230: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a8168b30>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a3910>, 'CHECK...3910>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a3910>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method IDResource.on_get of <test_uri_templates.IDResource object at 0x7f03a8348940>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ test_converter_custom[asgi-/({food:spam()}){food_too:spam("()")}-/(bacon)eggs-expected2] _

client = <falcon.testing.client.TestClient object at 0x7f03a84f3670>
resource = <falcon.testing.resource.SimpleTestResource object at 0x7f03a84f3160>
uri_template = '/({food:spam()}){food_too:spam("()")}', path = '/(bacon)eggs'
expected = {'food': 'spam!', 'food_too': 'spam!'}

    @pytest.mark.parametrize(
        'uri_template, path, expected',
        [
            ('/{food:spam}', '/something', {'food': 'spam!'}),
            (
                '/{food:spam(")")}:{food_too:spam("()")}',
                '/bacon:eggs',
                {'food': 'spam!', 'food_too': 'spam!'},
            ),
            (
                '/({food:spam()}){food_too:spam("()")}',
                '/(bacon)eggs',
                {'food': 'spam!', 'food_too': 'spam!'},
            ),
        ],
    )
    def test_converter_custom(client, resource, uri_template, path, expected):
        class SpamConverter:
            def __init__(self, useless_text=None):
                pass
    
            def convert(self, fragment):
                return 'spam!'
    
        client.app.router_options.converters['spam'] = SpamConverter
>       client.app.add_route(uri_template, resource)

tests/test_uri_templates.py:412: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a8168dd0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a5a20>, 'CHECK...5a20>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a5a20>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method SimpleTestResource.on_get of <falcon.testing.resource.SimpleTestResource object at 0x7f03a84f3160>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
______________ test_float_converter_non_finite_allowed[asgi--inf] ______________

value = '-inf'
client = <falcon.testing.client.TestClient object at 0x7f03a84c5ae0>

    @pytest.mark.parametrize('value', ['nan', '-inf', 'inf'])
    def test_float_converter_non_finite_allowed(value, client):
        resource1 = IDResource()
>       client.app.add_route('/{id:float(finite=False)}', resource1)

tests/test_uri_templates.py:243: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a8169d90>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a7760>, 'CHECK...7760>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a7760>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method IDResource.on_get of <test_uri_templates.IDResource object at 0x7f03a84c5480>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
___________________________ test_single[asgi-id123] ____________________________

client = <falcon.testing.client.TestClient object at 0x7f03a88aa320>
resource = <falcon.testing.resource.SimpleTestResource object at 0x7f03a88aaa70>
field_name = 'id123'

    @pytest.mark.parametrize(
        'field_name',
        [
            'id',
            'id123',
            'widget_id',
        ],
    )
    def test_single(client, resource, field_name):
        template = '/widgets/{{{}}}'.format(field_name)
    
>       client.app.add_route(template, resource)

tests/test_uri_templates.py:182: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f029d52fb50>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a0ee0>, 'CHECK...0ee0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a0ee0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method SimpleTestResource.on_get of <falcon.testing.resource.SimpleTestResource object at 0x7f03a88aaa70>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
__________________ test_float_converter[asgi-/{id:float}-1.9] __________________

client = <falcon.testing.client.TestClient object at 0x7f029d4fda50>
uri_template = '/{id:float}', id_value = 1.9

    @pytest.mark.parametrize('id_value', [2, 2.1, 1.9])
    @pytest.mark.parametrize(
        'uri_template,',
        [
            '/{id:float}',
            '/{id:float(1)}',
            '/{id:float(min=1.9)}',
            '/{id:float(min=1.8, max=3)}',
        ],
    )
    def test_float_converter(client, uri_template, id_value):
        resource1 = IDResource()
>       client.app.add_route(uri_template, resource1)

tests/test_uri_templates.py:230: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a816ab90>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a6c20>, 'CHECK...6c20>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a6c20>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method IDResource.on_get of <test_uri_templates.IDResource object at 0x7f029d4ff9a0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ test_uuid_converter[asgi-/widgets/{widget_id:uuid}/orders-/widgets/4dc62bd0421d40eca1c1349690fc17b/orders-None] _

client = <falcon.testing.client.TestClient object at 0x7f03a789a2f0>
resource = <falcon.testing.resource.SimpleTestResource object at 0x7f03a7899750>
uri_template = '/widgets/{widget_id:uuid}/orders'
path = '/widgets/4dc62bd0421d40eca1c1349690fc17b/orders', expected = None

    @pytest.mark.parametrize(
        'uri_template, path, expected',
        [
            (
                '/widgets/{widget_id:uuid}',
                '/widgets/' + _TEST_UUID_STR,
                {'widget_id': _TEST_UUID},
            ),
            (
                '/widgets/{widget_id:uuid}/orders',
                '/widgets/' + _TEST_UUID_STR_SANS_HYPHENS + '/orders',
                {'widget_id': _TEST_UUID},
            ),
            (
                '/versions/diff/{left:uuid()}...{right:uuid()}',
                '/versions/diff/{}...{}'.format(_TEST_UUID_STR, _TEST_UUID_STR_2),
                {
                    'left': _TEST_UUID,
                    'right': _TEST_UUID_2,
                },
            ),
            (
                '/versions/diff/{left:uuid}...{right:uuid()}',
                '/versions/diff/{}...{}'.format(_TEST_UUID_STR, _TEST_UUID_STR_2),
                {
                    'left': _TEST_UUID,
                    'right': _TEST_UUID_2,
                },
            ),
            (
                '/versions/diff/{left:uuid()}...{right:uuid}',
                '/versions/diff/{}...{}'.format(_TEST_UUID_STR, _TEST_UUID_STR_2),
                {
                    'left': _TEST_UUID,
                    'right': _TEST_UUID_2,
                },
            ),
            (
                '/widgets/{widget_id:uuid}/orders',
                '/widgets/' + _TEST_UUID_STR_SANS_HYPHENS[:-1] + '/orders',
                None,
            ),
        ],
    )
    def test_uuid_converter(client, resource, uri_template, path, expected):
>       client.app.add_route(uri_template, resource)

tests/test_uri_templates.py:360: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a816b220>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a6950>, 'CHECK...6950>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a6950>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method SimpleTestResource.on_get of <falcon.testing.resource.SimpleTestResource object at 0x7f03a7899750>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_____________ test_float_converter[asgi-/{id:float(min=1.9)}-2.1] ______________

client = <falcon.testing.client.TestClient object at 0x7f03a84c5960>
uri_template = '/{id:float(min=1.9)}', id_value = 2.1

    @pytest.mark.parametrize('id_value', [2, 2.1, 1.9])
    @pytest.mark.parametrize(
        'uri_template,',
        [
            '/{id:float}',
            '/{id:float(1)}',
            '/{id:float(min=1.9)}',
            '/{id:float(min=1.8, max=3)}',
        ],
    )
    def test_float_converter(client, uri_template, id_value):
        resource1 = IDResource()
>       client.app.add_route(uri_template, resource1)

tests/test_uri_templates.py:230: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a81d8820>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a857beb0>, 'CHECK...beb0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a857beb0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method IDResource.on_get of <test_uri_templates.IDResource object at 0x7f03a783d5a0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
____________________ test_same_level_complex_var[asgi-True] ____________________

client = <falcon.testing.client.TestClient object at 0x7f03a839e770>
reverse = True

    @pytest.mark.parametrize('reverse', [True, False])
    def test_same_level_complex_var(client, reverse):
        file_resource = FileResource()
        details_resource = FileDetailsResource()
    
        routes = [
            ('/files/{file_id}', file_resource),
            ('/files/{file_id}.{ext}', details_resource),
        ]
        if reverse:
            routes.reverse()
    
        for uri_template, resource in routes:
>           client.app.add_route(uri_template, resource)

tests/test_uri_templates.py:510: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a81d8eb0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7810940>, 'CHECK...0940>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7810940>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method FileDetailsResource.on_get of <test_uri_templates.FileDetailsResource object at 0x7f03a839d6f0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_ test_uuid_converter[asgi-/widgets/{widget_id:uuid}/orders-/widgets/4dc62bd0421d40eca1c1349690fc17ba/orders-expected1] _

client = <falcon.testing.client.TestClient object at 0x7f029d3b2440>
resource = <falcon.testing.resource.SimpleTestResource object at 0x7f029d3b1ff0>
uri_template = '/widgets/{widget_id:uuid}/orders'
path = '/widgets/4dc62bd0421d40eca1c1349690fc17ba/orders'
expected = {'widget_id': UUID('4dc62bd0-421d-40ec-a1c1-349690fc17ba')}

    @pytest.mark.parametrize(
        'uri_template, path, expected',
        [
            (
                '/widgets/{widget_id:uuid}',
                '/widgets/' + _TEST_UUID_STR,
                {'widget_id': _TEST_UUID},
            ),
            (
                '/widgets/{widget_id:uuid}/orders',
                '/widgets/' + _TEST_UUID_STR_SANS_HYPHENS + '/orders',
                {'widget_id': _TEST_UUID},
            ),
            (
                '/versions/diff/{left:uuid()}...{right:uuid()}',
                '/versions/diff/{}...{}'.format(_TEST_UUID_STR, _TEST_UUID_STR_2),
                {
                    'left': _TEST_UUID,
                    'right': _TEST_UUID_2,
                },
            ),
            (
                '/versions/diff/{left:uuid}...{right:uuid()}',
                '/versions/diff/{}...{}'.format(_TEST_UUID_STR, _TEST_UUID_STR_2),
                {
                    'left': _TEST_UUID,
                    'right': _TEST_UUID_2,
                },
            ),
            (
                '/versions/diff/{left:uuid()}...{right:uuid}',
                '/versions/diff/{}...{}'.format(_TEST_UUID_STR, _TEST_UUID_STR_2),
                {
                    'left': _TEST_UUID,
                    'right': _TEST_UUID_2,
                },
            ),
            (
                '/widgets/{widget_id:uuid}/orders',
                '/widgets/' + _TEST_UUID_STR_SANS_HYPHENS[:-1] + '/orders',
                None,
            ),
        ],
    )
    def test_uuid_converter(client, resource, uri_template, path, expected):
>       client.app.add_route(uri_template, resource)

tests/test_uri_templates.py:360: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a81d8510>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7812830>, 'CHECK...2830>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7812830>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method SimpleTestResource.on_get of <falcon.testing.resource.SimpleTestResource object at 0x7f029d3b1ff0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_____________________________ test_root_path[asgi] _____________________________

client = <falcon.testing.client.TestClient object at 0x7f03a8403100>
resource = <falcon.testing.resource.SimpleTestResource object at 0x7f03a84001f0>

    def test_root_path(client, resource):
>       client.app.add_route('/', resource)

tests/test_uri_templates.py:143: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a811ba00>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7810280>, 'CHECK...0280>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7810280>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method SimpleTestResource.on_get of <falcon.testing.resource.SimpleTestResource object at 0x7f03a84001f0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_____________ test_int_converter[asgi-/{id:int(min=123, max=123)}] _____________

client = <falcon.testing.client.TestClient object at 0x7f03a783fd90>
uri_template = '/{id:int(min=123, max=123)}'

    @pytest.mark.parametrize(
        'uri_template,',
        [
            '/{id:int}',
            '/{id:int(3)}',
            '/{id:int(min=123)}',
            '/{id:int(min=123, max=123)}',
        ],
    )
    def test_int_converter(client, uri_template):
        resource1 = IDResource()
>       client.app.add_route(uri_template, resource1)

tests/test_uri_templates.py:208: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a8137d80>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a1fc0>, 'CHECK...1fc0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a1fc0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method IDResource.on_get of <test_uri_templates.IDResource object at 0x7f03a783c640>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
______ TestSinkMethodCompatibility.test_add_sync_sink_with_wrapping[asgi] ______

self = <test_sinks.TestSinkMethodCompatibility object at 0x7f0268e3d330>
client = <falcon.testing.client.TestClient object at 0x7f029d519a20>
asgi = True

    def test_add_sync_sink_with_wrapping(self, client, asgi):
>       client.app.add_sink(kitchen_sink, '/features')

tests/test_sinks.py:176: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.asgi.app.App object at 0x7f036c2cf7c0>
sink = <function kitchen_sink at 0x7f0268e0e050>, prefix = '/features'

    def add_sink(self, sink: Callable, prefix: SinkPrefix = r'/'):
        if not iscoroutinefunction(sink) and is_python_func(sink):
            if _should_wrap_non_coroutines():
                sink = wrap_sync_to_async(sink)
            else:
>               raise CompatibilityError(
                    'The sink method must be an awaitable coroutine function '
                    'in order to be used safely with an ASGI app.'
                )
E               falcon.errors.CompatibilityError: The sink method must be an awaitable coroutine function in order to be used safely with an ASGI app.

falcon/asgi/app.py:740: CompatibilityError
___________________ TestDefaultRouting.test_with_route[asgi] ___________________

self = <test_sinks.TestDefaultRouting object at 0x7f0268e13ac0>
client = <falcon.testing.client.TestClient object at 0x7f03a83af9d0>
sink = <test_sinks.SinkAsync object at 0x7f03a83ad480>
resource = <test_sinks.BookCollection object at 0x7f03a83ac2e0>

    def test_with_route(self, client, sink, resource):
>       client.app.add_route('/books', resource)

tests/test_sinks.py:113: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a8191bd0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a7d00>, 'CHECK...7d00>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a7d00>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method SimpleTestResource.on_get of <test_sinks.BookCollection object at 0x7f03a83ac2e0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
____________ TestDefaultRouting.test_route_precedence_with_id[asgi] ____________

self = <test_sinks.TestDefaultRouting object at 0x7f0268e3c8e0>
client = <falcon.testing.client.TestClient object at 0x7f03a7867af0>
sink = <test_sinks.SinkAsync object at 0x7f03a78647c0>
resource = <test_sinks.BookCollection object at 0x7f03a7866620>

    def test_route_precedence_with_id(self, client, sink, resource):
        # NOTE(kgriffs): In case of collision, the route takes precedence.
>       client.app.add_route('/books/{id}', resource)

tests/test_sinks.py:135: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a8192490>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7828820>, 'CHECK...8820>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7828820>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method SimpleTestResource.on_get of <test_sinks.BookCollection object at 0x7f03a7866620>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
________________ TestDefaultRouting.test_route_precedence[asgi] ________________

self = <test_sinks.TestDefaultRouting object at 0x7f0268e3c8b0>
client = <falcon.testing.client.TestClient object at 0x7f029d480bb0>
sink = <test_sinks.SinkAsync object at 0x7f029d483370>
resource = <test_sinks.BookCollection object at 0x7f029d4826b0>

    def test_route_precedence(self, client, sink, resource):
        # NOTE(kgriffs): In case of collision, the route takes precedence.
>       client.app.add_route('/books', resource)

tests/test_sinks.py:126: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a8190890>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a8390280>, 'CHECK...0280>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a8390280>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method SimpleTestResource.on_get of <test_sinks.BookCollection object at 0x7f029d4826b0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_________ TestDefaultRouting.test_route_precedence_with_both_id[asgi] __________

self = <test_sinks.TestDefaultRouting object at 0x7f0268e3cb50>
client = <falcon.testing.client.TestClient object at 0x7f03a8497f70>
sink = <test_sinks.SinkAsync object at 0x7f03a819cf10>
resource = <test_sinks.BookCollection object at 0x7f03a819d930>

    def test_route_precedence_with_both_id(self, client, sink, resource):
        # NOTE(kgriffs): In case of collision, the route takes precedence.
>       client.app.add_route('/books/{id}', resource)

tests/test_sinks.py:144: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a81e0820>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7829750>, 'CHECK...9750>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7829750>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method SimpleTestResource.on_get of <test_sinks.BookCollection object at 0x7f03a819d930>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_____________________ test_non_string_status[asgi-200-200] _____________________

custom_status_client = <function custom_status_client.<locals>.client at 0x7f03a83f5120>
status = 200, expected_code = 200

    @pytest.mark.parametrize(
        'status,expected_code',
        [
            (http.HTTPStatus(200), 200),
            (http.HTTPStatus(202), 202),
            (http.HTTPStatus(403), 403),
            (http.HTTPStatus(500), 500),
            (http.HTTPStatus.OK, 200),
            (http.HTTPStatus.USE_PROXY, 305),
            (http.HTTPStatus.NOT_FOUND, 404),
            (http.HTTPStatus.NOT_IMPLEMENTED, 501),
            (200, 200),
            (307, 307),
            (500, 500),
            (702, 702),
            (b'200 OK', 200),
            (b'702 Emacs', 702),
        ],
    )
    def test_non_string_status(custom_status_client, status, expected_code):
>       client = custom_status_client(status)

tests/test_httpstatus.py:270: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_httpstatus.py:244: in client
    app.add_route('/status', Resource())
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a89b4e40>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a7d00>, 'CHECK...7d00>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a7d00>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method custom_status_client.<locals>.client.<locals>.Resource.on_get of <test_httpstatus.custom_status_client.<locals>.client.<locals>.Resource object at 0x7f03a78f9630>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_____________________ test_non_string_status[asgi-307-307] _____________________

custom_status_client = <function custom_status_client.<locals>.client at 0x7f03a78295a0>
status = 307, expected_code = 307

    @pytest.mark.parametrize(
        'status,expected_code',
        [
            (http.HTTPStatus(200), 200),
            (http.HTTPStatus(202), 202),
            (http.HTTPStatus(403), 403),
            (http.HTTPStatus(500), 500),
            (http.HTTPStatus.OK, 200),
            (http.HTTPStatus.USE_PROXY, 305),
            (http.HTTPStatus.NOT_FOUND, 404),
            (http.HTTPStatus.NOT_IMPLEMENTED, 501),
            (200, 200),
            (307, 307),
            (500, 500),
            (702, 702),
            (b'200 OK', 200),
            (b'702 Emacs', 702),
        ],
    )
    def test_non_string_status(custom_status_client, status, expected_code):
>       client = custom_status_client(status)

tests/test_httpstatus.py:270: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_httpstatus.py:244: in client
    app.add_route('/status', Resource())
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f029d8acc10>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a4670>, 'CHECK...4670>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a4670>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method custom_status_client.<locals>.client.<locals>.Resource.on_get of <test_httpstatus.custom_status_client.<locals>.client.<locals>.Resource object at 0x7f03a8851180>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_________ test_non_string_status[asgi-HTTPStatus.NOT_IMPLEMENTED-501] __________

custom_status_client = <function custom_status_client.<locals>.client at 0x7f03a78a2dd0>
status = <HTTPStatus.NOT_IMPLEMENTED: 501>, expected_code = 501

    @pytest.mark.parametrize(
        'status,expected_code',
        [
            (http.HTTPStatus(200), 200),
            (http.HTTPStatus(202), 202),
            (http.HTTPStatus(403), 403),
            (http.HTTPStatus(500), 500),
            (http.HTTPStatus.OK, 200),
            (http.HTTPStatus.USE_PROXY, 305),
            (http.HTTPStatus.NOT_FOUND, 404),
            (http.HTTPStatus.NOT_IMPLEMENTED, 501),
            (200, 200),
            (307, 307),
            (500, 500),
            (702, 702),
            (b'200 OK', 200),
            (b'702 Emacs', 702),
        ],
    )
    def test_non_string_status(custom_status_client, status, expected_code):
>       client = custom_status_client(status)

tests/test_httpstatus.py:270: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_httpstatus.py:244: in client
    app.add_route('/status', Resource())
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f029d8ae420>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f029d8e9990>, 'CHECK...9990>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f029d8e9990>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method custom_status_client.<locals>.client.<locals>.Resource.on_get of <test_httpstatus.custom_status_client.<locals>.client.<locals>.Resource object at 0x7f029d4e5b10>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
__________________ test_non_string_status[asgi-702 Emacs-702] __________________

custom_status_client = <function custom_status_client.<locals>.client at 0x7f03a88b8670>
status = b'702 Emacs', expected_code = 702

    @pytest.mark.parametrize(
        'status,expected_code',
        [
            (http.HTTPStatus(200), 200),
            (http.HTTPStatus(202), 202),
            (http.HTTPStatus(403), 403),
            (http.HTTPStatus(500), 500),
            (http.HTTPStatus.OK, 200),
            (http.HTTPStatus.USE_PROXY, 305),
            (http.HTTPStatus.NOT_FOUND, 404),
            (http.HTTPStatus.NOT_IMPLEMENTED, 501),
            (200, 200),
            (307, 307),
            (500, 500),
            (702, 702),
            (b'200 OK', 200),
            (b'702 Emacs', 702),
        ],
    )
    def test_non_string_status(custom_status_client, status, expected_code):
>       client = custom_status_client(status)

tests/test_httpstatus.py:270: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_httpstatus.py:244: in client
    app.add_route('/status', Resource())
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f029d8af1b0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f029d8e93f0>, 'CHECK...93f0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f029d8e93f0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method custom_status_client.<locals>.client.<locals>.Resource.on_get of <test_httpstatus.custom_status_client.<locals>.client.<locals>.Resource object at 0x7f03a8309de0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
___________________ test_non_string_status[asgi-200 OK-200] ____________________

custom_status_client = <function custom_status_client.<locals>.client at 0x7f029d8e9510>
status = b'200 OK', expected_code = 200

    @pytest.mark.parametrize(
        'status,expected_code',
        [
            (http.HTTPStatus(200), 200),
            (http.HTTPStatus(202), 202),
            (http.HTTPStatus(403), 403),
            (http.HTTPStatus(500), 500),
            (http.HTTPStatus.OK, 200),
            (http.HTTPStatus.USE_PROXY, 305),
            (http.HTTPStatus.NOT_FOUND, 404),
            (http.HTTPStatus.NOT_IMPLEMENTED, 501),
            (200, 200),
            (307, 307),
            (500, 500),
            (702, 702),
            (b'200 OK', 200),
            (b'702 Emacs', 702),
        ],
    )
    def test_non_string_status(custom_status_client, status, expected_code):
>       client = custom_status_client(status)

tests/test_httpstatus.py:270: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_httpstatus.py:244: in client
    app.add_route('/status', Resource())
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f029d8afd10>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f029d8eab00>, 'CHECK...ab00>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f029d8eab00>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method custom_status_client.<locals>.client.<locals>.Resource.on_get of <test_httpstatus.custom_status_client.<locals>.client.<locals>.Resource object at 0x7f03a775f430>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
____________ test_non_string_status[asgi-HTTPStatus.USE_PROXY-305] _____________

custom_status_client = <function custom_status_client.<locals>.client at 0x7f03a78a2d40>
status = <HTTPStatus.USE_PROXY: 305>, expected_code = 305

    @pytest.mark.parametrize(
        'status,expected_code',
        [
            (http.HTTPStatus(200), 200),
            (http.HTTPStatus(202), 202),
            (http.HTTPStatus(403), 403),
            (http.HTTPStatus(500), 500),
            (http.HTTPStatus.OK, 200),
            (http.HTTPStatus.USE_PROXY, 305),
            (http.HTTPStatus.NOT_FOUND, 404),
            (http.HTTPStatus.NOT_IMPLEMENTED, 501),
            (200, 200),
            (307, 307),
            (500, 500),
            (702, 702),
            (b'200 OK', 200),
            (b'702 Emacs', 702),
        ],
    )
    def test_non_string_status(custom_status_client, status, expected_code):
>       client = custom_status_client(status)

tests/test_httpstatus.py:270: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_httpstatus.py:244: in client
    app.add_route('/status', Resource())
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f029d8ad770>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a7d00>, 'CHECK...7d00>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a7d00>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method custom_status_client.<locals>.client.<locals>.Resource.on_get of <test_httpstatus.custom_status_client.<locals>.client.<locals>.Resource object at 0x7f0268fbcac0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_______________ test_non_string_status[asgi-HTTPStatus.OK-2000] ________________

custom_status_client = <function custom_status_client.<locals>.client at 0x7f03a88b9990>
status = <HTTPStatus.OK: 200>, expected_code = 200

    @pytest.mark.parametrize(
        'status,expected_code',
        [
            (http.HTTPStatus(200), 200),
            (http.HTTPStatus(202), 202),
            (http.HTTPStatus(403), 403),
            (http.HTTPStatus(500), 500),
            (http.HTTPStatus.OK, 200),
            (http.HTTPStatus.USE_PROXY, 305),
            (http.HTTPStatus.NOT_FOUND, 404),
            (http.HTTPStatus.NOT_IMPLEMENTED, 501),
            (200, 200),
            (307, 307),
            (500, 500),
            (702, 702),
            (b'200 OK', 200),
            (b'702 Emacs', 702),
        ],
    )
    def test_non_string_status(custom_status_client, status, expected_code):
>       client = custom_status_client(status)

tests/test_httpstatus.py:270: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_httpstatus.py:244: in client
    app.add_route('/status', Resource())
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f029d8af680>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a8390550>, 'CHECK...0550>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a8390550>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method custom_status_client.<locals>.client.<locals>.Resource.on_get of <test_httpstatus.custom_status_client.<locals>.client.<locals>.Resource object at 0x7f03a84926b0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_______________ test_non_string_status[asgi-HTTPStatus.OK-2001] ________________

custom_status_client = <function custom_status_client.<locals>.client at 0x7f03a88ba560>
status = <HTTPStatus.OK: 200>, expected_code = 200

    @pytest.mark.parametrize(
        'status,expected_code',
        [
            (http.HTTPStatus(200), 200),
            (http.HTTPStatus(202), 202),
            (http.HTTPStatus(403), 403),
            (http.HTTPStatus(500), 500),
            (http.HTTPStatus.OK, 200),
            (http.HTTPStatus.USE_PROXY, 305),
            (http.HTTPStatus.NOT_FOUND, 404),
            (http.HTTPStatus.NOT_IMPLEMENTED, 501),
            (200, 200),
            (307, 307),
            (500, 500),
            (702, 702),
            (b'200 OK', 200),
            (b'702 Emacs', 702),
        ],
    )
    def test_non_string_status(custom_status_client, status, expected_code):
>       client = custom_status_client(status)

tests/test_httpstatus.py:270: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_httpstatus.py:244: in client
    app.add_route('/status', Resource())
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f029d8afa70>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7829750>, 'CHECK...9750>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7829750>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method custom_status_client.<locals>.client.<locals>.Resource.on_get of <test_httpstatus.custom_status_client.<locals>.client.<locals>.Resource object at 0x7f03a8186440>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
____________ test_non_string_status[asgi-HTTPStatus.NOT_FOUND-404] _____________

custom_status_client = <function custom_status_client.<locals>.client at 0x7f03a88b9bd0>
status = <HTTPStatus.NOT_FOUND: 404>, expected_code = 404

    @pytest.mark.parametrize(
        'status,expected_code',
        [
            (http.HTTPStatus(200), 200),
            (http.HTTPStatus(202), 202),
            (http.HTTPStatus(403), 403),
            (http.HTTPStatus(500), 500),
            (http.HTTPStatus.OK, 200),
            (http.HTTPStatus.USE_PROXY, 305),
            (http.HTTPStatus.NOT_FOUND, 404),
            (http.HTTPStatus.NOT_IMPLEMENTED, 501),
            (200, 200),
            (307, 307),
            (500, 500),
            (702, 702),
            (b'200 OK', 200),
            (b'702 Emacs', 702),
        ],
    )
    def test_non_string_status(custom_status_client, status, expected_code):
>       client = custom_status_client(status)

tests/test_httpstatus.py:270: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_httpstatus.py:244: in client
    app.add_route('/status', Resource())
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a89b53f0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a857ab00>, 'CHECK...ab00>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a857ab00>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method custom_status_client.<locals>.client.<locals>.Resource.on_get of <test_httpstatus.custom_status_client.<locals>.client.<locals>.Resource object at 0x7f03a78f8fd0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
____________ test_non_string_status[asgi-HTTPStatus.FORBIDDEN-403] _____________

custom_status_client = <function custom_status_client.<locals>.client at 0x7f03a83f5630>
status = <HTTPStatus.FORBIDDEN: 403>, expected_code = 403

    @pytest.mark.parametrize(
        'status,expected_code',
        [
            (http.HTTPStatus(200), 200),
            (http.HTTPStatus(202), 202),
            (http.HTTPStatus(403), 403),
            (http.HTTPStatus(500), 500),
            (http.HTTPStatus.OK, 200),
            (http.HTTPStatus.USE_PROXY, 305),
            (http.HTTPStatus.NOT_FOUND, 404),
            (http.HTTPStatus.NOT_IMPLEMENTED, 501),
            (200, 200),
            (307, 307),
            (500, 500),
            (702, 702),
            (b'200 OK', 200),
            (b'702 Emacs', 702),
        ],
    )
    def test_non_string_status(custom_status_client, status, expected_code):
>       client = custom_status_client(status)

tests/test_httpstatus.py:270: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_httpstatus.py:244: in client
    app.add_route('/status', Resource())
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a89b45f0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7813a30>, 'CHECK...3a30>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a7813a30>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method custom_status_client.<locals>.client.<locals>.Resource.on_get of <test_httpstatus.custom_status_client.<locals>.client.<locals>.Resource object at 0x7f0268e800a0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_____________________ test_non_string_status[asgi-702-702] _____________________

custom_status_client = <function custom_status_client.<locals>.client at 0x7f03a7810160>
status = 702, expected_code = 702

    @pytest.mark.parametrize(
        'status,expected_code',
        [
            (http.HTTPStatus(200), 200),
            (http.HTTPStatus(202), 202),
            (http.HTTPStatus(403), 403),
            (http.HTTPStatus(500), 500),
            (http.HTTPStatus.OK, 200),
            (http.HTTPStatus.USE_PROXY, 305),
            (http.HTTPStatus.NOT_FOUND, 404),
            (http.HTTPStatus.NOT_IMPLEMENTED, 501),
            (200, 200),
            (307, 307),
            (500, 500),
            (702, 702),
            (b'200 OK', 200),
            (b'702 Emacs', 702),
        ],
    )
    def test_non_string_status(custom_status_client, status, expected_code):
>       client = custom_status_client(status)

tests/test_httpstatus.py:270: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_httpstatus.py:244: in client
    app.add_route('/status', Resource())
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a89b7a00>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f029d8eb010>, 'CHECK...b010>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f029d8eb010>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method custom_status_client.<locals>.client.<locals>.Resource.on_get of <test_httpstatus.custom_status_client.<locals>.client.<locals>.Resource object at 0x7f03a78644c0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_____________________ test_non_string_status[asgi-500-500] _____________________

custom_status_client = <function custom_status_client.<locals>.client at 0x7f03a78a48b0>
status = 500, expected_code = 500

    @pytest.mark.parametrize(
        'status,expected_code',
        [
            (http.HTTPStatus(200), 200),
            (http.HTTPStatus(202), 202),
            (http.HTTPStatus(403), 403),
            (http.HTTPStatus(500), 500),
            (http.HTTPStatus.OK, 200),
            (http.HTTPStatus.USE_PROXY, 305),
            (http.HTTPStatus.NOT_FOUND, 404),
            (http.HTTPStatus.NOT_IMPLEMENTED, 501),
            (200, 200),
            (307, 307),
            (500, 500),
            (702, 702),
            (b'200 OK', 200),
            (b'702 Emacs', 702),
        ],
    )
    def test_non_string_status(custom_status_client, status, expected_code):
>       client = custom_status_client(status)

tests/test_httpstatus.py:270: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_httpstatus.py:244: in client
    app.add_route('/status', Resource())
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a89b76f0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f029d8e9480>, 'CHECK...9480>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f029d8e9480>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method custom_status_client.<locals>.client.<locals>.Resource.on_get of <test_httpstatus.custom_status_client.<locals>.client.<locals>.Resource object at 0x7f03a78fa560>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
______ test_non_string_status[asgi-HTTPStatus.INTERNAL_SERVER_ERROR-500] _______

custom_status_client = <function custom_status_client.<locals>.client at 0x7f029d8ea950>
status = <HTTPStatus.INTERNAL_SERVER_ERROR: 500>, expected_code = 500

    @pytest.mark.parametrize(
        'status,expected_code',
        [
            (http.HTTPStatus(200), 200),
            (http.HTTPStatus(202), 202),
            (http.HTTPStatus(403), 403),
            (http.HTTPStatus(500), 500),
            (http.HTTPStatus.OK, 200),
            (http.HTTPStatus.USE_PROXY, 305),
            (http.HTTPStatus.NOT_FOUND, 404),
            (http.HTTPStatus.NOT_IMPLEMENTED, 501),
            (200, 200),
            (307, 307),
            (500, 500),
            (702, 702),
            (b'200 OK', 200),
            (b'702 Emacs', 702),
        ],
    )
    def test_non_string_status(custom_status_client, status, expected_code):
>       client = custom_status_client(status)

tests/test_httpstatus.py:270: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_httpstatus.py:244: in client
    app.add_route('/status', Resource())
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a89ce340>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f029d8ea3b0>, 'CHECK...a3b0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f029d8ea3b0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method custom_status_client.<locals>.client.<locals>.Resource.on_get of <test_httpstatus.custom_status_client.<locals>.client.<locals>.Resource object at 0x7f03a783cbe0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_____________ test_non_string_status[asgi-HTTPStatus.ACCEPTED-202] _____________

custom_status_client = <function custom_status_client.<locals>.client at 0x7f029d8ebc70>
status = <HTTPStatus.ACCEPTED: 202>, expected_code = 202

    @pytest.mark.parametrize(
        'status,expected_code',
        [
            (http.HTTPStatus(200), 200),
            (http.HTTPStatus(202), 202),
            (http.HTTPStatus(403), 403),
            (http.HTTPStatus(500), 500),
            (http.HTTPStatus.OK, 200),
            (http.HTTPStatus.USE_PROXY, 305),
            (http.HTTPStatus.NOT_FOUND, 404),
            (http.HTTPStatus.NOT_IMPLEMENTED, 501),
            (200, 200),
            (307, 307),
            (500, 500),
            (702, 702),
            (b'200 OK', 200),
            (b'702 Emacs', 702),
        ],
    )
    def test_non_string_status(custom_status_client, status, expected_code):
>       client = custom_status_client(status)

tests/test_httpstatus.py:270: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_httpstatus.py:244: in client
    app.add_route('/status', Resource())
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a89cdd90>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f029d8e95a0>, 'CHECK...95a0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f029d8e95a0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method custom_status_client.<locals>.client.<locals>.Resource.on_get of <test_httpstatus.custom_status_client.<locals>.client.<locals>.Resource object at 0x7f03a84c35e0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_____________________ test_json_err_no_handler[asgi-False] _____________________

asgi = True, monkeypatch_resolver = False

    @pytest.mark.parametrize('monkeypatch_resolver', [True, False])
    def test_json_err_no_handler(asgi, monkeypatch_resolver):
        app = create_app(asgi)
    
        handlers = media.Handlers({falcon.MEDIA_URLENCODED: media.URLEncodedFormHandler()})
    
        # NOTE(kgriffs): Test the pre-3.0 method. Although undocumented, it was
        #   technically a public method, and so we make sure it still works here.
        if monkeypatch_resolver:
    
            def _resolve(media_type, default, raise_not_found=True):
                with pytest.warns(DeprecatedWarning, match='This undocumented method'):
                    h = handlers.find_by_media_type(
                        media_type, default, raise_not_found=raise_not_found
                    )
                return h, None, None
    
            handlers._resolve = _resolve
    
        app.req_options.media_handlers = handlers
        app.resp_options.media_handlers = handlers
    
        class Resource:
            def on_get(self, req, resp):
                raise falcon.HTTPForbidden()
    
>       app.add_route('/', Resource())

tests/test_media_handlers.py:349: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a89cfbc0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a85e56c0>, 'CHECK...56c0>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a85e56c0>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method test_json_err_no_handler.<locals>.Resource.on_get of <test_media_handlers.test_json_err_no_handler.<locals>.Resource object at 0x7f029d68ebc0>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
_____________________ test_json_err_no_handler[asgi-True] ______________________

asgi = True, monkeypatch_resolver = True

    @pytest.mark.parametrize('monkeypatch_resolver', [True, False])
    def test_json_err_no_handler(asgi, monkeypatch_resolver):
        app = create_app(asgi)
    
        handlers = media.Handlers({falcon.MEDIA_URLENCODED: media.URLEncodedFormHandler()})
    
        # NOTE(kgriffs): Test the pre-3.0 method. Although undocumented, it was
        #   technically a public method, and so we make sure it still works here.
        if monkeypatch_resolver:
    
            def _resolve(media_type, default, raise_not_found=True):
                with pytest.warns(DeprecatedWarning, match='This undocumented method'):
                    h = handlers.find_by_media_type(
                        media_type, default, raise_not_found=raise_not_found
                    )
                return h, None, None
    
            handlers._resolve = _resolve
    
        app.req_options.media_handlers = handlers
        app.resp_options.media_handlers = handlers
    
        class Resource:
            def on_get(self, req, resp):
                raise falcon.HTTPForbidden()
    
>       app.add_route('/', Resource())

tests/test_media_handlers.py:349: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
falcon/asgi/app.py:731: in add_route
    super().add_route(uri_template, resource, **kwargs)
falcon/app.py:580: in add_route
    self._router.add_route(uri_template, resource, **kwargs)
falcon/routing/compiled.py:196: in add_route
    self._require_coroutine_responders(method_map)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <falcon.routing.compiled.CompiledRouter object at 0x7f03a89b4ac0>
method_map = {'CHECKIN': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a7910>, 'CHECK...7910>, 'COPY': <function create_method_not_allowed.<locals>.method_not_allowed_responder_async at 0x7f03a78a7910>, ...}

    def _require_coroutine_responders(self, method_map):
        for method, responder in method_map.items():
            # NOTE(kgriffs): We don't simply wrap non-async functions
            #   since they likely perform relatively long blocking
            #   operations that need to be explicitly made non-blocking
            #   by the developer; raising an error helps highlight this
            #   issue.
            if not iscoroutinefunction(responder) and is_python_func(responder):
                if _should_wrap_non_coroutines():
    
                    def let(responder=responder):
                        method_map[method] = wrap_sync_to_async(responder)
    
                    let()
    
                else:
                    msg = (
                        'The {} responder must be a non-blocking '
                        'async coroutine (i.e., defined using async def) to '
                        'avoid blocking the main request thread.'
                    )
                    msg = msg.format(responder)
>                   raise TypeError(msg)
E                   TypeError: The <bound method test_json_err_no_handler.<locals>.Resource.on_get of <test_media_handlers.test_json_err_no_handler.<locals>.Resource object at 0x7f029d68fd00>> responder must be a non-blocking async coroutine (i.e., defined using async def) to avoid blocking the main request thread.

falcon/routing/compiled.py:344: TypeError
=============================== warnings summary ===============================
../../.local/lib/python3.10/site-packages/pyximport/pyximport.py:51
  /home/kaiyaok2/.local/lib/python3.10/site-packages/pyximport/pyximport.py:51: DeprecationWarning: the imp module is deprecated in favour of importlib and slated for removal in Python 3.12; see the module's documentation for alternative uses
    import imp

../../.local/lib/python3.10/site-packages/Cython/Distutils/old_build_ext.py:15
../../.local/lib/python3.10/site-packages/Cython/Distutils/old_build_ext.py:15
  /home/kaiyaok2/.local/lib/python3.10/site-packages/Cython/Distutils/old_build_ext.py:15: DeprecationWarning: dep_util is Deprecated. Use functions from setuptools instead.
    from distutils.dep_util import newer, newer_group

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED tests/test_cython.py::TestCythonized::test_stream_has_private_read - A...
FAILED tests/test_cython.py::TestCythonized::test_imported_from_c_modules - a...
FAILED tests/asgi/test_cythonized_asgi.py::test_hooks - TypeError: The <bound...
FAILED tests/asgi/test_cythonized_asgi.py::test_jsonchema_validator - TypeErr...
FAILED tests/test_cmd_inspect_app.py::TestMain::test_routes_only[internal-not-verbose]
FAILED tests/test_cmd_inspect_app.py::TestMain::test_inspect[not-internal-verbose]
FAILED tests/test_cmd_inspect_app.py::TestMain::test_routes_only[internal-verbose]
FAILED tests/test_cmd_inspect_app.py::TestMain::test_routes_only[not-internal-not-verbose]
FAILED tests/test_cmd_inspect_app.py::TestMain::test_inspect[not-internal-not-verbose]
FAILED tests/test_cmd_inspect_app.py::TestMain::test_routes_only[not-internal-verbose]
FAILED tests/test_cmd_inspect_app.py::TestMain::test_inspect[internal-not-verbose]
FAILED tests/test_cmd_inspect_app.py::TestMain::test_inspect[internal-verbose]
FAILED tests/test_cmd_inspect_app.py::TestLoadApp::test_load_app_error[DummyResource]
FAILED tests/test_cmd_inspect_app.py::TestLoadApp::test_load_app[_APP] - Modu...
FAILED tests/test_cmd_inspect_app.py::TestLoadApp::test_load_app_error[foo]
FAILED tests/test_cmd_inspect_app.py::TestLoadApp::test_load_app_error[_MODULE]
FAILED tests/test_cmd_inspect_app.py::TestLoadApp::test_load_app[make_app] - ...
FAILED tests/test_after_hooks.py::test_wrapped_resource[asgi-resource1] - Typ...
FAILED tests/test_after_hooks.py::test_wrapped_resource[asgi-resource0] - Typ...
FAILED tests/test_after_hooks.py::test_wrapped_resource_with_hooks_aware_of_resource[asgi]
FAILED tests/test_after_hooks.py::test_resource_with_uri_fields[asgi-resource1]
FAILED tests/test_after_hooks.py::test_resource_with_uri_fields[asgi-resource0]
FAILED tests/test_response_body.py::test_response_body_rendition_error[asgi]
FAILED tests/test_response_body.py::test_content_length_set_on_head_with_no_body[asgi]
FAILED tests/test_response_body.py::test_unsupported_response_content_type[asgi]
FAILED tests/test_utils.py::TestFalconTestingUtils::test_simulate_remote_addr[asgi-8.8.8.8]
FAILED tests/test_utils.py::TestFalconTestingUtils::test_path_must_start_with_slash[asgi]
FAILED tests/test_utils.py::TestFalconTestingUtils::test_status[asgi] - TypeE...
FAILED tests/test_utils.py::TestFalconTestingUtils::test_simulate_remote_addr[asgi-127.0.0.1]
FAILED tests/test_utils.py::TestFalconTestingUtils::test_query_string[asgi]
FAILED tests/test_utils.py::TestFalconTestingUtils::test_simulate_remote_addr[asgi-104.24.101.85]
FAILED tests/test_utils.py::TestFalconTestingUtils::test_simulate_hostname[asgi]
FAILED tests/test_utils.py::TestFalconTestingUtils::test_cached_text_in_result[asgi]
FAILED tests/test_utils.py::TestFalconTestingUtils::test_query_string_in_path[asgi]
FAILED tests/test_utils.py::TestFalconTestingUtils::test_override_method_with_extras[asgi]
FAILED tests/test_utils.py::TestFalconTestingUtils::test_default_headers_with_override[asgi]
FAILED tests/test_utils.py::TestFalconTestingUtils::test_query_string_no_question[asgi]
FAILED tests/test_utils.py::TestFalconTestingUtils::test_simulate_remote_addr[asgi-2606:4700:30::6818:6455]
FAILED tests/test_utils.py::TestFalconTestingUtils::test_default_headers[asgi]
FAILED tests/test_utils.py::TestFalconTestingUtils::test_simulate_remote_addr[asgi-None]
FAILED tests/test_query_params.py::TestQueryParams::test_option_auto_parse_qs_csv_multiple_fields_true[simulate_request_post_query_params-asgi-t=1,,2&t=3,4-True-expected4]
FAILED tests/test_query_params.py::TestQueryParams::test_get_datetime_missing_param[simulate_request_post_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_option_auto_parse_qs_csv_simple_true[simulate_request_get_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_get_datetime_missing_param[simulate_request_get_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_blank[simulate_request_post_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_option_auto_parse_qs_csv_multiple_fields_true[simulate_request_post_query_params-asgi-t=1&t=3,4-False-expected0]
FAILED tests/test_query_params.py::TestQueryParams::test_multiple_keys_as_bool[simulate_request_post_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_option_auto_parse_qs_csv_multiple_fields_true[simulate_request_get_query_params-asgi-t=1&t=,1,4,,5-True-expected7]
FAILED tests/test_query_params.py::TestQueryParams::test_percent_encoded[simulate_request_post_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_list_type_blank[simulate_request_post_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_required[simulate_request_post_query_params-asgi-get_param_as_bool]
FAILED tests/test_query_params.py::TestQueryParams::test_get_dict_valid[simulate_request_post_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_percent_encoded[simulate_request_get_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_list_transformer[simulate_request_post_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_default_auto_parse_csv_behaviour[simulate_request_get_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_multiple_form_keys_as_list[simulate_request_post_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_get_dict_missing_param[simulate_request_get_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_option_auto_parse_qs_csv_multiple_fields_true[simulate_request_get_query_params-asgi-t=1,,2&t=3,4-True-expected4]
FAILED tests/test_query_params.py::TestQueryParams::test_get_datetime_invalid[simulate_request_get_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_multiple_form_keys_as_list[simulate_request_get_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_none[simulate_request_post_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_get_datetime_store[simulate_request_get_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_get_date_store[simulate_request_post_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_option_auto_parse_qs_csv_complex_false[simulate_request_post_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_get_dict_store[simulate_request_get_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_default[simulate_request_post_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_get_datetime_valid_with_format[simulate_request_post_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_simple[simulate_request_post_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_has_param[simulate_request_get_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_required[simulate_request_post_query_params-asgi-get_param_as_list]
FAILED tests/test_query_params.py::TestQueryParams::test_int_neg[simulate_request_get_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_list_transformer[simulate_request_get_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_option_auto_parse_qs_csv_multiple_fields_true[simulate_request_post_query_params-asgi-t=1,2&t=3,4-False-expected2]
FAILED tests/test_query_params.py::TestQueryParams::test_get_date_missing_param[simulate_request_post_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_option_auto_parse_qs_csv_simple_false[simulate_request_get_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_bad_percentage[simulate_request_post_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_option_auto_parse_qs_csv_multiple_fields_true[simulate_request_post_query_params-asgi-t=1&t=,1,4,,5-True-expected7]
FAILED tests/test_query_params.py::TestQueryParams::test_multiple_keys_as_int[simulate_request_get_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_required[simulate_request_post_query_params-asgi-get_param_as_float]
FAILED tests/test_query_params.py::TestQueryParams::test_multiple_form_keys[simulate_request_get_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_bad_percentage[simulate_request_get_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_required[simulate_request_get_query_params-asgi-get_param_as_uuid]
FAILED tests/test_query_params.py::TestQueryParams::test_option_auto_parse_qs_csv_multiple_fields_true[simulate_request_get_query_params-asgi-t=1&t=,1,4,,5-False-expected6]
FAILED tests/test_query_params.py::TestQueryParams::test_option_auto_parse_qs_csv_multiple_fields_true[simulate_request_post_query_params-asgi-t=1&t=2&t=3,4-False-expected1]
FAILED tests/test_query_params.py::TestQueryParams::test_uuid[simulate_request_get_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_get_date_valid[simulate_request_post_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_boolean_blank[simulate_request_post_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_required[simulate_request_get_query_params-asgi-get_param_as_int]
FAILED tests/test_query_params.py::TestQueryParams::test_get_dict_invalid[simulate_request_get_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_get_param_as_json_handler_json[asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_float_neg[simulate_request_post_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_boolean[simulate_request_get_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_required[simulate_request_get_query_params-asgi-get_param_as_float]
FAILED tests/test_query_params.py::TestQueryParams::test_boolean[simulate_request_post_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_get_datetime_valid_with_format[simulate_request_get_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_multiple_keys_as_float[simulate_request_get_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_default[simulate_request_get_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_none[simulate_request_get_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_get_dict_missing_param[simulate_request_post_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_option_auto_parse_qs_csv_multiple_fields_true[simulate_request_post_query_params-asgi-t=1,2&t=3,4,,5-False-expected5]
FAILED tests/test_query_params.py::TestQueryParams::test_option_auto_parse_qs_csv_multiple_fields_true[simulate_request_get_query_params-asgi-t=1,2&t=3,4-False-expected2]
FAILED tests/test_query_params.py::TestQueryParams::test_default_auto_parse_csv_behaviour[simulate_request_post_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_option_auto_parse_qs_csv_multiple_fields_true[simulate_request_get_query_params-asgi-t=1&t=2&t=3,4-False-expected1]
FAILED tests/test_query_params.py::TestQueryParams::test_float[simulate_request_post_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_get_datetime_invalid[simulate_request_post_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_get_datetime_valid[simulate_request_post_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_required[simulate_request_post_query_params-asgi-get_param_as_int]
FAILED tests/test_query_params.py::TestQueryParams::test_required[simulate_request_get_query_params-asgi-get_param]
FAILED tests/test_query_params.py::TestQueryParams::test_get_date_valid_with_format[simulate_request_get_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_simple[simulate_request_get_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_option_auto_parse_qs_csv_multiple_fields_true[simulate_request_get_query_params-asgi-t=1&t=3,4-False-expected0]
FAILED tests/test_query_params.py::TestQueryParams::test_option_auto_parse_qs_csv_multiple_fields_true[simulate_request_get_query_params-asgi-t=1&t=,1,4,,5&t=a,b,c-True-expected8]
FAILED tests/test_query_params.py::TestQueryParams::test_int[simulate_request_post_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_get_param_as_json_no_handler_json[asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_multiple_keys_as_float[simulate_request_post_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_list_type_blank[simulate_request_get_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_multiple_keys_as_int[simulate_request_post_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_param_property[simulate_request_post_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_get_date_valid[simulate_request_get_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_get_datetime_store[simulate_request_post_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_required[simulate_request_post_query_params-asgi-get_param_as_uuid]
FAILED tests/test_query_params.py::TestQueryParams::test_get_dict_invalid[simulate_request_post_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_blank[simulate_request_get_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_option_auto_parse_qs_csv_complex_false[simulate_request_get_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_get_datetime_valid[simulate_request_get_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_uuid[simulate_request_post_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_get_date_invalid[simulate_request_post_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_get_dict_store[simulate_request_post_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_option_auto_parse_qs_csv_multiple_fields_true[simulate_request_get_query_params-asgi-t=1,,2&t=3,4-False-expected3]
FAILED tests/test_query_params.py::TestQueryParams::test_int_neg[simulate_request_post_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_allowed_names[simulate_request_get_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_option_auto_parse_qs_csv_simple_false[simulate_request_post_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_get_date_invalid[simulate_request_get_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_boolean_blank[simulate_request_get_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_multiple_keys_as_bool[simulate_request_get_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_option_auto_parse_qs_csv_multiple_fields_true[simulate_request_get_query_params-asgi-t=1,2&t=3,4,,5-False-expected5]
FAILED tests/test_query_params.py::TestQueryParams::test_multiple_form_keys[simulate_request_post_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_get_date_valid_with_format[simulate_request_post_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_option_auto_parse_qs_csv_multiple_fields_false[simulate_request_get_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_param_property[simulate_request_get_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_option_auto_parse_qs_csv_multiple_fields_true[simulate_request_post_query_params-asgi-t=1,,2&t=3,4-False-expected3]
FAILED tests/test_query_params.py::TestQueryParams::test_required[simulate_request_get_query_params-asgi-get_param_as_bool]
FAILED tests/test_query_params.py::TestQueryParams::test_get_date_store[simulate_request_get_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_has_param[simulate_request_post_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_allowed_names[simulate_request_post_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_option_auto_parse_qs_csv_simple_true[simulate_request_post_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_required[simulate_request_get_query_params-asgi-get_param_as_list]
FAILED tests/test_query_params.py::TestQueryParams::test_get_dict_valid[simulate_request_get_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_list_type[simulate_request_post_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_option_auto_parse_qs_csv_multiple_fields_true[simulate_request_post_query_params-asgi-t=1&t=,1,4,,5-False-expected6]
FAILED tests/test_query_params.py::TestQueryParams::test_list_type[simulate_request_get_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_option_auto_parse_qs_csv_multiple_fields_true[simulate_request_post_query_params-asgi-t=1&t=,1,4,,5&t=a,b,c-True-expected8]
FAILED tests/test_query_params.py::TestQueryParams::test_float_neg[simulate_request_get_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_option_auto_parse_qs_csv_multiple_fields_false[simulate_request_post_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_int[simulate_request_get_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_get_date_missing_param[simulate_request_get_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_float[simulate_request_get_query_params-asgi]
FAILED tests/test_query_params.py::TestQueryParams::test_required[simulate_request_post_query_params-asgi-get_param]
FAILED tests/test_query_params.py::TestPostQueryParams::test_empty_body_no_content_length[asgi]
FAILED tests/test_query_params.py::TestPostQueryParams::test_http_methods_body_not_expected[asgi-HEAD]
FAILED tests/test_query_params.py::TestPostQueryParams::test_explicitly_disable_auto_parse[asgi]
FAILED tests/test_query_params.py::TestPostQueryParams::test_http_methods_body_not_expected[asgi-GET]
FAILED tests/test_query_params.py::TestPostQueryParams::test_non_ascii[asgi]
FAILED tests/test_query_params.py::TestPostQueryParams::test_http_methods_body_expected[asgi-PUT]
FAILED tests/test_query_params.py::TestPostQueryParams::test_http_methods_body_expected[asgi-OPTIONS]
FAILED tests/test_query_params.py::TestPostQueryParams::test_asgi_raises_error
FAILED tests/test_query_params.py::TestPostQueryParams::test_http_methods_body_expected[asgi-POST]
FAILED tests/test_query_params.py::TestPostQueryParams::test_http_methods_body_expected[asgi-PATCH]
FAILED tests/test_query_params.py::TestPostQueryParams::test_http_methods_body_expected[asgi-DELETE]
FAILED tests/test_query_params.py::TestPostQueryParams::test_empty_body[asgi]
FAILED tests/test_query_params.py::TestPostQueryParamsDefaultBehavior::test_dont_auto_parse_by_default[True]
FAILED tests/test_uri_templates.py::test_datetime_converter[asgi-/{start_year:int}/{timestamp:dt("%Y-%m-%d %H:%M")}-/1961/1969-07-21 14:30-dt_expected2]
FAILED tests/test_uri_templates.py::test_adding_suffix_routes[asgi] - TypeErr...
FAILED tests/test_uri_templates.py::test_float_converter[asgi-/{id:float(min=1.9)}-1.9]
FAILED tests/test_uri_templates.py::test_converter_custom[asgi-/{food:spam(")")}:{food_too:spam("()")}-/bacon:eggs-expected1]
FAILED tests/test_uri_templates.py::test_float_converter[asgi-/{id:float(min=1.8, max=3)}-2]
FAILED tests/test_uri_templates.py::test_converter_custom[asgi-/{food:spam}-/something-expected0]
FAILED tests/test_uri_templates.py::test_int_converter_rejections[asgi-/{id:int(min=124)}]
FAILED tests/test_uri_templates.py::test_uuid_converter[asgi-/versions/diff/{left:uuid}...{right:uuid()}-/versions/diff/4dc62bd0-421d-40ec-a1c1-349690fc17ba...5c335d2f-2097-4dd8-8bad-b5bacc3954a7-expected3]
FAILED tests/test_uri_templates.py::test_datetime_converter[asgi-/{start_year:int}-to-{timestamp:dt("%Y-%m-%d")}-/1961-to-1969-07-21-dt_expected1]
FAILED tests/test_uri_templates.py::test_float_converter[asgi-/{id:float}-2.1]
FAILED tests/test_uri_templates.py::test_with_and_without_trailing_slash[asgi-True]
FAILED tests/test_uri_templates.py::test_special_chars[asgi] - TypeError: The...
FAILED tests/test_uri_templates.py::test_float_converter_non_finite_disallowed[asgi]
FAILED tests/test_uri_templates.py::test_float_converter_non_finite_allowed[asgi-nan]
FAILED tests/test_uri_templates.py::test_int_converter_rejections[asgi-/{id:int(2)}]
FAILED tests/test_uri_templates.py::test_int_converter_rejections[asgi-/{id:int(num_digits=3, max=100)}]
FAILED tests/test_uri_templates.py::test_uuid_converter[asgi-/versions/diff/{left:uuid()}...{right:uuid()}-/versions/diff/4dc62bd0-421d-40ec-a1c1-349690fc17ba...5c335d2f-2097-4dd8-8bad-b5bacc3954a7-expected2]
FAILED tests/test_uri_templates.py::test_float_converter[asgi-/{id:float(min=1.8, max=3)}-2.1]
FAILED tests/test_uri_templates.py::test_with_and_without_trailing_slash[asgi-False]
FAILED tests/test_uri_templates.py::test_float_converter[asgi-/{id:float(min=1.8, max=3)}-1.9]
FAILED tests/test_uri_templates.py::test_datetime_converter[asgi-/{start_year:int}-to-{timestamp:dt}-/1961-to-1969-07-21T02:56:00Z-dt_expected0]
FAILED tests/test_uri_templates.py::test_uuid_converter_complex_segment[asgi]
FAILED tests/test_uri_templates.py::test_float_converter_non_finite_allowed[asgi-inf]
FAILED tests/test_uri_templates.py::test_int_converter[asgi-/{id:int(min=123)}]
FAILED tests/test_uri_templates.py::test_float_converter[asgi-/{id:float(1)}-1.9]
FAILED tests/test_uri_templates.py::test_single_trailing_slash[asgi] - TypeEr...
FAILED tests/test_uri_templates.py::test_multiple[asgi] - TypeError: The <bou...
FAILED tests/test_uri_templates.py::test_datetime_converter[asgi-/{start_year:int}-to-{timestamp:dt("%Y-%m")}-/1961-to-1969-07-21-None]
FAILED tests/test_uri_templates.py::test_no_vars[asgi] - TypeError: The <boun...
FAILED tests/test_uri_templates.py::test_int_converter[asgi-/{id:int(3)}] - T...
FAILED tests/test_uri_templates.py::test_uuid_converter[asgi-/widgets/{widget_id:uuid}-/widgets/4dc62bd0-421d-40ec-a1c1-349690fc17ba-expected0]
FAILED tests/test_uri_templates.py::test_single[asgi-id] - TypeError: The <bo...
FAILED tests/test_uri_templates.py::test_float_converter[asgi-/{id:float(min=1.9)}-2]
FAILED tests/test_uri_templates.py::test_float_converter[asgi-/{id:float}-2]
FAILED tests/test_uri_templates.py::test_single_path_segment[asgi] - TypeErro...
FAILED tests/test_uri_templates.py::test_single[asgi-widget_id] - TypeError: ...
FAILED tests/test_uri_templates.py::test_uuid_converter[asgi-/versions/diff/{left:uuid()}...{right:uuid}-/versions/diff/4dc62bd0-421d-40ec-a1c1-349690fc17ba...5c335d2f-2097-4dd8-8bad-b5bacc3954a7-expected4]
FAILED tests/test_uri_templates.py::test_float_converter[asgi-/{id:float(1)}-2]
FAILED tests/test_uri_templates.py::test_int_converter[asgi-/{id:int}] - Type...
FAILED tests/test_uri_templates.py::test_same_level_complex_var[asgi-False]
FAILED tests/test_uri_templates.py::test_float_converter[asgi-/{id:float(1)}-2.1]
FAILED tests/test_uri_templates.py::test_converter_custom[asgi-/({food:spam()}){food_too:spam("()")}-/(bacon)eggs-expected2]
FAILED tests/test_uri_templates.py::test_float_converter_non_finite_allowed[asgi--inf]
FAILED tests/test_uri_templates.py::test_single[asgi-id123] - TypeError: The ...
FAILED tests/test_uri_templates.py::test_float_converter[asgi-/{id:float}-1.9]
FAILED tests/test_uri_templates.py::test_uuid_converter[asgi-/widgets/{widget_id:uuid}/orders-/widgets/4dc62bd0421d40eca1c1349690fc17b/orders-None]
FAILED tests/test_uri_templates.py::test_float_converter[asgi-/{id:float(min=1.9)}-2.1]
FAILED tests/test_uri_templates.py::test_same_level_complex_var[asgi-True] - ...
FAILED tests/test_uri_templates.py::test_uuid_converter[asgi-/widgets/{widget_id:uuid}/orders-/widgets/4dc62bd0421d40eca1c1349690fc17ba/orders-expected1]
FAILED tests/test_uri_templates.py::test_root_path[asgi] - TypeError: The <bo...
FAILED tests/test_uri_templates.py::test_int_converter[asgi-/{id:int(min=123, max=123)}]
FAILED tests/test_sinks.py::TestSinkMethodCompatibility::test_add_sync_sink_with_wrapping[asgi]
FAILED tests/test_sinks.py::TestDefaultRouting::test_with_route[asgi] - TypeE...
FAILED tests/test_sinks.py::TestDefaultRouting::test_route_precedence_with_id[asgi]
FAILED tests/test_sinks.py::TestDefaultRouting::test_route_precedence[asgi]
FAILED tests/test_sinks.py::TestDefaultRouting::test_route_precedence_with_both_id[asgi]
FAILED tests/test_httpstatus.py::test_non_string_status[asgi-200-200] - TypeE...
FAILED tests/test_httpstatus.py::test_non_string_status[asgi-307-307] - TypeE...
FAILED tests/test_httpstatus.py::test_non_string_status[asgi-HTTPStatus.NOT_IMPLEMENTED-501]
FAILED tests/test_httpstatus.py::test_non_string_status[asgi-702 Emacs-702]
FAILED tests/test_httpstatus.py::test_non_string_status[asgi-200 OK-200] - Ty...
FAILED tests/test_httpstatus.py::test_non_string_status[asgi-HTTPStatus.USE_PROXY-305]
FAILED tests/test_httpstatus.py::test_non_string_status[asgi-HTTPStatus.OK-2000]
FAILED tests/test_httpstatus.py::test_non_string_status[asgi-HTTPStatus.OK-2001]
FAILED tests/test_httpstatus.py::test_non_string_status[asgi-HTTPStatus.NOT_FOUND-404]
FAILED tests/test_httpstatus.py::test_non_string_status[asgi-HTTPStatus.FORBIDDEN-403]
FAILED tests/test_httpstatus.py::test_non_string_status[asgi-702-702] - TypeE...
FAILED tests/test_httpstatus.py::test_non_string_status[asgi-500-500] - TypeE...
FAILED tests/test_httpstatus.py::test_non_string_status[asgi-HTTPStatus.INTERNAL_SERVER_ERROR-500]
FAILED tests/test_httpstatus.py::test_non_string_status[asgi-HTTPStatus.ACCEPTED-202]
FAILED tests/test_media_handlers.py::test_json_err_no_handler[asgi-False] - T...
FAILED tests/test_media_handlers.py::test_json_err_no_handler[asgi-True] - Ty...
ERROR tests/test_httpstatus.py::TestHTTPStatusWithMiddleware::test_raise_status_in_process_resource[True]
ERROR tests/test_httpstatus.py::TestHTTPStatusWithMiddleware::test_raise_status_in_process_request[True]
ERROR tests/test_httpstatus.py::TestHTTPStatusWithMiddleware::test_raise_status_runs_process_response[True]
ERROR tests/test_httpstatus.py::TestNoBodyWithStatus::test_data_is_set[asgi]
ERROR tests/test_httpstatus.py::TestNoBodyWithStatus::test_media_is_set[asgi]
ERROR tests/test_httpstatus.py::TestNoBodyWithStatus::test_body_is_set[asgi]
ERROR tests/test_httpstatus.py::TestHTTPStatus::test_raise_status_empty_body[True]
ERROR tests/test_httpstatus.py::TestHTTPStatus::test_raise_status_runs_after_hooks[True]
ERROR tests/test_httpstatus.py::TestHTTPStatus::test_raise_status_survives_after_hooks[True]
ERROR tests/test_httpstatus.py::TestHTTPStatus::test_raise_status_in_responder[True]
ERROR tests/test_httpstatus.py::TestHTTPStatus::test_raise_status_in_before_hook[True]
ERROR tests/test_wsgi_servers.py::TestWSGIServer::test_static_file_byte_range[gunicorn-32-38-random]
ERROR tests/test_wsgi_servers.py::TestWSGIServer::test_get_deprecated[uvicorn]
ERROR tests/test_wsgi_servers.py::TestWSGIServer::test_static_file_byte_range[gunicorn-2-6-port]
ERROR tests/test_wsgi_servers.py::TestWSGIServer::test_static_file[gunicorn]
ERROR tests/test_wsgi_servers.py::TestWSGIServer::test_static_file_byte_range[uvicorn-2-6-port]
ERROR tests/test_wsgi_servers.py::TestWSGIServer::test_static_file_byte_range[gunicorn-7--hashlib]
ERROR tests/test_wsgi_servers.py::TestWSGIServer::test_static_file_byte_range[uvicorn-7--hashlib]
ERROR tests/test_wsgi_servers.py::TestWSGIServer::test_static_file_byte_range[gunicorn--47-The content of this comment is part of a test.\n]
ERROR tests/test_wsgi_servers.py::TestWSGIServer::test_get_deprecated[gunicorn]
ERROR tests/test_wsgi_servers.py::TestWSGIServer::test_static_file_byte_range[uvicorn--47-The content of this comment is part of a test.\n]
ERROR tests/test_wsgi_servers.py::TestWSGIServer::test_get[uvicorn] - Failed:...
ERROR tests/test_wsgi_servers.py::TestWSGIServer::test_static_file_byte_range[uvicorn-32-38-random]
ERROR tests/test_wsgi_servers.py::TestWSGIServer::test_get[gunicorn] - Failed...
ERROR tests/test_wsgi_servers.py::TestWSGIServer::test_post_multipart_form[uvicorn]
ERROR tests/test_wsgi_servers.py::TestWSGIServer::test_static_file[uvicorn]
ERROR tests/test_wsgi_servers.py::TestWSGIServer::test_post_multipart_form[gunicorn]
ERROR tests/asgi/test_asgi_servers.py::TestASGIServer::test_head_405[_uvicorn_factory]
ERROR tests/asgi/test_asgi_servers.py::TestASGIServer::test_sse_client_disconnects_early[_uvicorn_factory]
ERROR tests/asgi/test_asgi_servers.py::TestASGIServer::test_post_invalid_content_length[_uvicorn_factory]
ERROR tests/asgi/test_asgi_servers.py::TestASGIServer::test_post_multipart_form[_uvicorn_factory]
ERROR tests/asgi/test_asgi_servers.py::TestASGIServer::test_stream_chunked_request[_uvicorn_factory]
ERROR tests/asgi/test_asgi_servers.py::TestASGIServer::test_get[_uvicorn_factory]
ERROR tests/asgi/test_asgi_servers.py::TestASGIServer::test_post_multiple[_uvicorn_factory]
ERROR tests/asgi/test_asgi_servers.py::TestASGIServer::test_post_read_bounded_stream[_uvicorn_factory]
ERROR tests/asgi/test_asgi_servers.py::TestASGIServer::test_post_read_bounded_stream_no_body[_uvicorn_factory]
ERROR tests/asgi/test_asgi_servers.py::TestASGIServer::test_put[_uvicorn_factory]
ERROR tests/asgi/test_asgi_servers.py::TestASGIServer::test_sse[_uvicorn_factory]
ERROR tests/asgi/test_asgi_servers.py::TestASGIServer::test_post_read_bounded_stream_large[_uvicorn_factory]
ERROR tests/asgi/test_asgi_servers.py::TestWebSocket::test_rejected[_uvicorn_factory-None-True]
ERROR tests/asgi/test_asgi_servers.py::TestWebSocket::test_select_subprotocol_known[_uvicorn_factory-wamp-wamp]
ERROR tests/asgi/test_asgi_servers.py::TestWebSocket::test_hello[_uvicorn_factory-None-False]
ERROR tests/asgi/test_asgi_servers.py::TestWebSocket::test_type_mismatch[_uvicorn_factory-text-recv]
ERROR tests/asgi/test_asgi_servers.py::TestWebSocket::test_type_mismatch[_uvicorn_factory-text-send]
ERROR tests/asgi/test_asgi_servers.py::TestWebSocket::test_hello[_uvicorn_factory-4321-True]
ERROR tests/asgi/test_asgi_servers.py::TestWebSocket::test_rejected[_uvicorn_factory-None-False]
ERROR tests/asgi/test_asgi_servers.py::TestWebSocket::test_close_code_on_unhandled_http_error[_uvicorn_factory]
ERROR tests/asgi/test_asgi_servers.py::TestWebSocket::test_close_code_on_unhandled_error[_uvicorn_factory]
ERROR tests/asgi/test_asgi_servers.py::TestWebSocket::test_rejected[_uvicorn_factory-4040-True]
ERROR tests/asgi/test_asgi_servers.py::TestWebSocket::test_hello[_uvicorn_factory-None-True]
ERROR tests/asgi/test_asgi_servers.py::TestWebSocket::test_invalid_close_code[_uvicorn_factory]
ERROR tests/asgi/test_asgi_servers.py::TestWebSocket::test_select_subprotocol_unknown[_uvicorn_factory]
ERROR tests/asgi/test_asgi_servers.py::TestWebSocket::test_hello[_uvicorn_factory-4321-False]
ERROR tests/asgi/test_asgi_servers.py::TestWebSocket::test_rejected[_uvicorn_factory-4040-False]
ERROR tests/asgi/test_asgi_servers.py::TestWebSocket::test_type_mismatch[_uvicorn_factory-data-recv]
ERROR tests/asgi/test_asgi_servers.py::TestWebSocket::test_disconnecting_client_early[_uvicorn_factory]
ERROR tests/asgi/test_asgi_servers.py::TestWebSocket::test_send_before_accept[_uvicorn_factory]
ERROR tests/asgi/test_asgi_servers.py::TestWebSocket::test_select_subprotocol_known[_uvicorn_factory-*-amqp]
ERROR tests/asgi/test_asgi_servers.py::TestWebSocket::test_missing_responder[_uvicorn_factory]
ERROR tests/asgi/test_asgi_servers.py::TestWebSocket::test_recv_before_accept[_uvicorn_factory]
ERROR tests/asgi/test_asgi_servers.py::TestWebSocket::test_passing_path_params[_uvicorn_factory]
ERROR tests/asgi/test_asgi_servers.py::TestWebSocket::test_type_mismatch[_uvicorn_factory-data-send]
ERROR tests/test_redirects.py::TestRedirects::test_redirect_with_headers[asgi-PUT-303 See Other-/see/other]
= 243 failed, 3245 passed, 111 skipped, 3 warnings, 63 errors in 1494.89s (0:24:54) =
